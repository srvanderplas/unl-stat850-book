# Introduction {-}

```{r fa-setup, include=F}
library(fontawesome)
fa_html_dependency()
```

## Textbook Status {-}

Once upon a time (pre 2022), this book covered R and SAS. We are slowly transitioning away from SAS to use R and, eventually, python. This book is in a state of transition; I have removed most of the SAS content and what is left is not interactive (because I don't have a SAS license anymore), but here and there mentions of SAS remain for comparison purposes. I am in the process of ensuring that the Python content is as detailed and thorough as the R content, but I expect that this will take at least a year to get right.

## Forward {-}

This textbook is intended to be a substitute for hours and hours of lectures consisting of me reading code to you and showing you what it does. That's awful, and boring^[If you want boring, or have insomnia, check out [this Microsoft Word tutorial from 1989](https://www.youtube.com/watch?v=Jk71bPz5VLo). Youtube says it's the most boring video ever made.], and not particularly effective for teaching a class of people with vastly different computing experience the same topics. 

Instead, I hope  that you'll be able to work through this book week by week. I've included comics, snark, gifs, YouTube videos, illustrations, LEGO constructions, and more, with the goal of making this a collection of the best information I could find on learning some combination of R, SAS, Python, and general statistical programming. In every chapter, there are "Try it Out" sections to show you what different concepts look like in code - these are meant to provide you with an interactive way to explore the content, and skipping these sections will seriously limit the amount of information you take away from this book.


## How to Use This Book {-}

I've made an effort to use some specific formatting and enable certain features that make this book a useful tool for this class.

### Buttons/Links {-}

The book contains a number of features which should help you navigate, use, improve, and respond to the textbook.



<!-- - <i class="fa fa-align-justify"></i> Open/close the sidebar TOC -->
<!-- - <i class="fa fa-search"></i> Search the text -->
<!-- - <i class="fa fa-font"></i> Set font size and white/sepia/dark mode -->
<!-- - <i class="fa fa-github"></i><b>Edit this page</b> Suggest edits if you find a typo. This will help you automatically submit a pull request in Github, and I can review and approve it easily. -->
<!-- - <i class="fa fa-download"></i> Download the entire (very long) Rmarkdown source code for the textbook -->
<!-- - <i class="fa fa-info"></i> See keyboard shortcuts to navigate the book -->
<!-- - <i class="fab fa-twitter"></i> Reference the book in a tweet, if you really want to. Tag me if you do (\@srvanderplas) -->
<!-- - <i class="fab fa-github"></i> Find the book repository on GitHub quickly if you want to see code/data/etc. linked in the book -->


### Special Sections {-}

:::{.callout-important}
#### Warnings {-}
These sections contain things you may want to look out for: common errors, mistakes, and unfortunate situations that may arise when programming. 
:::


:::{.callout-caution}
#### Examples {-}

These sections contain code and other illustrations of the concepts discussed in the chapter. Don't skip them, even though they may be long!

:::

:::{.callout-tip}
#### Try it out {-}
These sections contain activities you should do to reinforce the things you've just read. You will be much more successful if you read the material, review the example, and then try to write your own code. Most of the time, these sections will have a specific format:

::: panel-tabset

##### Problem {-}

The problem will be in the first tab for you to start with

##### R Solution {-}

A solution will be provided in R, potentially with an explanation.

##### Python Solution {-}

A solution will be provided in Python as well.
:::

In some cases, the problem will be more open-ended and may not adhere to this format, but most try it out sections in this book will have solutions provided. I **highly** recommend that you attempt to solve the problem yourself before you look at the solutions - this is the best way to learn. Passively reading code does not result in retention of the information.
:::

:::{.callout-important}
#### Essential Reading {-}
These sections may direct you to additional reading material that is essential for understanding the topic. For instance, I will sometimes link to other online textbooks rather than try to rehash the content myself when someone else has done it better.
:::


:::{.callout-note}
#### Learn More {-}

These sections will direct you to additional resources that may be helpful to consult as you learn about a topic. You do not have to use these sections unless you are 1) bored, or 2) hopelessly lost. They're provided to help but are not expected reading (Unlike the essential reading sections in red). 
:::

:::{.callout-note}
#### Notes {-}

These generic sections contain information I may want to call attention to, but that isn't necessarily urgent or a common error trap.
:::

#### Expandable Sections {-}

<details><summary>These are expandable sections, with additional information when you click on the line</summary>

This additional information may be information that is helpful but not essential, or it may be that an example just takes a LOT of space and I want to make sure you can skim the book without having to scroll through a ton of output.
</details>

:::{.callout-note collapse="true"}
#### Another type of expandable note

Answers or punchlines may be hidden in this type of expandable section as well.
:::

```{r pkg-list-update, include = F, cache = F}
# update package list
# source("code/collect_packages.R")
```
