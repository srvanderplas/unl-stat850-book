# SAS

## Setting up SAS {#setting-up-sas}

In this class, you have several options for how to use SAS:

1. Install SAS on your machine
    - <i class="fab fa-windows"></i> See Steve Westerholt, pay a small fee, and he will install SAS on your machine.
    - <i class="fab fa-apple"></i> Steve Westerholt will help you acquire Parallels desktop (to emulate Windows) and SAS. You'll pay license fees for both products. 
    - <i class="fab fa-linux"></i> Talk with me and I'll help you interface with Steve to get SAS for Linux installed on your system. Steve doesn't support Linux installs, but I can help you get SAS set up if you're using a common distribution like Ubuntu or RedHat/Fedora.
    
2. Use SAS University Edition/SAS OnDemand for Academics. Get more information [here](https://www.sas.com/en_us/software/on-demand-for-academics/references/getting-started-with-sas-ondemand-for-academics-studio.html). 
    - Pros - this is free
    - Cons - limited storage, may cause issues with paths and file upload/download (so it may be hard to ensure your homework assignments are reproducible).

3. ~~Use the Guacamole environment I've set up for the class via HCC. More information will be provided outside the textbook for this option.~~ (This is not an option in Fall 2022)
    - Pros - free, allows you access to SAS and Rstudio on the same machine (so you can use SASmarkdown seamlessly for homework). You can also use this to test the reproducibility of your assignment.
    - Cons - This interface is only available for Stat850 - it will not be available after the class concludes. 

## Finding Your Way around in SAS {#looking-around-sas}

SAS is another extensively used statistical programming language. It is primarily used for mixed models and in the biostatistics community (for e.g. drug trials). 

### Note {- .note}
SAS looks different on different machines. On Linux, SAS looks like you took a time machine back to the early 1990s. Screenshots from SAS will likely look *very* different on your machine than on mine. I will try to integrate screenshots from other OS's where it matters.^[As I write this in late July 2020, I do not yet have access to a Windows or Mac machine. Sigh. XXX TODO: Get Windows/Mac screenshots XXX. 

I still don't have access to a Windows or Mac machine, and it's now April 2021. Sigh.]

### SAS Windows/Panes

![The SAS toolbox has options to create new files, submit code, and more (but I mostly use keyboard shortcuts in the individual windows). This is probably one of the biggest things that's different on Linux...](images/sas/sas_toolbox.png)

![The SAS Log gives you lots of detailed information about how your code ran -- look here for errors and warnings.](images/sas/sas_log_window.png)

![The SAS program editor is where you'll be writing your code. If you want, you can write code in a more advanced text editor and copy/paste it into the log when you're ready to run it.](images/sas/sas_program_editor.png)

There are two different places your output may end up: if you're using the old output system, you'll get text output in the output pane.

![The old output system output pane.](images/sas/sas_output_old.png)

![The new output system uses HTML and will output to your browser.](images/sas/sas_modern_output.png)

![You can navigate through your results using the results window](images/sas/sas_results_window.png)

![The explorer window lets you access documentation, data, and more](images/sas/sas_explorer_1.png)

If you click on libraries, you get to this list:

![This area of the SAS explorer shows all of the libraries you have access to.](images/sas/sas_explorer_2.png)

![Clicking on any one library will show you a list of datasets in that library](images/sas/sas_explorer_3.png)


You can then click on a dataset and you will get a spreadsheet-like view. 


### SAS Modules

SAS is a very large set of programs. In this class, we're primarily working with base SAS (the underlying language and interpreter), SAS/STAT (the statistical procedures, like PROC GLM), and SAS/IML, which is SAS's version of a scripting language. IML allows you to implement your own procedures "from scratch". 

Initially, we'll primarily focus on SAS/IML, because it contains information parallel to what you need to know to start programming in R. It's easier to teach general programming concepts at the same time, even if your typical SAS course would probably introduce you to the DATA step and simple PROC statements first. 

## SAS computer basics

In SAS, you can set your working directory in the Program Editor, Log, or Explorer windows by clicking on Tools > Options > Change Directory, navigating to your preferred directory, and clicking ok.

![](images/sas/sas-screenshot-setwd.gif)

In SAS, you'll want to store your .sas code file in the RStudio project folder as well, and I believe that should be sufficient to set your working directory for any SAS code you may write as part of e.g. a homework assignment.


## References {#refs-sas}


- [SAS quick start guide](https://towardsdatascience.com/getting-started-with-sas-beginner-354a94a48f08)

