{
  "hash": "7d26c191835f13bfb0b0aee7bf39be87",
  "result": {
    "markdown": "# Reproducibility and Professional Communication {#sec-docs}\n\n## Module Objectives {#module11-objectives .unnumbered}\n\n-   Create professional documents (slides, posters, CVs) using LaTeX and/or markdown\n\nThis chapter will be shorter in length than many of the rest, but you should not devote less time to it. Instead, you should spend the time playing with the different options presented here and deciding which one of each is your favorite. Rather than detailing all of the customization options in each package, I think you'll have an easier time looking at examples, trying to customize them yourself to get the effect you want, and figuring out how to do that by reading the documentation, stackoverflow posts, and other help files -- those are the skills you'll need when you try to put this knowledge into action.\n\nAt the end of this chapter there are a few extras -- for instance, how to use GitHub to host your documents, how to create a blog with `blogdown`, and more. You should feel free to investigate, but as long as you are able to create presentation slides, posters, and a CV, you're good to go.\n\n::: column-margin\n![Reproducibility with Rmarkdown (by Allison Horst)](https://raw.githubusercontent.com/allisonhorst/stats-illustrations/main/rstats-artwork/reproducibility_court.png)\n:::\n\n## Literate Programming, `knitr`, `rmarkdown`, and `quarto`\n\n[Literate programming](https://en.wikipedia.org/wiki/Literate_programming) is a programming method where you explain the code in natural language (e.g. English) in roughly the same space that you write the code (in a programming language). This solves two problems: code isn't always clear as to what its goals are, and natural language descriptions of algorithms aren't always clear enough to contain the details of how something is actually implemented.\n\nThe `knitr`, `Rmarkdown`, and `quarto` packages are all implementations of literate programming (and the packages tend to overlap a bit, because `knitr` and `Rmarkdown` were written by the same author, Yihui Xie, and `quarto` is next-generation Rmarkdown).\n\n-   `knitr` is primarily focused on the creation of Rnw (r no weave) files, which are essentially LaTeX files with R code inside. Rnw files are compiled into pdfs.\n-   `rmarkdown` uses `Rmd` or `Rmarkdown` files, which can then be compiled into many different formats: pdf, html, markdown, Microsoft Word.\n-   `quarto` uses `qmd` files, which are compiled into many different formats: pdf, html, markdown, Microsoft Word.\n\nAll of these programs work essentially the same way: code chunks are run in the specified language, figures are saved, tables are created, and the results are added to the intermediate file (.tex or .md). Then, another program (LaTeX or Pandoc) compiles the intermediate file into the final result. Understanding this process is key to being able to debug any errors you may encounter, because you need to identify which program is having the error - the code chunk? adding the results to the intermediate file? compiling from the intermediate file to the end result?\n\n::: panel-tabset\n### `knitr`\n\n![Knitr uses R to produce a tex (.tex) file, which is then compiled to PDF using LaTeX.](images/documents/knitr-flow.png){fig-alt=\"Figure showing a knitr hex icon, with file.Rnw containing a code chunk started by <<...>>= and ended by @. This file.Rnw is processed with R to produce file.tex, which has \\\\begin{figure}\\\\end{figure} code containing information about a picture. The tex file is compiled with LaTeX to produce file.pdf, which has a scatterplot.\"}\n\n### `rmarkdown`\n\n![rmarkdown uses R to produce a markdown (.md) file, which is then compiled to PDF, DOC, HTML, or other formats using pandoc.](images/documents/rmarkdown-flow.png){fig-alt=\"Figure showing a rmarkdown hex icon, with file.Rmd containing a code chunk started by ```{r} and ended by ```. This file.Rmd is processed with R to produce file.md, which has ![](figure.png) code containing information about a picture. The markdown file is compiled with pandoc to produce file.pdf,file.html, and/or file.doc, all of which contain a scatterplot.\"}\n\n### `quarto`\n\n![quarto uses R or python to produce a markdown (.md) file, which is then compiled to PDF, DOC, HTML, or other formats using pandoc.](images/documents/quarto-flow.png){fig-alt=\"Figure showing a quarto hex icon, with file.qmd containing a code chunk started by ```{r} and ended by ```. This file.qmd is processed with R or python to produce file.md, which has ![](figure.png) code containing information about a picture. The markdown file is compiled with pandoc to produce file.pdf,file.html, and/or file.doc, all of which contain a scatterplot.\"}\n:::\n\nOne major advantage of literate programming packages from a practical perspective is that it largely removes the need to keep track of graphs and charts when you're writing a paper, making a presentation, etc. The charts and tables based on your method automatically update when the document is recompiled.\n\nIf you're not reading this chapter early, you've been using `quarto` for the entire semester to submit your homework. Hopefully that's been fairly easy - you've been creating `quarto` *documents* all semester. In this chapter, we're going to explore some other applications of literate programming: creating slides, posters, and more.\n\n\n## Review: Quarto Formatting\n\nThis section's material is ~~stolen~~ copied directly from the Quarto documentation [@MarkdownBasics20221017].\n\n### Text Formatting {.unnumbered}\n\n+-----------------------------------+-------------------------------+\n| Markdown Syntax                   | Output                        |\n+===================================+===============================+\n|     *italics* and **bold**        | *italics* and **bold**        |\n+-----------------------------------+-------------------------------+\n|     superscript^2^ / subscript~2~ | superscript^2^ / subscript~2~ |\n+-----------------------------------+-------------------------------+\n|     ~~strikethrough~~             | ~~strikethrough~~             |\n+-----------------------------------+-------------------------------+\n|     `verbatim code`               | `verbatim code`               |\n+-----------------------------------+-------------------------------+\n\n### Headings {#headings .unnumbered}\n\n+---------------------+-----------------------------------------------+\n| Markdown Syntax     | Output                                        |\n+=====================+===============================================+\n|     # Header 1      | # Header 1 {.heading-output .unnumbered}      |\n+---------------------+-----------------------------------------------+\n|     ## Header 2     | ## Header 2 {.heading-output .unnumbered}     |\n+---------------------+-----------------------------------------------+\n|     ### Header 3    | ### Header 3 {.heading-output .unnumbered}    |\n+---------------------+-----------------------------------------------+\n|     #### Header 4   | #### Header 4 {.heading-output .unnumbered}   |\n+---------------------+-----------------------------------------------+\n|     ##### Header 5  | ##### Header 5 {.heading-output .unnumbered}  |\n+---------------------+-----------------------------------------------+\n|     ###### Header 6 | ###### Header 6 {.heading-output .unnumbered} |\n+---------------------+-----------------------------------------------+\n\n\n```{=html}\n<style type=\"text/css\">\n.heading-output {\n  border-bottom: none;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n</style>\n```\n\n### Links & Images {.unnumbered}\n\n::: {.column-screen-inset-right}\n+------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------+\n| Markdown Syntax                                                  | Output                                                                                                                  |\n+==================================================================+=========================================================================================================================+\n|     <https://quarto.org>                                         | <https://quarto.org>                                                                                                    |\n+------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------+\n|     [Quarto](https://quarto.org)                                 | [Quarto](https://quarto.org)                                                                                            |\n+------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------+\n|     ![Caption](elephant.png)                                     | ![Caption](images/documents/elephant.png){fig-alt=\"A line drawing of an elephant.\"}                                     |\n+------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------+\n|     [![Caption](elephant.png)](https://quarto.org)               | [![Caption](images/documents/elephant.png)](https://quarto.org)                                                         |\n+------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------+\n|     [![Caption](elephant.png)](https://quarto.org \"An elephant\") | [![Caption](images/documents/elephant.png \"An elephant\"){fig-alt=\"A line drawing of an elephant.\"}](https://quarto.org) |\n+------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------+\n|     [![](elephant.png){fig-alt=\"Alt text\"}](https://quarto.org)  | [![](images/documents/elephant.png){fig-alt=\"A line drawing of an elephant.\"}](https://quarto.org)                      |\n+------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------+\n:::\n\n### Lists {.unnumbered}\n\n::: {.column-screen-inset-right}\n+-------------------------------------+---------------------------------+\n| Markdown Syntax                     | Output                          |\n+=====================================+=================================+\n|     * unordered list                | -   unordered list              |\n|         + sub-item 1                |                                 |\n|         + sub-item 2                |     -   sub-item 1              |\n|             - sub-sub-item 1        |                                 |\n|                                     |     -   sub-item 2              |\n|                                     |                                 |\n|                                     |         -   sub-sub-item 1      |\n+-------------------------------------+---------------------------------+\n|     *   item 2                      | -   item 2                      |\n|                                     |                                 |\n|         Continued (indent 4 spaces) |     Continued (indent 4 spaces) |\n+-------------------------------------+---------------------------------+\n|     1. ordered list                 | 1.  ordered list                |\n|     2. item 2                       |                                 |\n|         i) sub-item 1               | 2.  item 2                      |\n|              A.  sub-sub-item 1     |                                 |\n|                                     |     i)  sub-item 1              |\n|                                     |                                 |\n|                                     |         A.  sub-sub-item 1      |\n+-------------------------------------+---------------------------------+\n|     (@)  A list whose numbering     | (1) A list whose numbering      |\n|                                     |                                 |\n|     continues after                 | continues after                 |\n|                                     |                                 |\n|     (@)  an interruption            | (2) an interruption             |\n+-------------------------------------+---------------------------------+\n|     term                            | term                            |\n|     : definition                    |                                 |\n|                                     | :   definition                  |\n+-------------------------------------+---------------------------------+\n:::\n\n### Tables {.unnumbered}\n\n::: panel-tabset\n\n#### Markdown Syntax {.unnumbered}\n\n    | Right | Left | Default | Center |\n    |------:|:-----|---------|:------:|\n    |   12  |  12  |    12   |    12  |\n    |  123  |  123 |   123   |   123  |\n    |    1  |    1 |     1   |     1  |\n\n#### Output {.unnumbered}\n\n| Right | Left | Default | Center |\n|------:|:-----|---------|:------:|\n|    12 | 12   | 12      |   12   |\n|   123 | 123  | 123     |  123   |\n|     1 | 1    | 1       |   1    |\n\n:::\n\nLearn more in the article on [Tables](https://quarto.org/docs/authoring/tables.html).\n\n### Equations {.unnumbered}\n\nUse `$` delimiters for inline math and `$$` delimiters for display math. For example:\n\n+-------------------------------+-------------------------+\n| Markdown Syntax               | Output                  |\n+===============================+=========================+\n|     inline math: $E = mc^{2}$ | inline math: $E=mc^{2}$ |\n+-------------------------------+-------------------------+\n|     display math:             | display math:\\          |\n|                               | $$E = mc^{2}$$          |\n|     $$E = mc^{2}$$            |                         |\n+-------------------------------+-------------------------+\n\nIf you want to define custom TeX macros, include them within `$$` delimiters enclosed in a `.hidden` block. For example:\n\n``` tex\n::: {.hidden}\n$$\n \\def\\RR{{\\bf R}}\n \\def\\bold#1{{\\bf #1}}\n$$\n\n:::\n```\n\nFor HTML math processed using [MathJax](https://docs.mathjax.org/) (the default) you can use the `\\def`, `\\newcommand`, `\\renewcommand`, `\\newenvironment`, `\\renewenvironment`, and `\\let` commands to create your own macros and environments.\n\n## A Very Brief Introduction to LaTeX\n\nLaTeX is a document preparation utility that attempts to take the focus off of layout (so you don't have to spend 30 minutes trying to get the page break in the right place in e.g. Word) and bibliographic details.\n\n::: column-margin\nI'm not convinced LaTeX succeeds at freeing you from layout concerns, but it's certainly true that it is much more powerful than Word for layout purposes.\n:::\n\nThe philosophy of LaTeX is that presentation shouldn't get in the way of content: you should be able to change the presentation formatting systematically, without having to mess with the content. This allows you to switch templates easily, make document-wide changes in a single command, and more.\n\n::: callout-tip\n### Try it out\n\nIn Rstudio, copy the text in the document below, paste it into a text file in the editor window, and name it `test.tex`. You should see a Compile PDF button show up at the top of the document. Click that button to compile the document.\n\n    \\documentclass{article} % this tells LaTeX what type of document to make\n    % Note, comments are prefaced by a % sign. If you need to type the actual symbol\n    % you will have to escape it with \\%.\n\n    \\begin{document}\n    Hello \\LaTeX!\n    \\end{document}\n:::\n\nMost commonly, you'll use the `article` document class for papers, and `beamer` for presentations and posters. Other useful classes include `moderncv` (for CVs) and `book`, as well as the [LaTeX class maintained by the UNL math department for thesis formatting](https://www.math.unl.edu/graduate/nuthesis/nuthesis.zip). You can easily add R code chunks to a LaTeX file by changing the extension of any .tex file to .Rnw.\n\n::: column-margin\nThe Statistics graduate students maintain a bookdown version of the UNL thesis class on github [here](https://github.com/unl-statistics/UNL-thesisdown-template).\n:::\n\nThere are several types of latex commands:\n\n-   **Declarations**: statements like `\\documentclass`, `\\usepackage` or `\\small`, which are stated once and take effect until further notice.\n-   **Environments**: statements with matching `\\begin{xxx}` and `\\end{xxx}` clauses that define a block of the document which is treated differently. Common environments include figures and tables.\n-   **Special characters**: another type of command that don't define formatting or structure, but may print special characters, e.g. `\\%` to print a literal `%` character.\n\nBoth declarations and environments may come with both optional and required arguments. Required arguments are placed in `{...}` brackets, while optional arguments are placed in `[...]` brackets. You can, for instance, start your document with `\\documentclass[12pt]{article}` to specify the base font size.\n\nOne of the most useful features in LaTeX is math mode, which you can enter by enclosing text in `$ ... $` (for inline statements), `$$ ... $$` or `\\[ ... \\]` (for statements on their own line), or using other environments like `\\begin{array} ... \\end{array}` that come in math-specific packages. Once in math mode, you can use [math symbol commands](https://www.caam.rice.edu/~heinken/latex/symbols.pdf) to get characters like $\\theta, \\pi, \\sum, \\int, \\infty$, and more.\n\n::: callout-tip\n### Try it out\n\nWith any document creation software, the easiest way to learn how to do it is to find a sample document, tinker with it, see if you can make things the way you want them to be, and then google the errors when you inevitably screw something up.\n\n::: panel-tabset\n#### Problem\n\nTake the sample document up above and see if you can do the following tasks: (I've linked to documentation that may be useful)\n\n1.  [Add an image](https://www.overleaf.com/learn/latex/Inserting_Images)\n\n2.  Add the [quadratic formula and the PDF of a normal distribution to the document](https://www.overleaf.com/learn/latex/Mathematical_expressions)\n\n3.  In extremely [large](https://www.overleaf.com/learn/latex/Font_sizes,_families,_and_styles) text, print LaTeX using the `\\LaTeX` command\n\n4.  In extremely small, [italic](https://www.overleaf.com/learn/latex/Bold,_italics_and_underlining) text, print your name\n\n#### Solution\n\n    \\documentclass{article} % this tells LaTeX what type of document to make\n\n    % Add the graphicx package so that we can include images\n    \\usepackage{graphicx}\n\n    \\begin{document}\n    Hello \\LaTeX!\n\n    % Include a figure\n    \\begin{figure}[h]\n    \\centering\n    \\includegraphics[width=.5\\textwidth]{../image/IllusoryContour.png}\n    \\caption{Illusory contour image}\n    \\end{figure}\n\n    % Add the quadratic formula and the normal PDF to the document\n    $y = ax^2 + bx + c$ can be solved to get $$x = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}$$\n\n    The PDF of a normal distribution is $$f(x | \\mu, \\sigma) = \\frac{1}{\\sigma\\sqrt{2\\pi}} e^{-\\frac{(x - \\mu)^2}{2\\sigma^2}}$$\n\n    % In extremely large text, print \\LaTeX\n\n    \\Huge\\LaTeX\n\n    % In extremely small italic text, print your name\n\n    \\tiny\\emph{Your name}\n\n    \\end{document}\n\nYou can see the compiled pdf [here](other/test.pdf).\n:::\n:::\n\n### Knitr\n\nA LaTeX document has the file extension `.tex`, but it's very easy to convert a LaTeX document into a `.Rnw` (R-no-weave) document: change the file extension. Then, you can add R code chunks, and the `.Rnw` document will be compiled to a `.tex` document in R, and then the `.tex` document will be compiled to `.pdf` using LaTeX.\n\nR code chunks are embedded in LaTeX documents using:\n\n    % start of chunk\n    <<chunk-name, ...options...>>=\n\n    @\n    % end of chunk\n\nYou can embed numerical results inline using `\\Sexpr{...}` where your R code goes in the `...`.\n\nYou could in theory use python within knitr via the `reticulate` package [@reticulate], but it will be easier by far to use `quarto`. Pick the tool that does the job well.\n\n## Slides\n\n### Beamer (LaTeX) and knitr\n\n[Beamer](https://www.overleaf.com/learn/latex/beamer) is a powerful LaTeX class which allows you to create slides. The only change necessary to turn a beamer slide deck into a knitr slide deck is to add `fragile` as an option to any slide with verbatim content.\n\nYou can also create Beamer slides with Rmarkdown. [Example presentation](https://github.com/unl-statistics/Templates/blob/main/slides-beamer-markdown/beamer.pdf). Standard trade-offs (formatting details vs. document complexity) apply.\n\n::: column-margin\nCheck out the [UNL-themed Beamer quarto template](https://github.com/unl-statistics/Templates/tree/main/slides-beamer-markdown)\n:::\n\n\n::: callout-tip\n#### Try it out\n\nDownload and compile [beamer-demo.Rnw](files/beamer-demo.Rnw).\n\nCan you change the theme of the presentation?\n\nAdd another slide, and on that slide, show an appropriate style ggplot2 graph of the distribution of board game ratings, reading in the board game ratings using the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboard_games <- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2019/2019-03-12/board_games.csv\")\n```\n:::\n\n\n:::\n\n::: column-margin\n[Karl Broman has a set of slides that show how to use beamer + knitr to make reproducible slides with notes.](https://kbroman.org/Tools4RR/assets/lectures/12_talks_posters_withnotes.pdf)\n:::\n\nYou can also create Beamer slides using Rmarkdown or quarto, if you want, but you may have more control over the fine details if you go straight to the Rnw file without going through markdown first. It's a trade-off -- the file will probably be simpler in markdown, but you won't have nearly as much control.\n\n### HTML slides\n\nRStudio has a host of other options for html slide presentations. There are some definite advantages to HTML presentations: they're easy to share (via URL), you can add gifs, emojis, and interactive graphics, and you can set up github to host the presentations as well[^documents-2].\n\n[^documents-2]: I have a repository for all of the presentations I've given, and I use github pages to render the html presentations. Very easy, convenient, and I never have to carry a flash drive around\n\nThe downside to HTML slides is that there are approximately 100000 different javascript libraries that create HTML slides, and all of them have different capabilities. Many of these libraries have extensions that will let you create markdown slides, but they each have slightly different markdown syntax and capabilities.\n\n![Rmarkdown slide options available by default in RStudio](images/documents/Rmarkdown_slide_options.png)\n\nYou can get the [full details](https://bookdown.org/yihui/rmarkdown/presentations.html) of any fully supported slide class in Rmarkdown by looking at the Rmarkdown book [@xieChapterPresentations2018], which is freely available online. These guidelines will give you specifics about how to customize slides, add incremental information, change transitions, print your slides to PDF, and include speaker notes.\n\nQuarto has simplified the slide options available to you - for HTML slides, you have one option, which is to use `reveal.js`. While this may sound limiting, it's really not - RStudio/Posit (the company behind quarto) has done a *ton* of work to make quarto a lovely experience, and that extends to the slides. I have almost entirely switched to using quarto for everything because it's so much easier to arrange figures, add alt-text, and style presentations. See the quarto presentation documentation [here](https://quarto.org/docs/presentations/) [@QuartoPresentations]. If you have collaborators who are stuck on MS Office, quarto allows you to compile to a powerpoint presentation.\n\nRather than repeat the documentation for each slide package in this document, I think it is probably easier just to link you to the documentation and a sample presentation for each option.\n\nQuarto:\n\n-   [reveal.js](https://bookdown.org/yihui/rmarkdown/revealjs.html) [Example presentation](https://github.com/rstudio/ShinyDeveloperConference/tree/master/Reactivity)\n\nRmarkdown:\n\n-   [reveal.js](https://bookdown.org/yihui/rmarkdown/revealjs.html) [Example presentation](https://github.com/rstudio/ShinyDeveloperConference/tree/master/Reactivity)\n-   [ioslides](https://bookdown.org/yihui/rmarkdown/ioslides-presentation.html) [Example presentation](https://github.com/rstudio/ShinyDeveloperConference/tree/master/Debugging)\n-   [slidy](https://bookdown.org/yihui/rmarkdown/slidy-presentation.html) [Example presentation](https://rpubs.com/sdplus/vulcan74)\n-   [xaringan](https://bookdown.org/yihui/rmarkdown/xaringan.html) [Example presentation](https://slides.yihui.org/xaringan/#1), [Example presentation 2 using UNL CSS theme](http://srvanderplas.github.io/Presentations/2020-DSSV/index.html#1)\n\nIf you're familiar with CSS (or happier tinkering to get the look of something exactly right) then `xaringan` and `reveal.js` are  excellent full-featured options.\n\n::: column-margin\nI relied heavily on 2D slide layouts during my PhD prelim and defense.\n:::\n\nA nice feature of reveal.js presentations is support for [2D slide layouts](https://quarto.org/docs/presentations/revealjs/advanced.html#vertical-slides), so you can have multiple sections in your presentation, and move vertically through each section, or horizontally between sections. That is useful for presentations where you may not plan on covering everything, but where you want to have all of the information available if necessary. \n\n::: column-margin\nUNL themed HTML presentations:\n\n- [xaringan](https://github.com/unl-statistics/Templates/tree/main/slides-markdown-xaringan) ([zip of all required files](https://github.com/unl-statistics/Templates/raw/main/slides-markdown-xaringan.zip))\n- [quarto reveal.js](https://github.com/unl-statistics/Templates/tree/main/slides-revealjs-quarto) ([zip of all required files](https://github.com/unl-statistics/Templates/raw/main/slides-revealjs-quarto.zip))\n:::\n\n\n::: callout-tip\n### Try it out\n\nTake a few minutes and try each of them out to see what feels right to you. Each one has a slightly different \"flavor\" of markdown, so read through the example to get a sense for what is different.\n:::\n\n## Posters\n\nPosters are another common vehicle for presenting academic project results. Because posters are typically printed on paper or fabric, the standard file format is still PDF. As some venues move to digital posters, it is becoming more realistic to use HTML poster layouts that contain interactive elements. \n\n### LaTeX\n\n[Overleaf has a fantastic gallery of posters made in LaTeX](https://www.overleaf.com/gallery/tagged/poster).\n\nThere are several LaTeX options for making scientific posters: baposter, beamerposter, tikzposter are among the most common. We'll focus on `beamerposter` here, but you are free to explore the other poster classes at will. As with beamer, you can easily integrate knitr code chunks into a document, so that you are generating your images reproducibly.\n\nBasic code for a poster in beamer (along with the necessary style files) that I've minimally customized to meet UNL branding requirements can be found [here](https://github.com/unl-statistics/Templates/raw/main/poster-beamer.zip).\n\n::: callout-tip\n#### Try it out\n\nDownload the beamer template and do the following:\n\n1.  Change the 3-column span box to a 2-column span box.\n2.  Make the \"Block Colors\" box purple\n3.  Move the References block up to fill the 4th column.\n:::\n\n### Markdown\n\nWhile most posters are still put together in PDF form, there is growing support for HTML posters, and many conferences have digital poster options for display. This may allow you to use interactive graphics and other features in a poster that would not translate well to PDF. Here is a [list of Rmarkdown poster options](https://gist.github.com/Pakillo/4854e5d760351206084f6be8abe476b2); some even have PDF export capabilities so that you can have the interactive version plus a static version.\n\n#### Posterdown\n\nTo start, install posterdown with `install.packages(\"posterdown\")`.\n\n![Use the RStudio menu to create a posterdown presentation file -- with a prefilled template](images/documents/Rstudio-posterdown-setup.gif)\n\n::: column-margin\n[UNL-themed posterdown template](https://github.com/unl-statistics/Templates/raw/main/poster-markdown.zip)\n:::\n\nYou can also find additional customization options [here](https://github.com/brentthorne/posterdown/wiki/posterdown_html). As with other markdown items, you can customize things even more using CSS. The nice thing about HTML posters, though, is that you can directly link to them if they're hosted on a site.\n\nYou can also print a poster to PDF by running the following command: `pagedown::chrome_print(\"myfile.Rmd\")`.\n\n#### Pagedown\n\nThe `pagedown` package also has a couple of poster templates, including [poster-relaxed](https://pagedown.rbind.io/poster-relaxed) and [poster-jacobs](https://user-images.githubusercontent.com/163582/49780277-7b326780-fcd3-11e8-9eb6-69e46292158c.png).\n\nThere are also templates for letters, business cards, and more in pagedown, if you're feeling ambitious.\n\n::: callout-tip\n#### Try it out\n\nDownload the pagedown template and do the following:\n\n1.  Change the 3-column layout to 4 columns. Adjust the breaks ({.mybreak}) accordingly to make the poster look good.\n2.  Make the 2nd-level headers #249ab5 (cerulean)\n3.  Move the References block to the 4th column.\n4.  Print your poster to a PDF\n:::\n\n## Resume/CV\n\nYou can also create resumes and CVs in markdown and LaTeX. There is no real substitute for playing around with these classes, but I really like [moderncv](http://www.latextemplates.com/template/moderncv-cv-and-cover-letter) in LaTeX.\n\n::: column-margin\nYou can see my highly customized CV [here](https://github.com/srvanderplas/CV), with timelines and numbered publications. It has to be compiled multiple times to get everything right.\n:::\n\nPagedown also comes with a html resume template (Use the menu -\\> Rmarkdown -\\> From Template -\\> HTML Resume) that can be printed to html and pdf simultaneously. There is also the `vitae` package, which has even more templates, integration with other packages/sites, and more. \n\n::: column-margin\nAt this point, the biggest reason I haven't switched to HTML is that I really like my timeline CV and I don't have enough time to fiddle with it more. \n:::\n\n## Hosting Content with Github Pages\n\nGithub will host HTML content for you using Github pages (case in point: this textbook). This means you can version control your content (for instance, presentations or your CV) and have GitHub do the hosting (so you don't have to find a webserver, buy a domain name, etc).\n\n::: callout-note\n### Setting up Github Pages\n\n1.  Create a new repository named username.github.io on your personal github site (not the unl-stat850 classroom group)\n2.  Clone your repository\n3.  Modify your README.md file and push your changes\n4.  Go to https://username.github.io and see your README.md file rendered as HTML.\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/UtpR_HLA6kU\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n:::\n\nGithub will render any README.md file as actual HTML; it will also allow you to host plain HTML pages. By default, the README file is rendered first, but in subsequent directories, a file named index.html will be rendered as the \"home page\" for the subdirectory, if you have such a file. Otherwise you'll have to know the file name.\n\nI tend to separate things out into separate repositories, but you can host HTML content on other repositories too, by enabling github pages in the repository settings. On my personal page, I have repositories for my [CV](https://srvanderplas.github.io/CV/), Presentations, etc. Each repository that has pages enabled can be accessed via `https://srvanderplas.github.io/\\<repository name\\>/\\<repository file path\\>`. So, to see my `unl-stat850` repository, you'd go to https://srvanderplas.github.io/unl-stat850/ (but you're already there!).\n\n::: column-margin\nI've been putting my presentations on Github since 2014, so it has a pretty good record of every set of slides I've created. I highly recommend this strategy - storing everything online makes it easy to share your work with others, reference later, and more importantly, easy for you to find in 3 years.\n:::\n\nThis mechanism provides a very convenient way to showcase your work, share information with collaborators, and more - instead of sending files, you can send a URL and no one has to download anything overtly.\n\n::: callout-note\n### Setting up Github Pages in an existing repository\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/evwhZm8J4bs\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n:::\n\nIf you want to track your quarto/rmarkdown code and then render the output to a separate folder, you can use the docs/ folder. Github has this as an option as well -- where we selected \"main\" branch above, we would select \"docs/\" instead (it's grayed out b/c there isn't a docs folder in the repo). That is how this book is hosted - the book compiles to the docs/ folder, and that way the book is rendered in final form and you don't have to see all of the other crud that is in the repository.\n\n## Additional Resources to Explore\n\nThere are many other XXXdown packages made for Rmarkdown. Quarto is more multi-functional and contains blog, book, and website capabilities in a single package. However, most of the things which worked in Rmarkdown also work in Quarto.\n\n-   [`blogdown`](https://bookdown.org/yihui/blogdown/)\n\n-   [`bookdown`](https://bookdown.org/yihui/bookdown/) (what I'm using to make this book)\n\n-   [`pkgdown`](https://pkgdown.r-lib.org/) (to easily build documentation websites for R packages)\n\n-   ROpenSci tutorial: How to set up [hosting on github](https://ropenscilabs.github.io/actions_sandbox/websites-using-pkgdown-bookdown-and-blogdown.html)\n\n-   [liftr](https://nanx.me/talks/jsm2018-liftr-nanxiao.pdf) - use Docker to make persistently reproducible documents\n\n\nIn addition, [\\@mcanouil](github.com/mcanouil) maintains a [list of Quarto talks, topics, tools, and examples](https://github.com/mcanouil/awesome-quarto) that is worth a look.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}