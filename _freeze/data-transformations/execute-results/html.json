{
  "hash": "337bc570d686b33aa8ddfa05875797ee",
  "result": {
    "markdown": "# Data Transformations {#sec-data-transformations}\n\n## Module Objectives {#module6-objectives .unnumbered}\n\nBroadly, your objective while reading this chapter is to be able to identify datasets which have \"messy\" formats and determine a sequence of operations to transition the data into \"tidy\" format. To do this, you should be master the following concepts:\n\n-   Determine what data format is necessary to generate a desired plot or statistical model\n-   Join and split data columns using string operations\n-   Understand the differences between \"wide\" and \"long\" format data and how to transition between the two structures\n-   Understand relational data formats and how to use data joins to assemble data from multiple tables into a single table.\n\n> Happy families are all alike; every unhappy family is unhappy in its own way. - Leo Tolstoy\n\n> Tidy datasets are all alike, but every messy dataset is messy in its own way. - Hadley Wickham\n\n## Tidy and Messy Data\n\n### Motivating Example\n\nConsider the spreadsheet screenshot in @fig-human-readable.\n\n![Spreadsheet intended for human consumption, from @mccallumBadDataHandbook2013 (Chapter 3)](images/data-transformations/Data-human-consumption.png){#fig-human-readable}\n\nThis spreadsheet shows New Zealand High School certificate achievement levels for a boys-only school. Typically, students would get level 1 in year 11, level 2 in year 12, and level 3 in year 13, but it is possible for students to gain multiple levels in a single year. This data is organized to show the number of students gaining each type of certification (broken out by gender) across each of the 3 years. There are many blank cells that provide ample space to see the data, and all of the necessary variables are represented: there are essentially three 2x3 tables showing the number of students attaining each NCEA level in each year of school. If all of the information is present in this table, is there really a problem? Perhaps not if the goal is just to display the data, but analyzing this data effectively, or plotting it in a way that is useful, requires some restructuring. @fig-machine-readable shows a restructured version of this data in a more compact rectangular format.\n\n![Spreadsheet reorganized for data analysis](images/data-transformations/Data-machine-consumption.png){#fig-machine-readable}\n\nIn @fig-machine-readable, each column contains one variable: Year, gender, level, and total number of students. Each row contains one observation. We still have 18 data points, but this format is optimized for statistical analysis, rather than to display for (human) visual consumption. We will refer to this restructured data as \"tidy\" data: it has a single column for each variable and a single row for each observation.\n\n### Defining Tidy data\n\nThe illustrations below are lifted from an [excellent blog post](https://www.openscapes.org/blog/2020/10/12/tidy-data/) [@lowndesTidyDataEfficiency2020] about tidy data; they're reproduced here because\n\n1.  they're beautiful and licensed as CCA-4.0-by, and\n2.  they might be more memorable than the equivalent paragraphs of text without illustration.\n\nMost of the time, data does not come in a format suitable for analysis. Spreadsheets are generally optimized for data entry or viewing, rather than for statistical analysis:\n\n-   Tables may be laid out for easy data entry, so that there are multiple observations in a single row\n-   It may be visually preferable to arrange columns of data to show multiple times or categories on the same row for easy comparison\n\nWhen we analyze data, however, we care much more about the fundamental structure of observations: discrete units of data collection. Each observation may have several corresponding variables that may be measured simultaneously, but fundamentally each discrete data point is what we are interested in analyzing.\n\nThe structure of **tidy data** reflects this preference for keeping the data in a fundamental form: each observation is in its own row, any observed variables are in single columns. This format is inherently rectangular, which is also important for statistical analysis - our methods are typically designed to work with matrices of data.\n\n![Tidy data format, illustrated.](https://www.openscapes.org/img/blog/tidydata/tidydata_1.jpg){#fig-tidy-data-definition}\n\n![An illustration of the principle that every messy dataset is messy in its own way.](https://www.openscapes.org/img/blog/tidydata/tidydata_2.jpg)\n\nThe preference for tidy data has several practical implications: it is easier to reuse code on tidy data, allowing for analysis using a standardized set of tools (rather than having to build a custom tool for each data analysis job).\n\n![Tidy data is easier to manage because the same tools and approaches apply to multiple datasets.](https://www.openscapes.org/img/blog/tidydata/tidydata_3.jpg)\n\nIn addition, standardized tools for data analysis means that it is easier to collaborate with others: if everyone starts with the same set of assumptions about the dataset, you can borrow methods and tools from a collaborator's analysis and easily apply them to your own dataset.\n\n::: {#fig-tidy-data-advantages layout-ncol=2}\n\n![Collaboration with tidy data.](https://www.openscapes.org/img/blog/tidydata/tidydata_4.jpg){fig-alt=\"Two tidyverse monsters collaborating on a tidy dataset using similarly-shaped tools.\"}\n\n![Tidy data enables standardized workflows.](https://www.openscapes.org/img/blog/tidydata/tidydata_5.jpg){fig-alt=\"A tidy data analysis conveyor belt, with new data loaded onto the conveyor that is sequentially wrangled, visualized, modeled, and leaves the conveyor belt as a complete analysis.\"}\n\nTidy data makes it easier to collaborate with others and analyze new data using standardized workflows.\n:::\n\n::: callout-warning\n\n### Examples: Messy Data {-}\n\n\n\n\n\nThese datasets all display the same data: TB cases documented by the WHO in Afghanistan, Brazil, and China, between 1999 and 2000. There are 4 variables: country, year, cases, and population, but each table has a different layout.\n\n::: panel-tabset\n\n#### Table 1 {-}\n\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Table 1\n\n|country     | year|  cases| population|\n|:-----------|----:|------:|----------:|\n|Afghanistan | 1999|    745|   19987071|\n|Afghanistan | 2000|   2666|   20595360|\n|Brazil      | 1999|  37737|  172006362|\n|Brazil      | 2000|  80488|  174504898|\n|China       | 1999| 212258| 1272915272|\n|China       | 2000| 213766| 1280428583|\n:::\n:::\n\n\nHere, each observation is a single row, each variable is a column, and everything is nicely arranged for e.g. regression or statistical analysis. We can easily compute another measure, such as cases per 100,000 population, by taking cases/population * 100000 (this would define a new column). \n\n#### 2 {-}\n\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Table 2\n\n|country     | year|type       |      count|\n|:-----------|----:|:----------|----------:|\n|Afghanistan | 1999|cases      |        745|\n|Afghanistan | 1999|population |   19987071|\n|Afghanistan | 2000|cases      |       2666|\n|Afghanistan | 2000|population |   20595360|\n|Brazil      | 1999|cases      |      37737|\n|Brazil      | 1999|population |  172006362|\n|Brazil      | 2000|cases      |      80488|\n|Brazil      | 2000|population |  174504898|\n|China       | 1999|cases      |     212258|\n|China       | 1999|population | 1272915272|\n|China       | 2000|cases      |     213766|\n|China       | 2000|population | 1280428583|\n:::\n:::\n\n\nHere, we have 4 columns again, but we now have 12 rows: one of the columns is an indicator of which of two numerical observations is recorded in that row; a second column stores the value. This form of the data is more easily plotted in e.g. ggplot2, if we want to show lines for both cases and population, but computing per capita cases would be much more difficult in this form than in the arrangement in table 1. \n\n#### 3 {-}\n\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Table 3\n\n|country     | year|rate              |\n|:-----------|----:|:-----------------|\n|Afghanistan | 1999|745/19987071      |\n|Afghanistan | 2000|2666/20595360     |\n|Brazil      | 1999|37737/172006362   |\n|Brazil      | 2000|80488/174504898   |\n|China       | 1999|212258/1272915272 |\n|China       | 2000|213766/1280428583 |\n:::\n:::\n\n\nThis form has only 3 columns, because the rate variable (which is a character) stores both the case count and the population. We can't do *anything* with this format as it stands, because we can't do math on data stored as characters. However, this form might be easier to read and record for a human being. \n\n#### 4 {-}\n\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Table 4a\n\n|country     |   1999|   2000|\n|:-----------|------:|------:|\n|Afghanistan |    745|   2666|\n|Brazil      |  37737|  80488|\n|China       | 212258| 213766|\n:::\n\n::: {.cell-output-display}\nTable: Table 4b\n\n|country     |       1999|       2000|\n|:-----------|----------:|----------:|\n|Afghanistan |   19987071|   20595360|\n|Brazil      |  172006362|  174504898|\n|China       | 1272915272| 1280428583|\n:::\n:::\n\n\nIn this form, we have two tables - one for population, and one for cases. Each year's observations are in a separate column. This format is often found in separate sheets of an excel workbook. To work with this data, we'll need to transform each table so that there is a column indicating which year an observation is from, and then merge the two tables together by country and year. \n\n#### 5 {-}\n\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Table 5\n\n|country     |century |year |rate              |\n|:-----------|:-------|:----|:-----------------|\n|Afghanistan |19      |99   |745/19987071      |\n|Afghanistan |20      |00   |2666/20595360     |\n|Brazil      |19      |99   |37737/172006362   |\n|Brazil      |20      |00   |80488/174504898   |\n|China       |19      |99   |212258/1272915272 |\n|China       |20      |00   |213766/1280428583 |\n:::\n:::\n\n\nTable 5 is very similar to table 3, but the year has been separated into two columns - century, and year. This is more common with year, month, and day in separate columns  (or date and time in separate columns), often to deal with the fact that spreadsheets don't always handle dates the way you'd hope they would. \n\n:::\n\n:::\n\n::: callout-tip\n### Try it out: Classifying Messy Data\n\n::: panel-tabset\n\n#### Problem\n\nFor each of the datasets in the previous example, determine whether each table is tidy. If it is not, identify which rule or rules it violates. \n\nWhat would you have to do in order to compute a standardized TB infection rate per 100,000 people?\n\n#### Table 1 {-}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Table 1\n\n|country     | year|  cases| population|\n|:-----------|----:|------:|----------:|\n|Afghanistan | 1999|    745|   19987071|\n|Afghanistan | 2000|   2666|   20595360|\n|Brazil      | 1999|  37737|  172006362|\n|Brazil      | 2000|  80488|  174504898|\n|China       | 1999| 212258| 1272915272|\n|China       | 2000| 213766| 1280428583|\n:::\n:::\n\n\nThis is tidy data. Computing a standardized infection rate is as simple as creating the variable rate = cases/population*100,000.\n\n#### 2 {-}\n\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Table 2\n\n|country     | year|type       |      count|\n|:-----------|----:|:----------|----------:|\n|Afghanistan | 1999|cases      |        745|\n|Afghanistan | 1999|population |   19987071|\n|Afghanistan | 2000|cases      |       2666|\n|Afghanistan | 2000|population |   20595360|\n|Brazil      | 1999|cases      |      37737|\n|Brazil      | 1999|population |  172006362|\n|Brazil      | 2000|cases      |      80488|\n|Brazil      | 2000|population |  174504898|\n|China       | 1999|cases      |     212258|\n|China       | 1999|population | 1272915272|\n|China       | 2000|cases      |     213766|\n|China       | 2000|population | 1280428583|\n:::\n:::\n\n\nEach variable does not have its own column (so a single year's observation of one country actually has 2 rows). Computing a standardized infection rate requires moving cases and population so that each variable has its own column, and then you can proceed using the process in 1.\n\n#### 3 {-}\n\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Table 3\n\n|country     | year|rate              |\n|:-----------|----:|:-----------------|\n|Afghanistan | 1999|745/19987071      |\n|Afghanistan | 2000|2666/20595360     |\n|Brazil      | 1999|37737/172006362   |\n|Brazil      | 2000|80488/174504898   |\n|China       | 1999|212258/1272915272 |\n|China       | 2000|213766/1280428583 |\n:::\n:::\n\n\nEach value does not have its own cell (and each variable does not have its own column). In Table 3, you'd have to separate the numerator and denominator of each cell, convert each to a numeric variable, and then you could proceed as in 1. \n\n\n#### 4 {-}\n\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Table 4a\n\n|country     |   1999|   2000|\n|:-----------|------:|------:|\n|Afghanistan |    745|   2666|\n|Brazil      |  37737|  80488|\n|China       | 212258| 213766|\n:::\n\n::: {.cell-output-display}\nTable: Table 4b\n\n|country     |       1999|       2000|\n|:-----------|----------:|----------:|\n|Afghanistan |   19987071|   20595360|\n|Brazil      |  172006362|  174504898|\n|China       | 1272915272| 1280428583|\n:::\n:::\n\n\n\nThere are multiple observations in each row because there is not a column for year. To compute the rate, you'd need to \"stack\" the two columns in each table into a single column, add a year column that is 1999, 1999, 1999, 2000, 2000, 2000, and then merge the two tables. Then you could proceed as in 1. \n\n#### 5 {-}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Table 5\n\n|country     |century |year |rate              |\n|:-----------|:-------|:----|:-----------------|\n|Afghanistan |19      |99   |745/19987071      |\n|Afghanistan |20      |00   |2666/20595360     |\n|Brazil      |19      |99   |37737/172006362   |\n|Brazil      |20      |00   |80488/174504898   |\n|China       |19      |99   |212258/1272915272 |\n|China       |20      |00   |213766/1280428583 |\n:::\n:::\n\n\n\nEach variable does not have its own column (there are two columns for year, in addition to the issues noted in table3). Computing the rate would be similar to table 3; the year issues aren't actually a huge deal unless you plot them, at which point 99 will seem to be bigger than 00 (so you'd need to combine the two year columns together first). \n\n:::\n\n:::\n\nIt is actually impossible to have a table that violates only one of the rules of tidy data - you have to violate at least two. So a simpler way to state the rules might be: \n\n1. Each dataset goes into its own table (or tibble, if you are using R)\n2. Each variable gets its own column\n\n::: callout-note\n## Other useful references\n\n@doughertyCleanMessyData2021 - very nice task-oriented chapter that's below the level addressed in this course but still useful\n\n@internationalbusinessmachinesRisksUsingSpreadsheets2018 - IBM SPSS ad that talks about the perils of spreadsheets\n\n@obeirneHorrorStories2020 - assembled news stories involving spreadsheet mishaps\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}