[
["index.html", "Stat 850: Computing Tools for Statisticians Introduction Forward Course Description Course Goals Course Objectives", " Stat 850: Computing Tools for Statisticians Susan Vanderplas Last Updated: 2020-09-07 Introduction Forward This textbook is intended to be a substitute for hours and hours of video lectures wherein I read code to you. That’s awful, and boring1, and honestly, as painful for me to have to listen to myself while editing the things as it is for you to watch them. Instead, I hope that you’ll be able to work through this book, week by week, over the course of Stat 850. I’ve included comics, snark, gifs, YouTube videos, and more, with the goal of making this a collection of the best information I could find on learning R and SAS and statistical programming. Course Description Introductions to statistical computing packages and document preparation software. Topics include: graphical techniques, data management, Monte Carlo simulation, dynamic document preparation, presentation software. Course Goals (Broad, amorphous conceptual things that are hard to measure) Learn how to use R and SAS for data analysis, data processing, and data visualization. Become familiar with the process, techniques, and goals of exploratory data analysis. Create, assess, and debug code effectively. Use online resources to find software to perform a task, comparing approaches taken by competing programs. Read error messages, find related problems in online forums, and isolate the conditions necessary to generate the error. Generate minimum working examples or reproducible examples of errors in order to ask for help effectively. Communicate statistical results using reproducible, dynamic tools. Understand the importance of reproducibility in scientific computation. Course Objectives (what you should be able to do at the end of this course) A. Clean and format the data appropriately for the intended analysis or visualization method. (Goals: 1) B. Explore a data set using numerical and visual summaries, developing questions which can be answered using statistics. (Goals: 1, 2) C. Evaluate methods or software to assess relevance to a problem. Compare similar options to determine which are more appropriate for a given application (Goals: 1, 3) D. Test and debug software, using the following sequence: (Goals: 3, 4) Reproduce the error in a new environment, Create a minimal reproducible example, Research the error message and evaluate online resources for relevance, Ask for help, describing the error or problem appropriately. E. Document the data, methods, and results of an analysis using reproducible methods. (Goals: 1, 2, 4) If you want boring, or have insomnia, check out this Microsoft Word tutorial from 1989. Youtube says it’s the most boring video ever made.↩ "],
["tools.html", "Module 1 Tools for Statistical Computing Module Objectives 1.1 R and RStudio 1.2 SAS 1.3 Version Control with Git 1.4 LaTeX 1.5 Easy Extra Setup Script 1.6 Topic Sequencing 1.7 Using Version Control 1.8 References", " Module 1 Tools for Statistical Computing The goal of this class is to expose you to basic computing skills in R and SAS, which are two of the more common languages for statistical computing (python is the 3rd most common, and is particularly popular in data science and machine learning, but will not be explicitly taught in this class.) Since we’ll be learning how to use a bunch of different software, the first step is to get everything set up on your machine: git SAS 9.4 (or later) R (3.5 or higher) RStudio LaTeX You will also need to sign up for a GitHub account Module Objectives Set up R, Rstudio, SAS, LaTeX, and git on personal machines Use version control to track changes to documents and code 1.1 R and RStudio An explanation of the differences between the R and RStudio and a short history lesson. R is a statistical computing language which originated as an open-source clone of Bell labs S computing language. S was inspired by Scheme, but also has features which are similar to Lisp. It is a scripting language (you don’t have to compile the code before it runs) and is natively accessed using a command-line prompt. One feature of R that is relatively unique is that it uses vector-based math, which means that mathematical operations on vectors occur for the entire vector without having to use loops to iterate through the vector line-by-line (this feature is common in languages designed for data manipulation, like SAS, Matlab, and Julia; it is rare in more general computing languages). R is optimized for working on data: unlike more general-purpose programming languages such as Python, R was built with the idea of facilitating data analysis. As a result, data structures in R tend to be more natural for statistical work than similar structures in Python or C, which can feel unwieldy. From a computer science perspective, though, R seems like an extremely odd language because the design choices that make data analysis easier are unconventional for more general-purpose languages. RStudio is an integrated development environment(IDE) for R. Basically, it adds a pretty graphical layer on top of R, providing an easy way to develop R code, evaluate that code, and keep track of all of the variables which are available in the computing environment. RStudio contains integrations which provide syntax highlighting, code folding, basic checks (missing parentheses, etc.), debugging tools, and many other features. RStudio was designed around the idea of making R easier to use and making it easy to develop statistical software reproducibly. RStudio (the company) is responsible for adding many features to the R ecosystem which facilitate running statistical analyses and presenting the results in user-friendly ways. Another useful explanation of R and RStudio can be found in Section 1 of ModernDive’s book 1.1.1 Getting Set up: R Note that the tutorial videos use versions of R that are old. You should be installing at least R 3.5 (if you have an older version, please update.) The basic installation process is the same, though, so the videos are still useful. R on Windows installation R on Mac installation R on Linux installation On Linux, instead of a YouTube video, you get a text-based tutorial. One of the Debian maintainers, Dirk Eddelbuettel, is also on R core, which means that R tends to work extremely well with Debian-based distributions, like Ubuntu and Linux Mint. R does work on RPM based distros, and you can of course also compile it from source for Arch/Gentoo, but I’ve stuck with Deb-based distributions for approximately 7 years because it seems to be a bit less hassle. Additional troubleshooting can be found here. Once you have R installed, try to run the following code, which will install the packages you need to run the code in this book. # Read in a list of all packages that are required pkgs &lt;- readLines(&quot;https://raw.githubusercontent.com/srvanderplas/unl-stat850/master/data/packages&quot;) # Remove any already installed packages from the list pkgs &lt;- setdiff(pkgs, installed.packages()) # The following code will not make a lot of sense... yet. Come back to it in a # few weeks and see how much you understand (or can decode) # This ensures that if the installation fails, the code will keep running try_install_pkg &lt;- function(...) try(install.packages(..., dependencies = T)) lapply(pkgs, try_install_pkg) Installing package into &#39;/home/susan/R/x86_64-pc-linux-gnu-library/3.6&#39; (as &#39;lib&#39; is unspecified) Warning: package &#39;emo&#39; is not available (for R version 3.6.3) [[1]] NULL pkgs &lt;- setdiff(pkgs, installed.packages()) if (length(pkgs) &gt; 0) { paste(&quot;The following packages did not install: \\n&quot;, paste(pkgs, collapse = &quot;\\n&quot;)) } [1] &quot;The following packages did not install: \\n emo&quot; If some packages did not install, feel free to post in Yellowdig with the error message(s) received and the list of packages you’re having trouble installing (or contact me and we’ll set up a time to debug). 1.1.2 Getting Set up: RStudio You can find RStudio at https://RStudio.com/products/RStudio/download/. You want the open source edition of RStudio Desktop. If you’re feeling brave, you can install the preview release - this may have a few bugs, but tends to be relatively stable and has the latest features. Please install RStudio 1.3.9+ for this class. If you’re on Linux, go ahead and import RStudio’s public key so that software validation works. (All of the commands are provided in the linked page) 1.1.3 Exploring RStudio The RStudio window will look something like this. In the top-left pane is the text editor. This is where you’ll do most of your work. In the top right, you’ll find the environment, history, and connections tabs. The environment tab shows you the objects available in R (variables, data files, etc.), the history tab shows you what code you’ve run recently, and the connections tab is useful for setting up database connections. On the bottom left is the console. There are also other tabs to give you a terminal (command line) prompt, and a jobs tab to monitor progress of long-running jobs. In this class we’ll primarily use the console tab. On the bottom right, there are a set of tabs: - files (to give you an idea of where you are working, and what files are present), - plots (which will be self-explanatory), - packages (which extensions to R are installed and loaded), - the help window (where documentation will show up), and - the viewer window, which is used for interactive graphics or previewing HTML documents. To get started, type 2+2 into the console window and hit enter. Now, type 2+2 into the text editor and press the run button that is on the pane’s shortcut bar (or, you can hit Ctrl-Enter/CMD-Enter to send a single line to the console). If both of those things worked, you’re probably set up correctly! Next, try typing this into the text editor, then run the line. Look in the environment and see if you can see what has changed. a &lt;- 3 # store 3 in the variable a Your environment window should now look something like this (the .Last.value entry may not be there, and that’s ok) You can use the environment window to preview your data, check on the status of variables, and more. Note that while R is running, the window doesn’t update (so you can’t check on the status of a loop while the loop is running using the window). 1.2 SAS SAS is another extensively used statistical programming language. It is primarily used for mixed models and in the biostatistics community (for e.g. drug trials). For SAS installation, see Steve Westerholt. He manages UNL SAS installations. Note SAS looks different on different machines. On Linux, SAS looks like you took a time machine back to the early 1990s. Screenshots from SAS will likely look very different on your machine than on mine. I will try to integrate screenshots from other OS’s where it matters2. 1.2.1 SAS Windows/Panes The SAS toolbox has options to create new files, submit code, and more (but I mostly use keyboard shortcuts in the individual windows). This is probably one of the biggest things that’s different on Linux… The SAS Log gives you lots of detailed information about how your code ran – look here for errors and warnings. The SAS program editor is where you’ll be writing your code. If you want, you can write code in a more advanced text editor and copy/paste it into the log when you’re ready to run it. There are two different places your output may end up: if you’re using the old output system, you’ll get text output in the output pane. The old output system output pane. The new output system uses HTML and will output to your browser. You can navigate through your results using the results window The explorer window lets you access documentation, data, and more If you click on libraries, you get to this list: This area of the SAS explorer shows all of the libraries you have access to. Clicking on any one library will show you a list of datasets in that library You can then click on a dataset and you will get a spreadsheet-like view. 1.2.2 SAS Modules SAS is a very large set of programs. In this class, we’re primarily working with base SAS (the underlying language and interpreter), SAS/STAT (the statistical procedures, like PROC GLM), and SAS/IML, which is SAS’s version of a scripting language. IML allows you to implement your own procedures “from scratch”. Initially, we’ll primarily focus on SAS/IML, because it contains information parallel to what you need to know to start programming in R. It’s easier to teach general programming concepts at the same time, even if your typical SAS course would probably introduce you to the DATA step and simple PROC statements first. 1.3 Version Control with Git Git is a program whose primary purpose is version control. Git tracks changes to each file that it is told to monitor, and as the files change, you provide short labels describing what the changes were and why they exist (called “commits”). The log of these changes (along with the file history) is called your git commit history. When writing papers, this means you can cut material out freely, so long as the paper is being tracked by git - you can always go back and get that paragraph you cut out if you need to. You also don’t have to rename files - you can confidently overwrite your files, so long as you remember to commit frequently. The git material in this chapter is just going to link directly to the book “Happy Git with R” by Jenny Bryan. It’s amazing, amusing, and generally well written. I’m not going to try to do better. Go read Chapter 1. 1.3.1 Getting set up: GitHub See the instructions here 1.3.2 Getting set up: git See the instructions here Write down, or keep track of, the git installation path. This will make your life much easier. There is a troubleshooting guide that has some common problems which occur during git installation. 1.3.3 Introduce yourself to git You need to tell git what your name and email address are, because every “commit” you make will be signed. Follow the instructions here, or just wait and run the R script to install and configure R, LaTeX, and packages. 1.3.4 Optional: Install a git client Instructions I don’t personally use a git client other than RStudio, but you may prefer to have a client, especially if you anticipate doing lots of work in SAS. 1.3.5 Git and Github Slightly crude (but memorable) analogy (don’t click if you’re offended by PG13/R rated stuff) Git is to GitHub what Porn is to PornHub Git is a program that runs on your machine and keeps track of changes to files that you tell it to monitor. GitHub is a website that hosts people’s git repositories. You can use git without GitHub, but you can’t use GitHub without git. If you want, you can hook Git up to GitHub, and make a copy of your local git repository that lives in the cloud. Then, if you configure things correctly, your local repository will talk to GitHub without too much trouble. Using Github with Git allows you to easily make a cloud backup of your important code, so that even if your computer suddenly catches on fire, all of your important code files exist somewhere else. Remember: any data you don’t have in 3 different places is data you don’t care about.3 1.4 LaTeX LaTeX is a typesetting program, which makes it different from most other document creation software, such as MS Word, which is “WYSIWYG” - what you see is what you get. In LaTeX, you’ll type in code to create a document, and LaTeX will compile the document into something pretty. The goal is that you have to think less about formatting and what goes on which page - LaTeX will handle that part for you - so that you can think more about the content. Why use LaTeX? (shamelessly stolen from FB, which apparently stole it from Tumblr) Latex is meant for you to focus on the content and not worry about the formatting - the computer optimizes figure placement according to directives you’ve given. In practice, it doesn’t usually work out like that, so there are programs like markdown which aim to simplify document creation even more to free you from the formatting that LaTeX requires. LaTeX is often used for typesetting statistical and mathematical papers because its equation editor is top notch. (It was actually written by Donald Knuth because he got so annoyed trying to write his dissertation that he took some time off to write TeX first, and then used it to write his dissertation).4 If you want to install LaTeX so that you can use it outside of R/RStudio, go here for operating system specific instructions. If you don’t care about being able to access it outside of R, then you can put it off until you run the code in the next section - one of the packages that is installed is tinytex, which will make it easy to install LaTeX within R. We’ll work with LaTeX later in the semester, but for now, we’ll be primarily working with Markdown, which is much simpler. Here’s a quick cheatsheet. 1.5 Easy Extra Setup Script Copy this script into a text editor in RStudio on your machine. It will ask you for some input - your name, email address, etc. – Make those changes in the text document, and then source the document. It will run for a while, installing most of the packages you’ll need for this course. Read the code file if you want to know what it’s doing - I’ve provided short explanations of what each package does (and anyways, you shouldn’t run code on your machine if you don’t understand what it does). source(&quot;code/01_setup_install.R&quot;) This script will set up git for you (e.g. the introduce yourself to git section above) and then will install tinytex, which is a version of LaTeX that is very simple and easy to install. If you want to install a different version of LaTeX instead (like MikTex or TexLive) feel free to do so. 1.6 Topic Sequencing In several places in this class, you’ll have to use material that you haven’t been formally taught yet. I will do my absolute best to provide thorough instructions, help you along as much as I can, and generally provide enough support that you can muddle through. But it’s going to be hard to teach you everything you need to e.g. analyze some data, before providing you the opportunity to SEE that data using visualization packages. And it’s silly to teach you plotting before you know how to read data in. But to teach you how to read data in, you need to be able to take a look at the data, and plots are the best way to do that. To do any of this stuff, you need to know about functions, but it can be easier to figure out how to run a function than to write a function. You see my problem. So instead, what I’m going to do is to leave you lots of comments as to what a piece of code does when I’m using things you haven’t been formally shown yet. Then, you can copy/paste/modify those pieces of code, and if they break, you can ask why and we’ll dig into it (breaking code is usually a good thing, because it means you’re learning how to program). For each chapter, focus on learning how to write code that accomplishes that chapter’s objectives. If you understand some of the code you’re modifying that covers other topics not in that chapter, so much the better. But it’s not an expectation or a requirement. If you’re confused, please post on the class message boards so that those who have seen this material before can help you out. SAS quick start guide R quick start guide 1.7 Using Version Control I’ve set this class up so that you’ll be using version control from the very beginning. Not only will this help you to learn good habits, it will also give you a platform for collaboration, hosting your work online, and more. If that doesn’t fix it, git.txt contains the phone number of a friend of mine who understands git. Just wait through a few minutes of ‘It’s really pretty simple, just think of branches as…’ and eventually you’ll learn the commands that will fix everything. In this class, we’ll be using Github Classroom. Basically, this allows me to set up a template repository for each assignment. You’ll accept the assignment, which will create a copy of the repository on your GitHub account, and then your work will be saved to your repository using a fairly standard workflow which will be discussed below. When you submit your assignment, you’ll copy the link to the commit you want to be graded, and upload that to Canvas. I will clone your repository, compile your files (I’ll change the SAS path if necessary), and grade the compiled result. So, what does your typical git/GitHub workflow look like? I’ll go through this in (roughly) chronological order. This is primarily my higher-level understanding of git - I do not have any idea how it works on the backend, but I’m pretty comfortable with the clone/push/pull/commit/add workflows, and I’ve used a few of the more complicated features (branches, pull requests) on occasion. 1.7.1 Create a Repository Repositories are single-project containers. You may have code, documentation, data, TODO lists, and more associated with a project. To create a repository, you can start with your local computer first, or you can start with the online repository first. Both methods are relatively simple, but the options you choose depend on which method you’re using, so be careful not to get them confused. 1.7.1.1 Local repository first Let’s suppose you already have a folder on your machine named hello-world-1 (you may want to create this folder now). You’ve created a starter document, say, a text file named README with “hello world” written in it. If you want, you can use the following R code to set this up: dir &lt;- &quot;./hello-world-1&quot; if (!dir.exists(dir)) { dir.create(dir) } file &lt;- file.path(dir, &quot;README&quot;) if (!file.exists(file)) { writeLines(&quot;hello world&quot;, con = file) } To create a local git repository, we can go to the terminal (in Mac/Linux) or the git bash shell (in Windows), navigate to our repository folder (not shown, will be different on each computer), and type in git init Alternately, if you prefer a GUI (graphical user interface) approach, that will work too: Open Rstudio Project (upper right corner) -&gt; New Project -&gt; Existing Directory. Navigate to the directory. (In your new project) Tools -&gt; Project options -&gt; Git/SVN -&gt; select git from the dropdown, initialize new repository. RStudio will need to restart. Navigate to your new Git tab on the top right. Screen capture video of the steps described above to create a git repository in RStudio The next step is to add our file to the repository. Using the command line, you can type in git add README (this tells git to track the file) and then commit your changes (enter them into the record) using git commit -m &quot;Add readme file&quot;. Using the GUI, you navigate to the git pane, check the box next to the README file, click the Commit button, write a message (“Add readme file”), and click the commit button. Screen capture video of the steps described above to add and commit a file in RStudio The final step is to create a corresponding repository on GitHub. Navigate to your GitHub profile and make sure you’re logged in. Create a new repository using the “New” button. Name your repository whatever you want, fill in the description if you want (this can help you later, if you forget what exactly a certain repo was for), and DO NOT add a README, license file, or anything else (if you do, you will have a bad time). You’ll be taken to your empty repository, and git will provide you the lines to paste into your git shell (or terminal) – you can access this within RStudio, as shown below. Paste those lines in, and you’ll be good to go. Connect your local git repository to GitHub 1.7.1.2 GitHub repository first In the GitHub-first method, you’ll create a repository in GitHub and then clone it to your local machine (clone = create an exact copy locally). GUI method: Log into GitHub and create a new repository Initialize your repository with a README Copy the repository location by clicking on the “Code” button on the repo homepage Open RStudio -&gt; Project -&gt; New Project -&gt; From version control. Paste your repository URL into the box. Hit enter. Make a change to the README file Click commit, then push your changes Check that the remote repository (Github) updated Video of the GUI method for creating a repository starting with GitHub Command line method: Log into GitHub and create a new repository Initialize your repository with a README Copy the repository location by clicking on the “Code” button on the repo homepage Navigate to the location you want your repository to live on your machine. Clone the repository by using the git shell or terminal: git clone &lt;your repo url here&gt;. In my case, this looks like git clone git@github.com:stat850-unl/hello-world-2.git Make a change to your README file and save the change Commit your changes: git commit -a -m &quot;change readme&quot; (-a = all, that is, any changed file git is already tracking). Push your changes to the remote (GitHub) repository and check that the repo has updated: git push 1.7.2 Adding files git add tells git that you want it to track a particular file. git add diagram: add tells git to add the file to the index of files git monitors. You don’t need to understand exactly what git is doing on the backend, but it is important to know that the actual contents of the file aren’t logged by git add - you have to commit your changes for the contents to change. git add deals solely with the index of files that git “knows about”, and what it thinks belongs in each commit. If you use the RStudio GUI for your git interface, you generally won’t have to do much with git add; it’s (sort-of, kind-of) equivalent to clicking the check box. 1.7.2.1 What files should I add to git? Git is built for tracking text files. It will (begrudgingly) deal with small binary files (e.g. images, PDFs) without complaining too much, but it is NOT meant for storing large files, and GitHub will not allow you to push anything that has a file larger than 100MB5. Larger files can be handled with git-lfs (large file storage), but storing large files online is not something you can get for free. In general, you should only add a file to git if you created it by hand. If you compiled the result, that should not be in the git repository under normal conditions (there are exceptions to this rule – this book is hosted on GitHub, which means I’ve pushed the compiled book to the GitHub repository). You should also be cautious about adding files like .Rprog, .directory, .DS_Store, etc. These files are used by your operating system or by RStudio, and pushing them may cause problems for your collaborators (if you’re collaborating). Tracking changes to these files also doesn’t really do much good. I highly recommend that you make a point to only add and commit files which you consciously want to track. 1.7.3 Staging your changes In RStudio, when you check a box next to the file name in the git tab, you are effectively adding the file (if it is not already added) AND staging all of the changes you’ve made to the file. In practice, git add will both add and stage all of the changes to any given file, but it is also useful in some cases to stage only certain lines from a file. More formally, staging is saying “I’d like these changes to be added to the current version, I think”. Before you commit your changes, you have to first stage them. You can think of this like going to the grocery store: you have items in your cart, but you can put them back at any point before checkout. Staging changes is like adding items to your cart; committing those changes is like checking out. Individually staging lines of a file is most useful in situations where you’ve made changes which should be part of multiple commits. To stage individual lines of a file, you can use git add -i at the command line, or you can attempt to use RStudio’s “stage selection” interface. Both will work, though git can’t always separate changes quite as finely as you might want (and as a result, RStudio’s interface sometimes seems unresponsive, even though the underlying issue is with what git can do). 1.7.4 Committing your changes A git commit is the equivalent of a log entry - it tells git to record the state of the file, along with a message about what that state means. On the back end, git will save a copy of the file in its current state to its cache. Here, we commit the red line as a change to our file. In general, you want your commit message to be relatively short, but also informative. The best way to do this is to commit small blocks of changes. Work to commit every time you’ve accomplished a small task. This will do two things: You’ll have small, bite-sized changes that are briefly described to serve as a record of what you’ve done (and what still needs doing) When you mess up (or end up in a merge conflict) you will have a much easier time pinpointing the spot where things went bad, what code was there before, and (because you have nice, descriptive commit messages) how the error occurred. 1.7.5 Pushing and Pulling When you’re working alone, you generally won’t need to worry about having to update your local copy of the repository (unless you’re using multiple machines). However, statistics is collaborative, and one of the most powerful parts of git is that you can use it to keep track of changes when multiple people are working on the same document. If you are working collaboratively and you and your collaborator are working on the same file, git will be able to resolve the change you make SO LONG AS YOU’RE NOT EDITING THE SAME LINE. Git works based on lines of text - it detects when there is a change in any line of a text document. For this reason, I find it makes my life easier to put each sentence on a separate line, so that I can tweak things with fewer merge conflicts. Merge conflicts aren’t a huge deal, but they slow the workflow down, and are best avoided where possible. Pulling describes the process of updating your local copy of the repository (the copy on your computer) with the files that are “in the cloud” (on GitHub). git pull (or using the Pull button in RStudio) will perform this update for you. If you are working with collaborators in real time, it is good practice to pull, commit, and push often, because this vastly reduces the merge conflict potential (and the scope of any conflicts that do pop up). Pushing describes the process of updating the copy of the repository on another machine (e.g. on GitHub) so that it has the most recent changes you’ve made to your machine. In general, your workflow will be Clone the project or create a new repository Make some changes Stage the changes with git add Commit the changes with git commit Pull any changes from the remote repository Resolve any merge conflicts Push the changes (and merged files) with git push If you’re working alone, steps 5 and 6 are not likely to be necessary, but it is good practice to just pull before you push anyways. 1.8 References Git “Hello World” Tutorial on GitHub Crash course on git (30 minute YouTube video) Git and GitHub for poets YouTube playlist (this is supposed to be the best introduction to Git out there…) More advanced git concepts, in comic form, by Erika Heidi As I write this in late July 2020, I do not yet have access to a Windows or Mac machine. Sigh. XXX TODO: Get Windows/Mac screenshots XXX↩ Yes, I’m aware that this sounds paranoid. It’s been a very rare occasion that I’ve needed to restore something from another backup. You don’t want to take chances. I knew a guy who had to retype his entire masters thesis from the printed out version the night before it was due because he had stored it on a network drive that was decommissioned. You don’t want to be that person.↩ Amusingly, knitr was written in much the same manner. Yihui Xie had to substitute-teach ISU’s version of 850 on the day we covered Sweave (a predecessor to knitr). He got so frustrated teaching the class that he went home and started writing knitr. Later, he developed Rmarkdown, bookdown, blogdown, and several other packages aimed at making writing documents + code easier to handle. Moral of the story - if you get frustrated with the tools you have, you’re in good company. Use it as fuel to make better tools.↩ Yes, I’m seriously pushing it with this book; several of the datasets are ~30 MB↩ "],
["intro-prog.html", "Module 2 Introduction to Statistical Programming A quick note on Rmarkdown Module Objectives Definitions Statistical Programming Languages 2.1 Variable types 2.2 Data structures 2.3 Control structures 2.4 Overgrown Calculators References and Links", " Module 2 Introduction to Statistical Programming The only way to learn how to program effectively is to take something that works, break it, and then fix it again. There’s plenty of theory and you should definitely learn that, but fundamentally, if you are not regularly breaking code, you’re probably not programming. Figure 2.1: This is basically the class summarized. The goal for this chapter (and several chapters to come) is that you can modify example code and adapt it to the problem at hand. This is the best way to learn how to program, but it means you may break the code and not know how to fix it. If that happens, please try the following steps: Google the error and see if you can understand why it happened. Consult with a classmate to see if they can understand where things broke. Post to the discussion board and see if anyone in the class can understand where things broke. (When you do this, post all of the code relevant to the problem, and the error you’re getting, so that your classmates can replicate the problem) If you do not hopelessly break code during this chapter, then please do your best to help others who may not have previously programmed (or previously programmed in these languages). While writing this chapter, I came across about 10 errors in SAS that I’d never encountered before. If all else fails, while you’re waiting for someone to help you figure out what an error message means… try this approach. A quick note on Rmarkdown In this module, you’ll be submitting homework in Rmarkdown using SASmarkdown chunks. I’ve structured the assignment so that you shouldn’t have to do much configuring of the markdown document itself, aside from providing the location of the SAS executable file on your hard drive (look for the SASHome directory). However, if you find yourself having issues with SASmarkdown, feel free to check out the section on markdown in next week’s module. The use of markdown for this week’s assignment is a “trust me, and you’ll get comfortable with this eventually” sort of thing. Module Objectives Identify variable types, data structures, and common reserved words in R and SAS Use control structures (loops and conditionals) effectively Use matrix algebra functionality in R and SAS to perform basic calculations More informally, the goal is to get familiar with the basics of each programming language, and to show you where to find references for how to use each command – because (at least) half of programming is knowing where to look something up. I’m teaching SAS very differently I’m definitely teaching SAS differently than it is normally taught. This is so that we don’t have to do half the semester in SAS and half in R - I’d rather teach the concepts and show you how they’re implemented than split them up by language. BUT, this means that some of the things we’re doing first in SAS are things you wouldn’t normally do until you were already proficient in SAS. It also means that SAS is probably going to seem even more oddly organized when taught this way than it actually is (and it is oddly organized, in my opinion). We’re going to start with SAS IML (programming concepts) and then talk about the DATA step. We’ll use some procedures implicitly along the way, but hopefully that will make sense in context. Then, we’ll work on the PROCs (SQL, Transpose, and graphing) - in greater detail. If you’ve used R or SAS a lot in the past Note: If you’ve programmed before, this chapter is going to seem very … boring. Sorry, there’s no help for that. Some of your classmates haven’t ever so much as written “Hello World”, and we have to get them up to speed. If you’re bored, or feel like you know this material, skim through it anyways just to confirm (and if I’m doing something that’s really out there, or there’s an easier way to do it, tell me!). Then you can either find something in the references that you don’t know already (the book Advanced R is always a great place to start if you want to be quickly confused), or help your classmates that are less experienced. Definitions Many programming resources talk about 3, or 5, or 10 core concepts in any programming language. In this module, we’re going to discuss the generic concepts, and then how these concepts are implemented in R and SAS. Interestingly, the “core concepts” aren’t necessarily the same across lists. So, here is a consensus list of concepts which are generic across languages and usually important Variables - a symbolic name or reference to some kind of information. In the expression a + b &gt; a, both a and b are variables. Variables may have a specific type (what data can be stored in the variable), scope (where the variable can be accessed), location (in memory). Here is a nice explanation of the difference between variables in programming and variables in math. Conditional statements (if statements) - These statements allow the program to handle information adaptively - if a statement is true, one set of instructions will be used, and if the statement is false, a different set of instructions will be used. Looping and iteration - An iteration is any time a sequence of steps is executed. Most languages have several different types of loops or iteration: for loops, which allow for the sequence of steps to be executed a specific number of times, while loops, which allow for the sequence of steps to be executed while a conditional statement is true, recursion, where a block of code calls itself. Data types and data structures - these concepts determine what information a variable can hold. Data types are lower-level, simple objects (floating-point numbers, integers, boolean T/F, characters, strings). Data structures may include lists (sequences of many objects) and vectors (sequences of many objects of the same type), dictionaries (a list of key-value pairs), objects (data structures which may hold multiple related pieces of information). Functions, or self-contained modules of code that accomplish a particular task. Syntax, the set of rules that define which combinations of symbols consist of correctly structured and interpretable commands in the language. Tools, the set of external programs which may help with development and writing code. Some common tools are IDEs (Integrated Development Environments), which may correct syntax and typos, organize files for you, allow you to keep track of which variables you have defined, and assist you with code organization and navigation. Other tools include compilers (which take human-written code and translate it into efficient machine code), version control systems (which help you track changes to code over time), debuggers, and documentation generators. Not all of these tools are necessary for all languages - scripting languages such as python and R do not require compilers by default, for instance. Sequence of commands: It’s important to have the right commands in the right order. Some recipes, like bread dough, are flexible, and you can add the ingredients in almost any order, but in other recipes, the order matters as much as the correct quantity of ingredients (try putting the cheese powder in before the noodles are boiled when making macaroni and cheese. Yuck.). Programming tends to be like these less flexible recipes. Statistical Programming Languages Having established the generic definitions of the concepts which apply to almost any programming language, we now must examine how R and SAS implement these concepts. R and SAS are both statistical programming languages - they are specifically designed to work with data, which means that they make compromises that other languages do not in order to make it easier to write code where the data (rather than the functions, classes, methods, or objects) are the primary concern. Both R and SAS have long histories. SAS in particular dates back to the 1960s, and has syntax which is unique compared to more modern languages such as C, python, Java, and R. R’s predecessor, S, dates back to 1976 and was designed for internal use at Bell Labs. The histories of both languages are useful in understanding why they are optimized for their respective tasks, but are not essential for this course (so read them at your leisure). The biggest difference between R and SAS (at a fundamental level) is that R is a functional language - it consists mainly of functions, which can (and do) manipulate objects, including other functions. SAS, on the other hand, is a procedural language - most SAS programs follow a specific series of steps, known as “proc”s. Procs are essentially functions (or compositions of multiple functions), but in SAS, it is simpler to think of an analysis as a series of procedural steps; in R, there are steps, but they may be implemented in a more flexible way (depending on the analysis). Another interesting feature of SAS is that it’s really several languages - some commands work in PROC IML (interactive matrix language) but not in a DATA step. When looking for help in SAS, make sure you’re referencing the correct part of the language documentation. Basic Syntax and Cheatsheets SAS Cheatsheet (from another class like this) SAS Cheatsheet (by SAS) R Cheatsheet - this is a simplified cheat sheet offered by RStudio. R Cheatsheet (classic) SAS Programming for R Users (free book) I kept the classic R reference card by my computer for about 5 years, and referenced it at least once or twice a day for that entire period. There will be other cheat sheets and reference cards scattered through this book because if you can’t remember something’s name, you might be able to remember where it is on the reference card (or at least, that’s how I learned R). 2.1 Variable types Variable types are sufficiently different in R and SAS that we will cover R first, then SAS. For a general overview, though, this video, titled ‘Why TRUE + TRUE = 2’ is an excellent introduction. 2.1.1 R In R, there are 4 commonly-used types: Type Description character holds text-based information: “abcd” or “3.24a” are examples of values which would be stored as characters in R logical holds binary information: 0/1, or FALSE/TRUE. Logical variables are stored as single bit information (e.g. either a 0 or 1), but display as TRUE and FALSE (which are reserved words and constants). integer holds (as you might expect) integers. Note that integers are handled differently than doubles (floating point numbers), but in general, R will implicitly convert integers to doubles to avoid common pitfalls with integer divison (which does not allow for decimals). double holds floating point numbers. By default, most numeric variables in R are doubles. You can test to see whether a variable holds a value of a specific type using the is.xxx() functions, which are demonstrated below. You can convert a variable of one type to another with as.xxx() functions. You can test what type a variable is using typeof(). Note that &lt;- is used for assigning a value to a variable. So x &lt;- &quot;R is awesome&quot; is read “x gets ‘R is awesome’” or “x is assigned the value ‘R is awesome’”. Character variables x &lt;- &quot;R is awesome&quot; typeof(x) [1] &quot;character&quot; is.character(x) [1] TRUE is.logical(x) [1] FALSE is.integer(x) [1] FALSE is.double(x) [1] FALSE Logical Variables x &lt;- FALSE typeof(x) [1] &quot;logical&quot; is.character(x) [1] FALSE is.logical(x) [1] TRUE is.integer(x) [1] FALSE is.double(x) [1] FALSE It is possible to use the shorthand F and T, but be careful with this, because F and T are not reserved, and other information can be stored within them. See this discussion for pros and cons of using F and T as variables vs. shorthand for true and false.6 Integer Variables x &lt;- 2 typeof(x) [1] &quot;double&quot; is.character(x) [1] FALSE is.logical(x) [1] FALSE is.integer(x) [1] FALSE is.double(x) [1] TRUE Wait, 2 is an integer, right? 2 is an integer, but in R, values are assumed to be doubles unless specified. So if we want R to treat 2 as an integer, we need to specify that it is an integer specifically. x &lt;- 2L # The L immediately after the 2 indicates that it is an integer. typeof(x) [1] &quot;integer&quot; is.character(x) [1] FALSE is.logical(x) [1] FALSE is.integer(x) [1] TRUE is.double(x) [1] FALSE is.numeric(x) [1] TRUE Double Variables x &lt;- 2.45 typeof(x) [1] &quot;double&quot; is.character(x) [1] FALSE is.logical(x) [1] FALSE is.integer(x) [1] FALSE is.double(x) [1] TRUE is.numeric(x) [1] TRUE Numeric Variables A fifth common “type”7, numeric is really the union of two types: integer and double, and you may come across it when using str() or mode(), which are similar to typeof() but do not quite do the same thing. The numeric category exists because when doing math, we can add an integer and a double, but adding an integer and a string is … trickier. Testing for numeric variables guarantees that we’ll be able to do math with those variables. is.numeric() and as.numeric() work as you would expect them to work. The general case of this property of a language is called implicit type conversion - that is, R will implicitly (behind the scenes) convert your integer to a double and then add the other double, so that the result is unambiguously a double. 2.1.1.1 Type Conversions R will generally work hard to seamlessly convert variables to different types. So, for instance, TRUE + 2 [1] 3 2L + 3.1415 [1] 5.1415 &quot;abcd&quot; + 3 Error in &quot;abcd&quot; + 3: non-numeric argument to binary operator This conversion doesn’t always work - there’s no clear way to make “abcd” into a number we could use in addition. So instead, R will issue an error. This error pops up frequently when something went wrong with data import and all of a sudden you just tried to take the mean of a set of string/character variables. Whoops. When you want to, you can also use as.xxx() to make the type conversion explicit. So, the analogue of the code above, with explicit conversions would be: as.double(TRUE) + 2 [1] 3 as.double(2L) + 3.1415 [1] 5.1415 as.numeric(&quot;abcd&quot;) + 3 Warning: NAs introduced by coercion [1] NA When we make our intent explicit (convert “abcd” to a numeric variable) we get an NA - a missing value. There’s still no easy way to figure out where “abcd” is on a number line, but our math will still have a result - NA + 3 is NA. If you are unsure what the type of a variable is, use the typeof() function to find out. w &lt;- &quot;a string&quot; x &lt;- 3L y &lt;- 3.1415 z &lt;- FALSE typeof(w) [1] &quot;character&quot; typeof(x) [1] &quot;integer&quot; typeof(y) [1] &quot;double&quot; typeof(z) [1] &quot;logical&quot; 2.1.1.2 Factors In R, there is one other type of variable to know about, and that is a factor. Factors are basically labeled integers. Instead of storing the data as a string or character, R instead stores the data as a series of integers, and then stores a separate table mapping the integers to labels. This is technically more efficient (which was important when computers had extremely limited memory), but it is also a pain in the rear (that’s a technical term). Factors are the default way to store characters for most base R functions. Or rather, they were. In R 4.0, the default way to read data in will change from stringsAsFactors = T to stringsAsFactors = F. You can read about why factors aren’t ideal here, which helps explain why this change was made. Depending on what version of R you have installed, you may run into errors related to factors, or not. Because R 4.0 is so new (released in May 2020) most of the tutorials online will probably have behavior that isn’t matched by your R installation. I’m new enough to R 4.0 that I’m not sure when factor related errors will pop up. Other reasons to learn factors besides for debugging purposes: They allow you to control the order of things in graphs, tables, and models They allow you to easily change category labels without having to sort through an entire data table … I’m sure there are more, but I’m drawing a blank at the moment Factors example In this example, we’ll use a data.frame, which you can think of as a spreadsheet-type table. We’ll work with data frames later in much more detail, but for now, I’m mostly trying to show you a real-life situation that happens ALL the time, with the hopes that you’ll recognize the error when/if you encounter it. The data frame isn’t the important part. Let’s look at the names of the months: month.name [1] &quot;January&quot; &quot;February&quot; &quot;March&quot; &quot;April&quot; &quot;May&quot; &quot;June&quot; [7] &quot;July&quot; &quot;August&quot; &quot;September&quot; &quot;October&quot; &quot;November&quot; &quot;December&quot; df &lt;- data.frame(num = 1:12, name = month.name, stringsAsFactors = T) # I&#39;m putting the argument in so that this is still relevant when everyone # switches to R 4.0. Even with stringsAsFactors = F, factors are still useful # and we still need to work with them. # # Any time you create a data frame in base R, you should be watchful for errors # that are based on strings being converted to factors. str(df) &#39;data.frame&#39;: 12 obs. of 2 variables: $ num : int 1 2 3 4 5 6 7 8 9 10 ... $ name: Factor w/ 12 levels &quot;April&quot;,&quot;August&quot;,..: 5 4 8 1 9 7 6 2 12 11 ... Notice that as soon as we make that data.frame, the months are converted into a factor variable? The other big problem is that the order of the factor levels is … not what we’d normally want. We don’t want alphabetical ordering of month names - they have a different, implicit, and natural order. We could get this same behavior without the data.frame, but this is where it shows up most often month_fct &lt;- factor(month.name) # the order is still not exactly what we&#39;d want it to be To fix this, we can explicitly specify that we’re dealing with a factor, and what we want the levels to be. If you specify the levels manually (instead of letting R do the work for you) then you get to determine the order. month_fct &lt;- factor(month.name, levels = month.name) str(month_fct) Factor w/ 12 levels &quot;January&quot;,&quot;February&quot;,..: 1 2 3 4 5 6 7 8 9 10 ... We can even be more explicit: month_fct &lt;- factor(month.name, levels = month.name, ordered = T) str(month_fct) Ord.factor w/ 12 levels &quot;January&quot;&lt;&quot;February&quot;&lt;..: 1 2 3 4 5 6 7 8 9 10 ... Making the factor ordered lets us explicitly say which levels are less than other levels. Factors are technically integers, with labels that are stored as an attribute. That doesn’t mean you can do math with them, though. month_fct[1] + month_fct[2] Warning in Ops.ordered(month_fct[1], month_fct[2]): &#39;+&#39; is not meaningful for ordered factors [1] NA Often, years or dates or other numeric-like information will end up as factor variables. When this happens, you need to be a little bit careful. # This works pretty naturally for months, right? as.numeric(month_fct) [1] 1 2 3 4 5 6 7 8 9 10 11 12 yfact &lt;- factor(2000:2020, levels = 2000:2020) yfact [1] 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 [16] 2015 2016 2017 2018 2019 2020 21 Levels: 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 ... 2020 # But, this does not... as.numeric(yfact) [1] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 as.character(yfact) # gets the labels [1] &quot;2000&quot; &quot;2001&quot; &quot;2002&quot; &quot;2003&quot; &quot;2004&quot; &quot;2005&quot; &quot;2006&quot; &quot;2007&quot; &quot;2008&quot; &quot;2009&quot; [11] &quot;2010&quot; &quot;2011&quot; &quot;2012&quot; &quot;2013&quot; &quot;2014&quot; &quot;2015&quot; &quot;2016&quot; &quot;2017&quot; &quot;2018&quot; &quot;2019&quot; [21] &quot;2020&quot; as.numeric(as.character(yfact)) # gets the info we want [1] 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 [16] 2015 2016 2017 2018 2019 2020 When converting factors with numeric labels, you need to first convert the factor to a character, and then to a numeric variable. That will get the information you actually want back out. Try It Out Create variables string, integer, decimal, and logical, with types that match the relevant variable names. string &lt;- integer &lt;- decimal &lt;- logical &lt;- Can you get rid of the error that occurs when this chunk is run? logical + decimal integer + decimal string + integer What happens when you add string to string? logical to logical? Solutions string &lt;- &quot;hi, I&#39;m a string&quot; integer &lt;- 4L decimal &lt;- 5.412 logical &lt;- TRUE logical + decimal [1] 6.412 integer + decimal [1] 9.412 as.numeric(string) + integer Warning: NAs introduced by coercion [1] NA &quot;abcd&quot; + &quot;defg&quot; Error in &quot;abcd&quot; + &quot;defg&quot;: non-numeric argument to binary operator TRUE + TRUE [1] 2 In R, adding a string to a string creates an error (“non-numeric argument to binary operator”). Adding a logical to a logical, e.g. TRUE + TRUE, results in 2, which is a numeric value. 2.1.2 SAS In SAS, there are two basic variable types: numeric and character variables. SAS does not differentiate between integers and floats and doubles. Functionally, though, the same basic operations can be performed in SAS. As with R, SAS does attempt to implicitly convert variable types, and will notify you that the conversion has taken place in the log file. 2.1.2.1 Type Conversions SAS will attempt to implicitly convert variables when: a character value is assigned to a previously defined numeric variable a character value is used in arithmetic operations a character value is compared to a numeric value using a comparison operator (&lt;, &gt;, &lt;=, &gt;=) a character value is specified in a function that takes numeric arguments Implicit conversion does not occur in WHERE statements. (This will make more sense later, but is here for reference) Manual type conversions If you want to manually convert a value, use the INPUT statement. Unlike in R, the INPUT statement has the ability to read numbers which are formatted differently. For instance proc printto log=&quot;saslog.log&quot; new; data set1; /* This tells SAS we&#39;re defining some variables */ x = 3; y = &#39;3.1415&#39;; z = x * y; /* this is arithmetic, so y will be converted */ x = &#39;3.14159&#39;; /* x previously had a number in it, */ /* so it will be converted to a number here */ zz = y&lt;=2; /* comparison operator: y will be converted */ put z; /* This prints the result to the log */ put x=; put zz=; run; Notice that in SAS, zz, which is the result of the logical statement y&lt;=2, is a numeric variable. The value 0 signifies that the comparison was false. SAS does not have a logical data type, it uses the numeric variable with 0:=FALSE, 1:=TRUE. NOTE: PROCEDURE PRINTTO used (Total process time): real time 0.00 seconds cpu time 0.00 seconds 7 data set1; /* This tells SAS we&#39;re defining some variables */ 8 x = 3; 9 y = &#39;3.1415&#39;; 10 z = x * y; 11 /* this is arithmetic, so y will be converted */ 12 x = &#39;3.14159&#39;; 13 /* x previously had a number in it, */ 14 /* so it will be converted to a number here */ 15 zz = y&lt;=2; 16 /* comparison operator: y will be converted */ 17 18 put z; /* This prints the result to the log */ 19 put x=; 20 put zz=; 21 run; NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column). 10:11 12:7 15:8 9.4245 x=3.14159 zz=0 NOTE: The data set WORK.SET1 has 1 observations and 4 variables. NOTE: DATA statement used (Total process time): real time 0.00 seconds cpu time 0.00 seconds Try it out Create variables string1 and string2 that each have text/character values. “Bob” and “Jane” might be good options. How does logical operation work with actual character values? What happens if you use string1 and add 3 to it? Solutions proc printto log=&quot;saslog.log&quot; new; data set1; string1 = &#39;Bob&#39;; string2 = &#39;Jane&#39;; x = string1 &lt; string2; put x=; /* This prints the result to the log */ run; NOTE: PROCEDURE PRINTTO used (Total process time): real time 0.00 seconds cpu time 0.00 seconds 8 data set1; 9 string1 = &#39;Bob&#39;; 10 string2 = &#39;Jane&#39;; 11 x = string1 &lt; string2; 12 put x=; /* This prints the result to the log */ 13 run; x=1 NOTE: The data set WORK.SET1 has 1 observations and 3 variables. NOTE: DATA statement used (Total process time): real time 0.00 seconds cpu time 0.01 seconds 14 SAS will actually compare strings based on the first letter: Bob comes before Jane, so Bob &lt; Jane. proc printto log=&quot;saslog.log&quot; new; data set2; string1 = &#39;Bob&#39;; y = string1 + 3; put y=; run; NOTE: PROCEDURE PRINTTO used (Total process time): real time 0.00 seconds cpu time 0.00 seconds 8 data set2; 9 string1 = &#39;Bob&#39;; 10 y = string1 + 3; 11 put y=; 12 run; NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column). 10:7 NOTE: Invalid numeric data, string1=&#39;Bob&#39; , at line 10 column 7. y=. string1=Bob y=. _ERROR_=1 _N_=1 NOTE: Missing values were generated as a result of performing an operation on missing values. Each place is given by: (Number of times) at (Line):(Column). 1 at 10:15 NOTE: The data set WORK.SET2 has 1 observations and 2 variables. NOTE: DATA statement used (Total process time): real time 0.00 seconds cpu time 0.00 seconds The . in SAS is a missing value (like NA in R). So SAS is behaving basically like R does: it complains about the fact that you asked it to add a string to a number, and then it stores the result as a missing value. 2.2 Data structures Data structures are more complex arrangements of information than single variables. Of primary interest in statistical programming are the following types of structures:   Homogeneous Heterogeneous 1d vector list 2d matrix data frame (R) or data set (SAS) nd array (R) In the table above, homogeneous means that all entries in the structure must be of the same type. Heterogeneous means that the entries are allowed to be of different types. Figuring out what to call these types with two languages is hard - in SAS, an array is a group of columns of a data set, but in R, it’s a multi-dimensional matrix. In this section, we’ll discuss the generic concepts relevant to both languages. The differences between the two languages will be discussed as appropriate. As there are more similarities than differences, it’s easier to do this in a single section rather than duplicating half of the content. 2.2.1 Homogeneous data structures (R and SAS) R does not have scalar types - even single-value variables are technically vectors of length 1. SAS does have scalar types. If we try to create a heterogeneous vector in R, using the concatenate function, c(), which combines scalar entries into a vector, what happens? c(1, 2, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;) [1] &quot;1&quot; &quot;2&quot; &quot;a&quot; &quot;b&quot; &quot;c&quot; Because there were 3 character entries, the entire vector is now a character vector. This behavior can cause some errors - for instance, R does not read in numeric data formatted with commas as numeric data. You may thus get the result x &lt;- c(356, 452, &quot;1,325&quot;) mean(x) Warning in mean.default(x): argument is not numeric or logical: returning NA [1] NA If you are reading in data from a file, this will cause some issues - the whole column of data will be formatted as characters. Keep an eye out for errors of this type. Jenny Bryan has an excellent set of images to demonstrate R data types as legos. She’s released them under an open license, so I am shamelessly stealing them. Logical vector Factor vector Integer and Numeric vectors These correspond to the 1-dimensional homogeneous data structures. Similarly, models can be made for 2-dimensional and 3-dimensional homogeneous data structures8: Vector (1D) Matrix (2D) Array (3D) 2.2.2 Heterogeneous data structures The heterogeneous data types are not much harder to grasp, as they’re mostly different ways to combine various homogeneous data types. 2.2.2.1 Lists A list is, well, a list - a sequence of potentially different-typed values. Unlike when concatenating values, the list() command in R allows each value to keep its natural type. You can access elements of a list using [] (this will extract a subset of the list items) or [[]], which will extract a single item from the list. (there will be more on this in the Indexing section below) Basic List Syntax in R x &lt;- list(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, 1, 2, 3) x [[1]] [1] &quot;a&quot; [[2]] [1] &quot;b&quot; [[3]] [1] &quot;c&quot; [[4]] [1] 1 [[5]] [1] 2 [[6]] [1] 3 x[[3]] [1] &quot;c&quot; x[[4]] + x[[5]] [1] 3 x[1:2] # This will work [[1]] [1] &quot;a&quot; [[2]] [1] &quot;b&quot; x[[1:2]] # This won&#39;t work Error in x[[1:2]]: subscript out of bounds The lego version of a list looks like this: Figure 2.2: A list of 4 vectors. Even though the vectors in the list are all the same size in this case, they don’t have to be, because they’re not organized in any sort of cohesive rectangle shape. A data frame (see below) is essentially a list where all of the components are vectors or lists of the same length. Indexing in Lists Some lists (and data frames) consist of named variables. These list components can be accessed either by index (as above) or by name, using the $ operator. Names which have spaces or special characters must be enclosed in backticks (next to the 1 on the keyboard). Named components can also be accessed using the [[ ]] operator. dog &lt;- list(name = &quot;Edison Vanderplas&quot;, age = 8, breed = &quot;Jack Russell Terrorist&quot;, `favorite toy` = &quot;a blue and orange stuffed duck. Or rawhide.&quot;, `link(video)` = &quot;https://youtu.be/zVeoQTOTIuQ&quot;) dog $name [1] &quot;Edison Vanderplas&quot; $age [1] 8 $breed [1] &quot;Jack Russell Terrorist&quot; $`favorite toy` [1] &quot;a blue and orange stuffed duck. Or rawhide.&quot; $`link(video)` [1] &quot;https://youtu.be/zVeoQTOTIuQ&quot; dog$name [1] &quot;Edison Vanderplas&quot; dog$breed [1] &quot;Jack Russell Terrorist&quot; dog$`favorite toy` [1] &quot;a blue and orange stuffed duck. Or rawhide.&quot; dog[[&quot;link(video)&quot;]] [1] &quot;https://youtu.be/zVeoQTOTIuQ&quot; You can get a sense of the structure of a list (or any other object) in R using the str() command. str(dog) List of 5 $ name : chr &quot;Edison Vanderplas&quot; $ age : num 8 $ breed : chr &quot;Jack Russell Terrorist&quot; $ favorite toy: chr &quot;a blue and orange stuffed duck. Or rawhide.&quot; $ link(video) : chr &quot;https://youtu.be/zVeoQTOTIuQ&quot; Recursive lists Lists can also contain other lists. When accessing a list-within-a-list, just add another index or name reference (see below). grocery_list &lt;- list( dairy = list(&quot;asiago&quot;, &quot;fontina&quot;, &quot;mozzarella&quot;, &quot;blue cheese&quot;), baking = list(&quot;flour&quot;, &quot;yeast&quot;, &quot;salt&quot;), canned_goods = list(&quot;pepperoni&quot;, &quot;pizza sauce&quot;, &quot;olives&quot;), meat = list(&quot;bacon&quot;, &quot;sausage&quot;, &quot;anchovies&quot;), veggies = list(&quot;bell pepper&quot;, &quot;onion&quot;, &quot;scallions&quot;, &quot;tomatoes&quot;, &quot;basil&quot;) ) ick &lt;- c(grocery_list[[4]][2:3], grocery_list$canned_goods[[3]]) ick [[1]] [1] &quot;sausage&quot; [[2]] [1] &quot;anchovies&quot; [[3]] [1] &quot;olives&quot; crust_ingredients &lt;- c(grocery_list$baking, &quot;water&quot;) crust_ingredients [[1]] [1] &quot;flour&quot; [[2]] [1] &quot;yeast&quot; [[3]] [1] &quot;salt&quot; [[4]] [1] &quot;water&quot; essential_toppings &lt;- c(grocery_list$dairy[3], grocery_list$canned_goods[2]) essential_toppings [[1]] [1] &quot;mozzarella&quot; [[2]] [1] &quot;pizza sauce&quot; yummy_toppings &lt;- c(grocery_list$dairy[c(1, 2, 4)], grocery_list$meat[1], grocery_list[[5]][c(3, 5)]) yummy_toppings [[1]] [1] &quot;asiago&quot; [[2]] [1] &quot;fontina&quot; [[3]] [1] &quot;blue cheese&quot; [[4]] [1] &quot;bacon&quot; [[5]] [1] &quot;scallions&quot; [[6]] [1] &quot;basil&quot; Basic List Syntax in SAS There are also lists in SAS IML which function similarly to lists in R. To create a named object in a list, precede the name with #. In SAS, the $ operator can be used to get items from a list, using either name or numeric references. proc iml; grocery_list = [ #dairy = [&quot;asiago&quot;, &quot;fontina&quot;, &quot;mozzarella&quot;, &quot;blue cheese&quot;], #baking = [&quot;flour&quot;, &quot;yeast&quot;, &quot;salt&quot;], #canned = [&quot;pepperoni&quot;, &quot;pizza sauce&quot;, &quot;olives&quot;], #meat = [&quot;bacon&quot;, &quot;sausage&quot;, &quot;anchovies&quot;], #veggies= [&quot;bell pepper&quot;, &quot;onion&quot;, &quot;scallions&quot;, &quot;tomatoes&quot;, &quot;basil&quot;] ]; /* print only works on matrices and vectors */ /* so we&#39;ll cheat and load another library to print lists */ package load ListUtil; /* run ListPrint(grocery_list); */ /* This would print the thing, but it&#39;s long */ ick = [grocery_list$&quot;canned&quot;$3, grocery_list$4$2, grocery_list$4$3]; crust = grocery_list$&quot;baking&quot;; call ListAddItem(crust, &quot;water&quot;); /* add an item to a list */ essential_toppings = [grocery_list$&quot;dairy&quot;$3, grocery_list$&quot;canned&quot;$2]; yummy_toppings = [grocery_list$&quot;dairy&quot;$1, grocery_list$&quot;dairy&quot;$2, grocery_list$&quot;dairy&quot;$4, grocery_list$&quot;meat&quot;$1, grocery_list$5$3] ; /* The || is a concatenation operator, like c(). */ /* It is inefficient for large data sets */ run ListPrint(ick); run ListPrint(crust); run ListPrint(yummy_toppings); quit; ——— List = ick——— Item 1 olives Item 2 sausage Item 3 anchovies ——— List = crust——— Item 1 flour Item 2 yeast Item 3 salt Item 4 water ——— List = yummy_toppings——— Item 1 asiago Item 2 fontina Item 3 blue cheese Item 4 bacon Item 5 scallions Try it out Using the list of pizza toppings above as a starting point, make your own list of pizza toppings organized by grocery store section (approximately). Create your own vectors of yummy, essential, and ick toppings, using R and SAS. 2.2.2.2 Data frames (R only) A data frame is a special type of list - one in which each element in the list is a vector of the same length. If you put these vectors side-by-side, you get a table of data that looks like a spreadsheet. The lego version of a data frame looks like this: Figure 2.3: A data frame with data frame 4 columns. A data frame is essentially a list where all of the components are vectors or lists, and are constrained to have the same length. Basic Data Frame Syntax When you examine the structure of a data frame, as shown below, you get each column shown in a row, with its type and the first few values in the column. The head() command shows the first 6 rows of a data frame (enough to see what’s there, not enough to overflow your screen). head(mtcars) ## A data frame included in base R mpg cyl disp hp drat wt qsec vs am gear carb Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1 str(mtcars) &#39;data.frame&#39;: 32 obs. of 11 variables: $ mpg : num 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... $ cyl : num 6 6 4 6 8 6 8 4 4 6 ... $ disp: num 160 160 108 258 360 ... $ hp : num 110 110 93 110 175 105 245 62 95 123 ... $ drat: num 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... $ wt : num 2.62 2.88 2.32 3.21 3.44 ... $ qsec: num 16.5 17 18.6 19.4 17 ... $ vs : num 0 0 1 1 0 1 0 1 1 1 ... $ am : num 1 1 1 0 0 0 0 0 0 0 ... $ gear: num 4 4 4 3 3 3 3 4 4 4 ... $ carb: num 4 4 1 1 2 1 4 2 2 4 ... You can change column values or add new columns easily using assignment. It’s also easy to access specific columns to perform summary operations. mtcars$gpm &lt;- 1/mtcars$mpg # gpm is sometimes used to assess efficiency summary(mtcars$gpm) Min. 1st Qu. Median Mean 3rd Qu. Max. 0.02950 0.04386 0.05208 0.05423 0.06483 0.09615 summary(mtcars$mpg) Min. 1st Qu. Median Mean 3rd Qu. Max. 10.40 15.43 19.20 20.09 22.80 33.90 Often, it is useful to know the dimensions of a data frame. The number of rows can be obtained by using nrow(df) and similarly, the columns can be obtained using ncol(df) (or, get both with dim()). There is also an easy way to get a summary of each column in the data frame, using summary(). summary(mtcars) mpg cyl disp hp Min. :10.40 Min. :4.000 Min. : 71.1 Min. : 52.0 1st Qu.:15.43 1st Qu.:4.000 1st Qu.:120.8 1st Qu.: 96.5 Median :19.20 Median :6.000 Median :196.3 Median :123.0 Mean :20.09 Mean :6.188 Mean :230.7 Mean :146.7 3rd Qu.:22.80 3rd Qu.:8.000 3rd Qu.:326.0 3rd Qu.:180.0 Max. :33.90 Max. :8.000 Max. :472.0 Max. :335.0 drat wt qsec vs Min. :2.760 Min. :1.513 Min. :14.50 Min. :0.0000 1st Qu.:3.080 1st Qu.:2.581 1st Qu.:16.89 1st Qu.:0.0000 Median :3.695 Median :3.325 Median :17.71 Median :0.0000 Mean :3.597 Mean :3.217 Mean :17.85 Mean :0.4375 3rd Qu.:3.920 3rd Qu.:3.610 3rd Qu.:18.90 3rd Qu.:1.0000 Max. :4.930 Max. :5.424 Max. :22.90 Max. :1.0000 am gear carb gpm Min. :0.0000 Min. :3.000 Min. :1.000 Min. :0.02950 1st Qu.:0.0000 1st Qu.:3.000 1st Qu.:2.000 1st Qu.:0.04386 Median :0.0000 Median :4.000 Median :2.000 Median :0.05208 Mean :0.4062 Mean :3.688 Mean :2.812 Mean :0.05423 3rd Qu.:1.0000 3rd Qu.:4.000 3rd Qu.:4.000 3rd Qu.:0.06483 Max. :1.0000 Max. :5.000 Max. :8.000 Max. :0.09615 dim(mtcars) [1] 32 12 nrow(mtcars) [1] 32 ncol(mtcars) [1] 12 Missing variables in an R data frame are indicated with NA. Creating an R data frame math_and_lsd &lt;- data.frame(lsd_conc = c(1.17, 2.97, 3.26, 4.69, 5.83, 6.00, 6.41), test_score = c(78.93, 58.20, 67.47, 37.47, 45.65, 32.92, 29.97)) math_and_lsd lsd_conc test_score 1 1.17 78.93 2 2.97 58.20 3 3.26 67.47 4 4.69 37.47 5 5.83 45.65 6 6.00 32.92 7 6.41 29.97 # add a column - character vector math_and_lsd$subjective &lt;- c(&quot;finally coming back&quot;, &quot;getting better&quot;, &quot;it&#39;s totally better&quot;, &quot;really tripping out&quot;, &quot;is it over?&quot;, &quot;whoa, man&quot;, &quot;I can taste color, but I can&#39;t do math&quot;) math_and_lsd lsd_conc test_score subjective 1 1.17 78.93 finally coming back 2 2.97 58.20 getting better 3 3.26 67.47 it&#39;s totally better 4 4.69 37.47 really tripping out 5 5.83 45.65 is it over? 6 6.00 32.92 whoa, man 7 6.41 29.97 I can taste color, but I can&#39;t do math Try it out The dataset state.x77 contains information on US state statistics in the 1970s. By default, it is a matrix, but we can easily convert it to a data frame, as shown below. data(state) state_facts &lt;- data.frame(state.x77) state_facts &lt;- cbind(state = row.names(state_facts), state_facts, stringsAsFactors = F) # State names were stored as row labels # Store them in a variable instead, and add it to the data frame row.names(state_facts) &lt;- NULL # get rid of row names head(state_facts) state Population Income Illiteracy Life.Exp Murder HS.Grad Frost Area 1 Alabama 3615 3624 2.1 69.05 15.1 41.3 20 50708 2 Alaska 365 6315 1.5 69.31 11.3 66.7 152 566432 3 Arizona 2212 4530 1.8 70.55 7.8 58.1 15 113417 4 Arkansas 2110 3378 1.9 70.66 10.1 39.9 65 51945 5 California 21198 5114 1.1 71.71 10.3 62.6 20 156361 6 Colorado 2541 4884 0.7 72.06 6.8 63.9 166 103766 How many rows and columns does it have? Can you find at least 3 ways to get that information? The Illiteracy column contains the percent of the population of each state that is illiterate. Calculate the number of people in each state who are illiterate, and store that in a new column called TotalNumIlliterate. Note: Population contains the population in thousands. Calculate the average population density of each state (population per square mile) and store it in a new column PopDensity. Using the R reference card, can you find functions that you can combine to get the state with the minimum population density? Solutions # 3 ways to get rows and columns str(state_facts) &#39;data.frame&#39;: 50 obs. of 9 variables: $ state : chr &quot;Alabama&quot; &quot;Alaska&quot; &quot;Arizona&quot; &quot;Arkansas&quot; ... $ Population: num 3615 365 2212 2110 21198 ... $ Income : num 3624 6315 4530 3378 5114 ... $ Illiteracy: num 2.1 1.5 1.8 1.9 1.1 0.7 1.1 0.9 1.3 2 ... $ Life.Exp : num 69 69.3 70.5 70.7 71.7 ... $ Murder : num 15.1 11.3 7.8 10.1 10.3 6.8 3.1 6.2 10.7 13.9 ... $ HS.Grad : num 41.3 66.7 58.1 39.9 62.6 63.9 56 54.6 52.6 40.6 ... $ Frost : num 20 152 15 65 20 166 139 103 11 60 ... $ Area : num 50708 566432 113417 51945 156361 ... dim(state_facts) [1] 50 9 nrow(state_facts) [1] 50 ncol(state_facts) [1] 9 # Illiteracy state_facts$TotalNumIlliterate &lt;- state_facts$Population * 1e3 * (state_facts$Illiteracy/100) # Population Density state_facts$PopDensity &lt;- state_facts$Population * 1e3/state_facts$Area # in people per square mile # minimum population state_facts$state[which.min(state_facts$PopDensity)] [1] &quot;Alaska&quot; Advanced Data Frames: Tibbles and List-columns If at this point you’re bored because you’ve seen this material before, keep reading to find out about tibbles, list columns and other ways to make data frames even more powerful. Tibbles A tibble is a fancy data frame that is optimized to work with the tidyverse, which is a collection of R packages that make data wrangling (getting the data clean and ready for analysis) easier. You can read about tibbles here. You like data frames? Lists? Let’s put some lists inside a data frame! (All about list columns) Let’s start with the lego picture: (The full explanation is available in slide form here). A list is just another object that could be stored in a data frame! It is a “generalized vector” in that each entry in a list can be thought of as another list - so a list is really a vector of lists. List-columns make it possible to store e.g. whole data sets in a nested, organized way. Another useful feature is that each entry in a list-column doesn’t have to be the same length, which makes it easier to store “ragged” data. You can see a couple of examples here (but they assume that you know things that you’ll only learn in a few modules). Data Sets (SAS) The SAS data set structure is similar to a R data frame. In SAS, missing values are indicated with . SAS datasets also come with a description which is attached to the table. The descriptor portion of the data set records names of variables (and attributes), numbers of observations, and date/time stamps of creation and updates. Creating a SAS data set In the next code chunk, we’ll create a data set using a SAS Data step. We’ll talk more about the anatomy of a SAS command later, but for now, notice that I’m specifying some metadata (the title), telling SAS what the variable names are (Drugs, Score), and then providing some data (indicated by the datalines statement). /* Data source: http://blog.yhat.com/posts/7-funny-datasets.html */ data mathMJ; title &#39;Average math test scores under the influence of LSD&#39;; input Drugs Score; datalines; 1.17 78.93 2.97 58.20 3.26 67.47 4.69 37.47 5.83 45.65 6.00 32.92 6.41 29.97 ; /* Describe the dataset */ proc datasets; contents data = mathMJ; run; proc print data = mathMJ; run; Average math test scores under the influence of LSD Directory Libref WORK Engine V9 Physical Name /tmp/SAS_workE23B0000715B_silicon Filename /tmp/SAS_workE23B0000715B_silicon Inode Number 12855666 Access Permission rwx—— Owner Name susan File Size 4KB File Size (bytes) 4096 # Name Member Type File Size Last Modified 1 MATHMJ DATA 128KB 08/23/2020 09:24:16 2 SASMAC3 CATALOG 20KB 08/23/2020 09:24:16 Average math test scores under the influence of LSD Data Set Name WORK.MATHMJ Observations 7 Member Type DATA Variables 2 Engine V9 Indexes 0 Created 08/23/2020 09:24:16 Observation Length 16 Last Modified 08/23/2020 09:24:16 Deleted Observations 0 Protection Compressed NO Data Set Type Sorted NO Label Data Representation SOLARIS_X86_64, LINUX_X86_64, ALPHA_TRU64, LINUX_IA64 Encoding latin1 Western (ISO) Engine/Host Dependent Information Data Set Page Size 65536 Number of Data Set Pages 1 First Data Page 1 Max Obs per Page 4061 Obs in First Data Page 7 Number of Data Set Repairs 0 Filename /tmp/SAS_workE23B0000715B_silicon/mathmj.sas7bdat Release Created 9.0401M6 Host Created Linux Inode Number 12855669 Access Permission rw-rw-r– Owner Name susan File Size 128KB File Size (bytes) 131072 Alphabetic List of Variables and Attributes # Variable Type Len 1 Drugs Num 8 2 Score Num 8 Average math test scores under the influence of LSD Obs Drugs Score 1 1.17 78.93 2 2.97 58.20 3 3.26 67.47 4 4.69 37.47 5 5.83 45.65 6 6.00 32.92 7 6.41 29.97 The last two blocks are SAS procedures (PROCs). In the first block, I’m asking SAS to describe the contents of the mathMJ dataset. In the second block, I’m telling SAS to print the whole mathMJ dataset out. 2.2.3 Indexing The 1, 2, and multi-dimensional homogeneous data types should be familiar from e.g. linear algebra and calculus. Single elements of a vector can be extracted using single square brackets, e.g. x[1] will get the first element of the vector x. In a matrix, elements are indexed as row, column, so to get the (2, 2) entry of a matrix x, you would use x[2,2]. This is extended for multi-dimensional arrays in R, with each dimension added, e.g. x[3,1,2] or x[4, 3, 2, 1]. To get a full row or column from a matrix (in both SAS and R) you would use x[1,] (get the first row) or x[,3] (get the 3rd column). To select multiple rows or columns from a matrix, you would use x[, c(1, 3)] in R or x[,{1 3}] in SAS - both options get the first and third column of the matrix, with all rows of data included. In both R and SAS, a:b where a and b are numbers will form a sequence from a to b by 1s. So 1:4 is 1, 2, 3, 4. This is often used to get a set of rows or columns: x[3:4, 1:2]. R matrix example x &lt;- matrix(1:20, nrow = 5, byrow = T) # Create a matrix with values 1 to 20, 5 rows, and fill by row x [,1] [,2] [,3] [,4] [1,] 1 2 3 4 [2,] 5 6 7 8 [3,] 9 10 11 12 [4,] 13 14 15 16 [5,] 17 18 19 20 x[3:4, 1:2] [,1] [,2] [1,] 9 10 [2,] 13 14 # Gets a submatrix SAS matrix example In SAS, the same basic code works (though matrix definition is a bit more manual). proc iml; /* Interactive Matrix Language */ x = {1 2 3 4 5, 6 7 8 9 10, 11 12 13 14 15, 16 17 18 19 20}; y = x[3:4, 1:2]; print x; /* Here, print is used instead of put */ print y; quit; /* exit proc IML */ x 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 y 11 12 16 17 Both R and SAS are 1-indexed languages, so the elements of a list or vector are indexed as 1, 2, 3, 4, …9 As R has logical vectors, it is possible to index a vector using a logical vector of the same length. Try it out (From project Euler) If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000. Hint: The modulo operator, %%, gives the integer remainder of one number divided by another. So a %% b gives the integer remainder when dividing a by b. Modular division is often used to find multiples of a number. R solution x &lt;- 1:999 # all nums below 1000 m3 &lt;- (x %% 3) == 0 # multiple of 3 m5 &lt;- (x %% 5) == 0 # multiple of 5 m3or5 &lt;- m3 | m5 sum(x[m3or5]) [1] 233168 SAS solution data tmp; do x = 1 to 999; output; end; run; proc summary data=tmp; /* Summarize data */ where (mod(x, 3) = 0) | (mod(x, 5) = 0); /* Keep only obs where x is divisible by 3 or 5 */ var x; /* what variable we want the summary for */ output out=sum_x sum=; /* output sum_x to a new dataset */ run; proc print data = sum_x; /* print our sum_x dataset */ run; Obs TYPE FREQ x 1 0 466 233168 Note on the SAS code: where statements allow you to select part of the data for further processing. There was a note earlier about the fact that type conversion doesn’t happen in where clauses… this is one of those clauses. We’ll get into where clauses in more detail later, in module 5. Most complicated structures in R are actually lists underneath. You should be able to access any of the pieces of a list using a combination of named references and indexing. If you have trouble distinguishing between $, [, and [[, you’re not alone. The R for Data Science book has an excellent illustration, which I will summarize for you here in abbreviated form (pictures directly lifted from the book). R4DS indexing illustration x x[1] x[[1]] x[[1]][[1]] 2.3 Control structures 2.3.1 If statements If statements are just about as simple in programming as they are in real life. Figure 2.4: Source. I’ve actually met some programmers who talk like this in real life. General structure of an if statement In general, the structure of an if statement is if (condition) then { # do something here } If the condition is true, the inner code will be executed. Otherwise, nothing happens. You can add an else statement that will execute if the condition is not true if (condition) then { # do something } else { # do a different thing } And in some languages, you can even have many sets of if statements: if (condition) { # do something } else if (condition 2) { # do something else } else { # do a third thing } Note that this could also be written (perhaps more clearly) as: if (condition) { # do something } else { if (condition 2) { # do something else } else { # do a third thing } } That is, condition 2 is only checked once it is known that condition is false. Often, programmers use logic flow maps, like the one shown below, to map out a logical sequence and ensure that every possible value is handled appropriately. Example: If/then logic in SAS and R The syntax for conditional statements using if/then logic is shown below using an example where Santa must determine which members of a household will receive a toy for Christmas and which members will receive coal.10 In R tmp &lt;- data.frame(name = c(&quot;Alex&quot;, &quot;Edison&quot;, &quot;Susan&quot;, &quot;Ryan&quot;), status = c(&quot;naughty&quot;, &quot;nice&quot;, NA, &quot;neutral&quot;), stringsAsFactors = F) # Santa&#39;s decision process if (tmp$status == &quot;naughty&quot;) { tmp$present &lt;- &quot;coal&quot; } else { tmp$present &lt;- &quot;toy&quot; } Warning in if (tmp$status == &quot;naughty&quot;) {: the condition has length &gt; 1 and only the first element will be used tmp name status present 1 Alex naughty coal 2 Edison nice coal 3 Susan &lt;NA&gt; coal 4 Ryan neutral coal What happened? When evaluating if statements, R does not evaluate each entry in the vector tmp$status separately. Instead, it takes the first value and issues a warning message. One option would be to use a loop, and examine each row in the data set separately. We’ll talk about loops in the next subsection. Another option is to use the ifelse() function, which is ifelse(condition, thing to do if condition is true, thing to do if condition is false) tmp$present &lt;- ifelse(tmp$status == &quot;naughty&quot;, &quot;coal&quot;, &quot;toy&quot;) tmp name status present 1 Alex naughty coal 2 Edison nice toy 3 Susan &lt;NA&gt; &lt;NA&gt; 4 Ryan neutral toy When R evaluates a missing value, (so ? NA == “naughty”), the result is NA. This is fine for us - if we don’t have data on whether someone is naughty or nice, maybe we don’t need to give them a present at all. But “neutral” is evaluated as getting a toy. Do we want that to happen? Maybe not. We might have to nest ifelse statements to solve this issue… tmp$present &lt;- ifelse(tmp$status == &quot;naughty&quot;, &quot;coal&quot;, ifelse(tmp$status == &quot;nice&quot;, &quot;toy&quot;, NA)) tmp name status present 1 Alex naughty coal 2 Edison nice toy 3 Susan &lt;NA&gt; &lt;NA&gt; 4 Ryan neutral &lt;NA&gt; In SAS In a data step: data santa; input name $ status $; datalines; Edison nice Alex naughty Susan . Ryan neutral ; /* Modify santa_list and make a new dataset, present_list */ data presents; set santa; if status = &quot;naughty&quot; then present = &quot;coal&quot;; else present = &quot;toy&quot;; run; /* must end with run if no datalines option */ proc print data=presents; run; Obs name status present 1 Edison nice toy 2 Alex naughty coal 3 Susan toy 4 Ryan neutral toy Note that ., or missing data is handled the same as ‘nice’. That might not be what we wanted… this is the natural thing to do, right? data santa; input name $ status $; datalines; Edison nice Alex naughty Susan . Ryan neutral ; /* Modify santa_list and make a new dataset, present_list */ data presents; set santa; if status = &quot;naughty&quot; then present = &quot;coal&quot;; else (if status = &quot;nice&quot; then present = &quot;toy&quot; else present = .); run; /* must end with run if no datalines option */ proc print data=presents; run; SAS doesn’t handle nested if statements very well - they can be ambiguous. Instead, SAS documentation suggests using do; and end; to denote the start and end points of each if statement (like the {} in R). data santa; input name $ status $; datalines; Edison nice Alex naughty Susan . Ryan neutral ; data presents; set santa; if status = &quot;naughty&quot; then do; present = &quot;coal&quot;; end; else if status = &quot;nice&quot; then do; present = &quot;toy&quot;; end; else do; present = .; end; run; proc print data=presents; run; Obs name status present 1 Edison nice toy 2 Alex naughty coal 3 Susan . 4 Ryan neutral . Interestingly, if you set a character variable to be missing, SAS converts it to ‘.’. So, if we actually want to have the value be missing, we can set it to an empty string. data santa; input name $ status $; datalines; Edison nice Alex naughty Susan . Ryan neutral ; data presents; set santa; if status = &quot;naughty&quot; then do; present = &quot;coal&quot;; end; else if status = &quot;nice&quot; then do; present = &quot;toy&quot;; end; else do; present = &#39;&#39;; end; run; proc print data=presents; run; Obs name status present 1 Edison nice toy 2 Alex naughty coal 3 Susan 4 Ryan neutral Now things work the way we expected them to work. There are more complicated if-statement like control structures, such as switch statements, which can save time and typing. In the interests of simplicity, we will skip these for now, as any conditional can be implemented with sequences of if statements in the proper order. If you would like to read about switch statements, here are links to SAS case statement documentation and base R switch statement explanation and documentation. Try it out The sample() function selects a random sample of entries from a vector. Suppose we sample a random vector \\(x\\) with 10 entries. Write one or more if statements to fulfill the following conditions if \\(x\\) is divisible by 2, \\(y\\) should be positive; otherwise, it should be negative. if \\(x\\) is divisible by 3, \\(y\\) should have a magnitude of 2; otherwise, it should have a magnitude of 1. It may be helpful to define separate variables y_mag and y_sign and then multiply them afterwards. Once you have found the value of \\(y\\) compute \\(\\text{sum}(x * y)\\). You may use the following R and SAS code skeletons to set the problem up. set.seed(342502837) x &lt;- sample(1:50, size = 20, replace = F) # Conditional statements go here sum(x * y) [1] 1567.609 proc iml; call randseed(342502837); x = sample(1:50, 20)`; create sampledata from x [colname = &quot;x&quot;]; append from x; close; quit; data xy; set sampledata; /* Conditional statements go here */ /* Leave this so that the code below works */ res = x * y; run; proc summary data=xy; /* Summarize data */ var res; /* what variable we want the summary for */ output out=tmpsum sum=; /* output tmpsum to a new dataset */ run; proc print data = xy; /* print our original dataset to check result */ var x y res; sum res; run; proc print data = tmpsum; /* print our tmpsum dataset */ run; R Solution set.seed(342502837) x &lt;- sample(1:50, size = 20, replace = F) y_sign &lt;- ifelse(x %% 2 == 0, 1, -1) y_mag &lt;- ifelse(x %% 3 == 0, 2, 1) y &lt;- y_sign * y_mag sum(x * y) [1] 157 SAS Solution proc iml; call randseed(342502837); x = sample(1:50, 20)`; create sampledata from x [colname = &quot;x&quot;]; append from x; close; quit; data xy; set sampledata; y_sign = 0 * x; y_mag = 0 * x; /* Conditional statements go here */ if MOD(x, 2) = 0 then y_sign = 1; else y_sign = -1; if MOD(x, 3) = 0 then y_mag = 2; else y_mag = 1; y = y_sign * y_mag; res = x * y; run; proc summary data=xy; /* Summarize data */ var res; /* what variable we want the summary for */ output out=tmpsum sum=; /* output tmpsum to a new dataset */ run; proc print data = xy; /* print our original dataset to check result */ var x y res; sum res; run; proc print data = tmpsum; /* print our tmpsum dataset */ run; Obs x y res 1 44 1 44 2 42 2 84 3 1 -1 -1 4 7 -1 -7 5 42 2 84 6 13 -1 -13 7 27 -2 -54 8 19 -1 -19 9 41 -1 -41 10 16 1 16 11 6 2 12 12 44 1 44 13 26 1 26 14 48 2 96 15 22 1 22 16 15 -2 -30 17 40 1 40 18 1 -1 -1 19 27 -2 -54 20 13 -1 -13 235 Obs TYPE FREQ res 1 0 20 235 See this to understand how the print statement works and how to add column summary values. 2.3.2 Loops Often, we need to do a single task many times - for instance, we may need to calculate the average data value for each week, using daily data. Rather than typing out 52 different iterations of the same code, it is likely easier to type out one single block of code which contains the steps necessary to complete one instance of the task, and then leverage variables to ensure that each task is completed the correct number of times, using the correct inputs. Let us start with the most generic loop written in pseudocode (code that won’t work, but provides the general idea of the steps which are taken) loop_invocation(iteration variable, exit condition) { # Steps to repeat } We use the loop_invocation function to indicate what type of loop we use. We have at least one iteration variable that indicates where in the looping process we currently are. This may be an index (if we want to do something 500 times, it would take values from 1 to 500), or it may take a more complicated sequence of values (for instance, if we are testing convergence, we might put some sort of delta variable as the iteration variable). Most loops also have an explicit exit condition that is part of the loop invocation; more rarely, a loop may depend on break statements that cause the control flow of the code to exit. Without some sort of exit condition, our program would run forever, which is… not optimal. 2.3.2.1 Count controlled loops (FOR loops) In a for loop, the steps in the loop body repeat a specified number of times. That is, for each value in a sequence, the steps within the loop are repeated. Example: Santa and if/else + loops in R (plus some debugging strategies) For instance, suppose we want to revisit our R Santa example from the previous section. The original if/else code we wrote in R didn’t work, because R evaluates if statements using a single (scalar or vector of length 1) condition. If we add a loop around that code, we can evaluate only one row at a time. We need to check every row, so we’ll iterate over 1:nrow(tmp) - it’s better to get the upper bound from the data frame, rather than just using 4 - if we add another entry, the code will still work if we’re using nrow(tmp) to define how many iterations we need. We start by defining our data frame: tmp &lt;- data.frame(name = c(&quot;Alex&quot;, &quot;Edison&quot;, &quot;Susan&quot;, &quot;Ryan&quot;), status = c(&quot;naughty&quot;, &quot;nice&quot;, NA, &quot;neutral&quot;), stringsAsFactors = F) And then we add the basic loop syntax: for (i in 1:nrow(tmp)) { } For some reason, i is often used as the iteration variable (with j and k for nested loops). What this loop says is that i will first take on the value 1, then 2, then 3, then 4. On each iteration, i will advance to the next value in the vector of options we have provided. Now we need to add the middle part by adapting the conditional statement we used before so that it looks at only the ith row. I’ve also added the catch-all else condition that assigns NA for any value that isn’t “naughty” or “nice”. It’s good practice to initialize your variable (create a column for it) ahead of time and set the variable to a default value. tmp$present &lt;- NA # Initialize column and set to NA by default for (i in 1:nrow(tmp)) { # Santa&#39;s decision process if (tmp$status[i] == &quot;naughty&quot;) { tmp$present[i] &lt;- &quot;coal&quot; } else if (tmp$status[i] == &quot;nice&quot;) { tmp$present[i] &lt;- &quot;toy&quot; } else { tmp$present[i] &lt;- NA_character_ # use a special NA value that has # character type to avoid any issues } } Error in if (tmp$status[i] == &quot;naughty&quot;) {: missing value where TRUE/FALSE needed Well, that didn’t work! We can see that the loop stopped at i = 3 by printing out the value of i - because the loop failed, i will still contain the value which caused the loop to stop. i [1] 3 tmp[i,] # print tmp at that point name status present 3 Susan &lt;NA&gt; &lt;NA&gt; Combining this information with the error above, we can guess that R stopped evaluating the loop because the if statement returned NA (missing) instead of TRUE or FALSE. if/else statements in R can’t evaluate to NA, so we need to restructure our conditional statement - first, we’ll test for NA values, then, we can test for naughty and nice, and we’ll keep the catch-all statement at the bottom. We’ll test for an NA value using the function is.na(). tmp$present &lt;- NA # Initialize column and set to NA by default for (i in 1:nrow(tmp)) { # Santa&#39;s decision process if (is.na(tmp$status[i])) { tmp$present[i] &lt;- NA_character_ } else if (tmp$status[i] == &quot;naughty&quot;) { tmp$present[i] &lt;- &quot;coal&quot; } else if (tmp$status[i] == &quot;nice&quot;) { tmp$present[i] &lt;- &quot;toy&quot; } else { tmp$present[i] &lt;- NA_character_ } } tmp name status present 1 Alex naughty coal 2 Edison nice toy 3 Susan &lt;NA&gt; &lt;NA&gt; 4 Ryan neutral &lt;NA&gt; Now the if/else logic works exactly as intended. This is longer than the version using ifelse(), but it is perhaps more readable. In most cases in R and SAS, it is possible to write code without needing loops at all, because both languages are vector-based - they will often use vectorized functions which implicitly loop over each row without having to write a loop to do so. ifelse() is a vectorized version of if() {} else {}. Here is an example of the most basic for loop logic - printing the numbers 1 through 10 - in both R and SAS. SAS code is provided for both PROC IML and DATA steps. For loops in R # R Example loop for (i in 1:10) { print(i) } [1] 1 [1] 2 [1] 3 [1] 4 [1] 5 [1] 6 [1] 7 [1] 8 [1] 9 [1] 10 “For loops” in SAS IML (using do) /* SAS IML example loop */ proc iml; do i = 1 to 10; print i; end; /* This ends the loop definition */ quit; i 1 i 2 i 3 i 4 i 5 i 6 i 7 i 8 i 9 i 10 “For loops” in a SAS DATA step /* SAS DATA step example loop */ proc printto log=&quot;saslog.log&quot; new; /* shows output log in bookdown */ data A; do i = 1 to 10; put i=; end; /* This ends the loop definition */ run; NOTE: PROCEDURE PRINTTO used (Total process time): real time 0.00 seconds cpu time 0.00 seconds 4 data A; 5 do i = 1 to 10; 6 put i=; 7 end; /* This ends the loop definition */ 8 run; i=1 i=2 i=3 i=4 i=5 i=6 i=7 i=8 i=9 i=10 NOTE: The data set WORK.A has 1 observations and 1 variables. NOTE: DATA statement used (Total process time): real time 0.00 seconds cpu time 0.00 seconds Another explanation of for loops is available at Khan Academy. While the most straighforward (and common) case of for-loop use in practice is to count from 1 to N, both R and SAS allow for loops to use other sequence structures. Other sequences in loops in R R allows loops to occur over any vector… even randomly generated numbers, or nonnumeric vectors (say, a character vector of URLs). x &lt;- rnorm(5) # Generate 5 normal (0,1) samples for (i in x) { print(i^2) } [1] 4.500349 [1] 3.820737 [1] 2.656216 [1] 1.120775 [1] 2.10086 We can also iterate by non-integer values using seq(from = , to = , by = ) # This loop counts down in 1/2 units from 5 to 0 for (i in seq(5, 0, -.5)) { # do nothing } Other sequence structures in SAS for loops We can iterate by non-integer values: proc printto log=&quot;saslog.log&quot; new; /* to shows output log in bookdown */ data A; y = 0; do i = 5 to 0 by -0.5; put i=; end; run; NOTE: PROCEDURE PRINTTO used (Total process time): real time 0.00 seconds cpu time 0.00 seconds 3 data A; 4 y = 0; 5 do i = 5 to 0 by -0.5; 6 put i=; 7 end; 8 run; i=5 i=4.5 i=4 i=3.5 i=3 i=2.5 i=2 i=1.5 i=1 i=0.5 i=0 NOTE: The data set WORK.A has 1 observations and 2 variables. NOTE: DATA statement used (Total process time): real time 0.00 seconds cpu time 0.00 seconds We can even add additional conditions: proc printto log=&quot;saslog.log&quot; new; /* to shows output log in bookdown */ data A; y = 0; do i = 5 to 0 by -0.5 while (i**2 &gt; 1); put i=; end; run; NOTE: PROCEDURE PRINTTO used (Total process time): real time 0.00 seconds cpu time 0.00 seconds 3 data A; 4 y = 0; 5 do i = 5 to 0 by -0.5 while (i**2 &gt; 1); 6 put i=; 7 end; 8 run; i=5 i=4.5 i=4 i=3.5 i=3 i=2.5 i=2 i=1.5 NOTE: The data set WORK.A has 1 observations and 2 variables. NOTE: DATA statement used (Total process time): real time 0.00 seconds cpu time 0.00 seconds Try it out (in R) The beepr package plays sounds in R to alert you when your code has finished running (or just to annoy your friends and classmates). (Documentation) We’ll learn more about packages in the next chapter, but for now, just go with it. You can install the package using the following command: install.packages(&quot;beepr&quot;) (if you are using Linux you will also need to make sure one of paplay, aplay, or vlc is installed) Load the library and write a for loop which plays the 10 different sounds corresponding to integers 1 through 10. library(beepr) # load the beepr library beep(sound = 1) # sound is any integer between 1 and 10. It may be helpful to add the command Sys.sleep(5) into your loop to space out the noises so that they can be heard individually. Solution library(beepr) for (i in 1:10) { beep(sound = i) Sys.sleep(5) } Try it out (in SAS) Write a for loop which will output the first 30 fibbonacci numbers. You can use the following code as a starting point: /* SAS IML example loop */ proc iml; current = 1; prev = 0; quit; Solution /* SAS IML example loop */ proc iml; current = 1; prev = 0; do i = 1 to 30; new = current + prev; prev = current; current = new; print current; end; /* This ends the loop definition */ quit; current 1 current 2 current 3 current 5 current 8 current 13 current 21 current 34 current 55 current 89 current 144 current 233 current 377 current 610 current 987 current 1597 current 2584 current 4181 current 6765 current 10946 current 17711 current 28657 current 46368 current 75025 current 121393 current 196418 current 317811 current 514229 current 832040 current 1346269 2.3.2.2 Condition-controlled loops (WHILE, DO WHILE) Frequently, we do not know how many times a loop will need to execute a priori. We might be converging on a value, and want to repeat the calculation until the new value is within an acceptably epsilon of the previous iteration. In these cases, it can be helpful to use a WHILE loop, which loops while the condition is true (another variant, the do-while loop, is similar, except that a do-while loop will always execute once, and checks the condition at the end of the iteration). If a WHILE loop condition is never falsified, the loop will continue forever. Thus, it is usually wise to include a loop counter as well, and a condition to terminate the loop if the counter value is greater than a certain threshold. Example: Let’s solve the Basel problem in R and SAS using WHILE loops - we’ll repeat the calculation until the value changes by less than 0.000001. The Basel problem is the problem of calculating the precise infinite summation \\[\\sum_{n=1}^\\infty \\frac{1}{n^2}\\] We’ll stick to calculating it computationally. In R # Start out by defining your starting values outside of the loop i &lt;- 1 basel_value &lt;- 0 # initial guess prev_basel_value &lt;- -Inf # previous value while (abs(basel_value - prev_basel_value) &gt; 0.000001) { prev_basel_value &lt;- basel_value # update condition basel_value &lt;- basel_value + 1/i^2 i &lt;- i + 1 # Prevent infinite loops if (i &gt; 1e6) { break } # Monitor the loop to know that it&#39;s behaving if (i %% 200 == 0) { print(c(&#39;i = &#39; = i, &#39;prev&#39; = prev_basel_value, &#39;current&#39; = basel_value, diff = basel_value - prev_basel_value)) } } i = prev current diff 2.000000e+02 1.639896e+00 1.639922e+00 2.525189e-05 i = prev current diff 4.000000e+02 1.642425e+00 1.642431e+00 6.281368e-06 i = prev current diff 6.000000e+02 1.643263e+00 1.643266e+00 2.787060e-06 i = prev current diff 8.000000e+02 1.643682e+00 1.643683e+00 1.566414e-06 i = prev current diff 1.000000e+03 1.643933e+00 1.643934e+00 1.002003e-06 i [1] 1001 basel_value [1] 1.643935 prev_basel_value [1] 1.643934 In SAS proc iml; i = 1; basel = 0; prev = -1; do while((basel - prev) &gt; 1e-6); prev = basel; basel = basel + 1/i**2; /* ** is the exponent operator */ i = i + 1; if i &gt; 1e6 then do; leave; end; if MOD(i, 200) = 0 then do; print i, prev, basel; end; end; print i, basel; quit; i 200 prev 1.6398963 basel 1.6399215 i 400 prev 1.6424247 basel 1.6424309 i 600 prev 1.6432632 basel 1.643266 i 800 prev 1.6436817 basel 1.6436833 i 1000 prev 1.6439326 basel 1.6439336 i 1001 basel 1.6439346 Another explanation of while loops is available at Khan Academy. Try it out Write a while loop in R and in SAS to calculate \\(\\displaystyle \\lim_{x \\rightarrow 4} \\frac{2 - \\sqrt{x}}{4-x}\\) by starting at 3 and halving the distance to 4 with each iteration. Exit the loop when you are within 1e-6 of the value computed on the previous iteration, or when you are within 1e-6 from 4. Which exit condition did you hit first? How do you know? Solutions: x &lt;- 3 dist &lt;- 4 - x current_value &lt;- 0 prev_value &lt;- -Inf while (abs(current_value - prev_value) &gt; 1e-6 &amp; dist &gt; 1e-6) { prev_value &lt;- current_value dist &lt;- dist/2 x &lt;- 4 - dist current_value &lt;- (2 - sqrt(x))/(4-x) } c(x = x, dist = dist, current_value = current_value, d_value = abs(current_value - prev_value)) x dist current_value d_value 3.999939e+00 6.103516e-05 2.500010e-01 9.536961e-07 Before \\(x\\) got to 4 - 1e-6, the change in f(x) became less than 1e-6. proc iml; x = 3; dist = 4 - x; fx = 0; prev_fx = 1; dfx = abs(fx - prev_fx); do while(dfx &gt; 1e-6 &amp; dist &gt; 1e-6); prev_fx = fx; dist = dist/2; x = 4 - dist; fx = (2 - sqrt(x))/(4 - x); dfx = abs(fx - prev_fx); end; print x, dist, fx, dfx; quit; x 3.999939 dist 0.000061 fx 0.250001 dfx 9.537E-7 2.3.2.3 Other Loops and Interative Structures There are many different ways to implement iteration in any language, including very low-level controls like repeat (in R). Higher level iteration may include a FOREACH loop, where a series of commands is applied to a list or vector (the *apply commands in R are examples of this). An additional method of iteration that requires functions is the recursion (where a function calls itself). In every case, these alternative loop structures can be translated to for or while loops. 2.4 Overgrown Calculators While R and SAS are both extremely powerful statistical programming languages, the core of both languages is the ability to do basic calculations and matrix arithmetic. As almost every dataset is stored as a matrix-like structure (data sets and data frames both allow for multiple types, which isn’t quite compatible with more canonical matrices), it is useful to know how to do matrix-level calculations in R and SAS. In this section, we will essentially be using both R and SAS as overgrown calculators. Operation R SAS Addition + + Subtraction - - Elementwise Multiplication * # Matrix/Vector Multiplication %*% * Division \\ \\ Elementwise Exponentiation ^ ## Matrix Exponentiation ^ ** Matrix Transpose t(A) `A\\`` R basic mathematical operators # transpose these to make row vectors to match SAS x &lt;- t(1:10) y &lt;- t(seq(3, 30, by = 3)) x + y [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [1,] 4 8 12 16 20 24 28 32 36 40 x - y [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [1,] -2 -4 -6 -8 -10 -12 -14 -16 -18 -20 x * y [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [1,] 3 12 27 48 75 108 147 192 243 300 x / y [,1] [,2] [,3] [,4] [,5] [,6] [,7] [1,] 0.3333333 0.3333333 0.3333333 0.3333333 0.3333333 0.3333333 0.3333333 [,8] [,9] [,10] [1,] 0.3333333 0.3333333 0.3333333 x^2 [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [1,] 1 4 9 16 25 36 49 64 81 100 t(x) %*% y [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [1,] 3 6 9 12 15 18 21 24 27 30 [2,] 6 12 18 24 30 36 42 48 54 60 [3,] 9 18 27 36 45 54 63 72 81 90 [4,] 12 24 36 48 60 72 84 96 108 120 [5,] 15 30 45 60 75 90 105 120 135 150 [6,] 18 36 54 72 90 108 126 144 162 180 [7,] 21 42 63 84 105 126 147 168 189 210 [8,] 24 48 72 96 120 144 168 192 216 240 [9,] 27 54 81 108 135 162 189 216 243 270 [10,] 30 60 90 120 150 180 210 240 270 300 SAS basic mathematical operators By default, SAS creates row vectors with do(a, b, by = c) syntax. The transpose operator (a single backtick) can be used to transform A into A`. proc iml; x = do(1, 10, 1); y = do(3, 30, 3); z = x + y; z2 = x - y; z3 = x # y; z4 = x/y; z5 = x##2; z6 = x` * y; print z, z2, z3, z4, z5, z6; quit; z COL1 COL2 COL3 COL4 COL5 COL6 COL7 COL8 COL9 COL10 ROW1 4 8 12 16 20 24 28 32 36 40 z2 COL1 COL2 COL3 COL4 COL5 COL6 COL7 COL8 COL9 COL10 ROW1 -2 -4 -6 -8 -10 -12 -14 -16 -18 -20 z3 COL1 COL2 COL3 COL4 COL5 COL6 COL7 COL8 COL9 COL10 ROW1 3 12 27 48 75 108 147 192 243 300 z4 COL1 COL2 COL3 COL4 COL5 COL6 COL7 COL8 COL9 COL10 ROW1 0.3333333 0.3333333 0.3333333 0.3333333 0.3333333 0.3333333 0.3333333 0.3333333 0.3333333 0.3333333 z5 COL1 COL2 COL3 COL4 COL5 COL6 COL7 COL8 COL9 COL10 ROW1 1 4 9 16 25 36 49 64 81 100 z6 COL1 COL2 COL3 COL4 COL5 COL6 COL7 COL8 COL9 COL10 ROW1 3 6 9 12 15 18 21 24 27 30 ROW2 6 12 18 24 30 36 42 48 54 60 ROW3 9 18 27 36 45 54 63 72 81 90 ROW4 12 24 36 48 60 72 84 96 108 120 ROW5 15 30 45 60 75 90 105 120 135 150 ROW6 18 36 54 72 90 108 126 144 162 180 ROW7 21 42 63 84 105 126 147 168 189 210 ROW8 24 48 72 96 120 144 168 192 216 240 ROW9 27 54 81 108 135 162 189 216 243 270 ROW10 30 60 90 120 150 180 210 240 270 300 Other matrix operations, such as determinants and extraction of the matrix diagonal, are similarly easy: R matrix operations mat &lt;- matrix(c(1, 2, 3, 6, 4, 5, 7, 8, 9), nrow = 3, byrow = T) t(mat) # transpose [,1] [,2] [,3] [1,] 1 6 7 [2,] 2 4 8 [3,] 3 5 9 det(mat) # get the determinant [1] 18 diag(mat) # get the diagonal [1] 1 4 9 diag(diag(mat)) # get a square matrix with off-diag 0s [,1] [,2] [,3] [1,] 1 0 0 [2,] 0 4 0 [3,] 0 0 9 diag(1:3) # diag() also will create a diagonal matrix if given a vector [,1] [,2] [,3] [1,] 1 0 0 [2,] 0 2 0 [3,] 0 0 3 SAS matrix operations proc iml; mat = {1 2 3, 6 4 5, 7 8 9}; tmat = mat`; /* transpose */ determinant = det(mat); /* get the determinant */ diagonal_vector = vecdiag(mat); /* get the diagonal as a vector */ diagonal_mat = diag(mat); /* get the diagonal as a square matrix */ /* with 0 on off-diagonal entries */ dm = diag({1 2 3}); /* make a square matrix with vector as the diagonal */ print tmat, determinant, diagonal_vector, diagonal_mat, dm; quit; tmat 1 6 7 2 4 8 3 5 9 determinant 18 diagonal_vector 1 4 9 diagonal_mat 1 0 0 0 4 0 0 0 9 dm 1 0 0 0 2 0 0 0 3 The other important matrix-related function is the inverse. In R, A^-1 will get you the elementwise reciprocal of the matrix. Not exactly what we’d like to see… Instead, in both languages, we use the solve() function. The inverse is defined as the matrix B such that AB = I where I is the identity matrix (1’s on diagonal, 0’s off-diagonal). So if we solve(A) (in R) or solve(A, diag(n)) in SAS (where n is a vector of 1s the size of A), we will get the inverse matrix. Invert a matrix in R mat &lt;- matrix(c(1, 2, 3, 6, 4, 5, 7, 8, 9), nrow = 3, byrow = T) minv &lt;- solve(mat) # get the inverse minv [,1] [,2] [,3] [1,] -0.2222222 0.3333333 -0.1111111 [2,] -1.0555556 -0.6666667 0.7222222 [3,] 1.1111111 0.3333333 -0.4444444 mat %*% minv [,1] [,2] [,3] [1,] 1 0 0 [2,] 0 1 0 [3,] 0 0 1 Invert a matrix in SAS Documentation proc iml; mat = {1 2 3, 6 4 5, 7 8 9}; mat_inv = solve(mat, diag({1 1 1})); /* get the inverse */ mat_inv2 = inv(mat); /* less efficient and less accurate */ print mat_inv, mat_inv2; id = mat * mat_inv; id2 = mat * mat_inv2; print id, id2; quit; mat_inv -0.222222 0.3333333 -0.111111 -1.055556 -0.666667 0.7222222 1.1111111 0.3333333 -0.444444 mat_inv2 -0.222222 0.3333333 -0.111111 -1.055556 -0.666667 0.7222222 1.1111111 0.3333333 -0.444444 id 1 -2.22E-16 0 0 1 0 0 -8.88E-16 1 id2 1 -2.22E-16 0 0 1 0 0 -8.88E-16 1 References and Links Non-exhaustive list of general R and SAS references used in this chapter: SAS Matrix reference SAS Data set documentation Creating SAS Data Sets from IML (also this friendly guide and this blog post) SAS Data Step options SAS Mathematical Operators Lists and Data Structures in SAS Loops in SAS and SAS documentation for DO WHILE loops Random number generation in SAS SAS and R compared (by SAS) Repeatable random number generation in R Data structures in Advanced R 2.4.1 Cheat Sheets and Reference Cards SAS Cheatsheet (from another class like this) SAS Cheatsheet (by SAS) R Cheatsheet - this is a simplified cheat sheet offered by RStudio. R Cheatsheet (classic) SAS Programming for R Users (free book) and github site with training materials R programming for SAS users - site for the book, plus link to a free early version of the book (the book is now published) 2.4.2 SAS (as taught in other places) Introduction to SAS - Undergraduate course at Penn State Intermediate SAS - Undergraduate course at Penn State Advanced SAS - Undergraduate course at Penn State 2.4.3 R courses (as taught elsewhere) and Textbooks Stat 579 at Iowa State (as taught by Heike Hofmann) Stat 545 at Univ. British Columbia (developed by Jenny Bryan) R for Data Science - R textbook (free) by Hadley Wickham and Garret Grolemund Advanced R by Hadley Wickham 2.4.4 Combination of R and SAS courses Stat 850 as taught by Chris Bilder at UNL 2.4.5 Non-Exhaustive List of Sources used to aggregate “core programming concepts”: https://blog.upperlinecode.com/computer-language-fundamentals-five-core-concepts-1aa43e929f40 https://howtoprogramwithjava.com/programming-101-the-5-basic-concepts-of-any-programming-language/ https://dev.to/lucpattyn/basic-programming-concepts-for-beginners-2o73 http://livecode.byu.edu/programmingconcepts/ControlStruct.php http://holowczak.com/programming-concepts-tutorial-programmers/ There is also an R package dedicated to pure evil that will set F and T randomly on startup. Use this information wisely.↩ numeric is not really a type, it’s a mode. Run ?mode for more information.↩ While there are both Duplo and Lego in my house, my toddler is a lot more willing to share than my husband, so Duplo will have to do.↩ Most languages are 0-indexed languages: C, C++, python, Java, javascript. Vectors in these languages are indexed as 0, 1, 2, 3. Other 1-indexed languages include FORTRAN, Matlab, Julia, Mathematica, and Lua, many of which were intended for mathematical processing or data analysis.↩ Traditionally, naughty children get coal, while nice children get toys or candy.↩ "],
["organization.html", "Module 3 Organization: Packages, Functions, Scripts, and Documents Module Objectives 3.1 Reproducibility 3.2 Markdown and R 3.3 Functions and Modules 3.4 Procs and Data steps 3.5 Scripts 3.6 Packages References and Links", " Module 3 Organization: Packages, Functions, Scripts, and Documents Module Objectives Use markdown to create dynamic documents which show code and results reproducibly Create functions and scripts to accomplish simple tasks Compare the structure and syntax of R and SAS programs Know where to find external software packages or modules to provide additional functionality 3.1 Reproducibility The concepts of replication and reproducibility is central to science - we do not trust studies whose results cannot be replicated by additional repetitions of the experiment, and we do not trust statistical analyses whose results are not backed up by valid methods that can be re-run to verify the reported results. While replication covers the lab methods, experimental design, and data collection procedures, reproducibility is concerned with the code and the data from an experiment which has already been run. Specifically, the idea is that the research paper is basically an advertisement - by exposing the code and data used in the analysis, readers can engage with the core of the analysis methods, leading to better peer feedback as well as easier adoption of the research for future work. Reproducibility has several advantages: It allows you to show the correctness of your results Trying to reproduce an analysis from the data and the description in the journal article is… challenging, if not impossible, in many cases. By providing the raw data and code to take the data from raw form to analysis results, readers can verify the legitimacy of each step in the analysis. This allows researchers to review each others methods, finding mistakes due to bugs in the software used or due to implementation errors. In one particularly prominent failure of reproducibility, a study used to support macroeconomic theories that shaped the response to the 2008-2009 recession negatively correlating national debt with gdp growth was found to be flawed due to an excel indexing mistake. Use of GUI-based (graphical user interface) statistical analysis software may make it harder to identify these mistakes, because the formulas and code are not visually displayed. It allows others to use your results more easily By sharing your code and raw data, you provide the wider scientific community with the ability to use your results to build new scientific studies. This increases the relevance of your work, the number of citations your papers get, and you also benefit from the community adopting a culture of openness and reproducibility. In 2 years, when you need to find the code you used for that analysis in XXX paper, you’ll be able to find the code (and the data) to see how it worked and what you did. The code may or may not run as-is (depending on software versioning, package updates, etc.), but you will have the methods clearly documented along with the data (so it’s easy to replicate the data format needed, etc.) There are other advantages (personal and public) described in an issue of Biostatistics dedicated to reproducibility. David Donoho’s response is particularly useful. As you might expect, there are many different types of reproducibility. Code reproducibility - allows replication of the computing aspects of the study. Includes code, software, hardware, and implementation details. Data reproducibility - allows replication of the non-computational parts of the study (e.g. experiment and data collection). This may include making protocols and data available. Statistical reproducibility - allows replication of the statistical methods. Includes details about model parameters, thresholds, etc. and may also include study pre-registration to prevent p-hacking. There are also many levels of reproducibility. Much of the computer code written in the 1960s is no longer runnable today, because the computer architecture it was written for is not available anymore. Code which depends on URLs is vulnerable to website rearrangements or the content no longer being hosted. Archiving projects on GitHub is nice, but what happens if GitHub goes down? It’s important to decide what type of reproducibility is important for a particular project, and then design the project’s workflow around that process. For most of my projects, I don’t worry about software versioning (I may archive my sessionInfo() so that package versions are documented) and storing the software packages alongside the code and data. As much as possible, I keep the code and the data (if it’s small) on GitHub in a public repository for people to access, along with any manuscripts or presentations related to the project. Manuscripts are written in knitr or r markdown, so that the code is documented by the context of the project, and every image in the article generated by R has corresponding code available. This ensures that my code (and data) is stored somewhere off-site (backed up in the cloud) my code is available if others want to use it I can track my contributions to a project relative to any collaborators I can undo changes that I make if something in the code breaks. I can undo changes my collaborators inadvertently make because all changes are recorded. I can reuse blocks of code easily (and find them easily on GitHub) In situations where I run experiments, I also make sure that any experimental stimuli or other code that would contribute to the execution and data collection part of the experiment is also included in the repository. This may involve archiving intermediate results that would not normally be archived so that exact stimuli can be regenerated “just in case”. The github reproducibility work flow is convenient - it allows for me to easily collaborate with others, without emailing versions of code and documents back and forth or dealing with Dropbox version conflicts. I can revert changes that are made that had unintentional effects fairly easily. I can sync my files across multiple machines effortlessly. And if necessary, I can look back at the changes I’ve made and see why I made them, or what I’ve already tried. Reproducibility References and Reading I highly recommend scanning these resources to get a good sense of the different ways the word “reproducibility” is used in the literature. Advanced R’s reproducibility guide A reproducible R workflow ROpenSci’s guide to reproducibility Roger Peng’s Biostatistics editorial on reproducibility The Biostatistics reproducibility issue w/ responses to the editorial and associated commentary 3.2 Markdown and R In this class, we’re primarily going to use rmarkdown to create dynamic documents. Markdown itself is a special style of text that is intended to allow you to do basic formatting without having to pause to actually click the buttons (if you were writing in word). It integrates equation functionality (so you can type mathematical equations using LaTeX syntax) and also allows for the use of templates (so you can write whole journal articles in a text editor). Markdown is also program agnostic - it will allow you to compile your work into HTML, word, or PDF form. Markdown documents must be compiled - a computer program runs and transforms the text file into a full document. RStudio has markdown functionality built-in, and also supports rmarkdown, which is a markdown variant designed to make it easy to integrate R code with document creation (so-called literate programming). There are other markdown programs which extend markdown’s functionality so that you can write a book (like this one), create presentations or posters, or maintain a blog in markdown. Rmarkdown, despite the name, also allows you to integrate the results from code in other languages. As you saw in the last chapter, SAS code can be integrated into markdown as well. Other languages commonly used include python, julia, SQL, Bash, C++, and Stan. There is a full set of Rmarkdown tutorials from RStudio. There is also a handy cheatsheet. Or, you can take the “jump right in” approach - open RStudio, File -&gt; New -&gt; Rmarkdown document. To compile it, click the knit button in the bar at the top of the text editor window. Make changes to the text and the R code, compile it, and see what happens. Voila! You’re a markdow expert! Rmarkdown documents may contain code used to support an analysis, but they are usually not the best way to develop an analysis method - they are better for documentation, writing tutorials, and other scenarios where you need both text explanations and code/analysis/results. There are other “containers” for code, though, including functions, scripts, and packages. Each has their own advantages and disadvantages, and can be used together. 3.2.1 Rmarkdown with… SAS? You may have noticed that I’ve been including SAS chunks throughout this book, and even in your homework assignments. Here’s how that’s set up. SAS in Rmarkdown – guide. It’s really fairly easy, which surprised me – I was expecting it to be a lot more involved to set SASmarkdown up. 3.3 Functions and Modules A function (or a module, in SAS) is a block of code which is only run when it is called. It takes arguments (known as parameters) and returns data or some other value. There is some extensive material on this subject in R for Data Science on functions. If you aren’t familiar with functions, you should read that material before proceeding. Let’s look at the structure of a generic function in pseudocode (code that isn’t really part of any language, but describes the steps of a program): my_function_name = function(param1, param2 = 3) { step1 // do something step2 // do something else return step_1/step2 } The first part of a function declaration (storing information in a named object) is the function’s intended name, my_function_name. Then, we indicate that we are defining a function, and what parameters our function requires. For param1, we do not provide a default value, but for param2, we indicate that the default value is 3. Thus, if we call the function (tell the program to run this function with certain arguments and provide the result), we could either say my_function_name(param1 = value1, param2 = value2) or my_function_name(param1 = value1) (which is equivalent to my_function_name(param1 = value1, param2 = 3)). In R, you can even say my_function_name(value1, value2) and the assumption is that you’ve supplied the parameters in the correct order.11 Inside the function block (indicated by {} here, but some languages may use do ... end;), we perform whatever steps we’ve decided to include in the function, and then at the end of the function, we return a value - the function exits, and leaves behind some information. In R, functions look like this: function( arglist ) { expr return(value) } In SAS, functions are called modules. The documentation for a module is below: Statements That Define and Execute Modules Modules are used to create a user-defined subroutine or function. A module definition begins with a START statement, which has the following general form: START &lt;name&gt; &lt;( arguments )&gt; &lt;GLOBAL( arguments )&gt;; A module definition ends with a FINISH statement, which has the following general form: FINISH &lt;name&gt;; To execute a module, you can use either a RUN statement or a CALL statement. The general forms of these statements are as follows: `RUN &lt;name&gt; &lt;( arguments)&gt;; `CALL &lt;name&gt; &lt;( arguments)&gt;;` The only difference between the RUN and CALL statements is the order of resolution. Source: SAS function reference Let’s try functions out by writing a simple function that takes two numbers as arguments and adds them together. adder &lt;- function(a, b) { return(a + b) } adder(3, 4) [1] 7 proc IML; start adder(a, b); return(a + b); finish; c = adder(3, 4); /* In IML, you can use the function like this as well */ print c; quit; c 7 Of course, it’s not just important to be able to write your own functions. It’s also helpful to be able to see how functions are written, both to explore how a method is implemented and for debugging purposes. In SAS, this is generally not an option, because SAS is closed source, but in R, you can see the code behind any function which is implemented in R (it is harder to see functions implemented in C or C++, but not impossible) by typing the function name (no parentheses) into the command prompt. Let’s examine how the colSums() function is implemented colSums function (x, na.rm = FALSE, dims = 1L) { if (is.data.frame(x)) x &lt;- as.matrix(x) if (!is.array(x) || length(dn &lt;- dim(x)) &lt; 2L) stop(&quot;&#39;x&#39; must be an array of at least two dimensions&quot;) if (dims &lt; 1L || dims &gt; length(dn) - 1L) stop(&quot;invalid &#39;dims&#39;&quot;) n &lt;- prod(dn[id &lt;- seq_len(dims)]) dn &lt;- dn[-id] z &lt;- if (is.complex(x)) .Internal(colSums(Re(x), n, prod(dn), na.rm)) + (0+1i) * .Internal(colSums(Im(x), n, prod(dn), na.rm)) else .Internal(colSums(x, n, prod(dn), na.rm)) if (length(dn) &gt; 1L) { dim(z) &lt;- dn dimnames(z) &lt;- dimnames(x)[-id] } else names(z) &lt;- dimnames(x)[[dims + 1L]] z } &lt;bytecode: 0x55c4b6605c00&gt; &lt;environment: namespace:base&gt; You can see that the first 3 steps in the function are if statements to test whether the inputs are acceptable - x must be a data frame, a matrix, or an array (with 2+ dimensions). The next couple of lines test to see whether there are additional “column” dimensions (don’t worry if you don’t understand what’s going on in this code - it’s highly optimized and a bit arcane). Then, the function checks to see if x is real-valued or complex, and if it’s complex, computes the real and imaginary sums separately. The .Internal(colSums(x...)) part is calling a C function - basically, functions written in C are faster than R because they’re compiled, so this speeds basic operations up in R. Then there are statements that transfer dimension names over to the summed object. At the end of the function, the last value computed is returned automatically (in this case, z). Try it out Write a function named circle_area which computes the area of a circle given the radius. Make sure to use reasonable parameter names! (Note: in R, pi is conveniently stored in the variable of the same name - it can be overwritten if you want to do so, but why would you want to do that? In SAS, you can get the value of pi using constant(&quot;pi&quot;)) Solution circle_area &lt;- function(r) { r^2*pi # automatically returned as the last computed value } circle_area(5) [1] 78.53982 A more complete and robust answer might include a test for numeric r: circle_area &lt;- function(r) { if (!is.numeric(r)) { stop(&quot;Supplied radius must be numeric&quot;) # This issues an error } r^2*pi # automatically returned as the last computed value } circle_area(5) [1] 78.53982 proc IML; start circle_area(r); pi = constant(&quot;pi&quot;); return(pi*r**2); finish; c = circle_area(5); print c; quit; c 78.539816 One last trick to note: functions generally can only return one object. If you need to return more than one thing, put the objects into a list or another data structure, and return that - then you can take the list/structure apart outside the function to use the returned values separately. 3.3.1 Scope The scope of a variable is the space in the program where a variable is defined and can be accessed. A local variable is one which can only be accessed within a function or block of code - it does not exist outside of that code. A global variable is one which is available to the entire program. In R, every function is defined in a certain environment, and once it is defined, executed in a specific environment. Think of an environment as a space full of available variables, functions, and objects. Any defined object or variable that a function has access to is in scope. When you are inside of a function block, you have access to values defined within the function, plus any other values outside the function. When there are two variables with the same name, the object in the environment which is “closest” is used. Demonstration of scoping in R a &lt;- 3 myfun &lt;- function(a, b) { a + b + 2 } myfun(5, 6) # a is 5 inside the function, so that overrides the [1] 13 # a defined outside the function myfun(a, 3) # this references the a outside the function [1] 8 Scope diagram. When myfun() is called, the calling environment contains the two parameters a and b. a &lt;- 3 myfun2 &lt;- function(d) { myfun(a, d) } myfun2(3) # the only a in scope inside fun2 is the a defined at the top of the chunk [1] 8 Scope diagram. When myfun2() is called, the calling environment contains only a parameter \\(d\\). \\(a\\) is pulled from the global environment, as there is no parameter \\(a\\) in the myfun2 calling environment. a &lt;- 3 myfun3 &lt;- function(a, d) { b &lt;- a; # make a copy of the value a &lt;- 250; myfun(b, d) } a [1] 3 myfun3(5, 3) # now, a is defined inside fun3 as a = 5, so there is an a in [1] 10 # fun3&#39;s scope that isn&#39;t in the global environment. a # value of a hasn&#39;t changed [1] 3 Scope diagram. When myfun3() is called, the calling environment contains parameters a and d, which are then copied into the calling environment of myfun as \\(a\\) and \\(b\\). The variable \\(a\\) in the global environment is ignored. If you want to avoid too many issues with scoping (because scoping rules are complicated), the simplest way is to not reuse variable names inside of a function if you’ve already used those names outside the function (this holds for all languages, really). R does have global variables and a global assignment operator, &lt;&lt;-, but the use of global variables is strongly discouraged, and global variables are not permitted in e.g. CRAN packages. In SAS, scoping rules are more like those in other programming languages - you have to keep track of how arguments are made available to the function. Demonstration of scoping in SAS. Environments do not inherit variables from the calling environment. PROC IML; a = 3; start myfun(a, b); return a + b + 2; finish; r1 = myfun(5, 6); /* a is 5 inside the function, so that overrides the a defined outside the function */ r2 = myfun(a, 3); /* this references the a outside the function */ print r1 r2; quit; r1 r2 13 8 In SAS, the equivalent version of the program used to demonstrate lexical scoping in R produces an error. In SAS, you cannot assume the function has access to values defined outside of that function that are not passed into the function as arguments. PROC IML; a = 3; start myfun(a, b); return a + b + 2; finish; start myfun2(d); return myfun(a, d); /* SAS complains because a is not defined */ finish; r1 = myfun2(3); print r1; quit; First, let’s consider the similarities: like R, functions have a local scope, and changing a similarly named value inside the function doesn’t change the value outside the function. PROC IML; start myfun(x); y = 2 * x; print y[label=&quot;y inside function (local)&quot;]; return 1; finish; y = 0; x = 1:5; res = myfun(x); print y[label=&quot;y outside function&quot;]; quit; y inside function (local) 2 4 6 8 10 y outside function 0 However, R’s environment feature and lexical scoping is not common to many other programming languages. When values are passed into the function as arguments, the behavior in SAS deviates from the equivalent behavior in R. In SAS, arguments to functions are passed by reference. An argument that is passed by value makes a copy of the value (to a new memory location) for the local function scope (this is what R does). When an argument is passed by reference, the address of the argument is passed in instead12. This is faster and more efficient (because you aren’t making a new copy of the data), but it does mean that changes inside the function persist outside that function. This can cause problems when reusing modules. Argument passing in SAS If we make a slight modification to myfun(a, b), though, we see some interesting behavior in SAS that we wouldn’t see in the equivalent R program. PROC IML; a = 3; start myfun(a, b); a = a + 2; return a + b; finish; b = a; r1 = myfun(5, 6); c = a; r2 = myfun(a, 3); d = a; print b[label=&quot;a before r1&quot;] r1 c[label=&quot;a after r1&quot;] r2 d[label=&quot;a after r2&quot;]; quit; a before r1 r1 a after r1 r2 a after r2 3 13 3 8 5 In SAS, be sure that if you are using a logical operator AND, &amp;, you put spaces around it (e.g. &amp;) - &amp;var2 is a way to specify that you are passing an argument (var2) by reference, and SAS can get confused and issue weird warnings if you actually intended this to be a logical statement of var1 &amp;var2. I ran across this once and it thoroughly confused me until I remembered that &amp;var can mean “pass by reference” in some languages. Argument passing in R In R, variables inside a function don’t modify variables which are outside a function (generally speaking). In SAS, this is not necessarily the case. In the first call to myfun(), we pass in two numerical arguments, and we see that even though the value of a changes inside the function, that change doesn’t affect the variable defined outside of the function. In the second call to myfun(), we pass a variable in as an argument, and we see that the variable changes after the function’s execution! In the R chunk (below), you can see that the behavior of what is essentially the same code is different. a &lt;- 3 myfun &lt;- function(a, b) { a &lt;- a + 2 a + b } a [1] 3 myfun(5, 6) [1] 13 a [1] 3 myfun(a, 3) [1] 8 a [1] 3 Another example of SAS passing arguments by reference (and the unexpected effects that can have on a program’s state) PROC IML; start myfun(x); call sort(x, 1); /* sort the values */ return (cusum(x)); /* cusum() = cumulative sum */ finish; y = {3, 1, 4, 1, 5, 9, 2, 6, 5, 4}; z = y; print y[label=&quot;y before function is called&quot;]; cs = myfun(y); print z[label=&quot;original y&quot;] y[label=&quot;y after function is called&quot;] cs[label=&quot;cumulative sum of sorted y&quot;]; quit; y before functionis called 3 1 4 1 5 9 2 6 5 4 original y y after functionis called cumulative sumof sorted y 3 1 1 1 1 2 4 2 4 1 3 7 5 4 11 9 4 15 2 5 20 6 5 25 5 6 31 4 9 40 Because arguments in SAS are passed by reference, you can “trick” a function into returning multiple values by passing the variables in as arguments to the function, changing their values in the function, and returning. This is not necessarily a good practice - it can make code very difficult to debug, and may lead to non-obvious dependencies - but for short, simple programs, you can probably get away with it. PROC IML; start getDescriptive(Mean, SD, /* output args */ x /* input arg */); Mean = x[:]; /* this is shorthand for compute the mean of the column */ SD = sqrt( ssq(x - Mean)/(nrow(x) - 1)); finish; m = 0; s = 0; y = {3, 1, 4, 1, 5, 9, 2, 6, 5, 4}; run GetDescriptive(m, s, y); print m s; quit; m s 4 2.4494897 If you want to avoid any of these side-effects of SAS’s pass-by-reference behavior, you can very easily do so: just don’t write any modules that modify input arguments. Always modify a copy of the variable instead. Try it out Can you predict what the output of this chunk will be? f &lt;- function(x) { f &lt;- function(x) { f &lt;- function(x) { x ^ 2 } f(x) + 1 } f(x) * 2 } f(10) Run it - were you right? What happens when you run a similar program in SAS? (I only nested two functions this time, but you get the idea) proc IML; start f(x); start f(x); return x**x; finish; return f(x)+1; finish; quit; Solution Working through the R program: This gets much less confusing if you rename the functions following R’s scoping rules. f &lt;- function(x) { f1 &lt;- function(x) { # because inside of f(), the new definition will dominate f2 &lt;- function(x) { # because inside of f1(), the new definition will dominate x ^ 2 } f2(x) + 1 } f1(x) * 2 } f(10) Once this has been renamed, it is relatively easy to write out as a series of mathematical substitutions: \\[f(10) = f1(10) * 2 = (f2(10) + 1) * 2 = (10^2 + 1)*2 = 202\\] Running the similar program in SAS results in SAS complaining about a recursive function definition. What will this SAS program output? proc IML; start funwithSAS(x, y); a = x; x = x + 3; return x*y; finish; a = 0; res1 = funwithSAS(a, 5); a1 = a; x = 3; res2 = funwithSAS(x, 5); a2 = a; x2 = x; y = 3; res3 = funwithSAS(x, y); /* print res1 a1 res2 a2 x2 res3 a x y; */ /* uncomment this when you&#39;re ready */ quit; Solution This is easiest if we step through the program and list what is passed around inside and outside of the function evaluation. a = 0 res1 = ...? (inside funwithsas res1) x = (location of a), y = 5 (inside funwithsas res1) a = x = (location of a), x = (location of a) + 3 = 3, so (location of a) = 3 and x = 3. res1 returns x = 3 * y = 5 = 15 a1 = 3 res2 = ...? (inside funwithsas res2) x = (location of x), y = 5 (inside funwithsas res2) a = (location of x), x = (location of x) + 3 = 6 (a outside the function is unaffected because a is not a parameter) res2 returns x = 6 * y = 5 = 30 a2 = 3 x2 = 6 y = 3 res3 = ...? (inside funwithsas res3) x = (location of x), y = (location of y) (inside funwithsas res3) a = (location of x), x = (location of x) + 3 = 9 (a outside the function is unaffected; y is unchanged) res3 returns x = 9 * y = 3 = 27 at this point, x = 9 and y = 3. So the output is res1 = 15 a1 = 3 res2 = 30 a2 = 3 x2 = 6 res3 = 27 a = 3 x = 9 y = 3 The trick to this problem is to realize that inside of the function, when a variable is passed in (by reference) the thing that is assigned is the pointer to the value in memory where the original variable lives. So when a is passed in as x, x is assigned (location of a), which is then assigned to the local copy of a. So both variables now point at the outside (a), and any changes to x also affect both a and the local copy of a. 3.3.2 The Pipe You do not need to understand the collapsed section below. If you’re feeling comfortable with the material, go ahead and read it now. I’ve left it in the functions section, because it’s a topic relating to functions, but it’s not essential to understand to use R (even at an advanced level)13. Infix operators Most functions take arguments written after the function name. Can you think of any functions which work differently? Infix functions are functions that take arguments on both sides of the function name. Say, a + b: technically, a and b are arguments to the function +, so we could think of this as +(a, b). R has a number of infix functions, but you can also create your own. User-defined infix functions start and end with %. So %&gt;%, %in%, %dosomething% would all be valid infix operators. To define one, you need to enclose the name in back-ticks (`). `%dosomething%` &lt;- function(a, b) { a^b - a + b } 3 %dosomething% 4 [1] 82 You can also call default infix operators using this syntax: `+`(3, 4) = 7 One of the most useful infix operators is the pipe, %&gt;%, which is a part of the magrittr library and is commonly included in other packages, such as dplyr, and tidyr (we will talk about packages later in this chapter, but pipes are useful to discuss now, so roll with it for a few minutes). The one part of this section that is important to at least be able to use is the pipe: %&gt;%. There is an entire chapter dedicated to discussing the pipe in R4DS, including a discussion of when not to use the pipe. library(magrittr) 3 %&gt;% exp() [1] 20.08554 exp(3) [1] 20.08554 The pipe takes the left hand side and a function, and puts the left hand side as an argument to the function on the right hand side. It doesn’t sound very impressive, but it allows you to do a very cool thing: “chain” operations. Consider 3 functions: f1 &lt;- function(x, y = 3) { x * y } f2 &lt;- function(z) { z^2 } f3 &lt;- function(z2) { log10(z2) } Normally, you’d write f3(f2(f1(4))), which you have to read from the inside to the outside if you want to describe what this function call is doing. With pipes, you can write the same operation as: 4 %&gt;% f1() %&gt;% f2() %&gt;% f3() [1] 2.158362 This is much simpler to read - it’s like a recipe. “Take 4, do f1, then f2, then f3”. You don’t need to know how to define your own infix operators, but you will want to become familiar with the pipe. It’s a central component of writing “tidy” R code. Incidentally, SAS also has a use for the pipe: leveraging the operating system to work with files. In SAS, you just use the keyword pipe, which is hopefully pretty obvious. 3.4 Procs and Data steps In R, the primary unit of code is a function, and nearly every operation in R is a function call, but the functions themselves are malleable and can be easily re-written. SAS is not that flexible - its procedures have been checked and double-checked and maintained for 30 years (in many cases). That level of validation explains its popularity in e.g. the pharmaceutical industry or government, but it does lead to a certain rigidity in the “flow” of a SAS data analysis. Personally, I find that using SAS generally doesn’t require much thought, but I quickly get frustrated when it’s not possible to do the exact thing I want to do in a direct or relatively easy way. The primary units of code in SAS are “steps”, and come in two main flavors: data steps, and proc steps. Data steps are written by the user and customized extensively to the dataset you’re creating or reading in. Proc steps, on the other hand, execute mainly pre-defined procedures that are built into SAS. Thus far, you’ve seen DATA steps and PROC PRINT and IML. In the next module, you’ll see PROC IMPORT, PROC MEANS, PROC CORR, PROC SUMMARY, PROC FREQ, and PROC UNIVARIATE. There is a handy overview of the SAS language that may be useful in understanding the code that you’ve only been reading and copying up to this point. The bare SAS procedure with no options looks like this: PROC MEANS; RUN; By default, SAS will use the last dataset created to run this procedure. SAS procedures can also be run with options that modify the statement. PROC PRINT DATA=SASHELP.CARS (obs=10); RUN; PROC MEANS DATA=SASHELP.CARS; RUN; Obs Make Model Type Origin DriveTrain MSRP Invoice EngineSize Cylinders Horsepower MPG_City MPG_Highway Weight Wheelbase Length 1 Acura MDX SUV Asia All $36,945 $33,337 3.5 6 265 17 23 4451 106 189 2 Acura RSX Type S 2dr Sedan Asia Front $23,820 $21,761 2.0 4 200 24 31 2778 101 172 3 Acura TSX 4dr Sedan Asia Front $26,990 $24,647 2.4 4 200 22 29 3230 105 183 4 Acura TL 4dr Sedan Asia Front $33,195 $30,299 3.2 6 270 20 28 3575 108 186 5 Acura 3.5 RL 4dr Sedan Asia Front $43,755 $39,014 3.5 6 225 18 24 3880 115 197 6 Acura 3.5 RL w/Navigation 4dr Sedan Asia Front $46,100 $41,100 3.5 6 225 18 24 3893 115 197 7 Acura NSX coupe 2dr manual S Sports Asia Rear $89,765 $79,978 3.2 6 290 17 24 3153 100 174 8 Audi A4 1.8T 4dr Sedan Europe Front $25,940 $23,508 1.8 4 170 22 31 3252 104 179 9 Audi A41.8T convertible 2dr Sedan Europe Front $35,940 $32,506 1.8 4 170 23 30 3638 105 180 10 Audi A4 3.0 4dr Sedan Europe Front $31,840 $28,846 3.0 6 220 20 28 3462 104 179 Variable Label N Mean Std Dev Minimum Maximum MSRP Invoice EngineSize Cylinders Horsepower MPG_City MPG_Highway Weight Wheelbase Length Engine Size (L) MPG (City) MPG (Highway) Weight (LBS) Wheelbase (IN) Length (IN) 428 428 428 426 428 428 428 428 428 428 32774.86 30014.70 3.1967290 5.8075117 215.8855140 20.0607477 26.8434579 3577.95 108.1542056 186.3621495 19431.72 17642.12 1.1085947 1.5584426 71.8360316 5.2382176 5.7412007 758.9832146 8.3118130 14.3579913 10280.00 9875.00 1.3000000 3.0000000 73.0000000 10.0000000 12.0000000 1850.00 89.0000000 143.0000000 192465.00 173560.00 8.3000000 12.0000000 500.0000000 60.0000000 66.0000000 7190.00 144.0000000 238.0000000 In the code above, both DATA=SASHELP.CARS and (obs=10) are options that modify their respective statements. Some procs also support additional statements: for instance, we can use the VAR statement to tell SAS which variables we want to work with. PROC MEANS DATA=SASHELP.CARS; VAR msrp cylinders; RUN; Variable N Mean Std Dev Minimum Maximum MSRP Cylinders 428 426 32774.86 5.8075117 19431.72 1.5584426 10280.00 3.0000000 192465.00 12.0000000 Another statement, CLASS, tells SAS to run the procedure for each level of a named categorical variable. PROC MEANS DATA=SASHELP.CARS; CLASS type; VAR msrp cylinders; RUN; Type N Obs Variable N Mean Std Dev Minimum Maximum Hybrid 3 MSRP Cylinders 3 3 19920.00 3.6666667 725.4653679 0.5773503 19110.00 3.0000000 20510.00 4.0000000 SUV 60 MSRP Cylinders 60 60 34790.25 6.5666667 13598.63 1.3822932 17163.00 4.0000000 76870.00 10.0000000 Sedan 262 MSRP Cylinders 262 262 29773.62 5.5801527 15584.59 1.4749723 10280.00 4.0000000 128420.00 12.0000000 Sports 49 MSRP Cylinders 49 47 53387.06 6.3404255 33779.63 1.7849199 18345.00 4.0000000 192465.00 12.0000000 Truck 24 MSRP Cylinders 24 24 24941.38 6.2500000 9871.97 1.5948286 12800.00 4.0000000 52975.00 8.0000000 Wagon 30 MSRP Cylinders 30 30 28840.53 5.3000000 11834.00 1.4178663 11905.00 4.0000000 60670.00 8.0000000 Some statements may have additional options that further modify the statement. The SAS documentation contains full lists of all statements (and all options for those statements). Try It Out Take a look at the Dictionary of SAS DATA step statements. Find the RENAME statement and read up on its syntax. Can you rename the variable msrp in the SASHELP.CARS dataset? DATA tmp; /* Create a temporary dataset */ SET SASHELP.CARS; /* use the CARS data */ /* Your RENAME statement goes here */ RUN; There is an overview of many common SAS procedures here. 3.5 Scripts Up until this point, you may have been writing code in an R Studio or SAS text editor window, or, you may have been typing commands into the command line without preserving them in a separate file. You might even have been working in R markdown documents, where you had code and non-code chunks of the file. A script is a file which contains only code and comments. It is intended to run from start to finish, and usually completes one or more tasks - for instance, cleaning your data, or loading a series of custom functions into your R environment. Scripts are useful because they preserve code so that it can be re-run… and in some cases, they can even be re-run autonomously - I have several scripts which automatically run at specific times every day to complete various tasks (scraping data off the internet, mostly). I find that when doing data analysis, it is often easier to write a script as opposed to working in R markdown or typing commands into the console. Scripts are a record of what I’ve done, and ensure that commands are executed in the right order. As with any tool, it is important to know where to use the tool and where the tool is usually not the best option. You can source (run) an R script using the source() command with the file path of the script as the argument. Scripts in R end in .r or .R, while scripts in SAS end in .sas. Scripts can be run in one of (at least) two modes: batch mode, or interactive mode. In batch mode, the entire script is run without human intervention or monitoring. This is useful for repetitive jobs – for instance, to record the weather at 6h intervals throughout the day. In interactive mode, scripts may be run line-by-line or block-wise, with small tweaks made to the code as you proceed through the file. I find that in some cases, what starts out as an interactive mode script can become a batch script as I work the kinks out. If you ever need to use the high-performance computing resources on campus, you will need to write code to run in batch mode, because these jobs are generally not friendly to interactive programming. Try it out I maintain a list of packages that I find to be useful so that when I install R on a new machine (or update R), I don’t have to spend 3 weeks realizing that I need to install X package. Instead of many repeated 5 minute pauses for package installation, I can just let this script run once and walk away. I’ve pared down my list of packages a bit for this class (you don’t need the packages for analysis of 3D bullet scan data, for instance), but this step should help populate your R installation with a few new packages. Read the script (located here) and try to understand what it is doing. Once you think you understand what it is doing, run the following command to run the script and install the packages on your machine. Were you right? url &lt;- &quot;https://raw.githubusercontent.com/srvanderplas/unl-stat850/master/code/03_setup.R&quot; source(url) 3.6 Packages Both SAS and R have systems for extending the base system/language with additional functionality. In R, these extensions are called packages. In SAS, language extensions are called modules (for things sold by SAS), macros (for functions distributed by users), and in packages (which exist but are rarely used).14 SAS packages In SAS, there are packages of code that encapsulate scripts. However, unlike R (and many other languages), there is no centralized repository for SAS packages. Papers may include SAS packages to demonstrate new methods, and other packages may be found on GitHub or various SAS forums. A more common way of distributing code in SAS seems to be through the use of single-file macros. (Even longtime SAS users don’t necessarily know about the package system). These macros often need to be slightly customized to your environment (or you need to customize your environment to match the assumptions made in the macro, which can be harder). R packages In R, there are two main sources for packages: CRAN (the Comprehensive R Archive Network) (and related archives, such as MRAN, which is Microsoft’s version of CRAN) and github. R packages published on CRAN go through a basic verification process that makes sure that the package meets certain standards (for instance, packages must have proper dependencies specified, cannot conflict with previous package names, must have a software license, and cannot contain malicious code). Note that CRAN does not check the packages for statistical correctness! On github, packages go through less verification. Many packages use a system where the version in development is on github and available for installation, but the version on CRAN is considered “stable”. Sometimes, packages are never put on CRAN: I contribute to several packages which are too large for CRAN, and it’s not worth the hassle to get an exception or figure out a workaround. library(rvest) txt &lt;- read_xml(&quot;https://cran.r-project.org/web/packages/&quot;) %&gt;% html_node(css = &quot;#pkgs&quot;) %&gt;% xml_parent() %&gt;% html_text() npkgs &lt;- stringr::str_extract(txt, &quot;features \\\\d{1,}&quot;) %&gt;% stringr::str_remove(&quot;features &quot;) %&gt;% as.numeric() Currently, the CRAN package repository features 1.615310^{4} available packages. How do you navigate them to find the one you need? Sometimes, the CRAN Task Views may be helpful - for instance, if you want to see all of the packages which are useful for Meta-Analysis, Finance, Bayesian statistics, etc. Other times, it’s useful to let Google help you navigate: searching for “R CRAN” + “what you want the package to do” can often narrow things down (I recommend adding CRAN in because Google results for “R” are not particularly useful.) Once you find and install a package (install.packages() for CRAN packages, devtools::install_github() for GitHub packages), you have to figure out how to use it. Many R packages come with vignettes, which are short articles that demonstrate how a package is used. You can browse the available vignettes using browseVignettes() (if you provide a package name as an argument, you will get only vignettes from that package). Another way to get help on a package is to use ?&lt;package name&gt;, e.g. ?ggplot2. That will take you to the main package description page, and there are often links to documentation. At the bottom of the description page, you can click on a link to get to the Index, which is a list of all functions that are provided in that package. From there, you can find the documentation for each function in the package. Try it out Install the R package tibble if it is not already installed. Pull up the vignettes for the tibble package, and read about tibbles. What is the equivalent base R object? How do tibbles differ from that object? Get to the package index for the tibble package, either by navigating through the Packages tab in RStudio, or using ?tibble. Access the documentation for the tribble function, and try loading the package and creating your own tibble using tribble. Solution ## install.packages(&quot;tibble&quot;) library(tibble) ## ?tibble ## ?tribble tribble(~var1, ~var2, 1, 2, 3, 4, 5, 6) # A tibble: 3 x 2 var1 var2 &lt;dbl&gt; &lt;dbl&gt; 1 1 2 2 3 4 3 5 6 References and Links A more advanced take on functions in R can be found here (Advanced R chapter) There is also a handy cheat sheet style summary of PROC IML in SAS here and some useful demonstrations of simple tasks in IML here. A helpful blog post for scoping in SAS is here Here is another explanation of pass-by-value vs. pass-by-reference (intended for C programming) A comparison of R, SAS, and python - source of information about the SAS package distribution system. Another explanation of pipes (lots of examples) It’s a good idea to specify your parameter names when you’re using functions you’re unfamiliar with, which at this point, is probably all of them.↩ if you’re familiar with C, the argument passed in is just a pointer to the original memory↩ I had been using R for ~8 years before I ever heard the term “infix operator” - and I’d been using infix operators for a long time at that point, just without thinking about what they were.↩ Note that the various components of SAS can be extremely confusing to separate. I found this guide to be somewhat helpful.↩ "],
["reading-data.html", "Module 4 External Data Module Objectives 4.1 External Data Formats 4.2 Text Files 4.3 Spreadsheets 4.4 Binary Files 4.5 Databases 4.6 Exploratory Data Analysis 4.7 References", " Module 4 External Data Module Objectives Import data from text and excel files into R and SAS for analysis Conduct exploratory data analysis to determine how the data is structured, what cleaning must be done, and what (if any) interesting artifacts are in the dataset 4.1 External Data Formats In order to use statistical software to do anything interesting, we need to be able to get data into the program so that we can work with it effectively. For the moment, we’ll focus on tabular data - data that is stored in a rectangular shape, with rows indicating observations and columns that show variables. This type of data can be stored on the computer in multiple ways: as raw text, usually in a file that ends with .txt, .tsv, .csv, .dat, or sometimes, there will be no file extension at all. These types of files are human-readable. If part of a text file gets corrupted, the rest of the file may be recoverable. in a spreadsheet. Spreadsheets, such as those created by MS Excel, Google Sheets, or LibreOffice Calc, are not completely binary formats, but they’re also not raw text files either. They’re a hybrid. Practically, they may function like a poorly laid-out database, a text file, or a total nightmare, depending on who designed the spreadsheet. There is a collection of horror stories here and a series of even more horrifying tweets here as a binary file. Binary files are compressed files that are readable by computers but not by humans. They generally take less space to store on disk (but the same amount of space when read into computer memory). If part of a binary file is corrupted, the entire file is usually affected. R, SAS, Stata, SPSS, and Minitab all have their own formats for storing binary data. Packages such as foreign in R will let you read data from other programs, and packages such as haven in R will let you write data into binary formats used by other programs. To read data from R into SAS, the easiest way is probably to call R from PROC IML. Here is a very thorough explanation of why binary file formats exist, and why they’re not necessarily optimal. in a database. Databases are typically composed of a set of one or more tables, with information that may be related across tables. Data stored in a database may be easier to access, and may not require that the entire data set be stored in computer memory at the same time, but you may have to join several tables together to get the full set of data you want to work with. There are, of course, many other non-tabular data formats – some open and easy to work with, some inpenetrable. A few which may be more common: Web related data structures: XML (eXtensible markup language), JSON (JavaScript Object Notation), YAML. These structures have their own formats and field delimiters, but more importantly, are not necessarily easily converted to tabular structures. They are, however, useful for handling nested objects, such as trees. When read into R or SAS, these file formats are usually treated as lists, and may be restructured afterwards into a format useful for statistical analysis. Spatial files: Shapefiles are by far the most common version of spatial files15. Spatial files often include structured encodings of geographic information plus corresponding tabular format data that goes with the geographic information. We’ll explore these a bit more when we talk about maps. To be minimally functional in R and SAS, it’s important to know how to read in text files (CSV, tab-delimited, etc.). It can be helpful to also know how to read in XLSX files. We will briefly cover binary files and databases, but it is less critical to remember how to read these in without consulting one or more online references. 4.2 Text Files There are several different variants of text data which are relatively common, but for the most part, text data files can be broken down into fixed-width and delimited formats. What’s the difference, you say? 4.2.1 Fixed-width files In a fixed-width text file, the position of the data indicates which field (variable/column) it belongs to. These files are fairly common outputs from older FORTRAN-based programs, but may be found elsewhere as well - if you have a very large amount of data, a fixed-width format may be more efficient to read, because you can select only the portions of the file which matter for a particular analysis (and so you don’t have to read the whole thing into memory). Col1 Col2 Col3 3.4 4.2 5.4 27.3 -2.4 15.9 In base R (no extra packages), you can read fwf files in using read.fwf, but you must specify the column breaks yourself. ## url &lt;- &quot;https://www.mesonet.org/index.php/dataMdfMts/dataController/getFile/202006070000/mdf/TEXT/&quot; data &lt;- read.fwf(url, skip = 3, # Skip the first 2 lines (useless) + header line widths = c(5, 6, 6, 7, 7, 7, 7, 6, 7, 7, 7, 8, 9, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8)) # There is a row with the column names specified Warning in readLines(file, n = thisblock): incomplete final line found on &#39;data/ mesodata.txt&#39; data[1:6,] # first 6 rows V1 V2 V3 V4 V5 V6 V7 V8 V9 V10 V11 V12 V13 V14 V15 V16 1 ACME 110 0 53 31.8 5.2 5.1 146 8.5 0.7 6.9 0 964.79 272 31.8 4.0 2 ADAX 1 0 55 32.4 1.0 0.8 108 36.5 0.4 2.2 0 976.20 245 32.0 0.2 3 ALTU 2 0 31 35.6 8.9 8.7 147 10.9 1.1 11.5 0 960.94 296 34.7 6.8 4 ALV2 116 0 27 35.8 6.7 6.7 145 8.2 1.2 9.0 0 957.45 298 35.5 5.4 5 ANT2 135 0 73 27.8 0.0 0.0 0 0.0 0.0 0.0 0 990.11 213 27.8 0.0 6 APAC 111 0 52 32.3 6.2 6.1 133 9.8 0.8 7.9 0 959.54 277 31.9 4.6 V17 V18 V19 V20 V21 V22 V23 V24 1 29.2 36.2 31.6 25.2 21.7 3.09 2.22 1.48 2 28.8 38.2 29.6 26.8 -998.0 2.61 1.88 -998.00 3 29.3 34.1 30.7 26.1 -998.0 3.39 2.47 -998.00 4 24.7 34.7 25.6 22.6 -998.0 2.70 1.60 -998.00 5 29.5 31.1 30.2 26.8 23.8 1.96 1.73 1.33 6 30.4 35.2 34.7 28.2 22.8 1.79 1.53 1.78 You can count all of those spaces by hand (not shown), you can use a different function, or you can write code to do it for you. # I like to cheat a bit.... # Read the first few lines in tmp &lt;- readLines(url, n = 20)[-c(1:2)] # split each line into a series of single characters tmp_chars &lt;- strsplit(tmp, &#39;&#39;) # Bind the lines together into a character matrix # do.call applies a function to an entire list - so instead of doing 18 rbinds, # one command will put all 18 rows together tmp_chars &lt;- do.call(&quot;rbind&quot;, tmp_chars) # (it&#39;s ok if you don&#39;t get this line) # Make into a logical matrix where T = space, F = not space tmp_chars_space &lt;- tmp_chars == &quot; &quot; # Add up the number of rows where there is a non-space character # space columns would have 0s/FALSE tmp_space &lt;- colSums(!tmp_chars_space) # We need a nonzero column followed by a zero column breaks &lt;- which(tmp_space != 0 &amp; c(tmp_space[-1], 0) == 0) # Then, we need to get the widths between the columns widths &lt;- diff(c(0, breaks)) # Now we&#39;re ready to go mesodata &lt;- read.fwf(url, skip = 3, widths = widths, header = F) Warning in readLines(file, n = thisblock): incomplete final line found on &#39;data/ mesodata.txt&#39; # read header separately - if you use header = T, it errors for some reason. # It&#39;s easier just to work around the error than to fix it :) mesodata_names &lt;- read.fwf(url, skip = 2, n = 1, widths = widths, header = F, stringsAsFactors = F) names(mesodata) &lt;- as.character(mesodata_names) mesodata[1:6,] # first 6 rows STID STNM TIME RELH TAIR WSPD WVEC WDIR WDSD WSSD 1 ACME 110 0 53 31.8 5.2 5.1 146 8.5 0.7 2 ADAX 1 0 55 32.4 1.0 0.8 108 36.5 0.4 3 ALTU 2 0 31 35.6 8.9 8.7 147 10.9 1.1 4 ALV2 116 0 27 35.8 6.7 6.7 145 8.2 1.2 5 ANT2 135 0 73 27.8 0.0 0.0 0 0.0 0.0 6 APAC 111 0 52 32.3 6.2 6.1 133 9.8 0.8 WMAX RAIN PRES SRAD TA9M WS2M TS10 TB10 TS05 1 6.9 0 964.79 272 31.8 4.0 29.2 36.2 31.6 2 2.2 0 976.20 245 32.0 0.2 28.8 38.2 29.6 3 11.5 0 960.94 296 34.7 6.8 29.3 34.1 30.7 4 9.0 0 957.45 298 35.5 5.4 24.7 34.7 25.6 5 0.0 0 990.11 213 27.8 0.0 29.5 31.1 30.2 6 7.9 0 959.54 277 31.9 4.6 30.4 35.2 34.7 TS25 TS60 TR05 TR25 TR60 1 25.2 21.7 3.09 2.22 1.48 2 26.8 -998.0 2.61 1.88 -998.00 3 26.1 -998.0 3.39 2.47 -998.00 4 22.6 -998.0 2.70 1.60 -998.00 5 26.8 23.8 1.96 1.73 1.33 6 28.2 22.8 1.79 1.53 1.78 But, there’s an even simpler way… The readr package creates data-frame like objects called tibbles (really, they’re a souped-up data frame), but it is much friendlier to use. Tibbles also do not have the problems with factors (see the introduction to factors) - they will always read characters in as characters. library(readr) # Better data importing in R read_table(url, skip = 2) # Gosh, that was much easier! # A tibble: 121 x 24 STID STNM TIME RELH TAIR WSPD WVEC WDIR WDSD WSSD WMAX RAIN PRES &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 ACME 110 0 53 31.8 5.2 5.1 146 8.5 0.7 6.9 0 965. 2 ADAX 1 0 55 32.4 1 0.8 108 36.5 0.4 2.2 0 976. 3 ALTU 2 0 31 35.6 8.9 8.7 147 10.9 1.1 11.5 0 961. 4 ALV2 116 0 27 35.8 6.7 6.7 145 8.2 1.2 9 0 957. 5 ANT2 135 0 73 27.8 0 0 0 0 0 0 0 990. 6 APAC 111 0 52 32.3 6.2 6.1 133 9.8 0.8 7.9 0 960. 7 ARD2 126 0 46 32.9 2.6 2.5 150 11.8 0.5 3.6 0 979. 8 ARNE 6 0 28 33.5 6.5 6.3 163 11.9 1.5 10 0 927. 9 BEAV 8 0 23 34.9 11.2 11.1 165 7.3 1.4 15.2 0 921. 10 BESS 9 0 37 33.8 8.3 8.3 156 6.6 1.3 11.2 0 951. # … with 111 more rows, and 11 more variables: SRAD &lt;dbl&gt;, TA9M &lt;dbl&gt;, # WS2M &lt;dbl&gt;, TS10 &lt;dbl&gt;, TB10 &lt;dbl&gt;, TS05 &lt;dbl&gt;, TS25 &lt;dbl&gt;, TS60 &lt;dbl&gt;, # TR05 &lt;dbl&gt;, TR25 &lt;dbl&gt;, TR60 &lt;dbl&gt; You can also write fixed-width files if you really want to: if (!&quot;gdata&quot; %in% installed.packages()) install.packages(&quot;gdata&quot;) library(gdata) write.fwf(mtcars, file = &quot;data/04_mtcars-fixed-width.txt&quot;) In SAS, it’s a bit more complicated, but not that much - the biggest difference is that you generally have to specify the column names for SAS. For complicated data, as in R, you may also have to specify the column widths. /* This downloads the file to my machine */ /* x &quot;curl https://www.mesonet.org/index.php/dataMdfMts/dataController/getFile/202006070000/mdf/TEXT/ &gt; data/mesodata.txt&quot; */ /* only run this once */ /* Specifying WORK.mesodata means the dataset will cease to exist after this chunk exits */ data WORK.mesodata; infile &quot;data/mesodata.txt&quot; firstobs = 4; /* Skip the first 3 rows */ length STID $ 4; /* define ID length */ input STID $ STNM TIME RELH TAIR WSPD WVEC WDIR WDSD WSSD WMAX RAIN PRES SRAD TA9M WS2M TS10 TB10 TS05 TS25 TS60 TR05 TR25 TR60; run; proc print data=mesodata (obs=10); /* print the first 10 observations */ run; Obs STID STNM TIME RELH TAIR WSPD WVEC WDIR WDSD WSSD WMAX RAIN PRES SRAD TA9M WS2M TS10 TB10 TS05 TS25 TS60 TR05 TR25 TR60 1 ACME 110 0 53 31.8 5.2 5.1 146 8.5 0.7 6.9 0 964.79 272 31.8 4.0 29.2 36.2 31.6 25.2 21.7 3.09 2.22 1.48 2 ADAX 1 0 55 32.4 1.0 0.8 108 36.5 0.4 2.2 0 976.20 245 32.0 0.2 28.8 38.2 29.6 26.8 -998.0 2.61 1.88 -998.00 3 ALTU 2 0 31 35.6 8.9 8.7 147 10.9 1.1 11.5 0 960.94 296 34.7 6.8 29.3 34.1 30.7 26.1 -998.0 3.39 2.47 -998.00 4 ALV2 116 0 27 35.8 6.7 6.7 145 8.2 1.2 9.0 0 957.45 298 35.5 5.4 24.7 34.7 25.6 22.6 -998.0 2.70 1.60 -998.00 5 ANT2 135 0 73 27.8 0.0 0.0 0 0.0 0.0 0.0 0 990.11 213 27.8 0.0 29.5 31.1 30.2 26.8 23.8 1.96 1.73 1.33 6 APAC 111 0 52 32.3 6.2 6.1 133 9.8 0.8 7.9 0 959.54 277 31.9 4.6 30.4 35.2 34.7 28.2 22.8 1.79 1.53 1.78 7 ARD2 126 0 46 32.9 2.6 2.5 150 11.8 0.5 3.6 0 979.23 256 32.6 2.1 30.2 37.1 30.1 26.2 23.5 2.59 1.41 1.42 8 ARNE 6 0 28 33.5 6.5 6.3 163 11.9 1.5 10.0 0 927.19 334 33.4 4.3 31.9 35.0 33.1 26.9 22.6 2.64 3.02 2.57 9 BEAV 8 0 23 34.9 11.2 11.1 165 7.3 1.4 15.2 0 921.20 335 34.6 8.9 32.2 30.6 34.2 27.1 22.8 3.53 2.43 2.11 10 BESS 9 0 37 33.8 8.3 8.3 156 6.6 1.3 11.2 0 950.82 306 33.4 6.4 32.5 35.5 33.5 26.2 -998.0 3.15 3.34 -998.00 In SAS data statements, you generally need to specify the data names explicitly. In theory you can also get SAS to write out a fixed-width file, but it’s much easier to just… not. You can generally use a CSV or format of your choice – and you should definitely do that, because delimited files are much easier to work with. 4.2.2 Delimited Text Files Delimited text files are files where fields are separated by a specific character, such as &quot; “,”,&quot;, tab, etc. Often, delimited text files will have the column names as the first row in the file. As long as you know the delimiter, it’s pretty easy to read in data from these files in R using the readr package. url &lt;- &quot;https://raw.githubusercontent.com/shahinrostami/pokemon_dataset/master/pokemon_gen_1_to_8.csv&quot; pokemon_info &lt;- read_csv(url) Warning: Missing column names filled in: &#39;X1&#39; [1] Parsed with column specification: cols( .default = col_double(), name = col_character(), german_name = col_character(), japanese_name = col_character(), status = col_character(), species = col_character(), type_1 = col_character(), type_2 = col_character(), ability_1 = col_character(), ability_2 = col_character(), ability_hidden = col_character(), growth_rate = col_character(), egg_type_1 = col_character(), egg_type_2 = col_character() ) See spec(...) for full column specifications. pokemon_info[1:6, 1:6] # Show only the first 6 lines &amp; cols # A tibble: 6 x 6 X1 pokedex_number name german_name japanese_name generation &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; 1 0 1 Bulbasaur Bisasam フシギダネ (Fushigidane)… 1 2 1 2 Ivysaur Bisaknosp フシギソウ (Fushigisou)… 1 3 2 3 Venusaur Bisaflor フシギバナ (Fushigibana)… 1 4 3 3 Mega Venusa… Bisaflor フシギバナ (Fushigibana)… 1 5 4 4 Charmander Glumanda ヒトカゲ (Hitokage) 1 6 5 5 Charmeleon Glutexo リザード (Lizardo) 1 # a file delimited with | url &lt;- &quot;https://raw.githubusercontent.com/srvanderplas/unl-stat850/master/data/NE_Features_20200501.txt&quot; nebraska_locations &lt;- read_delim(url, delim = &quot;|&quot;) Parsed with column specification: cols( .default = col_character(), FEATURE_ID = col_double(), PRIM_LAT_DEC = col_double(), PRIM_LONG_DEC = col_double(), SOURCE_LAT_DEC = col_double(), SOURCE_LONG_DEC = col_double(), ELEV_IN_M = col_double(), ELEV_IN_FT = col_double() ) See spec(...) for full column specifications. nebraska_locations[1:6, 1:6] # A tibble: 6 x 6 FEATURE_ID FEATURE_NAME FEATURE_CLASS STATE_ALPHA STATE_NUMERIC COUNTY_NAME &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 171013 Peetz Table Area CO 08 Logan 2 171029 Sidney Draw Valley NE 31 Cheyenne 3 182687 Highline Canal Canal CO 08 Sedgwick 4 182688 Cottonwood Cre… Stream CO 08 Sedgwick 5 182689 Sand Draw Valley CO 08 Sedgwick 6 182690 Sedgwick Draw Valley CO 08 Sedgwick You can also read in the same files using read.csv and read.delim, which are the equivalent base R functions. url &lt;- &quot;https://raw.githubusercontent.com/shahinrostami/pokemon_dataset/master/pokemon_gen_1_to_8.csv&quot; pokemon_info &lt;- read.csv(url, header = T, stringsAsFactors = F) pokemon_info[1:6, 1:6] # Show only the first 6 lines &amp; cols X pokedex_number name german_name japanese_name 1 0 1 Bulbasaur Bisasam フシギダネ (Fushigidane) 2 1 2 Ivysaur Bisaknosp フシギソウ (Fushigisou) 3 2 3 Venusaur Bisaflor フシギバナ (Fushigibana) 4 3 3 Mega Venusaur Bisaflor フシギバナ (Fushigibana) 5 4 4 Charmander Glumanda ヒトカゲ (Hitokage) 6 5 5 Charmeleon Glutexo リザード (Lizardo) generation 1 1 2 1 3 1 4 1 5 1 6 1 # a file delimited with | url &lt;- &quot;https://raw.githubusercontent.com/srvanderplas/unl-stat850/master/data/NE_Features_20200501.txt&quot; nebraska_locations &lt;- read.delim(url, sep = &quot;|&quot;, header = T) nebraska_locations[1:6, 1:6] FEATURE_ID FEATURE_NAME FEATURE_CLASS STATE_ALPHA STATE_NUMERIC 1 171013 Peetz Table Area CO 8 2 171029 Sidney Draw Valley NE 31 3 182687 Highline Canal Canal CO 8 4 182688 Cottonwood Creek Stream CO 8 5 182689 Sand Draw Valley CO 8 6 182690 Sedgwick Draw Valley CO 8 COUNTY_NAME 1 Logan 2 Cheyenne 3 Sedgwick 4 Sedgwick 5 Sedgwick 6 Sedgwick SAS also has procs to accommodate CSV and other delimited files. PROC IMPORT may be the simplest way to do this, but of course a DATA step will work as well. We do have to tell SAS to treat the data file as a UTF-8 file (because of the japanese characters). Don’t know what UTF-8 is? Watch this excellent YouTube video explaining the history of file encoding! While writing this code, I got an error of “Invalid logical name” because originally the filename was pokemonloc. Let this be a friendly reminder that your dataset names in SAS are limited to 8 characters in SAS. Note Note: Due to UTF-8 issues, this code chunk runs (with complaints) when I paste it into SAS, but does not run in bookdown. The complaints are because there are column names that are not valid SAS names (presumably, SAS doesn’t allow UTF-8 characters as column names). /* x &quot;curl https://raw.githubusercontent.com/shahinrostami/pokemon_dataset/master/pokemon_gen_1_to_8.csv &gt; data/pokemon.csv&quot;; only run this once to download the file... */ filename pokeloc &#39;data/pokemon.csv&#39; encoding=&quot;utf-8&quot;; proc import datafile = pokeloc out=poke DBMS = csv; /* comma delimited file */ GETNAMES = YES ; proc print data=poke (obs=10); /* print the first 10 observations */ run; The only abnormal thing is that on my computer, the japanese characters don’t render. Here is the output from SAS running the above code interactively Alternately (because UTF-8 is finicky depending on your OS and the OS the data file was created under), you can convert the UTF-8 file to ASCII or some other safer encoding before trying to read it in. If I fix the file in R (because I know how to fix it there… another option is to fix it manually), library(readr) library(dplyr) tmp &lt;- read_csv(&quot;data/pokemon.csv&quot;)[,-1] Warning: Missing column names filled in: &#39;X1&#39; [1] Parsed with column specification: cols( .default = col_double(), name = col_character(), german_name = col_character(), japanese_name = col_character(), status = col_character(), species = col_character(), type_1 = col_character(), type_2 = col_character(), ability_1 = col_character(), ability_2 = col_character(), ability_hidden = col_character(), growth_rate = col_character(), egg_type_1 = col_character(), egg_type_2 = col_character() ) See spec(...) for full column specifications. # You&#39;ll learn how to do this later tmp &lt;- select(tmp, -japanese_name) %&gt;% mutate_all(iconv, from=&quot;UTF-8&quot;, to = &quot;ASCII//TRANSLIT&quot;) write_csv(tmp, &quot;data/pokemon_ascii.csv&quot;, na=&#39;.&#39;) Then, reading in the new file allows us to actually see the output. libname classdat &quot;sas/&quot;; /* Create a library of class data */ filename pokeloc &quot;data/pokemon_ascii.csv&quot;; proc import datafile = pokeloc out=classdat.poke DBMS = csv /* comma delimited file */ replace; GETNAMES = YES; GUESSINGROWS = 1028 /* use all data for guessing the variable type */ ; proc print data=classdat.poke (obs=10); /* print the first 10 observations */ run; Obs pokedex_number name german_name generation status species type_number type_1 type_2 height_m weight_kg abilities_number ability_1 ability_2 ability_hidden total_points hp attack defense sp_attack sp_defense speed catch_rate base_friendship base_experience growth_rate egg_type_number egg_type_1 egg_type_2 percentage_male egg_cycles against_normal against_fire against_water against_electric against_grass against_ice against_fight against_poison against_ground against_flying against_psychic against_bug against_rock against_ghost against_dragon against_dark against_steel against_fairy 1 1 Bulbasaur Bisasam 1 Normal Seed Pokemon 2 Grass Poison 0.7 6.9 2 Overgrow Chlorophyll 318 45 49 49 65 65 45 45 70 64 Medium Slow 2 Grass Monster 87.5 20 1 2 0.5 0.5 0.25 2 0.5 1 1 2 2 1 1 1 1 1 1 0.5 2 2 Ivysaur Bisaknosp 1 Normal Seed Pokemon 2 Grass Poison 1 13 2 Overgrow Chlorophyll 405 60 62 63 80 80 60 45 70 142 Medium Slow 2 Grass Monster 87.5 20 1 2 0.5 0.5 0.25 2 0.5 1 1 2 2 1 1 1 1 1 1 0.5 3 3 Venusaur Bisaflor 1 Normal Seed Pokemon 2 Grass Poison 2 100 2 Overgrow Chlorophyll 525 80 82 83 100 100 80 45 70 236 Medium Slow 2 Grass Monster 87.5 20 1 2 0.5 0.5 0.25 2 0.5 1 1 2 2 1 1 1 1 1 1 0.5 4 3 Mega Venusaur Bisaflor 1 Normal Seed Pokemon 2 Grass Poison 2.4 155.5 1 Thick Fat 625 80 100 123 122 120 80 45 70 281 Medium Slow 2 Grass Monster 87.5 20 1 1 0.5 0.5 0.25 1 0.5 1 1 2 2 1 1 1 1 1 1 0.5 5 4 Charmander Glumanda 1 Normal Lizard Pokemon 1 Fire 0.6 8.5 2 Blaze Solar Power 309 39 52 43 60 50 65 45 70 62 Medium Slow 2 Dragon Monster 87.5 20 1 0.5 2 1 0.5 0.5 1 1 2 1 1 0.5 2 1 1 1 0.5 0.5 6 5 Charmeleon Glutexo 1 Normal Flame Pokemon 1 Fire 1.1 19 2 Blaze Solar Power 405 58 64 58 80 65 80 45 70 142 Medium Slow 2 Dragon Monster 87.5 20 1 0.5 2 1 0.5 0.5 1 1 2 1 1 0.5 2 1 1 1 0.5 0.5 7 6 Charizard Glurak 1 Normal Flame Pokemon 2 Fire Flying 1.7 90.5 2 Blaze Solar Power 534 78 84 78 109 85 100 45 70 240 Medium Slow 2 Dragon Monster 87.5 20 1 0.5 2 2 0.25 1 0.5 1 0 1 1 0.25 4 1 1 1 0.5 0.5 8 6 Mega Charizard X Glurak 1 Normal Flame Pokemon 2 Fire Dragon 1.7 110.5 1 Tough Claws 634 78 130 111 130 85 100 45 70 285 Medium Slow 2 Dragon Monster 87.5 20 1 0.25 1 0.5 0.25 1 1 1 2 1 1 0.5 2 1 2 1 0.5 1 9 6 Mega Charizard Y Glurak 1 Normal Flame Pokemon 2 Fire Flying 1.7 100.5 1 Drought 634 78 104 78 159 115 100 45 70 285 Medium Slow 2 Dragon Monster 87.5 20 1 0.5 2 2 0.25 1 0.5 1 0 1 1 0.25 4 1 1 1 0.5 0.5 10 7 Squirtle Schiggy 1 Normal Tiny Turtle Pokemon 1 Water 0.5 9 2 Torrent Rain Dish 314 44 48 65 50 64 43 45 70 63 Medium Slow 2 Monster Water 1 87.5 20 1 0.5 0.5 2 2 0.5 1 1 1 1 1 1 1 1 1 1 0.5 1 To read in a pipe delimited file (the ‘|’ character), we have to make some changes. Here is the proc import code. Note that I am reading in a version of the file that I’ve converted to ASCII (see details below) because while the import works with the original file, it causes the SAS -&gt; R pipeline that the book is built on to break. tmp &lt;- readLines(&quot;data/NE_Features_20200501.txt&quot;) tmp_ascii &lt;- iconv(tmp, to = &quot;ASCII//TRANSLIT&quot;) writeLines(tmp_ascii, &quot;data/NE_Features_ascii.txt&quot;) /* Without specifying the library to store the data in, it is stored in WORK */ proc import datafile = &quot;data/NE_Features_ascii.txt&quot; out=nefeatures DBMS = DLM /* delimited file */ replace; GETNAMES = YES; DELIMITER = &#39;|&#39;; GUESSINGROWS = 31582; run; proc print data=nefeatures (obs=10); /* print the first 10 observations */ run; Obs FEATURE_ID FEATURE_NAME FEATURE_CLASS STATE_ALPHA STATE_NUMERIC COUNTY_NAME COUNTY_NUMERIC PRIMARY_LAT_DMS PRIM_LONG_DMS PRIM_LAT_DEC PRIM_LONG_DEC SOURCE_LAT_DMS SOURCE_LONG_DMS SOURCE_LAT_DEC SOURCE_LONG_DEC ELEV_IN_M ELEV_IN_FT MAP_NAME DATE_CREATED DATE_EDITED 1 171013 Peetz Table Area CO 8 Logan 75 405840N 1030332W 40.9777645 -103.0588116 . . 1341 4400 Peetz 10/13/1978 . 2 171029 Sidney Draw Valley NE 31 Cheyenne 33 410816N 1030116W 41.1377213 -103.021044 405215N 1040353W 40.8709614 -104.0646558 1256 4121 Brownson 10/13/1978 03/08/2018 3 182687 Highline Canal Canal CO 8 Sedgwick 115 405810N 1023137W 40.9694351 -102.5268556 . . 1118 3668 Sedgwick 10/13/1978 . 4 182688 Cottonwood Creek Stream CO 8 Sedgwick 115 405511N 1023355W 40.9197132 -102.5651893 405850N 1030107W 40.9805426 -103.0185329 1096 3596 Sedgwick 10/13/1978 10/23/2009 5 182689 Sand Draw Valley CO 8 Sedgwick 115 405951N 1023040W 40.9974447 -102.5111958 410203N 1023313W 41.0342898 -102.5536 1137 3730 Sedgwick 10/13/1978 12/20/2017 6 182690 Sedgwick Draw Valley CO 8 Sedgwick 115 405749N 1023313W 40.9636507 -102.5534931 410227N 1023722W 41.0407909 -102.6227148 1113 3652 Sedgwick 10/13/1978 11/04/2017 7 182692 Peterson Ditch Canal CO 8 Sedgwick 115 405604N 1023053W 40.9345581 -102.514778 . . 1171 3842 Sedgwick 10/13/1978 10/15/2019 8 182727 Sand Creek Stream CO 8 Sedgwick 115 404938N 1021752W 40.8272161 -102.2976858 404857N 1022344W 40.8158264 -102.3954646 1151 3776 Julesburg SE 10/13/1978 . 9 182826 Wildhorse Creek Stream CO 8 Phillips 95 403620N 1020722W 40.6055504 -102.1226852 403734N 1025720W 40.6261012 -102.9554801 1101 3612 Amherst SE 10/13/1978 . 10 183028 North Fork Republican River Stream NE 31 Dundy 57 400111N 1015618W 40.0197222 -101.9383333 395958N 1022714W 39.9994444 -102.4538889 988 3241 Haigler 10/13/1978 07/26/2019 Under the hood, proc import is just writing code for a data step. So when proc import doesn’t work, we can just write the code ourselves. It requires a bit more work (specifying column names, for example) but it also doesn’t fail nearly as often. /* x &quot;curl https://raw.githubusercontent.com/srvanderplas/unl-stat850/master/data/NE_Features_20200501.txt &gt; data/NE_Features_20200501.txt&quot;; */ /* only run this once... */ data nefeatures; /*infile &quot;data/NE_Features_20200501.txt&quot;*/ infile &quot;data/NE_Features_ascii.txt&quot; dlm=&#39;|&#39; /* specify delimiter */ encoding=&quot;utf-8&quot; /* specify encoding */ DSD /* delimiter sensitive data */ missover /* keep going if missing obs encountered */ firstobs=2; /* skip header row */ input FEATURE_ID $ FEATURE_NAME $ FEATURE_CLASS $ STATE_ALPHA $ STATE_NUMERIC COUNTY_NAME $ COUNTY_NUMERIC $ PRIMARY_LAT_DMS $ PRIM_LONG_DMS $ PRIM_LAT_DEC PRIM_LONG_DEC SOURCE_LAT_DMS $ SOURCE_LONG_DMS $ SOURCE_LAT_DEC SOURCE_LONG_DEC ELEV_IN_M ELEV_IN_FT MAP_NAME $ DATE_CREATED $ DATE_EDITED $ ; run; proc print data=nefeatures (obs=10); /* print the first 10 observations */ run; Obs FEATURE_ID FEATURE_NAME FEATURE_CLASS STATE_ALPHA STATE_NUMERIC COUNTY_NAME COUNTY_NUMERIC PRIMARY_LAT_DMS PRIM_LONG_DMS PRIM_LAT_DEC PRIM_LONG_DEC SOURCE_LAT_DMS SOURCE_LONG_DMS SOURCE_LAT_DEC SOURCE_LONG_DEC ELEV_IN_M ELEV_IN_FT MAP_NAME DATE_CREATED DATE_EDITED 1 171013 Peetz Ta Area CO 8 Logan 075 405840N 1030332W 40.9778 -103.059 . . 1341 4400 Peetz 10/13/19 2 171029 Sidney D Valley NE 31 Cheyenne 033 410816N 1030116W 41.1377 -103.021 405215N 1040353W 40.8710 -104.065 1256 4121 Brownson 10/13/19 03/08/20 3 182687 Highline Canal CO 8 Sedgwick 115 405810N 1023137W 40.9694 -102.527 . . 1118 3668 Sedgwick 10/13/19 4 182688 Cottonwo Stream CO 8 Sedgwick 115 405511N 1023355W 40.9197 -102.565 405850N 1030107W 40.9805 -103.019 1096 3596 Sedgwick 10/13/19 10/23/20 5 182689 Sand Dra Valley CO 8 Sedgwick 115 405951N 1023040W 40.9974 -102.511 410203N 1023313W 41.0343 -102.554 1137 3730 Sedgwick 10/13/19 12/20/20 6 182690 Sedgwick Valley CO 8 Sedgwick 115 405749N 1023313W 40.9637 -102.553 410227N 1023722W 41.0408 -102.623 1113 3652 Sedgwick 10/13/19 11/04/20 7 182692 Peterson Canal CO 8 Sedgwick 115 405604N 1023053W 40.9346 -102.515 . . 1171 3842 Sedgwick 10/13/19 10/15/20 8 182727 Sand Cre Stream CO 8 Sedgwick 115 404938N 1021752W 40.8272 -102.298 404857N 1022344W 40.8158 -102.395 1151 3776 Julesbur 10/13/19 9 182826 Wildhors Stream CO 8 Phillips 095 403620N 1020722W 40.6056 -102.123 403734N 1025720W 40.6261 -102.955 1101 3612 Amherst 10/13/19 10 183028 North Fo Stream NE 31 Dundy 057 400111N 1015618W 40.0197 -101.938 395958N 1022714W 39.9994 -102.454 988 3241 Haigler 10/13/19 07/26/20 Try it out Rebrickable.com contains tables of almost any information imaginable concerning Lego sets, conveninently available at their download page. Because these datasets are comparatively large, they are available as compressed CSV files - that is, the .gz extension is a gzip compression applied to the CSV. The readr package can handle .csv.gz files with no problems. Try reading in the data using the appropriate function from that package. Can you save the data as an uncompressed csv? library(readr) legosets &lt;- read_csv(&quot;https://cdn.rebrickable.com/media/downloads/sets.csv.gz&quot;) write_csv(legosets, &quot;data/lego_sets.csv&quot;) In SAS, it is also possible to read gzip files directly; however, it is tricky to get PROC IMPORT to work with gzip files. The code below will 1) download the file (uncomment that part), 2) create a link to the gzip file, 3) create a link to where the unzipped file will go, and 4) unzip the file to the link specified in (3). Can you write two different statements (one using proc import on the unzipped file, one using a datastep on the zipped file) to read the data in? Note that you may have to specify the length of character fields in the data step version using length var_name $ 100; before the input statement to set variable var_name to have maximum length of 100 characters. /* x &quot;curl https://cdn.rebrickable.com/media/downloads/sets.csv.gz &gt; \\ data/lego_sets.csv.gz&quot;; only run this once... */ filename legofile ZIP &quot;data/lego_sets.csv.gz&quot; GZIP; filename target &quot;data/lego_sets.csv&quot;; data _null_; infile legofile; file target; input; put _infile_; run; libname classdat &quot;sas/&quot;; /* Work with the library of class data */ filename legofile ZIP &quot;data/lego_sets.csv.gz&quot; GZIP; filename target &quot;data/lego_sets.csv&quot;; data _null_; infile legofile; file target; input; put _infile_; run; proc import datafile = target out=classdat.legoset DBMS=csv replace; GETNAMES=YES; GUESSINGROWS=15424; run; /* This dataset will be stored in WORK */ data legoset2; infile legofile dsd firstobs=2 dlm=&quot;,&quot;; length set_num $20; length name $100; input set_num $ name $ year theme_id num_parts; run; proc print data=classdat.legoset (obs=10); run; proc print data=legoset2 (obs=10); run; Obs set_num name year theme_id num_parts 1 001-1 Gears 1965 1 43 2 0011-2 Town Mini-Figures 1978 84 12 3 0011-3 Castle 2 for 1 Bonus Offer 1987 199 0 4 0012-1 Space Mini-Figures 1979 143 12 5 0013-1 Space Mini-Figures 1979 143 12 6 0014-1 Space Mini-Figures 1979 143 12 7 0015-1 Space Mini-Figures 1979 143 18 8 0016-1 Castle Mini Figures 1978 186 15 9 002-1 4.5V Samsonite Gears Motor Set 1965 1 3 10 003-1 Master Mechanic Set 1966 366 403 Obs set_num name year theme_id num_parts 1 001-1 Gears 1965 1 43 2 0011-2 Town Mini-Figures 1978 84 12 3 0011-3 Castle 2 for 1 Bonus Offer 1987 199 0 4 0012-1 Space Mini-Figures 1979 143 12 5 0013-1 Space Mini-Figures 1979 143 12 6 0014-1 Space Mini-Figures 1979 143 12 7 0015-1 Space Mini-Figures 1979 143 18 8 0016-1 Castle Mini Figures 1978 186 15 9 002-1 4.5V Samsonite Gears Motor Set 1965 1 3 10 003-1 Master Mechanic Set 1966 366 403 4.3 Spreadsheets In R, the easiest way to read Excel data in is to use the readxl package. There are many other packages with different features, however - I have used openxlsx in the past to format spreadsheets to send to clients, for instance. By far and away you are more likely to have problems with the arcane format of the Excel spreadsheet than with the package used to read the data in. It is usually helpful to open the spreadsheet up in Excel or LibreOffice first to make sure the formatting is as you expected it to be. if (!&quot;readxl&quot; %in% installed.packages()) install.packages(&quot;readxl&quot;) library(readxl) path &lt;- &quot;data/police_violence.xlsx&quot; if (!file.exists(path)) download.file(&quot;https://mappingpoliceviolence.org/s/MPVDatasetDownload.xlsx&quot;, path, mode = &quot;wb&quot;) police_violence &lt;- read_xlsx(&quot;data/police_violence.xlsx&quot;, sheet = 1) police_violence[1:10, 1:6] # A tibble: 10 x 6 `Victim&#39;s name` `Victim&#39;s age` `Victim&#39;s gende… `Victim&#39;s race` &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; 1 Eric M. Tellez 28 Male White 2 Name withheld … NA Male Unknown race 3 Terry Hudson 57 Male Black 4 Malik Williams 23 Male Black 5 Frederick Perk… 37 Male Black 6 Michael Vincen… 49 Male White 7 Brian Elkins 47 Male Unknown race 8 Debra D. Arbuc… 51 Female White 9 Name withheld … NA Male Unknown race 10 Cody McCaulou 27 Male White # … with 2 more variables: `URL of image of victim` &lt;chr&gt;, `Date of Incident # (month/day/year)` &lt;dttm&gt; In SAS, PROC IMPORT is one easy way to read in xlsx files. In this code chunk, we have to handle the fact that one of the columns in the spreadsheet contains dates. SAS and Excel handle dates a bit differently, so we have to transform the date variable – and we may as well relabel it at the same time. To do this, we use a DATA statement that outputs to the same dataset it references. We define a new variable date, adjust the Excel dates so that they conform to SAS’s standard, and tell SAS how to format the date. (We’ll talk more about dates and times later) libname classdat &quot;sas/&quot;; PROC IMPORT OUT=classdat.police DATAFILE=&quot;data/police_violence.xlsx&quot; DBMS=xlsx /* Tell SAS what type of file it&#39;s reading */ REPLACE; /* replace the dataset if it already exists */ SHEET=&quot;2013-2019 Police Killings&quot;; /* SAS reads the first sheet by default */ GETNAMES=yes; informat VAR6 mmddyy10.; /* tell SAS what format the date is in */ RUN; DATA classdat.police; SET classdat.police; /* modify the dataset and write back out to it */ date = VAR6 - 21916; /* Conversion to SAS date standard from Excel */ FORMAT date MMDDYY10.; /* Tell SAS how to format the data when printing it */ DROP VAR6; /* Get rid of the original data */ num_age = INPUT(Victim_s_age, 3.); /* create numeric age variable */ DROP A_brief_description_of_the_circu URL_of_image_of_victim Link_to_news_article_or_photo_of; /* drop longer variable to save space so the file fits on GitHub */ /* Size went from 100 MB to 6.7 MB without these 3 vars */ RUN; PROC PRINT DATA=classdat.police (obs=10); /* print the first 10 observations */ VAR Victim_s_name Victim_s_age num_age Victim_s_gender Victim_s_race date; RUN; Obs Victim_s_name Victim_s_age num_age Victim_s_gender Victim_s_race date 1 Eric M. Tellez 28 28 Male White 12/31/2019 2 Name withheld by police . Male Unknown race 12/31/2019 3 Terry Hudson 57 57 Male Black 12/31/2019 4 Malik Williams 23 23 Male Black 12/31/2019 5 Frederick Perkins 37 37 Male Black 12/31/2019 6 Michael Vincent Davis 49 49 Male White 12/31/2019 7 Brian Elkins 47 47 Male Unknown race 12/31/2019 8 Debra D. Arbuckle 51 51 Female White 12/30/2019 9 Name withheld by police . Male Unknown race 12/30/2019 10 Cody McCaulou 27 27 Male White 12/30/2019 Here is some additional information about reading and writing Excel files in SAS. In general, it is better to avoid working in Excel, as it is not easy to reproduce the results (and Excel is horrible about dates and times, among other issues). Saving your data in more reproducible formats will make writing reproducible code much easier. Try it out The Nebraska Department of Motor Vehicles publishes a database of vehicle registrations by type of license plate. Link Read that data in using both R and SAS. Be sure to look at the structure of the excel file, so that you can read the data in properly! url &lt;- &quot;https://dmv.nebraska.gov/sites/dmv.nebraska.gov/files/doc/2019_Veh_Reg_by_Plate_Type.xlsx&quot; download.file(url, destfile = &quot;data/2019_Vehicle_Registration_Plates_NE.xlsx&quot;, mode = &quot;wb&quot;) library(readxl) ne_plates &lt;- read_xlsx(path = &quot;data/2019_Vehicle_Registration_Plates_NE.xlsx&quot;, skip = 1) New names: * County -&gt; County...1 * County -&gt; County...34 ne_plates[1:10,1:6] # A tibble: 10 x 6 County...1 `Amateur\\r\\nRad… `Apport-\\r\\nion… `Apport\\r\\nTrlr` AC &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 C01 - DOU… 148 0 0 10 2 C02 - LAN… 244 0 0 2 3 C03 - GAGE 10 0 0 1 4 C04 - CUS… 6 0 0 0 5 C05 - DOD… 28 0 0 0 6 C06 - SAU… 18 0 0 0 7 C07 - MAD… 19 0 0 0 8 C08 - HALL 16 0 0 0 9 C09 - BUF… 26 0 0 2 10 C10 - PLA… 12 0 0 2 # … with 1 more variable: `Breast\\r\\nCancer` &lt;dbl&gt; PROC IMPORT OUT=WORK.licplate DATAFILE=&quot;data/2019_Vehicle_Registration_Plates_NE.xlsx&quot; DBMS=xlsx /* Tell SAS what type of file it&#39;s reading */ REPLACE; /* replace the dataset if it already exists */ RANGE=&quot;&#39;Reg By Plate Type&#39;$A2:0&quot; GETNAMES=yes; RUN; /* just a few columns... way too many to handle */ PROC PRINT DATA=WORK.licplate (obs=10); /* print the first 10 observations */ Var County Amateur__Radio Breast__Cancer Choose__Life County__Gov Comm__Truck Passenger Total; RUN; Obs County Amateur__Radio Breast__Cancer Choose__Life County__Gov Comm__Truck Passenger TOTAL 1 C01 - DOUGLAS 148 957 584 1432 71296 313694 467720 2 C02 - LANCASTER 244 802 540 649 44031 164391 275088 3 C03 - GAGE 10 47 17 135 6153 12839 32484 4 C04 - CUSTER 6 13 5 218 2684 6312 22154 5 C05 - DODGE 28 86 32 92 8907 21248 45040 6 C06 - SAUNDERS 18 65 55 225 6019 13372 34531 7 C07 - MADISON 19 88 47 197 9308 19776 44478 8 C08 - HALL 16 136 59 212 15177 35270 72244 9 C09 - BUFFALO 26 79 46 206 12354 27235 61208 10 C10 - PLATTE 12 77 62 186 9437 20137 47551 4.4 Binary Files Both R and SAS have binary data files that store data in a more compact form. It is relatively common for government websites, in particular, to provide SAS data in binary form. Luckily, it is possible to read the binary data files in both programs. Let’s read in the data from the 2009 National Household Travel Survey: libname classdat &quot;data&quot;; /* this tells SAS where to look for (a bunch of) data files */ proc contents data=classdat.cen10pub; /* This tells sas to access the specific file */ run; Data Set Name CLASSDAT.CEN10PUB Observations 150147 Member Type DATA Variables 8 Engine V9 Indexes 0 Created 06/30/2014 12:35:56 Observation Length 25 Last Modified 06/30/2014 12:35:56 Deleted Observations 0 Protection Compressed NO Data Set Type Sorted NO Label Data Representation WINDOWS_32 Encoding wlatin1 Western (Windows) Engine/Host Dependent Information Data Set Page Size 4096 Number of Data Set Pages 928 First Data Page 1 Max Obs per Page 162 Obs in First Data Page 75 Number of Data Set Repairs 0 Filename /home/susan/Projects/Class/unl-stat850/stat850-textbook/data/cen10pub.sas7bdat Release Created 9.0202M2 Host Created W32_VSPRO Inode Number 39064453 Access Permission rw-rw-r– Owner Name susan File Size 4MB File Size (bytes) 3802112 Alphabetic List of Variables and Attributes # Variable Type Len Format Informat Label 5 CBSACAT10 Char 2 CBSA category for the HH home address 4 CBSASIZE10 Char 2 CBSA (2010) population size for the HH home address 2 HH_CBSA10 Char 5 \\(CHAR5.&lt;/td&gt; &lt;td class=&quot;l data&quot;&gt;\\)CHAR5. HH CBSA location, 2013 CBSA definitions based on 2010 Census 1 HOUSEID Char 8 $8. $8. HH eight-digit ID number 3 RAIL10 Char 2 CBSA (2010) heavy rail status for HH 6 URBAN10 Char 2 Home address in urbanized area 8 URBRUR10 Char 2 Household in urban/rural area (2010 Urban definition) 7 URBSIZE10 Char 2 Size of urban area in which home address is located We can read the same file into R using the sas7bdat library: if (!&quot;sas7bdat&quot; %in% installed.packages()) install.packages(&quot;sas7bdat&quot;) library(sas7bdat) data &lt;- read.sas7bdat(&quot;https://github.com/srvanderplas/unl-stat850/raw/master/data/cen10pub.sas7bdat&quot;) head(data) HOUSEID HH_CBSA10 RAIL10 CBSASIZE10 CBSACAT10 URBAN10 URBSIZE10 URBRUR10 1 20000017 XXXXX 02 02 03 04 06 02 2 20000231 XXXXX 02 03 03 01 03 01 3 20000521 XXXXX 02 03 03 01 03 01 4 20001283 35620 01 05 01 01 05 01 5 20001603 -1 02 06 04 04 06 02 6 20001649 XXXXX 02 03 03 01 02 01 If you are curious about what this data means, then by all means, take a look at the codebook (XLSX file). For now, it’s enough that we can see roughly how it’s structured. There are theoretically ways to read R data into SAS via the R subsystem. Feel free to do that on your own machine.16 In R, there are a couple of different binary files. .Rdata is perhaps the most common, and can store several objects (along with their names) in the same file. legos &lt;- read_csv(&quot;data/lego_sets.csv&quot;) Parsed with column specification: cols( set_num = col_character(), name = col_character(), year = col_double(), theme_id = col_double(), num_parts = col_double() ) my_var &lt;- &quot;This variable contains a string&quot; save(legos, my_var, file = &quot;data/R_binary.Rdata&quot;) If we look at the file sizes of lego_sets.csv (619 KB) and R_binary.Rdata(227.8 KB), the size difference between binary and flat file formats is obvious. We can load the R binary file back in using the load() function. rm(legos, my_var) # clear the files out ls() # all objects in the working environment [1] &quot;%dosomething%&quot; &quot;a&quot; &quot;adder&quot; [4] &quot;all_files&quot; &quot;all_lines&quot; &quot;all_pkgs&quot; [7] &quot;basel_value&quot; &quot;breaks&quot; &quot;circle_area&quot; [10] &quot;crust_ingredients&quot; &quot;current_value&quot; &quot;data&quot; [13] &quot;decimal&quot; &quot;dep_list&quot; &quot;df&quot; [16] &quot;dist&quot; &quot;dog&quot; &quot;essential_toppings&quot; [19] &quot;f1&quot; &quot;f2&quot; &quot;f3&quot; [22] &quot;grocery_list&quot; &quot;i&quot; &quot;ick&quot; [25] &quot;integer&quot; &quot;logical&quot; &quot;m3&quot; [28] &quot;m3or5&quot; &quot;m5&quot; &quot;mat&quot; [31] &quot;math_and_lsd&quot; &quot;mesodata&quot; &quot;mesodata_names&quot; [34] &quot;minv&quot; &quot;month_fct&quot; &quot;mtcars&quot; [37] &quot;myfun&quot; &quot;myfun2&quot; &quot;myfun3&quot; [40] &quot;ne_plates&quot; &quot;nebraska_locations&quot; &quot;npkgs&quot; [43] &quot;path&quot; &quot;pattern&quot; &quot;pattern2&quot; [46] &quot;pkgs&quot; &quot;pkgs2&quot; &quot;pokemon_info&quot; [49] &quot;police_violence&quot; &quot;prev_basel_value&quot; &quot;prev_value&quot; [52] &quot;r_files&quot; &quot;rmd_files&quot; &quot;sasopts&quot; [55] &quot;saspath&quot; &quot;state_facts&quot; &quot;state.abb&quot; [58] &quot;state.area&quot; &quot;state.center&quot; &quot;state.division&quot; [61] &quot;state.name&quot; &quot;state.region&quot; &quot;state.x77&quot; [64] &quot;string&quot; &quot;tmp&quot; &quot;tmp_ascii&quot; [67] &quot;tmp_chars&quot; &quot;tmp_chars_space&quot; &quot;tmp_space&quot; [70] &quot;try_install_pkg&quot; &quot;txt&quot; &quot;url&quot; [73] &quot;w&quot; &quot;widths&quot; &quot;x&quot; [76] &quot;y&quot; &quot;y_mag&quot; &quot;y_sign&quot; [79] &quot;yfact&quot; &quot;yummy_toppings&quot; &quot;z&quot; load(&quot;data/R_binary.Rdata&quot;) ls() # all objects in the working environment [1] &quot;%dosomething%&quot; &quot;a&quot; &quot;adder&quot; [4] &quot;all_files&quot; &quot;all_lines&quot; &quot;all_pkgs&quot; [7] &quot;basel_value&quot; &quot;breaks&quot; &quot;circle_area&quot; [10] &quot;crust_ingredients&quot; &quot;current_value&quot; &quot;data&quot; [13] &quot;decimal&quot; &quot;dep_list&quot; &quot;df&quot; [16] &quot;dist&quot; &quot;dog&quot; &quot;essential_toppings&quot; [19] &quot;f1&quot; &quot;f2&quot; &quot;f3&quot; [22] &quot;grocery_list&quot; &quot;i&quot; &quot;ick&quot; [25] &quot;integer&quot; &quot;legos&quot; &quot;logical&quot; [28] &quot;m3&quot; &quot;m3or5&quot; &quot;m5&quot; [31] &quot;mat&quot; &quot;math_and_lsd&quot; &quot;mesodata&quot; [34] &quot;mesodata_names&quot; &quot;minv&quot; &quot;month_fct&quot; [37] &quot;mtcars&quot; &quot;my_var&quot; &quot;myfun&quot; [40] &quot;myfun2&quot; &quot;myfun3&quot; &quot;ne_plates&quot; [43] &quot;nebraska_locations&quot; &quot;npkgs&quot; &quot;path&quot; [46] &quot;pattern&quot; &quot;pattern2&quot; &quot;pkgs&quot; [49] &quot;pkgs2&quot; &quot;pokemon_info&quot; &quot;police_violence&quot; [52] &quot;prev_basel_value&quot; &quot;prev_value&quot; &quot;r_files&quot; [55] &quot;rmd_files&quot; &quot;sasopts&quot; &quot;saspath&quot; [58] &quot;state_facts&quot; &quot;state.abb&quot; &quot;state.area&quot; [61] &quot;state.center&quot; &quot;state.division&quot; &quot;state.name&quot; [64] &quot;state.region&quot; &quot;state.x77&quot; &quot;string&quot; [67] &quot;tmp&quot; &quot;tmp_ascii&quot; &quot;tmp_chars&quot; [70] &quot;tmp_chars_space&quot; &quot;tmp_space&quot; &quot;try_install_pkg&quot; [73] &quot;txt&quot; &quot;url&quot; &quot;w&quot; [76] &quot;widths&quot; &quot;x&quot; &quot;y&quot; [79] &quot;y_mag&quot; &quot;y_sign&quot; &quot;yfact&quot; [82] &quot;yummy_toppings&quot; &quot;z&quot; Another (less common) binary format used in R is the RDS format. Unlike Rdata, the RDS format does not save the object name - it only saves its contents. As a result, when you read from an RDS file, you need to store the result of that function into a variable. saveRDS(legos, &quot;data/RDSlego.rds&quot;) other_lego &lt;- readRDS(&quot;data/RDSlego.rds&quot;) Because RDS formats don’t save the object name, you can be sure that you’re not over-writing some object in your workspace by loading a different file. The downside to this is that you have to save each object to its own RDS file separately. Try it out Read in two of the files from an earlier example, and save the results as an Rdata file with two objects. Then save each one as an RDS file. In RStudio, go to Session -&gt; Clear Workspace. (This will clear your environment) Now, using your RDS files, load the objects back into R with different names. Finally, load your Rdata file. Are the two objects the same? (You can actually test this with all.equal() if you’re curious) library(readxl) police_violence &lt;- read_xlsx(&quot;data/police_violence.xlsx&quot;, sheet = 1, guess_max = 7000) police_violence2 &lt;- read_xlsx(&quot;data/police_violence.xlsx&quot;, sheet = 2, guess_max = 7000) save(police_violence, police_violence2, file = &quot;data/04_Try_Binary.Rdata&quot;) saveRDS(police_violence, &quot;data/04_Try_Binary1.rds&quot;) saveRDS(police_violence2, &quot;data/04_Try_Binary2.rds&quot;) rm(police_violence, police_violence2) # Limited clearing of workspace... pv1 &lt;- readRDS(&quot;data/04_Try_Binary1.rds&quot;) pv2 &lt;- readRDS(&quot;data/04_Try_Binary2.rds&quot;) load(&quot;data/04_Try_Binary.Rdata&quot;) all.equal(police_violence, pv1) [1] TRUE all.equal(police_violence2, pv2) [1] TRUE 4.5 Databases There are many different database formats. Some of the most common databases are SQL* related formats and Microsoft Access files. This excellent GitHub repo contains code to connect to multiple types of databases in R, python, PHP, Java, SAS, and VBA 4.5.1 Microsoft Access In R, we can read in MS Access files using the Hmisc package, as long as the mdbtools library is available on your computer17. For this demo, we’ll be using the Scottish Witchcraft Database, which you can download from their website, or acquire from the course data folder. if (!&quot;Hmisc&quot; %in% installed.packages()) install.packages(&quot;Hmisc&quot;) library(Hmisc) db_loc &lt;- &quot;data/Witchcraftsurvey_download.mdb&quot; mdb.get(db_loc, tables = TRUE) # get table list [1] &quot;WDB_Accused&quot; &quot;WDB_Accused_family&quot; [3] &quot;WDB_Appeal&quot; &quot;WDB_CalendarCustom&quot; [5] &quot;WDB_Case&quot; &quot;WDB_Case_person&quot; [7] &quot;WDB_Commission&quot; &quot;WDB_Complaint&quot; [9] &quot;WDB_Confession&quot; &quot;WDB_CounterStrategy&quot; [11] &quot;WDB_DemonicPact&quot; &quot;WDB_Denunciation&quot; [13] &quot;WDB_DevilAppearance&quot; &quot;WDB_Elf_FairyElements&quot; [15] &quot;WDB_Imprisonment&quot; &quot;WDB_LinkedTrial&quot; [17] &quot;WDB_Malice&quot; &quot;WDB_MentionedAsWitch&quot; [19] &quot;WDB_MovestoHLA&quot; &quot;WDB_MusicalInstrument&quot; [21] &quot;WDB_Ordeal&quot; &quot;WDB_OtherCharges&quot; [23] &quot;WDB_OtherNamedwitch&quot; &quot;WDB_Person&quot; [25] &quot;WDB_PrevCommission&quot; &quot;WDB_PropertyDamage&quot; [27] &quot;WDB_Ref_Parish&quot; &quot;WDB_Reference&quot; [29] &quot;WDB_ReligiousMotif&quot; &quot;WDB_RitualObject&quot; [31] &quot;WDB_ShapeChanging&quot; &quot;WDB_Source&quot; [33] &quot;WDB_Torture&quot; &quot;WDB_Trial&quot; [35] &quot;WDB_Trial_Person&quot; &quot;WDB_WeatherModification&quot; [37] &quot;WDB_WhiteMagic&quot; &quot;WDB_WitchesMeetingPlace&quot; mdb.get(db_loc, tables = &quot;WDB_Trial&quot;) # get table of trials Trialref TrialId TrialSystemId CaseRef TrialType Trial.settlement 1 T/JO/1 1 JO C/EGD/2120 2 2 T/JO/100 100 JO C/JO/2669 2 3 T/JO/1000 1000 JO C/EGD/1474 2 4 T/JO/1001 1001 JO C/EGD/1558 2 5 T/JO/1002 1002 JO C/EGD/1681 2 6 T/JO/1003 1003 JO C/EGD/1680 2 7 T/JO/1004 1004 JO C/EGD/1682 2 8 T/JO/1005 1005 JO C/EGD/1683 2 9 T/JO/1006 1006 JO C/JO/2902 2 10 T/JO/1007 1007 JO C/EGD/1689 2 11 T/JO/1008 1008 JO C/EGD/1688 2 12 T/JO/1009 1009 JO C/EGD/1687 2 13 T/JO/101 101 JO C/EGD/1316 4 14 T/JO/1010 1010 JO C/EGD/1686 2 15 T/JO/1011 1011 JO C/EGD/1685 2 16 T/JO/1012 1012 JO C/EGD/1684 2 17 T/JO/1013 1013 JO C/EGD/1691 2 18 T/JO/1014 1014 JO C/EGD/1690 2 19 T/JO/1015 1015 JO C/EGD/1694 2 20 T/JO/1016 1016 JO C/EGD/1693 2 21 T/JO/1017 1017 JO C/EGD/1692 2 22 T/JO/1018 1018 JO C/EGD/1557 2 23 T/JO/1019 1019 JO C/EGD/1714 2 24 T/JO/102 102 JO C/EGD/1316 2 25 T/JO/1020 1020 JO C/JO/2903 2 26 T/JO/1022 1022 JO C/EGD/1367 2 27 T/JO/1023 1023 JO C/EGD/1368 2 28 T/JO/1024 1024 JO C/EGD/1375 2 29 T/JO/1025 1025 JO C/EGD/1372 2 30 T/JO/1026 1026 JO C/EGD/1373 2 31 T/JO/1027 1027 JO C/JO/2905 2 32 T/JO/1028 1028 JO C/EGD/1374 2 33 T/JO/1029 1029 JO C/EGD/1373 4 34 T/JO/103 103 JO C/EGD/1315 4 35 T/JO/1030 1030 JO C/EGD/1372 4 36 T/JO/1031 1031 JO C/EGD/1368 4 37 T/JO/1032 1032 JO C/EGD/1367 4 38 T/JO/1033 1033 JO C/JO/2905 4 39 T/JO/1034 1034 JO C/EGD/1354 4 40 T/JO/1035 1035 JO C/EGD/1343 4 41 T/JO/1036 1036 JO C/EGD/1344 4 42 T/JO/1037 1037 JO C/EGD/1370 4 43 T/JO/1038 1038 JO C/EGD/1957 4 44 T/JO/1039 1039 JO C/EGD/1969 4 45 T/JO/104 104 JO C/EGD/1315 2 46 T/JO/1040 1040 JO C/EGD/20 4 47 T/JO/1041 1041 JO C/EGD/1613 4 48 T/JO/1042 1042 JO C/EGD/1347 4 49 T/JO/1043 1043 JO C/EGD/1355 4 50 T/JO/1044 1044 JO C/EGD/516 4 51 T/JO/1045 1045 JO C/EGD/517 4 52 T/JO/1046 1046 JO C/EGD/1371 4 53 T/JO/105 105 JO C/JO/2670 2 54 T/JO/106 106 JO C/JO/2671 2 55 T/JO/107 107 JO C/EGD/1337 2 56 T/JO/1070 1070 JO C/EGD/523 4 57 T/JO/1071 1071 JO C/LA/2920 4 58 T/JO/1073 1073 JO C/JO/2923 2 59 T/JO/1074 1074 JO C/JO/2924 2 60 T/JO/1075 1075 JO C/EGD/1713 2 61 T/JO/1076 1076 JO C/EGD/1712 2 62 T/JO/1077 1077 JO C/EGD/2453 2 63 T/JO/108 108 JO C/EGD/1318 2 64 T/JO/109 109 JO C/JO/2672 2 65 T/JO/110 110 JO C/EGD/1318 4 66 T/JO/1107 1107 JO C/EGD/2231 2 67 T/JO/1109 1109 JO C/EGD/2471 2 68 T/JO/111 111 JO C/JO/2673 2 69 T/JO/1110 1110 JO C/EGD/2281 2 70 T/JO/1111 1111 JO C/EGD/2356 2 71 T/JO/1112 1112 JO C/JO/2927 2 72 T/JO/1113 1113 JO C/EGD/1819 2 73 T/JO/1114 1114 JO C/JO/2928 2 74 T/JO/1115 1115 JO C/EGD/1822 2 75 T/JO/1116 1116 JO C/EGD/1821 2 76 T/JO/1117 1117 JO C/EGD/1820 2 77 T/JO/1118 1118 JO C/EGD/1818 2 78 T/JO/1119 1119 JO C/JO/2929 2 79 T/JO/112 112 JO C/JO/2674 2 80 T/JO/1120 1120 JO C/JO/2930 2 81 T/JO/1121 1121 JO C/JO/2931 2 82 T/JO/1122 1122 JO C/JO/2932 2 83 T/JO/1123 1123 JO C/JO/2933 2 84 T/JO/1125 1125 JO C/EGD/2380 2 85 T/JO/1126 1126 JO C/EGD/2381 2 86 T/JO/1127 1127 JO C/EGD/2379 2 87 T/JO/1128 1128 JO C/EGD/2382 2 88 T/JO/1129 1129 JO C/EGD/1838 2 89 T/JO/113 113 JO C/JO/2675 2 90 T/JO/1131 1131 JO C/EGD/1778 3 91 T/JO/1132 1132 JO C/EGD/1935 3 92 T/JO/1133 1133 JO C/EGD/1780 3 93 T/JO/1134 1134 JO C/JO/2934 3 94 T/JO/1135 1135 JO C/EGD/744 3 95 T/JO/1136 1136 JO C/EGD/1906 2 96 T/JO/1137 1137 JO C/JO/2935 2 97 T/JO/1138 1138 JO C/JO/2936 2 98 T/JO/1139 1139 JO C/JO/2937 2 99 T/JO/114 114 JO C/JO/2676 2 100 T/JO/1140 1140 JO C/JO/2938 2 101 T/JO/1141 1141 JO C/JO/2939 2 102 T/JO/1142 1142 JO C/JO/2940 2 103 T/JO/1143 1143 JO C/JO/2941 2 104 T/JO/1144 1144 JO C/EGD/16 2 105 T/JO/1145 1145 JO C/EGD/18 2 106 T/JO/1146 1146 JO C/EGD/17 2 107 T/JO/115 115 JO C/JO/2677 2 108 T/JO/116 116 JO C/JO/2678 2 109 T/JO/1168 1168 JO C/EGD/1931 3 110 T/JO/1169 1169 JO C/JO/2951 2 111 T/JO/117 117 JO C/JO/2679 2 112 T/JO/1170 1170 JO C/JO/2952 2 113 T/JO/1171 1171 JO C/JO/2953 2 114 T/JO/1172 1172 JO C/EGD/2363 2 115 T/JO/1173 1173 JO C/EGD/2612 2 116 T/JO/1174 1174 JO C/EGD/2613 2 117 T/JO/1175 1175 JO C/EGD/2614 2 118 T/JO/1176 1176 JO C/EGD/2619 2 119 T/JO/1177 1177 JO C/EGD/1866 2 120 T/JO/1178 1178 JO C/JO/2954 2 121 T/JO/1179 1179 JO C/JO/2955 2 122 T/JO/118 118 JO C/JO/2680 2 123 T/JO/1180 1180 JO C/EGD/2259 2 124 T/JO/1181 1181 JO C/EGD/2260 2 125 T/JO/1182 1182 JO C/EGD/2267 2 126 T/JO/1183 1183 JO C/EGD/2540 2 127 T/JO/1184 1184 JO C/EGD/2270 2 128 T/JO/1185 1185 JO C/EGD/2269 2 129 T/JO/1186 1186 JO C/EGD/2271 2 130 T/JO/1187 1187 JO C/EGD/2541 2 131 T/JO/1188 1188 JO C/EGD/2546 2 132 T/JO/1189 1189 JO C/JO/2956 2 133 T/JO/119 119 JO C/JO/2680 4 134 T/JO/1190 1190 JO C/EGD/2350 2 135 T/JO/1191 1191 JO C/EGD/2354 2 136 T/JO/1192 1192 JO C/EGD/2548 2 137 T/JO/1193 1193 JO C/EGD/2547 2 138 T/JO/1194 1194 JO C/EGD/2296 2 139 T/JO/1195 1195 JO C/EGD/2549 2 140 T/JO/1196 1196 JO C/EGD/2551 2 141 T/JO/1197 1197 JO C/EGD/2550 2 142 T/JO/1198 1198 JO C/EGD/2538 2 143 T/JO/120 120 JO C/JO/2681 2 144 T/JO/1201 1201 JO C/EGD/2011 2 145 T/JO/1203 1203 JO C/EGD/1841 2 146 T/JO/1206 1206 JO C/EGD/2387 2 147 T/JO/1207 1207 JO C/EGD/1856 2 148 T/JO/1208 1208 JO C/EGD/1855 2 149 T/JO/1209 1209 JO C/JO/2959 2 150 T/JO/121 121 JO C/JO/2682 2 151 T/JO/1210 1210 JO C/EGD/1848 2 152 T/JO/1212 1212 JO C/EGD/2411 2 153 T/JO/1213 1213 JO C/EGD/1855 4 154 T/JO/1214 1214 JO C/EGD/1856 4 155 T/JO/1215 1215 JO C/JO/2960 4 156 T/JO/1216 1216 JO C/JO/2961 4 157 T/JO/1217 1217 JO C/JO/2962 4 158 T/JO/1218 1218 JO C/JO/2963 4 159 T/JO/1219 1219 JO C/JO/2964 4 160 T/JO/122 122 JO C/JO/2683 2 161 T/JO/123 123 JO C/JO/2684 2 162 T/JO/124 124 JO C/JO/2685 2 163 T/JO/125 125 JO C/JO/2686 2 164 T/JO/1254 1254 JO C/JO/2983 2 165 T/JO/1255 1255 JO C/JO/2984 2 166 T/JO/1256 1256 JO C/EGD/1823 2 167 T/JO/1257 1257 JO C/EGD/1825 2 168 T/JO/1258 1258 JO C/EGD/2153 2 169 T/JO/1259 1259 JO C/EGD/2191 2 170 T/JO/126 126 JO C/EGD/1619 2 171 T/JO/1260 1260 JO C/JO/3007 2 172 T/JO/1261 1261 JO C/EGD/2153 2 173 T/JO/1262 1262 JO C/EGD/1839 2 174 T/JO/1263 1263 JO C/EGD/2195 2 175 T/JO/1264 1264 JO C/EGD/2362 2 176 T/JO/1265 1265 JO C/EGD/2361 2 177 T/JO/1266 1266 JO C/EGD/2266 2 178 T/JO/1267 1267 JO C/EGD/2268 2 179 T/JO/1268 1268 JO C/EGD/2319 2 180 T/JO/1269 1269 JO C/JO/3008 2 181 T/JO/127 127 JO C/EGD/1618 2 182 T/JO/1270 1270 JO C/JO/3009 2 183 T/JO/1271 1271 JO C/EGD/2461 2 184 T/JO/1272 1272 JO C/EGD/2462 2 185 T/JO/1273 1273 JO C/EGD/2085 2 186 T/JO/1274 1274 JO C/EGD/2086 2 187 T/JO/1275 1275 JO C/EGD/2087 2 188 T/JO/1276 1276 JO C/EGD/2088 2 189 T/JO/1277 1277 JO C/JO/3012 2 190 T/JO/1278 1278 JO C/JO/3013 2 191 T/JO/1279 1279 JO C/JO/3014 2 192 T/JO/128 128 JO C/EGD/1625 2 193 T/JO/1280 1280 JO C/JO/3015 2 194 T/JO/1281 1281 JO C/JO/3014 2 195 T/JO/1282 1282 JO C/JO/3016 2 196 T/JO/1283 1283 JO C/JO/3018 2 197 T/JO/1284 1284 JO C/JO/3019 2 198 T/JO/1285 1285 JO C/JO/3020 2 199 T/JO/1286 1286 JO C/JO/3021 2 200 T/JO/1287 1287 JO C/JO/3022 2 201 T/JO/1288 1288 JO C/JO/3023 2 202 T/JO/1289 1289 JO C/JO/3024 2 203 T/JO/129 129 JO C/EGD/1620 2 204 T/JO/1290 1290 JO C/JO/3025 2 205 T/JO/1293 1293 JO C/EGD/2119 2 206 T/JO/1294 1294 JO C/EGD/2151 4 207 T/JO/1295 1295 JO C/JO/3028 4 208 T/JO/1296 1296 JO C/EGD/2152 4 209 T/JO/1297 1297 JO C/JO/3029 4 210 T/JO/1298 1298 JO C/EGD/2172 2 211 T/JO/1299 1299 JO C/EGD/2167 4 212 T/JO/130 130 JO C/JO/2688 2 213 T/JO/1300 1300 JO C/EGD/2159 2 214 T/JO/1301 1301 JO C/JO/3030 4 215 T/JO/1302 1302 JO C/JO/3031 4 216 T/JO/1303 1303 JO C/EGD/2160 2 217 T/JO/1304 1304 JO C/JO/3032 4 218 T/JO/1305 1305 JO C/EGD/2168 2 219 T/JO/1306 1306 JO C/EGD/2174 2 220 T/JO/1307 1307 JO C/EGD/2173 2 221 T/JO/1308 1308 JO C/EGD/2163 2 222 T/JO/1309 1309 JO C/EGD/2172 4 223 T/JO/131 131 JO C/JO/2687 2 224 T/JO/1310 1310 JO C/JO/3033 4 225 T/JO/1311 1311 JO C/JO/3034 4 226 T/JO/1312 1312 JO C/EGD/2154 2 227 T/JO/1313 1313 JO C/JO/3035 2 228 T/JO/1314 1314 JO C/EGD/2161 2 229 T/JO/1315 1315 JO C/EGD/2162 2 230 T/JO/1316 1316 JO C/JO/3036 2 231 T/JO/1317 1317 JO C/JO/3033 2 232 T/JO/1318 1318 JO C/EGD/2130 2 233 T/JO/1319 1319 JO C/EGD/2131 4 234 T/JO/132 132 JO C/EGD/1622 2 235 T/JO/1320 1320 JO C/EGD/2128 4 236 T/JO/1321 1321 JO C/EGD/2122 4 237 T/JO/1322 1322 JO C/EGD/2123 4 238 T/JO/1323 1323 JO C/EGD/2122 2 239 T/JO/1324 1324 JO C/EGD/2123 2 240 T/JO/1325 1325 JO C/EGD/2141 2 241 T/JO/133 133 JO C/JO/2689 2 242 T/JO/134 134 JO C/JO/2690 2 243 T/JO/135 135 JO C/JO/2691 2 244 T/JO/136 136 JO C/EGD/1631 2 245 T/JO/137 137 JO C/JO/2692 2 246 T/JO/138 138 JO C/JO/2693 2 247 T/JO/139 139 JO C/EGD/2065 2 248 T/JO/1395 1395 JO C/EGD/2306 2 249 T/JO/1396 1396 JO C/EGD/2307 2 250 T/JO/1397 1397 JO C/EGD/2287 2 251 T/JO/1398 1398 JO C/EGD/2285 2 252 T/JO/1399 1399 JO C/EGD/2286 2 253 T/JO/140 140 JO C/EGD/2063 2 254 T/JO/1400 1400 JO C/EGD/2288 2 255 T/JO/1401 1401 JO C/EGD/2289 2 256 T/JO/1402 1402 JO C/JO/3038 2 257 T/JO/1403 1403 JO C/EGD/2312 2 258 T/JO/1404 1404 JO C/JO/3039 2 259 T/JO/1405 1405 JO C/JO/3040 2 260 T/JO/1406 1406 JO C/JO/3041 2 261 T/JO/1407 1407 JO C/JO/3042 2 262 T/JO/1408 1408 JO C/JO/3043 2 263 T/JO/1409 1409 JO C/JO/3044 4 264 T/JO/141 141 JO C/JO/2694 2 265 T/JO/1410 1410 JO C/JO/3045 2 266 T/JO/1411 1411 JO C/JO/3046 2 267 T/JO/1412 1412 JO C/JO/3047 4 268 T/JO/1413 1413 JO C/JO/3048 4 269 T/JO/1414 1414 JO C/JO/3049 4 270 T/JO/1415 1415 JO C/JO/3050 4 271 T/JO/1416 1416 JO C/JO/3051 2 272 T/JO/1417 1417 JO C/JO/3052 2 273 T/JO/1418 1418 JO C/JO/3053 2 274 T/JO/1419 1419 JO C/JO/3054 2 275 T/JO/142 142 JO C/JO/2695 2 276 T/JO/1420 1420 JO C/JO/3055 2 277 T/JO/1421 1421 JO C/EGD/2327 2 278 T/JO/1422 1422 JO C/EGD/2313 4 279 T/JO/1423 1423 JO C/JO/3056 2 280 T/JO/143 143 JO C/JO/2696 2 281 T/JO/1433 1433 JO C/EGD/2227 2 282 T/JO/1434 1434 JO C/JO/3058 2 283 T/JO/1435 1435 JO C/JO/3059 2 284 T/JO/1436 1436 JO C/JO/3060 2 285 T/JO/1437 1437 JO C/JO/3061 2 286 T/JO/1438 1438 JO C/JO/3062 2 287 T/JO/1439 1439 JO C/JO/3063 2 288 T/JO/144 144 JO C/JO/2697 2 289 T/JO/1440 1440 JO C/JO/3064 2 290 T/JO/1441 1441 JO C/JO/3065 2 291 T/JO/1442 1442 JO C/EGD/1867 2 292 T/JO/1443 1443 JO C/EGD/1868 2 293 T/JO/1444 1444 JO C/JO/3066 2 294 T/JO/1445 1445 JO C/JO/3067 2 295 T/JO/1446 1446 JO C/JO/3068 2 296 T/JO/1447 1447 JO C/JO/3069 4 297 T/JO/1448 1448 JO C/JO/3069 2 298 T/JO/1449 1449 JO C/JO/3070 4 299 T/JO/145 145 JO C/EGD/2072 2 300 T/JO/1450 1450 JO C/JO/3070 2 301 T/JO/1451 1451 JO C/JO/3071 4 302 T/JO/1452 1452 JO C/JO/3071 2 303 T/JO/1453 1453 JO C/JO/3072 4 304 T/JO/1454 1454 JO C/JO/3072 2 305 T/JO/1455 1455 JO C/JO/3073 4 306 T/JO/1456 1456 JO C/JO/3073 2 307 T/JO/1457 1457 JO C/JO/3074 2 308 T/JO/1458 1458 JO C/JO/3075 2 309 T/JO/1459 1459 JO C/JO/3076 2 310 T/JO/146 146 JO C/JO/2698 2 311 T/JO/1460 1460 JO C/JO/3077 2 312 T/JO/1461 1461 JO C/JO/3078 2 313 T/JO/1463 1463 JO C/JO/3080 2 314 T/JO/1464 1464 JO C/JO/3081 2 315 T/JO/1465 1465 JO C/JO/3082 2 316 T/JO/1466 1466 JO C/JO/3083 2 317 T/JO/1467 1467 JO C/JO/3084 2 318 T/JO/1468 1468 JO C/EGD/2262 2 319 T/JO/1469 1469 JO C/JO/3085 2 320 T/JO/147 147 JO C/JO/2699 2 321 T/JO/1470 1470 JO C/JO/3086 2 322 T/JO/1471 1471 JO C/EGD/297 2 323 T/JO/1472 1472 JO C/EGD/296 4 324 T/JO/1474 1474 JO C/EGD/294 4 325 T/JO/1475 1475 JO C/EGD/291 4 326 T/JO/1476 1476 JO C/EGD/292 4 327 T/JO/1477 1477 JO C/EGD/295 4 328 T/JO/1478 1478 JO C/EGD/293 4 329 T/JO/1479 1479 JO C/EGD/355 4 330 T/JO/148 148 JO C/JO/2700 2 331 T/JO/1480 1480 JO C/EGD/1379 4 332 T/JO/1481 1481 JO C/EGD/357 4 333 T/JO/1482 1482 JO C/EGD/299 4 334 T/JO/1483 1483 JO C/JO/3087 4 335 T/JO/1484 1484 JO C/JO/3088 4 336 T/JO/1485 1485 JO C/EGD/297 4 337 T/JO/1486 1486 JO C/EGD/307 4 338 T/JO/1487 1487 JO C/EGD/293 2 339 T/JO/1488 1488 JO C/EGD/2148 2 340 T/JO/1489 1489 JO C/EGD/2149 2 341 T/JO/149 149 JO C/JO/2701 2 342 T/JO/1490 1490 JO C/EGD/2145 2 343 T/JO/1491 1491 JO C/EGD/2147 4 344 T/JO/1492 1492 JO C/EGD/2142 4 345 T/JO/1493 1493 JO C/EGD/2143 4 346 T/JO/1494 1494 JO C/EGD/2144 4 347 T/JO/1495 1495 JO C/EGD/2146 4 348 T/JO/1496 1496 JO C/EGD/2158 2 349 T/JO/1497 1497 JO C/EGD/58 2 350 T/JO/1498 1498 JO C/EGD/2155 2 351 T/JO/1499 1499 JO C/JO/3089 2 352 T/JO/150 150 JO C/JO/2702 2 353 T/JO/1500 1500 JO C/EGD/2157 2 354 T/JO/1501 1501 JO C/JO/3090 2 355 T/JO/1502 1502 JO C/EGD/2156 2 356 T/JO/1503 1503 JO C/JO/3091 4 357 T/JO/1504 1504 JO C/EGD/2137 2 358 T/JO/1505 1505 JO C/EGD/2134 2 359 T/JO/1506 1506 JO C/JO/3092 2 360 T/JO/1507 1507 JO C/EGD/2136 2 361 T/JO/1508 1508 JO C/EGD/2135 2 362 T/JO/1509 1509 JO C/JO/3093 2 363 T/JO/151 151 JO C/JO/2703 2 364 T/JO/1510 1510 JO C/EGD/2140 2 365 T/JO/1511 1511 JO C/JO/3094 2 366 T/JO/1512 1512 JO C/JO/3095 2 367 T/JO/1513 1513 JO C/JO/3096 2 368 T/JO/1514 1514 JO C/EGD/2367 2 369 T/JO/1515 1515 JO C/EGD/2373 2 370 T/JO/1516 1516 JO C/EGD/1813 4 371 T/JO/1517 1517 JO C/EGD/2374 4 372 T/JO/1519 1519 JO C/EGD/1628 4 373 T/JO/152 152 JO C/JO/2704 2 374 T/JO/1520 1520 JO C/EGD/1627 4 375 T/JO/1521 1521 JO C/EGD/1813 2 376 T/JO/1522 1522 JO C/JO/3097 4 377 T/JO/1523 1523 JO C/JO/3098 4 378 T/JO/1524 1524 JO C/JO/3099 4 379 T/JO/1525 1525 JO C/JO/3100 4 380 T/JO/1526 1526 JO C/JO/3101 4 381 T/JO/1527 1527 JO C/JO/3102 4 382 T/JO/1528 1528 JO C/EGD/2367 4 383 T/JO/1529 1529 JO C/EGD/2373 4 384 T/JO/153 153 JO C/JO/2705 2 385 T/JO/1530 1530 JO C/JO/3103 4 386 T/JO/1531 1531 JO C/JO/3104 4 387 T/JO/1532 1532 JO C/EGD/1628 2 388 T/JO/1533 1533 JO C/EGD/1627 2 389 T/JO/1534 1534 JO C/EGD/2374 2 390 T/JO/1535 1535 JO C/EGD/2369 2 391 T/JO/1536 1536 JO C/EGD/2610 2 392 T/JO/1537 1537 JO C/EGD/2611 2 393 T/JO/1538 1538 JO C/JO/3105 2 394 T/JO/1539 1539 JO C/JO/3107 2 395 T/JO/154 154 JO C/JO/2706 2 396 T/JO/1540 1540 JO C/JO/3108 2 397 T/JO/1541 1541 JO C/JO/3109 2 398 T/JO/1542 1542 JO C/JO/3110 2 399 T/JO/1543 1543 JO C/EGD/2138 2 400 T/JO/1544 1544 JO C/JO/3111 4 401 T/JO/1545 1545 JO C/JO/3112 2 402 T/JO/1546 1546 JO C/JO/3113 2 403 T/JO/1547 1547 JO C/JO/3114 2 404 T/JO/1548 1548 JO C/JO/3115 2 405 T/JO/1549 1549 JO C/JO/3116 2 406 T/JO/155 155 JO C/JO/2707 2 407 T/JO/1550 1550 JO C/JO/3117 4 408 T/JO/1551 1551 JO C/EGD/2170 4 409 T/JO/156 156 JO C/JO/2708 2 410 T/JO/157 157 JO C/JO/2709 2 411 T/JO/158 158 JO C/JO/2710 2 412 T/JO/159 159 JO C/JO/2711 2 413 T/JO/160 160 JO C/JO/2712 2 414 T/JO/161 161 JO C/JO/2713 2 415 T/JO/162 162 JO C/JO/2714 2 416 T/JO/163 163 JO C/JO/2715 2 417 T/JO/1632 1632 JO C/JO/3137 2 418 T/JO/1633 1633 JO C/JO/3138 2 419 T/JO/1634 1634 JO C/LA/2807 2 420 T/JO/1635 1635 JO C/EGD/2394 2 421 T/JO/1636 1636 JO C/EGD/2401 2 422 T/JO/1877 1877 JO C/EGD/1328 4 423 T/JO/1878 1878 JO C/EGD/1881 2 424 T/JO/1879 1879 JO C/EGD/1533 2 425 T/JO/188 188 JO C/JO/2740 2 426 T/JO/1880 1880 JO C/EGD/1527 2 427 T/JO/1881 1881 JO C/EGD/604 2 428 T/JO/1882 1882 JO C/JO/3246 2 429 T/JO/1883 1883 JO C/JO/3247 2 430 T/JO/1884 1884 JO C/JO/3248 2 431 T/JO/1885 1885 JO C/EGD/1544 2 432 T/JO/1886 1886 JO C/JO/3248 4 433 T/JO/1887 1887 JO C/JO/3246 4 434 T/JO/1888 1888 JO C/EGD/1541 4 435 T/JO/1889 1889 JO C/EGD/1549 4 436 T/JO/189 189 JO C/JO/2741 2 437 T/JO/1890 1890 JO C/EGD/1548 4 438 T/JO/1891 1891 JO C/EGD/1542 4 439 T/JO/1892 1892 JO C/EGD/1526 4 440 T/JO/1894 1894 JO C/EGD/1535 4 441 T/JO/1895 1895 JO C/JO/3250 4 442 T/JO/1896 1896 JO C/EGD/1538 4 443 T/JO/1897 1897 JO C/EGD/1544 4 444 T/JO/1898 1898 JO C/EGD/1543 4 445 T/JO/1899 1899 JO C/EGD/1546 4 446 T/JO/190 190 JO C/JO/2742 2 447 T/JO/1900 1900 JO C/EGD/1547 4 448 T/JO/1901 1901 JO C/EGD/1540 4 449 T/JO/1902 1902 JO C/JO/3251 4 450 T/JO/1903 1903 JO C/JO/3252 4 451 T/JO/1904 1904 JO C/JO/3253 4 452 T/JO/1905 1905 JO C/JO/3254 4 453 T/JO/1906 1906 JO C/EGD/1537 4 454 T/JO/1907 1907 JO C/EGD/1536 4 455 T/JO/1908 1908 JO C/JO/3255 4 456 T/JO/1909 1909 JO C/JO/3256 4 457 T/JO/191 191 JO C/JO/2743 2 458 T/JO/1910 1910 JO C/EGD/604 4 459 T/JO/1911 1911 JO C/JO/3257 4 460 T/JO/1912 1912 JO C/EGD/1533 4 461 T/JO/1913 1913 JO C/EGD/1545 4 462 T/JO/1914 1914 JO C/EGD/1545 2 463 T/JO/1915 1915 JO C/JO/3258 4 464 T/JO/1916 1916 JO C/JO/3259 4 465 T/JO/1917 1917 JO C/JO/3260 4 466 T/JO/1918 1918 JO C/JO/3261 4 467 T/JO/1919 1919 JO C/JO/3262 4 468 T/JO/192 192 JO C/JO/2744 2 469 T/JO/1920 1920 JO C/JO/3263 4 470 T/JO/1921 1921 JO C/JO/3264 4 471 T/JO/1922 1922 JO C/JO/3265 4 472 T/JO/1923 1923 JO C/JO/3266 4 473 T/JO/1924 1924 JO C/JO/3267 4 474 T/JO/1925 1925 JO C/EGD/1527 4 475 T/JO/1926 1926 JO C/JO/3268 4 476 T/JO/1927 1927 JO C/JO/3269 4 477 T/JO/1928 1928 JO C/JO/3270 4 478 T/JO/1929 1929 JO C/JO/3271 4 479 T/JO/193 193 JO C/JO/2745 2 480 T/JO/1930 1930 JO C/JO/3272 4 481 T/JO/1931 1931 JO C/JO/3273 4 482 T/JO/1932 1932 JO C/EGD/1539 4 483 T/JO/1933 1933 JO C/EGD/1534 4 484 T/JO/194 194 JO C/JO/2746 2 485 T/JO/195 195 JO C/JO/2747 2 486 T/JO/1950 1950 JO C/EGD/1550 4 487 T/JO/1951 1951 JO C/EGD/1888 2 488 T/JO/1952 1952 JO C/EGD/1889 2 489 T/JO/1953 1953 JO C/EGD/2104 2 490 T/JO/1954 1954 JO C/EGD/2171 4 491 T/JO/196 196 JO C/JO/2748 2 492 T/JO/1637 1637 JO C/EGD/1545 2 493 T/JO/1638 1638 JO C/EGD/2400 2 494 T/JO/1639 1639 JO C/EGD/1854 2 495 T/JO/164 164 JO C/JO/2716 2 496 T/JO/1640 1640 JO C/EGD/1607 3 497 T/JO/1641 1641 JO C/JO/3139 2 498 T/JO/1642 1642 JO C/JO/3140 2 499 T/JO/1643 1643 JO C/JO/3141 2 500 T/JO/1644 1644 JO C/JO/3142 2 501 T/JO/1645 1645 JO C/JO/3143 2 502 T/JO/1646 1646 JO C/JO/3144 2 503 T/JO/1647 1647 JO C/JO/3145 2 504 T/JO/1648 1648 JO C/JO/3146 2 505 T/JO/1649 1649 JO C/EGD/1834 2 506 T/JO/165 165 JO C/JO/2717 2 507 T/JO/1650 1650 JO C/JO/3147 2 508 T/JO/1651 1651 JO C/JO/3148 2 509 T/JO/1652 1652 JO C/EGD/2398 2 510 T/JO/1653 1653 JO C/EGD/1591 2 511 T/JO/1654 1654 JO C/EGD/1597 2 512 T/JO/1655 1655 JO C/EGD/1596 2 513 T/JO/1656 1656 JO C/EGD/1595 2 514 T/JO/1657 1657 JO C/EGD/1594 2 515 T/JO/1658 1658 JO C/EGD/1592 2 516 T/JO/1659 1659 JO C/JO/3149 2 517 T/JO/166 166 JO C/JO/2718 2 518 T/JO/1660 1660 JO C/EGD/1593 2 519 T/JO/1661 1661 JO C/JO/3150 2 520 T/JO/1662 1662 JO C/EGD/2423 2 521 T/JO/1663 1663 JO C/JO/3151 2 522 T/JO/1664 1664 JO C/JO/3152 2 523 T/JO/1665 1665 JO C/JO/3153 2 524 T/JO/1666 1666 JO C/JO/3154 2 525 T/JO/1667 1667 JO C/JO/3155 2 526 T/JO/1668 1668 JO C/LA/2782 2 527 T/JO/1669 1669 JO C/EGD/2425 2 528 T/JO/167 167 JO C/JO/2719 2 529 T/JO/1670 1670 JO C/EGD/2426 2 530 T/JO/1671 1671 JO C/EGD/2427 2 531 T/JO/1672 1672 JO C/JO/3156 2 532 T/JO/1673 1673 JO C/JO/3158 2 533 T/JO/1674 1674 JO C/EGD/1809 1 Edinburgh 534 T/JO/1675 1675 JO C/EGD/1585 2 535 T/JO/1676 1676 JO C/EGD/1583 2 536 T/JO/1677 1677 JO C/EGD/2360 2 537 T/JO/1678 1678 JO C/EGD/2359 2 538 T/JO/1679 1679 JO C/EGD/2358 2 539 T/JO/168 168 JO C/JO/2720 2 540 T/JO/1680 1680 JO C/EGD/2364 2 541 T/JO/1681 1681 JO C/JO/3159 2 542 T/JO/1682 1682 JO C/JO/3160 2 543 T/JO/1683 1683 JO C/JO/3161 2 544 T/JO/1684 1684 JO C/EGD/2501 2 545 T/JO/1685 1685 JO C/EGD/2503 2 546 T/JO/1686 1686 JO C/EGD/2502 2 547 T/JO/1687 1687 JO C/EGD/2511 2 548 T/JO/1688 1688 JO C/EGD/2512 2 549 T/JO/1689 1689 JO C/EGD/2513 2 550 T/JO/169 169 JO C/JO/2721 2 551 T/JO/1690 1690 JO C/EGD/2515 2 552 T/JO/1691 1691 JO C/EGD/2516 2 553 T/JO/1692 1692 JO C/EGD/2514 2 554 T/JO/1693 1693 JO C/EGD/2517 4 555 T/JO/1694 1694 JO C/EGD/1904 2 556 T/JO/1695 1695 JO C/EGD/2534 2 557 T/JO/1696 1696 JO C/EGD/2446 3 558 T/JO/1697 1697 JO C/EGD/830 3 559 T/JO/1698 1698 JO C/EGD/2535 2 560 T/JO/1699 1699 JO C/EGD/831 3 561 T/JO/170 170 JO C/JO/2722 2 562 T/JO/1700 1700 JO C/EGD/2452 4 563 T/JO/1701 1701 JO C/EGD/2446 4 564 T/JO/1702 1702 JO C/EGD/830 4 565 T/JO/1703 1703 JO C/EGD/831 4 566 T/JO/1704 1704 JO C/EGD/1584 2 567 T/JO/1705 1705 JO C/EGD/20 2 568 T/JO/1706 1706 JO C/EGD/1613 2 569 T/JO/1707 1707 JO C/EGD/1586 2 570 T/JO/1708 1708 JO C/EGD/1590 2 571 T/JO/1709 1709 JO C/EGD/1589 2 572 T/JO/171 171 JO C/JO/2723 2 573 T/JO/1710 1710 JO C/EGD/1588 2 574 T/JO/1711 1711 JO C/EGD/1587 2 575 T/JO/1712 1712 JO C/EGD/21 2 576 T/JO/1713 1713 JO C/EGD/525 2 577 T/JO/172 172 JO C/JO/2724 2 578 T/JO/173 173 JO C/JO/2725 2 579 T/JO/174 174 JO C/JO/2726 2 580 T/JO/175 175 JO C/JO/2727 2 581 T/JO/176 176 JO C/JO/2728 2 582 T/JO/177 177 JO C/JO/2729 2 583 T/JO/178 178 JO C/JO/2730 2 584 T/JO/1789 1789 JO C/EGD/22 2 585 T/JO/179 179 JO C/JO/2731 2 586 T/JO/1790 1790 JO C/EGD/23 2 587 T/JO/1791 1791 JO C/EGD/500 2 588 T/JO/1792 1792 JO C/EGD/1355 2 589 T/JO/1793 1793 JO C/EGD/518 2 590 T/JO/1794 1794 JO C/EGD/526 2 591 T/JO/1795 1795 JO C/EGD/24 2 592 T/JO/1796 1796 JO C/EGD/1950 2 593 T/JO/1797 1797 JO C/EGD/25 2 594 T/JO/1798 1798 JO C/EGD/1949 2 595 T/JO/1799 1799 JO C/EGD/1799 2 596 T/JO/180 180 JO C/JO/2732 2 597 T/JO/1800 1800 JO C/EGD/521 2 598 T/JO/1801 1801 JO C/JO/3227 2 599 T/JO/1802 1802 JO C/EGD/1952 2 600 T/JO/1803 1803 JO C/EGD/1951 2 601 T/JO/1804 1804 JO C/EGD/333 2 602 T/JO/1805 1805 JO C/EGD/1962 2 603 T/JO/1806 1806 JO C/EGD/1961 2 604 T/JO/1807 1807 JO C/EGD/1960 2 605 T/JO/1808 1808 JO C/EGD/1959 2 606 T/JO/1809 1809 JO C/EGD/486 2 607 T/JO/181 181 JO C/JO/2733 2 608 T/JO/1810 1810 JO C/EGD/1956 2 609 T/JO/1812 1812 JO C/EGD/520 2 610 T/JO/1813 1813 JO C/EGD/522 2 611 T/JO/1814 1814 JO C/EGD/1354 2 612 T/JO/1815 1815 JO C/EGD/1344 2 613 T/JO/1816 1816 JO C/EGD/1343 2 614 T/JO/1817 1817 JO C/EGD/1356 2 615 T/JO/1818 1818 JO C/EGD/1955 2 616 T/JO/1819 1819 JO C/EGD/1953 2 617 T/JO/182 182 JO C/JO/2734 2 618 T/JO/1820 1820 JO C/EGD/1966 2 619 T/JO/1821 1821 JO C/EGD/1965 2 620 T/JO/1822 1822 JO C/EGD/1964 2 621 T/JO/1823 1823 JO C/EGD/1963 2 622 T/JO/1824 1824 JO C/EGD/1968 2 623 T/JO/1825 1825 JO C/EGD/1967 2 624 T/JO/1826 1826 JO C/EGD/1969 2 625 T/JO/1827 1827 JO C/EGD/1957 2 626 T/JO/1828 1828 JO C/EGD/1582 2 627 T/JO/183 183 JO C/JO/2735 2 628 T/JO/1830 1830 JO C/EGD/517 2 629 T/JO/1831 1831 JO C/EGD/516 2 Edinburgh 630 T/JO/1832 1832 JO C/EGD/528 2 631 T/JO/1833 1833 JO C/EGD/523 2 632 T/JO/1834 1834 JO C/EGD/519 2 633 T/JO/1835 1835 JO C/EGD/530 2 634 T/JO/1836 1836 JO C/JO/3229 2 635 T/JO/1837 1837 JO C/JO/3230 2 636 T/JO/1838 1838 JO C/EGD/2026 2 637 T/JO/184 184 JO C/JO/2736 2 638 T/JO/185 185 JO C/JO/2737 2 639 T/JO/186 186 JO C/JO/2738 2 640 T/JO/187 187 JO C/JO/2739 2 641 T/JO/1872 1872 JO C/EGD/1068 1 Edinburgh 642 T/JO/1873 1873 JO C/EGD/1073 2 643 T/JO/1874 1874 JO C/EGD/1313 4 644 T/JO/1875 1875 JO C/EGD/1317 4 645 T/JO/1876 1876 JO C/EGD/1326 2 646 T/JO/197 197 JO C/JO/2749 2 647 T/JO/198 198 JO C/JO/2750 2 648 T/JO/199 199 JO C/JO/2751 2 649 T/JO/2 2 JO C/JO/2632 2 650 T/JO/200 200 JO C/JO/2752 2 651 T/JO/201 201 JO C/JO/2753 2 652 T/JO/202 202 JO C/JO/2754 2 653 T/JO/203 203 JO C/EGD/2150 2 654 T/JO/204 204 JO C/EGD/313 3 Edinburgh 655 T/JO/205 205 JO C/EGD/604 2 656 T/JO/2104 2104 JO C/EGD/2559 2 657 T/JO/2105 2105 JO C/EGD/2555 2 658 T/JO/2106 2106 JO C/EGD/2557 2 659 T/JO/2107 2107 JO C/EGD/2558 2 660 T/JO/2108 2108 JO C/EGD/2560 2 661 T/JO/2109 2109 JO C/EGD/2561 2 662 T/JO/2110 2110 JO C/EGD/2562 2 663 T/JO/2111 2111 JO C/EGD/2563 2 664 T/JO/2112 2112 JO C/EGD/2565 2 665 T/JO/2113 2113 JO C/EGD/2566 2 666 T/JO/2114 2114 JO C/JO/3314 2 667 T/JO/2115 2115 JO C/JO/3315 2 668 T/JO/2116 2116 JO C/JO/3316 1 Edinburgh 669 T/JO/2117 2117 JO C/JO/3317 2 670 T/JO/2118 2118 JO C/EGD/49 2 671 T/JO/2119 2119 JO C/EGD/46 2 672 T/JO/2120 2120 JO C/JO/3318 2 673 T/JO/2121 2121 JO C/EGD/50 2 674 T/JO/2122 2122 JO C/JO/3319 2 675 T/JO/2123 2123 JO C/EGD/47 2 676 T/JO/2124 2124 JO C/JO/3320 2 677 T/JO/2137 2137 JO C/JO/3345 2 678 T/JO/2138 2138 JO C/JO/3346 2 679 T/JO/2139 2139 JO C/JO/3347 2 680 T/JO/2140 2140 JO C/JO/3348 2 681 T/JO/2141 2141 JO C/EGD/41 2 682 T/JO/2142 2142 JO C/JO/3349 2 683 T/JO/2143 2143 JO C/JO/3350 2 684 T/JO/2144 2144 JO C/JO/3351 2 685 T/JO/2145 2145 JO C/JO/3352 2 686 T/JO/2146 2146 JO C/JO/3353 2 687 T/JO/2147 2147 JO C/JO/3354 2 688 T/JO/2148 2148 JO C/JO/3355 2 689 T/JO/2149 2149 JO C/JO/3356 2 690 T/JO/2150 2150 JO C/JO/3357 2 691 T/JO/2151 2151 JO C/JO/3358 2 692 T/JO/2152 2152 JO C/JO/3359 2 693 T/JO/2153 2153 JO C/JO/3360 2 694 T/JO/2154 2154 JO C/JO/3361 2 695 T/JO/2155 2155 JO C/EGD/39 2 696 T/JO/2156 2156 JO C/JO/3362 2 697 T/JO/2157 2157 JO C/JO/3363 2 698 T/JO/2158 2158 JO C/JO/3364 2 699 T/JO/2159 2159 JO C/JO/3365 2 700 T/JO/2160 2160 JO C/JO/3366 2 701 T/JO/2161 2161 JO C/JO/3367 2 702 T/JO/2162 2162 JO C/JO/2854 4 703 T/JO/2163 2163 JO C/JO/3368 4 704 T/JO/2164 2164 JO C/EGD/1799 4 705 T/JO/2165 2165 JO C/JO/3137 4 706 T/JO/2166 2166 JO C/EGD/24 4 707 T/JO/2167 2167 JO C/EGD/25 4 708 T/JO/2168 2168 JO C/EGD/1949 4 709 T/JO/2169 2169 JO C/EGD/1099 4 710 T/JO/2170 2170 JO C/EGD/1100 4 711 T/JO/2171 2171 JO C/EGD/1101 4 712 T/JO/2172 2172 JO C/EGD/1102 4 713 T/JO/2173 2173 JO C/EGD/1103 4 714 T/JO/2174 2174 JO C/EGD/1104 4 715 T/JO/2175 2175 JO C/EGD/1105 4 716 T/JO/2176 2176 JO C/EGD/1106 4 717 T/JO/2177 2177 JO C/EGD/1107 4 718 T/JO/2178 2178 JO C/EGD/1108 4 719 T/JO/2179 2179 JO C/EGD/1109 4 720 T/JO/2180 2180 JO C/EGD/1110 4 721 T/JO/2181 2181 JO C/EGD/1111 4 722 T/JO/2182 2182 JO C/EGD/1112 4 723 T/JO/2183 2183 JO C/EGD/1113 4 724 T/JO/2184 2184 JO C/EGD/1114 4 725 T/JO/2185 2185 JO C/EGD/113 1 Edinburgh 726 T/JO/2186 2186 JO C/EGD/1155 4 727 T/JO/2187 2187 JO C/EGD/1154 4 728 T/JO/2188 2188 JO C/EGD/1327 4 729 T/JO/2189 2189 JO C/EGD/1239 2 730 T/JO/2190 2190 JO C/EGD/150 2 731 T/JO/2191 2191 JO C/JO/3046 4 732 T/JO/2192 2192 JO C/JO/3045 4 733 T/JO/2193 2193 JO C/JO/3044 2 734 T/JO/2202 2202 JO C/LA/2960 4 735 T/JO/2203 2203 JO C/EGD/1094 4 736 T/JO/2204 2204 JO C/EGD/156 4 737 T/JO/2205 2205 JO C/EGD/1867 4 738 T/JO/2206 2206 JO C/EGD/2130 4 739 T/JO/2207 2207 JO C/EGD/2161 4 740 T/JO/2208 2208 JO C/JO/3036 4 741 T/JO/2209 2209 JO C/EGD/2174 4 742 T/JO/2210 2210 JO C/EGD/2358 4 743 T/JO/2211 2211 JO C/EGD/2359 4 744 T/JO/2212 2212 JO C/EGD/2360 4 745 T/JO/2213 2213 JO C/EGD/2211 2 746 T/JO/2214 2214 JO C/EGD/2235 2 747 T/JO/2215 2215 JO C/JO/3159 4 748 T/JO/2216 2216 JO C/EGD/2364 4 749 T/JO/2217 2217 JO C/EGD/2534 4 750 T/JO/2218 2218 JO C/EGD/2514 4 751 T/JO/2219 2219 JO C/EGD/2515 4 752 T/JO/2220 2220 JO C/EGD/2516 4 753 T/JO/2221 2221 JO C/EGD/2535 4 754 T/JO/2228 2228 JO C/EGD/380 4 755 T/JO/2229 2229 JO C/EGD/382 4 756 T/JO/2230 2230 JO C/JO/3151 4 757 T/JO/2231 2231 JO C/LA/2694 4 758 T/JO/2232 2232 JO C/LA/3342 4 759 T/JO/2233 2233 JO C/LA/2692 4 760 T/JO/2234 2234 JO C/LA/2691 4 761 T/JO/2235 2235 JO C/EGD/398 4 762 T/JO/2236 2236 JO C/EGD/407 4 763 T/JO/2276 2276 JO C/EGD/2386 2 764 T/JO/2277 2277 JO C/EGD/2108 2 765 T/JO/3 3 JO C/EGD/2121 2 766 T/JO/303 303 JO C/JO/2784 2 767 T/JO/304 304 JO C/EGD/1036 2 768 T/JO/305 305 JO C/EGD/1035 2 769 T/JO/306 306 JO C/EGD/1037 2 770 T/JO/307 307 JO C/JO/2785 2 771 T/JO/308 308 JO C/JO/2786 2 772 T/JO/309 309 JO C/EGD/1049 2 773 T/JO/310 310 JO C/EGD/1030 2 774 T/JO/311 311 JO C/EGD/1048 2 775 T/JO/312 312 JO C/EGD/1031 2 776 T/JO/313 313 JO C/EGD/1032 2 777 T/JO/314 314 JO C/EGD/1033 2 778 T/JO/315 315 JO C/EGD/1034 2 779 T/JO/316 316 JO C/EGD/628 2 780 T/JO/317 317 JO C/JO/2787 2 781 T/JO/318 318 JO C/EGD/1117 2 782 T/JO/319 319 JO C/EGD/1116 2 783 T/JO/320 320 JO C/EGD/1115 2 784 T/JO/321 321 JO C/EGD/1128 2 785 T/JO/322 322 JO C/EGD/1130 2 786 T/JO/323 323 JO C/EGD/1129 2 787 T/JO/324 324 JO C/EGD/1147 2 788 T/JO/325 325 JO C/EGD/1146 2 789 T/JO/326 326 JO C/JO/2788 2 790 T/JO/327 327 JO C/JO/2789 2 791 T/JO/328 328 JO C/JO/2790 2 792 T/JO/329 329 JO C/JO/2791 2 793 T/JO/330 330 JO C/EGD/1160 2 794 T/JO/331 331 JO C/EGD/1161 2 795 T/JO/332 332 JO C/JO/2792 2 796 T/JO/333 333 JO C/EGD/1231 2 797 T/JO/334 334 JO C/EGD/1216 2 798 T/JO/335 335 JO C/EGD/1212 2 799 T/JO/336 336 JO C/EGD/1210 2 800 T/JO/337 337 JO C/EGD/1215 2 801 T/JO/338 338 JO C/EGD/1211 2 802 T/JO/339 339 JO C/EGD/1213 2 803 T/JO/340 340 JO C/EGD/1214 2 804 T/JO/341 341 JO C/JO/2793 2 805 T/JO/342 342 JO C/JO/2794 2 806 T/JO/343 343 JO C/JO/2795 2 807 T/JO/344 344 JO C/JO/2796 2 808 T/JO/345 345 JO C/JO/2797 2 809 T/JO/346 346 JO C/JO/2798 2 810 T/JO/347 347 JO C/JO/2799 2 811 T/JO/348 348 JO C/JO/2800 2 812 T/JO/349 349 JO C/EGD/1623 2 813 T/JO/350 350 JO C/EGD/1624 2 814 T/JO/351 351 JO C/EGD/1651 2 815 T/JO/352 352 JO C/EGD/1648 2 816 T/JO/353 353 JO C/JO/2801 2 817 T/JO/354 354 JO C/JO/2802 2 818 T/JO/355 355 JO C/JO/2803 2 819 T/JO/356 356 JO C/JO/2804 2 820 T/JO/359 359 JO C/EGD/1984 2 821 T/JO/360 360 JO C/EGD/1633 2 822 T/JO/361 361 JO C/EGD/1985 2 823 T/JO/362 362 JO C/EGD/1986 2 824 T/JO/363 363 JO C/JO/2807 2 825 T/JO/364 364 JO C/JO/2808 2 826 T/JO/365 365 JO C/JO/2809 2 827 T/JO/366 366 JO C/EGD/1992 2 828 T/JO/367 367 JO C/EGD/1989 2 829 T/JO/368 368 JO C/EGD/1990 2 830 T/JO/369 369 JO C/JO/2810 2 831 T/JO/370 370 JO C/JO/2811 2 832 T/JO/371 371 JO C/JO/2812 2 833 T/JO/372 372 JO C/JO/2813 2 834 T/JO/373 373 JO C/JO/2814 2 835 T/JO/374 374 JO C/JO/2815 2 836 T/JO/375 375 JO C/LA/2779 2 837 T/JO/376 376 JO C/LA/2778 2 838 T/JO/377 377 JO C/JO/2816 2 839 T/JO/378 378 JO C/JO/2817 2 840 T/JO/379 379 JO C/JO/2818 2 841 T/JO/380 380 JO C/JO/2819 2 842 T/JO/381 381 JO C/JO/2820 2 843 T/JO/382 382 JO C/JO/2821 2 844 T/JO/383 383 JO C/JO/2822 2 845 T/JO/384 384 JO C/JO/2823 2 846 T/JO/385 385 JO C/JO/2824 2 847 T/JO/386 386 JO C/EGD/1850 2 848 T/JO/387 387 JO C/JO/2825 2 849 T/JO/388 388 JO C/JO/2826 2 850 T/JO/389 389 JO C/JO/2827 2 851 T/JO/390 390 JO C/JO/2828 2 852 T/JO/391 391 JO C/JO/2829 2 853 T/JO/392 392 JO C/JO/2830 2 Edinburgh 854 T/JO/393 393 JO C/LA/2786 1 Edinburgh 855 T/JO/395 395 JO C/LA/2785 1 Edinburgh 856 T/JO/396 396 JO C/EGD/1597 4 857 T/JO/398 398 JO C/EGD/402 4 858 T/JO/399 399 JO C/EGD/401 4 859 T/JO/4 4 JO C/EGD/2120 4 860 T/JO/400 400 JO C/EGD/395 1 Edinburgh 861 T/JO/401 401 JO C/EGD/397 1 Edinburgh 862 T/JO/402 402 JO C/JO/2832 3 Edinburgh 863 T/JO/403 403 JO C/EGD/396 1 Edinburgh 864 T/JO/409 409 JO C/JO/2833 4 865 T/JO/410 410 JO C/JO/2834 4 866 T/JO/411 411 JO C/EGD/214 4 867 T/JO/412 412 JO C/EGD/221 4 868 T/JO/414 414 JO C/EGD/219 4 869 T/JO/415 415 JO C/JO/2835 4 870 T/JO/416 416 JO C/EGD/417 2 871 T/JO/417 417 JO C/EGD/1379 2 872 T/JO/418 418 JO C/EGD/1379 3 873 T/JO/419 419 JO C/EGD/296 3 874 T/JO/420 420 JO C/EGD/296 2 875 T/JO/421 421 JO C/EGD/299 3 876 T/JO/422 422 JO C/EGD/299 2 877 T/JO/423 423 JO C/EGD/432 4 878 T/JO/424 424 JO C/EGD/427 4 879 T/JO/425 425 JO C/EGD/1601 4 880 T/JO/426 426 JO C/EGD/426 4 881 T/JO/427 427 JO C/EGD/1602 4 882 T/JO/428 428 JO C/EGD/1602 2 883 T/JO/429 429 JO C/LA/2805 2 Edinburgh 884 T/JO/430 430 JO C/EGD/1598 2 885 T/JO/431 431 JO C/JO/2836 4 886 T/JO/432 432 JO C/EGD/432 2 Edinburgh 887 T/JO/433 433 JO C/LA/2788 2 888 T/JO/434 434 JO C/EGD/1408 2 889 T/JO/435 435 JO C/EGD/1407 2 890 T/JO/436 436 JO C/EGD/617 3 Edinburgh 891 T/JO/510 510 JO C/JO/2843 2 892 T/JO/511 511 JO C/JO/2844 2 893 T/JO/512 512 JO C/JO/2845 4 894 T/JO/513 513 JO C/JO/2846 2 895 T/JO/514 514 JO C/JO/2847 2 896 T/JO/515 515 JO C/EGD/2336 2 897 T/JO/516 516 JO C/EGD/2318 2 898 T/JO/517 517 JO C/EGD/2340 2 899 T/JO/518 518 JO C/EGD/2339 2 900 T/JO/519 519 JO C/EGD/2338 2 901 T/JO/520 520 JO C/EGD/2337 2 902 T/JO/521 521 JO C/EGD/2341 2 903 T/JO/522 522 JO C/EGD/2344 2 904 T/JO/523 523 JO C/EGD/2347 2 905 T/JO/524 524 JO C/EGD/1298 2 906 T/JO/525 525 JO C/EGD/2337 4 907 T/JO/526 526 JO C/EGD/2338 4 908 T/JO/527 527 JO C/JO/2848 2 909 T/JO/528 528 JO C/JO/2849 2 910 T/JO/529 529 JO C/JO/2850 2 911 T/JO/530 530 JO C/JO/2851 2 912 T/JO/531 531 JO C/JO/2853 2 913 T/JO/532 532 JO C/JO/2834 2 914 T/JO/533 533 JO C/JO/2833 2 915 T/JO/534 534 JO C/EGD/219 2 916 T/JO/535 535 JO C/EGD/214 2 917 T/JO/536 536 JO C/EGD/221 2 918 T/JO/537 537 JO C/JO/2854 2 919 T/JO/538 538 JO C/EGD/2046 2 920 T/JO/539 539 JO C/EGD/1297 2 921 T/JO/540 540 JO C/EGD/1297 4 922 T/JO/541 541 JO C/EGD/2336 4 923 T/JO/542 542 JO C/EGD/2346 2 924 T/JO/543 543 JO C/EGD/2346 4 925 T/JO/544 544 JO C/EGD/2347 4 926 T/JO/546 546 JO C/EGD/645 2 927 T/JO/547 547 JO C/EGD/644 2 928 T/JO/548 548 JO C/EGD/643 2 929 T/JO/549 549 JO C/EGD/642 2 930 T/JO/550 550 JO C/EGD/641 2 931 T/JO/551 551 JO C/EGD/661 2 932 T/JO/552 552 JO C/EGD/660 2 933 T/JO/553 553 JO C/EGD/659 2 934 T/JO/554 554 JO C/EGD/658 2 935 T/JO/555 555 JO C/EGD/657 2 936 T/JO/556 556 JO C/EGD/656 2 937 T/JO/557 557 JO C/EGD/655 2 938 T/JO/558 558 JO C/EGD/654 2 939 T/JO/559 559 JO C/EGD/653 2 940 T/JO/560 560 JO C/JO/2855 2 941 T/JO/561 561 JO C/EGD/650 2 942 T/JO/562 562 JO C/EGD/649 2 943 T/JO/563 563 JO C/EGD/648 2 944 T/JO/564 564 JO C/EGD/647 2 945 T/JO/565 565 JO C/EGD/646 2 946 T/JO/566 566 JO C/EGD/640 2 947 T/JO/567 567 JO C/EGD/639 2 948 T/JO/568 568 JO C/EGD/638 2 949 T/JO/569 569 JO C/EGD/637 2 950 T/JO/570 570 JO C/EGD/636 2 951 T/JO/571 571 JO C/EGD/635 2 952 T/JO/572 572 JO C/EGD/2277 2 953 T/JO/573 573 JO C/JO/2857 2 954 T/JO/574 574 JO C/EGD/1861 2 955 T/JO/575 575 JO C/EGD/1817 2 956 T/JO/576 576 JO C/EGD/1862 4 957 T/JO/577 577 JO C/EGD/1862 2 958 T/JO/578 578 JO C/EGD/2005 4 959 T/JO/579 579 JO C/EGD/2005 2 960 T/JO/580 580 JO C/EGD/2023 2 961 T/JO/581 581 JO C/EGD/2023 4 962 T/JO/582 582 JO C/EGD/1859 2 963 T/JO/583 583 JO C/EGD/1860 4 964 T/JO/584 584 JO C/EGD/1860 2 965 T/JO/585 585 JO C/EGD/2020 4 966 T/JO/586 586 JO C/EGD/2019 4 967 T/JO/587 587 JO C/EGD/1999 4 968 T/JO/588 588 JO C/EGD/2388 4 969 T/JO/589 589 JO C/JO/2858 4 970 T/JO/590 590 JO C/EGD/1399 2 971 T/JO/591 591 JO C/JO/2859 2 972 T/JO/592 592 JO C/EGD/2444 3 973 T/JO/593 593 JO C/JO/2837 2 974 T/JO/595 595 JO C/EGD/1770 2 975 T/JO/596 596 JO C/EGD/1671 4 976 T/JO/597 597 JO C/EGD/1769 1 Edinburgh 977 T/JO/598 598 JO C/EGD/1763 2 978 T/JO/599 599 JO C/EGD/1767 2 979 T/JO/600 600 JO C/EGD/1765 2 980 T/JO/601 601 JO C/EGD/1766 2 981 T/JO/602 602 JO C/EGD/1764 2 982 T/JO/603 603 JO C/EGD/1916 2 983 T/JO/604 604 JO C/EGD/1915 2 984 T/JO/605 605 JO C/EGD/1914 2 985 T/JO/606 606 JO C/EGD/1913 2 986 T/JO/607 607 JO C/EGD/1912 2 987 T/JO/608 608 JO C/EGD/1911 2 988 T/JO/609 609 JO C/EGD/691 1 Edinburgh 989 T/JO/610 610 JO C/EGD/694 1 Edinburgh 990 T/JO/611 611 JO C/EGD/693 1 Edinburgh 991 T/JO/612 612 JO C/EGD/692 1 Edinburgh 992 T/JO/613 613 JO C/EGD/1768 2 993 T/JO/614 614 JO C/EGD/1749 3 994 T/JO/615 615 JO C/EGD/1747 3 995 T/JO/616 616 JO C/EGD/1748 3 996 T/JO/617 617 JO C/EGD/1746 3 997 T/JO/618 618 JO C/EGD/1745 3 998 T/JO/619 619 JO C/EGD/1744 3 999 T/JO/620 620 JO C/JO/2861 2 1000 T/JO/621 621 JO C/EGD/1755 2 1001 T/JO/622 622 JO C/EGD/1754 2 1002 T/JO/623 623 JO C/EGD/1753 2 1003 T/JO/624 624 JO C/EGD/1752 2 1004 T/JO/625 625 JO C/EGD/1751 2 1005 T/JO/626 626 JO C/EGD/1757 2 1006 T/JO/627 627 JO C/EGD/1758 2 1007 T/JO/628 628 JO C/EGD/1759 2 1008 T/JO/629 629 JO C/EGD/1756 2 1009 T/JO/630 630 JO C/EGD/1760 2 1010 T/JO/631 631 JO C/EGD/1762 2 1011 T/JO/632 632 JO C/EGD/1761 2 1012 T/JO/633 633 JO C/EGD/1740 2 1013 T/JO/634 634 JO C/EGD/1739 2 1014 T/JO/635 635 JO C/JO/2862 2 1015 T/JO/637 637 JO C/EGD/1737 2 1016 T/JO/638 638 JO C/EGD/1738 2 1017 T/JO/639 639 JO C/JO/2863 2 1018 T/JO/640 640 JO C/EGD/1726 2 1019 T/JO/641 641 JO C/EGD/1727 2 1020 T/JO/642 642 JO C/EGD/1729 2 1021 T/JO/643 643 JO C/EGD/1730 2 1022 T/JO/644 644 JO C/EGD/1728 2 1023 T/JO/645 645 JO C/EGD/1733 2 1024 T/JO/646 646 JO C/EGD/1734 2 1025 T/JO/647 647 JO C/JO/2864 2 1026 T/JO/648 648 JO C/EGD/1735 2 1027 T/JO/649 649 JO C/EGD/1736 2 1028 T/JO/74 74 JO C/EGD/2119 4 1029 T/JO/75 75 JO C/EGD/2124 2 1030 T/JO/76 76 JO C/EGD/2127 2 1031 T/JO/769 769 JO C/EGD/573 2 1032 T/JO/77 77 JO C/EGD/1047 2 1033 T/JO/770 770 JO C/EGD/1457 2 1034 T/JO/772 772 JO C/EGD/1715 2 1035 T/JO/773 773 JO C/EGD/1717 2 1036 T/JO/774 774 JO C/EGD/1724 2 1037 T/JO/775 775 JO C/EGD/1723 2 1038 T/JO/776 776 JO C/EGD/1722 2 1039 T/JO/777 777 JO C/EGD/1721 2 1040 T/JO/778 778 JO C/EGD/1720 2 1041 T/JO/779 779 JO C/EGD/1719 2 1042 T/JO/78 78 JO C/EGD/1140 2 1043 T/JO/780 780 JO C/EGD/1718 2 1044 T/JO/782 782 JO C/EGD/865 2 1045 T/JO/783 783 JO C/EGD/866 2 1046 T/JO/784 784 JO C/EGD/867 2 1047 T/JO/785 785 JO C/JO/2875 2 1048 T/JO/786 786 JO C/JO/2876 2 1049 T/JO/787 787 JO C/EGD/2384 2 1050 T/JO/788 788 JO C/EGD/1827 2 1051 T/JO/789 789 JO C/EGD/1828 2 1052 T/JO/79 79 JO C/EGD/1142 2 1053 T/JO/795 795 JO C/JO/2881 2 1054 T/JO/796 796 JO C/JO/2882 2 1055 T/JO/797 797 JO C/JO/2883 2 1056 T/JO/798 798 JO C/EGD/1377 2 1057 T/JO/80 80 JO C/EGD/1143 2 1058 T/JO/801 801 JO C/EGD/1405 2 1059 T/JO/802 802 JO C/EGD/1404 2 1060 T/JO/803 803 JO C/EGD/1410 2 1061 T/JO/804 804 JO C/EGD/1409 2 1062 T/JO/805 805 JO C/EGD/1387 2 1063 T/JO/806 806 JO C/EGD/1386 2 1064 T/JO/807 807 JO C/EGD/1385 2 1065 T/JO/808 808 JO C/EGD/1384 2 1066 T/JO/809 809 JO C/EGD/1383 2 1067 T/JO/81 81 JO C/EGD/1139 2 1068 T/JO/810 810 JO C/EGD/1376 2 1069 T/JO/811 811 JO C/EGD/1382 2 1070 T/JO/812 812 JO C/EGD/1381 2 1071 T/JO/813 813 JO C/EGD/1380 2 1072 T/JO/814 814 JO C/EGD/1397 2 1073 T/JO/815 815 JO C/EGD/1396 2 1074 T/JO/816 816 JO C/EGD/1395 2 1075 T/JO/817 817 JO C/EGD/1394 2 1076 T/JO/818 818 JO C/EGD/1393 2 1077 T/JO/819 819 JO C/EGD/1390 2 1078 T/JO/82 82 JO C/EGD/1144 2 1079 T/JO/820 820 JO C/EGD/1388 2 1080 T/JO/821 821 JO C/EGD/1389 2 1081 T/JO/822 822 JO C/EGD/2194 2 1082 T/JO/823 823 JO C/EGD/1412 2 1083 T/JO/824 824 JO C/EGD/1411 2 1084 T/JO/825 825 JO C/EGD/1414 2 1085 T/JO/826 826 JO C/EGD/1413 2 1086 T/JO/827 827 JO C/EGD/1402 2 1087 T/JO/828 828 JO C/EGD/1401 2 1088 T/JO/829 829 JO C/EGD/1403 2 1089 T/JO/83 83 JO C/EGD/2125 2 1090 T/JO/830 830 JO C/EGD/1406 2 1091 T/JO/831 831 JO C/EGD/1415 2 1092 T/JO/832 832 JO C/EGD/1421 2 1093 T/JO/833 833 JO C/EGD/1419 2 1094 T/JO/834 834 JO C/EGD/1420 2 1095 T/JO/835 835 JO C/EGD/1447 2 1096 T/JO/836 836 JO C/EGD/1430 2 1097 T/JO/837 837 JO C/EGD/1425 2 1098 T/JO/838 838 JO C/EGD/1426 2 1099 T/JO/839 839 JO C/EGD/1422 2 1100 T/JO/84 84 JO C/EGD/2126 2 1101 T/JO/840 840 JO C/EGD/1428 2 1102 T/JO/841 841 JO C/EGD/1427 2 1103 T/JO/842 842 JO C/EGD/1433 2 1104 T/JO/843 843 JO C/EGD/1432 2 1105 T/JO/844 844 JO C/EGD/1431 2 1106 T/JO/845 845 JO C/EGD/1443 2 1107 T/JO/846 846 JO C/EGD/1442 2 1108 T/JO/847 847 JO C/EGD/1441 2 1109 T/JO/848 848 JO C/EGD/1439 2 1110 T/JO/849 849 JO C/EGD/1440 2 1111 T/JO/85 85 JO C/EGD/2121 4 1112 T/JO/850 850 JO C/EGD/1438 2 1113 T/JO/851 851 JO C/EGD/1434 2 1114 T/JO/852 852 JO C/EGD/1446 2 1115 T/JO/853 853 JO C/EGD/1445 2 1116 T/JO/854 854 JO C/EGD/1444 2 1117 T/JO/855 855 JO C/EGD/1436 2 1118 T/JO/856 856 JO C/EGD/1435 2 1119 T/JO/857 857 JO C/EGD/1429 2 1120 T/JO/858 858 JO C/EGD/1423 2 1121 T/JO/859 859 JO C/EGD/1437 2 1122 T/JO/86 86 JO C/EGD/1141 2 1123 T/JO/860 860 JO C/EGD/1424 2 1124 T/JO/861 861 JO C/EGD/1453 2 1125 T/JO/862 862 JO C/EGD/1452 2 1126 T/JO/863 863 JO C/EGD/1451 2 1127 T/JO/864 864 JO C/EGD/1450 2 1128 T/JO/865 865 JO C/EGD/1449 2 1129 T/JO/866 866 JO C/EGD/1448 2 1130 T/JO/867 867 JO C/JO/2885 2 1131 T/JO/868 868 JO C/JO/2886 2 1132 T/JO/869 869 JO C/EGD/1924 2 1133 T/JO/87 87 JO C/EGD/1138 2 1134 T/JO/870 870 JO C/JO/2887 2 1135 T/JO/872 872 JO C/EGD/2410 2 1136 T/JO/873 873 JO C/JO/2889 2 1137 T/JO/874 874 JO C/EGD/1455 2 1138 T/JO/875 875 JO C/EGD/1418 2 1139 T/JO/876 876 JO C/EGD/1417 2 1140 T/JO/877 877 JO C/EGD/1416 2 1141 T/JO/878 878 JO C/EGD/1458 2 1142 T/JO/879 879 JO C/EGD/1456 2 1143 T/JO/88 88 JO C/EGD/1137 2 1144 T/JO/880 880 JO C/JO/2890 2 1145 T/JO/881 881 JO C/JO/2891 2 1146 T/JO/882 882 JO C/EGD/126 1 Edinburgh 1147 T/JO/883 883 JO C/EGD/127 4 1148 T/JO/884 884 JO C/EGD/1471 2 1149 T/JO/885 885 JO C/EGD/1470 2 1150 T/JO/886 886 JO C/EGD/1469 2 1151 T/JO/887 887 JO C/EGD/1468 2 1152 T/JO/888 888 JO C/EGD/1467 2 1153 T/JO/889 889 JO C/EGD/1466 2 1154 T/JO/89 89 JO C/EGD/1136 2 1155 T/JO/890 890 JO C/EGD/1465 2 1156 T/JO/891 891 JO C/EGD/1464 2 1157 T/JO/892 892 JO C/EGD/1463 2 1158 T/JO/893 893 JO C/EGD/1462 2 1159 T/JO/894 894 JO C/EGD/1461 2 1160 T/JO/895 895 JO C/EGD/1695 2 1161 T/JO/896 896 JO C/JO/2892 2 1162 T/JO/897 897 JO C/EGD/1477 1 Edinburgh 1163 T/JO/898 898 JO C/EGD/1475 1 Edinburgh 1164 T/JO/899 899 JO C/EGD/1473 1 Edinburgh 1165 T/JO/90 90 JO C/EGD/1605 2 1166 T/JO/900 900 JO C/EGD/1476 1 Edinburgh 1167 T/JO/901 901 JO C/EGD/1472 1 Edinburgh 1168 T/JO/902 902 JO C/EGD/1480 2 1169 T/JO/903 903 JO C/EGD/1479 2 1170 T/JO/904 904 JO C/EGD/1478 2 1171 T/JO/905 905 JO C/JO/2893 2 1172 T/JO/906 906 JO C/EGD/1502 2 1173 T/JO/907 907 JO C/EGD/1501 2 1174 T/JO/908 908 JO C/JO/2894 2 1175 T/JO/909 909 JO C/JO/2895 2 1176 T/JO/91 91 JO C/EGD/1328 2 1177 T/JO/910 910 JO C/EGD/1505 2 1178 T/JO/911 911 JO C/EGD/1503 2 1179 T/JO/912 912 JO C/EGD/1504 2 1180 T/JO/913 913 JO C/EGD/1492 2 1181 T/JO/914 914 JO C/EGD/1491 2 1182 T/JO/915 915 JO C/EGD/1460 2 1183 T/JO/916 916 JO C/EGD/1459 2 1184 T/JO/917 917 JO C/EGD/1500 2 1185 T/JO/918 918 JO C/EGD/1499 2 1186 T/JO/919 919 JO C/EGD/1496 2 1187 T/JO/92 92 JO C/JO/2662 2 1188 T/JO/920 920 JO C/EGD/1495 2 1189 T/JO/921 921 JO C/EGD/1494 2 1190 T/JO/922 922 JO C/EGD/1493 2 1191 T/JO/923 923 JO C/EGD/1525 2 1192 T/JO/924 924 JO C/EGD/1523 2 1193 T/JO/925 925 JO C/EGD/1522 2 1194 T/JO/926 926 JO C/EGD/1532 2 1195 T/JO/928 928 JO C/EGD/1530 2 1196 T/JO/929 929 JO C/EGD/1529 2 1197 T/JO/93 93 JO C/EGD/1327 2 1198 T/JO/931 931 JO C/EGD/1498 2 1199 T/JO/932 932 JO C/EGD/1497 2 1200 T/JO/933 933 JO C/EGD/1519 2 1201 T/JO/934 934 JO C/EGD/1518 2 1202 T/JO/935 935 JO C/EGD/1517 2 1203 T/JO/936 936 JO C/EGD/1516 2 1204 T/JO/937 937 JO C/EGD/1515 2 1205 T/JO/938 938 JO C/EGD/1514 2 1206 T/JO/939 939 JO C/EGD/1513 2 1207 T/JO/94 94 JO C/EGD/1324 2 1208 T/JO/940 940 JO C/EGD/1512 2 1209 T/JO/941 941 JO C/EGD/1511 2 1210 T/JO/942 942 JO C/EGD/1510 2 1211 T/JO/943 943 JO C/EGD/2533 2 1212 T/JO/944 944 JO C/EGD/1509 2 1213 T/JO/945 945 JO C/EGD/1508 2 1214 T/JO/946 946 JO C/EGD/1507 2 1215 T/JO/947 947 JO C/EGD/1506 2 1216 T/JO/948 948 JO C/EGD/1521 2 1217 T/JO/949 949 JO C/EGD/1520 2 1218 T/JO/95 95 JO C/EGD/1323 2 1219 T/JO/950 950 JO C/EGD/1679 2 1220 T/JO/951 951 JO C/EGD/1552 2 1221 T/JO/952 952 JO C/EGD/1556 2 1222 T/JO/953 953 JO C/EGD/1555 2 1223 T/JO/954 954 JO C/JO/2896 2 1224 T/JO/955 955 JO C/EGD/1553 2 1225 T/JO/956 956 JO C/EGD/1554 2 1226 T/JO/957 957 JO C/EGD/1551 1 Edinburgh 1227 T/JO/958 958 JO C/JO/2897 2 1228 T/JO/959 959 JO C/EGD/1565 2 1229 T/JO/96 96 JO C/JO/2665 2 1230 T/JO/960 960 JO C/EGD/1564 2 1231 T/JO/961 961 JO C/EGD/1567 2 1232 T/JO/962 962 JO C/EGD/1566 2 1233 T/JO/963 963 JO C/EGD/1561 2 1234 T/JO/964 964 JO C/EGD/1560 2 1235 T/JO/965 965 JO C/EGD/1559 2 1236 T/JO/966 966 JO C/EGD/754 2 1237 T/JO/967 967 JO C/JO/2898 2 1238 T/JO/969 969 JO C/EGD/1562 2 1239 T/JO/97 97 JO C/JO/2666 2 1240 T/JO/970 970 JO C/EGD/1563 2 1241 T/JO/971 971 JO C/EGD/1571 2 1242 T/JO/972 972 JO C/EGD/1570 2 1243 T/JO/973 973 JO C/EGD/1569 2 1244 T/JO/974 974 JO C/EGD/1579 2 1245 T/JO/975 975 JO C/EGD/1578 2 1246 T/JO/976 976 JO C/EGD/1577 2 1247 T/JO/977 977 JO C/EGD/1576 2 1248 T/JO/978 978 JO C/EGD/1575 2 1249 T/JO/979 979 JO C/EGD/1574 2 1250 T/JO/98 98 JO C/JO/2667 2 1251 T/JO/980 980 JO C/EGD/1573 2 1252 T/JO/981 981 JO C/JO/2900 2 1253 T/JO/982 982 JO C/EGD/1572 2 1254 T/JO/983 983 JO C/EGD/1568 2 1255 T/JO/984 984 JO C/EGD/1674 2 1256 T/JO/985 985 JO C/EGD/1673 2 1257 T/JO/986 986 JO C/EGD/1672 2 1258 T/JO/987 987 JO C/EGD/1671 2 1259 T/JO/988 988 JO C/EGD/1666 2 1260 T/JO/989 989 JO C/EGD/1665 2 1261 T/JO/99 99 JO C/JO/2668 2 1262 T/JO/990 990 JO C/EGD/1664 2 1263 T/JO/991 991 JO C/EGD/1663 2 1264 T/JO/992 992 JO C/EGD/1662 2 1265 T/JO/993 993 JO C/EGD/1670 2 1266 T/JO/994 994 JO C/EGD/1669 2 1267 T/JO/995 995 JO C/EGD/1668 2 1268 T/JO/996 996 JO C/EGD/1667 2 1269 T/JO/997 997 JO C/EGD/1580 2 1270 T/JO/998 998 JO C/EGD/1581 2 1271 T/JO/999 999 JO C/JO/2901 2 1272 T/LA/1 1 LA C/EGD/160 1 Edinburgh 1273 T/LA/10 10 LA C/EGD/162 1 Edinburgh 1274 T/LA/100 100 LA C/EGD/1226 2 1275 T/LA/1000 1000 LA C/EGD/1258 4 1276 T/LA/1001 1001 LA C/EGD/1277 2 Edinburgh 1277 T/LA/1002 1002 LA C/EGD/1276 2 1278 T/LA/1003 1003 LA C/EGD/1268 2 1279 T/LA/1004 1004 LA C/EGD/1269 2 1280 T/LA/1005 1005 LA C/EGD/1280 2 1281 T/LA/1006 1006 LA C/EGD/1281 2 1282 T/LA/1007 1007 LA C/EGD/1283 2 1283 T/LA/1008 1008 LA C/EGD/29 1 Edinburgh 1284 T/LA/1009 1009 LA C/EGD/30 2 1285 T/LA/101 101 LA C/EGD/682 2 1286 T/LA/1010 1010 LA C/EGD/31 1 Edinburgh 1287 T/LA/1011 1011 LA C/EGD/32 3 1288 T/LA/1012 1012 LA C/EGD/1278 2 1289 T/LA/1013 1013 LA C/EGD/1282 2 1290 T/LA/1014 1014 LA C/EGD/1278 2 1291 T/LA/1015 1015 LA C/EGD/1329 2 1292 T/LA/1016 1016 LA C/EGD/1334 2 1293 T/LA/1017 1017 LA C/EGD/1329 4 1294 T/LA/1018 1018 LA C/EGD/1333 2 1295 T/LA/1019 1019 LA C/EGD/1333 4 1296 T/LA/102 102 LA C/EGD/684 2 1297 T/LA/1020 1020 LA C/EGD/1332 4 1298 T/LA/1021 1021 LA C/EGD/1331 4 1299 T/LA/1022 1022 LA C/EGD/1330 4 1300 T/LA/1023 1023 LA C/EGD/1338 2 1301 T/LA/1024 1024 LA C/EGD/1337 4 1302 T/LA/1025 1025 LA C/EGD/1339 2 1303 T/LA/1026 1026 LA C/EGD/1340 2 1304 T/LA/1027 1027 LA C/EGD/1341 2 1305 T/LA/1028 1028 LA C/EGD/1342 2 1306 T/LA/1029 1029 LA C/EGD/1352 2 1307 T/LA/103 103 LA C/EGD/683 2 1308 T/LA/1030 1030 LA C/EGD/1351 2 1309 T/LA/1031 1031 LA C/EGD/1350 2 1310 T/LA/1032 1032 LA C/EGD/1349 2 1311 T/LA/1033 1033 LA C/EGD/1348 2 1312 T/LA/1034 1034 LA C/EGD/1347 2 1313 T/LA/1035 1035 LA C/EGD/1346 2 1314 T/LA/1036 1036 LA C/LA/2920 2 1315 T/LA/1037 1037 LA C/EGD/1355 2 1316 T/LA/1038 1038 LA C/EGD/1354 2 1317 T/LA/1039 1039 LA C/EGD/1356 2 1318 T/LA/104 104 LA C/EGD/173 1 Edinburgh 1319 T/LA/1040 1040 LA C/EGD/1357 2 1320 T/LA/1041 1041 LA C/EGD/1358 2 1321 T/LA/1042 1042 LA C/EGD/1359 2 1322 T/LA/1043 1043 LA C/EGD/526 2 1323 T/LA/1044 1044 LA C/EGD/1344 2 1324 T/LA/1046 1046 LA C/EGD/1343 2 1325 T/LA/1047 1047 LA C/EGD/521 2 1326 T/LA/1048 1048 LA C/EGD/495 2 1327 T/LA/1049 1049 LA C/EGD/494 2 1328 T/LA/1050 1050 LA C/EGD/496 2 1329 T/LA/1051 1051 LA C/EGD/516 2 1330 T/LA/1052 1052 LA C/EGD/523 2 1331 T/LA/1053 1053 LA C/EGD/519 2 1332 T/LA/1054 1054 LA C/EGD/497 2 1333 T/LA/1055 1055 LA C/EGD/1353 2 1334 T/LA/1056 1056 LA C/EGD/1312 2 1335 T/LA/1057 1057 LA C/EGD/1311 4 1336 T/LA/1061 1061 LA C/EGD/1326 4 1337 T/LA/1062 1062 LA C/EGD/1322 2 1338 T/LA/1063 1063 LA C/EGD/1321 4 1339 T/LA/1064 1064 LA C/EGD/1320 4 1340 T/LA/1065 1065 LA C/EGD/1319 4 1341 T/LA/1066 1066 LA C/EGD/1325 4 1342 T/LA/1067 1067 LA C/EGD/1336 4 1343 T/LA/1068 1068 LA C/EGD/1335 4 1344 T/LA/1069 1069 LA C/JO/2691 4 1345 T/LA/1070 1070 LA C/EGD/1279 2 1346 T/LA/1071 1071 LA C/EGD/1290 2 1347 T/LA/1072 1072 LA C/EGD/1291 2 1348 T/LA/1073 1073 LA C/EGD/1289 2 1349 T/LA/1074 1074 LA C/EGD/1305 2 1350 T/LA/1075 1075 LA C/EGD/1295 2 1351 T/LA/1076 1076 LA C/EGD/1296 2 1352 T/LA/1077 1077 LA C/EGD/1299 2 1353 T/LA/1078 1078 LA C/EGD/1293 2 1354 T/LA/1079 1079 LA C/EGD/1308 2 1355 T/LA/1080 1080 LA C/EGD/1294 4 1356 T/LA/1081 1081 LA C/EGD/1310 4 1357 T/LA/1082 1082 LA C/EGD/1307 4 1358 T/LA/1083 1083 LA C/EGD/1306 4 1359 T/LA/1084 1084 LA C/LA/2922 4 1360 T/LA/1085 1085 LA C/EGD/1287 4 1361 T/LA/1086 1086 LA C/EGD/1288 4 1362 T/LA/1087 1087 LA C/EGD/1286 4 1363 T/LA/1088 1088 LA C/EGD/1284 2 1364 T/LA/1089 1089 LA C/EGD/1310 2 1365 T/LA/1090 1090 LA C/EGD/1309 2 1366 T/LA/1091 1091 LA C/EGD/1300 2 1367 T/LA/1092 1092 LA C/EGD/1301 2 1368 T/LA/1093 1093 LA C/EGD/1302 2 1369 T/LA/1094 1094 LA C/EGD/1303 2 1370 T/LA/1095 1095 LA C/EGD/1304 2 1371 T/LA/1096 1096 LA C/EGD/1364 2 1372 T/LA/1097 1097 LA C/EGD/1363 4 1373 T/LA/1098 1098 LA C/EGD/1362 4 1374 T/LA/1099 1099 LA C/EGD/1361 4 1375 T/LA/11 11 LA C/EGD/166 4 1376 T/LA/1100 1100 LA C/EGD/1360 4 1377 T/LA/1101 1101 LA C/LA/2923 4 1378 T/LA/1102 1102 LA C/EGD/882 2 1379 T/LA/1103 1103 LA C/EGD/963 2 1380 T/LA/1104 1104 LA C/EGD/964 2 1381 T/LA/1105 1105 LA C/LA/2924 2 1382 T/LA/1106 1106 LA C/LA/2653 2 1383 T/LA/1107 1107 LA C/EGD/573 1 Edinburgh 1384 T/LA/1108 1108 LA C/LA/2932 1 Edinburgh 1385 T/LA/1109 1109 LA C/EGD/82 2 1386 T/LA/1110 1110 LA C/EGD/62 2 1387 T/LA/1111 1111 LA C/EGD/78 2 1388 T/LA/1112 1112 LA C/EGD/145 2 1389 T/LA/1113 1113 LA C/EGD/146 2 1390 T/LA/1114 1114 LA C/EGD/101 2 1391 T/LA/1115 1115 LA C/LA/2911 1 Edinburgh 1392 T/LA/1116 1116 LA C/EGD/228 3 1393 T/LA/1117 1117 LA C/EGD/762 3 1394 T/LA/1118 1118 LA C/EGD/227 3 1395 T/LA/1119 1119 LA C/EGD/783 3 1396 T/LA/1120 1120 LA C/EGD/782 3 1397 T/LA/1121 1121 LA C/EGD/273 3 1398 T/LA/1122 1122 LA C/EGD/785 3 1399 T/LA/1123 1123 LA C/EGD/784 3 1400 T/LA/1124 1124 LA C/EGD/786 3 1401 T/LA/1125 1125 LA C/EGD/779 3 1402 T/LA/1126 1126 LA C/EGD/780 3 1403 T/LA/1127 1127 LA C/EGD/781 3 1404 T/LA/1128 1128 LA C/EGD/280 3 1405 T/LA/1129 1129 LA C/EGD/302 3 1406 T/LA/1130 1130 LA C/EGD/317 3 1407 T/LA/1131 1131 LA C/EGD/316 3 1408 T/LA/1132 1132 LA C/LA/2949 3 1409 T/LA/1133 1133 LA C/EGD/355 3 1410 T/LA/1135 1135 LA C/EGD/357 3 1411 T/LA/1136 1136 LA C/EGD/308 3 1412 T/LA/1137 1137 LA C/EGD/307 3 1413 T/LA/1553 1553 LA C/EGD/1809 4 1414 T/LA/1554 1554 LA C/EGD/192 4 1415 T/LA/1555 1555 LA C/EGD/205 2 1416 T/LA/1556 1556 LA C/EGD/189 4 1417 T/LA/1557 1557 LA C/EGD/190 4 1418 T/LA/1558 1558 LA C/EGD/187 4 1419 T/LA/1559 1559 LA C/LA/3123 4 1420 T/LA/156 156 LA C/EGD/1270 2 1421 T/LA/1560 1560 LA C/EGD/199 4 1422 T/LA/1561 1561 LA C/EGD/266 2 1423 T/LA/1563 1563 LA C/LA/3126 4 1424 T/LA/18 18 LA C/LA/2634 4 1425 T/LA/1800 1800 LA C/LA/3236 2 1426 T/LA/1801 1801 LA C/EGD/1796 2 1427 T/LA/1802 1802 LA C/EGD/1795 2 1428 T/LA/1803 1803 LA C/EGD/1794 2 1429 T/LA/1804 1804 LA C/EGD/1792 2 1430 T/LA/1805 1805 LA C/EGD/1793 2 1431 T/LA/1806 1806 LA C/EGD/1791 2 1432 T/LA/1807 1807 LA C/EGD/1790 2 1433 T/LA/1808 1808 LA C/EGD/1789 2 1434 T/LA/1809 1809 LA C/EGD/1788 2 1435 T/LA/1810 1810 LA C/EGD/1787 2 1436 T/LA/1811 1811 LA C/EGD/727 2 1437 T/LA/1812 1812 LA C/LA/3237 2 1438 T/LA/1813 1813 LA C/EGD/2452 3 1439 T/LA/1814 1814 LA C/EGD/2536 3 1440 T/LA/1815 1815 LA C/EGD/2537 3 1441 T/LA/1816 1816 LA C/EGD/1798 2 1442 T/LA/1817 1817 LA C/EGD/1797 2 1443 T/LA/1818 1818 LA C/LA/3238 3 1444 T/LA/1819 1819 LA C/EGD/27 1 Edinburgh 1445 T/LA/1820 1820 LA C/EGD/152 3 1446 T/LA/1821 1821 LA C/EGD/871 4 1447 T/LA/1822 1822 LA C/EGD/151 4 1448 T/LA/1823 1823 LA C/EGD/872 4 1449 T/LA/1824 1824 LA C/EGD/874 4 1450 T/LA/1825 1825 LA C/EGD/436 4 1451 T/LA/1826 1826 LA C/EGD/437 4 1452 T/LA/1827 1827 LA C/EGD/438 4 1453 T/LA/1828 1828 LA C/EGD/439 4 1454 T/LA/1829 1829 LA C/EGD/440 4 1455 T/LA/1830 1830 LA C/EGD/441 4 1456 T/LA/1831 1831 LA C/EGD/442 4 1457 T/LA/1832 1832 LA C/EGD/443 4 1458 T/LA/1833 1833 LA C/EGD/444 4 1459 T/LA/1834 1834 LA C/EGD/445 4 1460 T/LA/1835 1835 LA C/EGD/446 4 1461 T/LA/1836 1836 LA C/EGD/447 4 1462 T/LA/1837 1837 LA C/EGD/448 4 1463 T/LA/1838 1838 LA C/EGD/449 4 1464 T/LA/1839 1839 LA C/EGD/450 4 1465 T/LA/1840 1840 LA C/EGD/451 4 1466 T/LA/1841 1841 LA C/EGD/452 4 1467 T/LA/1842 1842 LA C/EGD/453 4 1468 T/LA/1843 1843 LA C/EGD/454 4 1469 T/LA/1844 1844 LA C/EGD/455 4 1470 T/LA/1845 1845 LA C/EGD/456 4 1471 T/LA/1846 1846 LA C/EGD/457 4 1472 T/LA/1847 1847 LA C/EGD/458 4 1473 T/LA/1848 1848 LA C/EGD/459 4 1474 T/LA/1849 1849 LA C/EGD/460 4 1475 T/LA/1850 1850 LA C/EGD/461 4 1476 T/LA/1851 1851 LA C/EGD/462 4 1477 T/LA/1852 1852 LA C/EGD/463 4 1478 T/LA/1853 1853 LA C/EGD/464 4 1479 T/LA/1854 1854 LA C/EGD/465 4 1480 T/LA/1855 1855 LA C/EGD/466 4 1481 T/LA/1856 1856 LA C/EGD/467 4 1482 T/LA/1857 1857 LA C/EGD/468 4 1483 T/LA/1858 1858 LA C/EGD/469 4 1484 T/LA/1859 1859 LA C/EGD/470 4 1485 T/LA/1860 1860 LA C/EGD/471 4 1486 T/LA/1861 1861 LA C/EGD/472 4 1487 T/LA/1862 1862 LA C/EGD/473 4 1488 T/LA/1863 1863 LA C/LA/3239 4 1489 T/LA/1864 1864 LA C/EGD/476 4 1490 T/LA/1865 1865 LA C/LA/3240 4 1491 T/LA/1138 1138 LA C/LA/2950 3 1492 T/LA/1139 1139 LA C/EGD/315 3 1493 T/LA/1140 1140 LA C/EGD/788 3 1494 T/LA/1141 1141 LA C/EGD/792 3 1495 T/LA/1142 1142 LA C/EGD/791 3 1496 T/LA/1143 1143 LA C/EGD/785 4 1497 T/LA/1144 1144 LA C/EGD/789 3 1498 T/LA/1145 1145 LA C/EGD/790 3 1499 T/LA/1146 1146 LA C/EGD/793 3 1500 T/LA/1148 1148 LA C/EGD/794 3 1501 T/LA/1149 1149 LA C/EGD/797 3 1502 T/LA/1150 1150 LA C/EGD/797 4 1503 T/LA/1151 1151 LA C/EGD/796 3 1504 T/LA/1152 1152 LA C/EGD/798 3 1505 T/LA/1153 1153 LA C/EGD/584 3 1506 T/LA/1154 1154 LA C/EGD/1727 4 1507 T/LA/1155 1155 LA C/EGD/1729 4 1508 T/LA/1156 1156 LA C/EGD/801 3 1509 T/LA/1157 1157 LA C/EGD/598 3 1510 T/LA/1158 1158 LA C/EGD/813 3 1511 T/LA/1159 1159 LA C/EGD/803 3 1512 T/LA/1160 1160 LA C/EGD/805 3 1513 T/LA/1161 1161 LA C/EGD/587 3 1514 T/LA/1162 1162 LA C/EGD/588 3 1515 T/LA/1163 1163 LA C/EGD/808 3 1516 T/LA/1164 1164 LA C/EGD/807 3 1517 T/LA/1165 1165 LA C/EGD/810 3 1518 T/LA/1166 1166 LA C/EGD/811 3 1519 T/LA/1167 1167 LA C/EGD/812 3 1520 T/LA/1168 1168 LA C/EGD/1272 2 1521 T/LA/1169 1169 LA C/EGD/818 3 1522 T/LA/1170 1170 LA C/EGD/819 3 1523 T/LA/1171 1171 LA C/EGD/823 3 1524 T/LA/1172 1172 LA C/EGD/824 3 1525 T/LA/1173 1173 LA C/EGD/718 3 1526 T/LA/1174 1174 LA C/EGD/719 3 1527 T/LA/1175 1175 LA C/EGD/717 3 1528 T/LA/1176 1176 LA C/EGD/715 3 1529 T/LA/1177 1177 LA C/EGD/817 3 1530 T/LA/1178 1178 LA C/EGD/1770 3 1531 T/LA/1179 1179 LA C/LA/2951 3 1532 T/LA/1180 1180 LA C/LA/2952 3 1533 T/LA/1181 1181 LA C/EGD/821 3 1534 T/LA/1182 1182 LA C/EGD/822 3 1535 T/LA/1183 1183 LA C/EGD/820 3 1536 T/LA/1184 1184 LA C/EGD/825 3 1537 T/LA/1185 1185 LA C/EGD/814 3 1538 T/LA/1186 1186 LA C/EGD/815 3 Trial.parish Trial.presbytery Trial.county Trial.burgh Trial.NGR.Letters 1 Aberdeen Aberdeen Aberdeen NA 2 NA 3 NA 4 NA 5 NA 6 NA 7 NA 8 NA 9 NA 10 NA 11 NA 12 NA 13 NA 14 NA 15 NA 16 NA 17 NA 18 NA 19 NA 20 NA 21 NA 22 NA 23 NA 24 NA 25 NA 26 NA 27 NA 28 NA 29 NA 30 NA 31 NA 32 NA 33 NA 34 NA 35 NA 36 NA 37 NA 38 NA 39 NA 40 NA 41 NA 42 NA 43 NA 44 NA 45 NA 46 NA 47 NA 48 NA 49 NA 50 NA 51 NA 52 NA 53 NA 54 NA 55 NA 56 NA 57 NA 58 NA 59 NA 60 NA 61 NA 62 NA 63 NA 64 NA 65 NA 66 NA 67 NA 68 NA 69 NA 70 NA 71 NA 72 NA 73 NA 74 NA 75 NA 76 NA 77 NA 78 NA 79 NA 80 NA 81 NA 82 NA 83 NA 84 Paisley Renfrew Renfrew NA 85 Paisley Renfrew Renfrew NA 86 Paisley Renfrew Renfrew NA 87 Paisley Renfrew Renfrew NA 88 NA 89 NA 90 P/ST/1328 Paisley Renfrew NA 91 P/ST/1328 Paisley Renfrew NA 92 P/ST/1328 Paisley Renfrew NA 93 Renfrew Renfrew NA 94 NA 95 NA 96 NA 97 NA 98 NA 99 NA 100 NA 101 NA 102 NA 103 NA 104 NA 105 NA 106 NA 107 NA 108 NA 109 NA 110 NA 111 NA 112 NA 113 NA 114 NA 115 NA 116 NA 117 NA 118 NA 119 NA 120 NA 121 NA 122 NA 123 Kirkcaldy Fife Kirkcaldy NA 124 Kirkcaldy Fife Kirkcaldy NA 125 NA 126 NA 127 NA 128 NA 129 NA 130 NA 131 NA 132 NA 133 NA 134 NA 135 NA 136 NA 137 NA 138 NA 139 NA 140 NA 141 NA 142 NA 143 NA 144 NA 145 NA 146 NA 147 NA 148 NA 149 NA 150 NA 151 NA 152 NA 153 NA 154 NA 155 NA 156 NA 157 NA 158 NA 159 NA 160 NA 161 NA 162 NA 163 NA 164 NA 165 NA 166 NA 167 NA 168 NA 169 NA 170 NA 171 NA 172 Aberdeen Aberdeen Aberdeen NA 173 NA 174 NA 175 NA 176 NA 177 NA 178 NA 179 NA 180 NA 181 NA 182 NA 183 NA 184 NA 185 NA 186 NA 187 NA 188 NA 189 NA 190 NA 191 NA 192 NA 193 NA 194 NA 195 NA 196 NA 197 NA 198 NA 199 NA 200 NA 201 NA 202 NA 203 NA 204 NA 205 Aberdeen Aberdeen Aberdeen NA 206 NA 207 NA 208 NA 209 NA 210 Aberdeen Aberdeen Aberdeen NA 211 NA 212 NA 213 Aberdeen Aberdeen Aberdeen NA 214 NA 215 NA 216 Aberdeen Aberdeen Aberdeen NA 217 NA 218 Aberdeen Aberdeen Aberdeen NA 219 Aberdeen Aberdeen Aberdeen NA 220 Aberdeen Aberdeen Aberdeen NA 221 Aberdeen Aberdeen Aberdeen NA 222 NA 223 NA 224 NA 225 NA 226 Aberdeen Aberdeen Aberdeen NA 227 Aberdeen Aberdeen Aberdeen NA 228 Aberdeen Aberdeen Aberdeen NA 229 Aberdeen Aberdeen Aberdeen NA 230 Aberdeen Aberdeen Aberdeen NA 231 Aberdeen Aberdeen Aberdeen NA 232 Aberdeen Aberdeen Aberdeen NA 233 NA 234 NA 235 NA 236 NA 237 NA 238 Aberdeen Aberdeen Aberdeen NA 239 Aberdeen Aberdeen Aberdeen NA 240 Aberdeen Aberdeen Aberdeen NA 241 NA 242 NA 243 NA 244 NA 245 NA 246 NA 247 NA 248 NA 249 NA 250 NA 251 NA 252 NA 253 NA 254 NA 255 NA 256 NA 257 NA 258 NA 259 NA 260 NA 261 NA 262 NA 263 NA 264 NA 265 NA 266 NA 267 NA 268 NA 269 NA 270 NA 271 NA 272 NA 273 NA 274 NA 275 NA 276 NA 277 Shetland NA 278 NA 279 NA 280 NA 281 NA 282 NA 283 NA 284 NA 285 NA 286 NA 287 NA 288 NA 289 NA 290 NA 291 NA 292 NA 293 NA 294 Dunblane Stirling NA 295 NA 296 NA 297 P/ST/784 Kirkcaldy Fife Dysart NA 298 NA 299 NA 300 P/ST/784 Kirkcaldy Fife Dysart NA 301 NA 302 P/ST/784 Kirkcaldy Fife Dysart NA 303 NA 304 NA 305 NA 306 NA 307 NA 308 NA 309 NA 310 NA 311 NA 312 NA 313 NA 314 NA 315 NA 316 NA 317 NA 318 NA 319 NA 320 NA 321 NA 322 NA 323 NA 324 NA 325 NA 326 NA 327 NA 328 NA 329 NA 330 NA 331 NA 332 NA 333 NA 334 NA 335 NA 336 NA 337 NA 338 NA 339 Aberdeen Aberdeen Aberdeen NA 340 Aberdeen Aberdeen Aberdeen NA 341 NA 342 Aberdeen Aberdeen Aberdeen NA 343 NA 344 NA 345 NA 346 NA 347 NA 348 NA 349 NA 350 NA 351 NA 352 NA 353 Aberdeen Aberdeen Aberdeen NA 354 Aberdeen Aberdeen Aberdeen NA 355 Aberdeen Aberdeen Aberdeen NA 356 NA 357 NA 358 NA 359 NA 360 NA 361 NA 362 NA 363 NA 364 NA 365 NA 366 NA 367 NA 368 NA 369 P/ST/658 Edinburgh Edinburgh NA 370 NA 371 NA 372 NA 373 NA 374 NA 375 NA 376 NA 377 NA 378 NA 379 NA 380 NA 381 NA 382 NA 383 NA 384 NA 385 NA 386 NA 387 NA 388 NA 389 NA 390 NA 391 NA 392 NA 393 NA 394 NA 395 NA 396 NA 397 NA 398 NA 399 NA 400 NA 401 NA 402 NA 403 NA 404 NA 405 NA 406 NA 407 NA 408 NA 409 NA 410 NA 411 NA 412 NA 413 NA 414 NA 415 NA 416 NA 417 NA 418 NA 419 NA 420 NA 421 NA 422 NA 423 NA 424 NA 425 NA 426 NA 427 NA 428 NA 429 Argyll Inverary NA 430 NA 431 NA 432 NA 433 NA 434 NA 435 NA 436 NA 437 NA 438 NA 439 NA 440 NA 441 NA 442 NA 443 NA 444 NA 445 NA 446 NA 447 NA 448 NA 449 NA 450 NA 451 NA 452 NA 453 NA 454 NA 455 NA 456 NA 457 NA 458 NA 459 NA 460 NA 461 NA 462 NA 463 NA 464 NA 465 NA 466 NA 467 NA 468 NA 469 NA 470 NA 471 NA 472 NA 473 NA 474 NA 475 NA 476 NA 477 NA 478 NA 479 NA 480 NA 481 NA 482 NA 483 NA 484 NA 485 NA 486 NA 487 NA 488 NA 489 NA 490 NA 491 NA 492 NA 493 NA 494 NA 495 NA 496 NA 497 NA 498 NA 499 NA 500 NA 501 NA 502 NA 503 NA 504 NA 505 NA 506 NA 507 NA 508 NA 509 NA 510 NA 511 NA 512 NA 513 NA 514 NA 515 NA 516 NA 517 NA 518 NA 519 NA 520 NA 521 NA 522 NA 523 NA 524 NA 525 NA 526 NA 527 NA 528 NA 529 NA 530 NA 531 NA 532 NA 533 NA 534 NA 535 NA 536 NA 537 NA 538 NA 539 NA 540 NA 541 NA 542 NA 543 NA 544 NA 545 NA 546 NA 547 NA 548 NA 549 NA 550 NA 551 NA 552 NA 553 NA 554 NA 555 NA 556 NA 557 NA 558 NA 559 NA 560 NA 561 NA 562 NA 563 NA 564 NA 565 NA 566 NA 567 NA 568 NA 569 NA 570 NA 571 NA 572 NA 573 NA 574 NA 575 NA 576 NA 577 NA 578 NA 579 NA 580 NA 581 NA 582 NA 583 NA 584 NA 585 NA 586 NA 587 NA 588 NA 589 NA 590 NA 591 NA 592 NA 593 NA 594 NA 595 NA 596 NA 597 NA 598 NA 599 NA 600 NA 601 NA 602 NA 603 NA 604 NA 605 NA 606 NA 607 NA 608 NA 609 NA 610 NA 611 NA 612 NA 613 NA 614 NA 615 NA 616 NA 617 NA 618 NA 619 NA 620 NA 621 NA 622 NA 623 NA 624 NA 625 NA 626 NA 627 NA 628 NA 629 NA 630 NA 631 NA 632 NA 633 NA 634 NA 635 NA 636 NA 637 NA 638 NA 639 NA 640 NA 641 NA 642 NA 643 NA 644 NA 645 NA 646 NA 647 NA 648 NA 649 NA 650 NA 651 NA 652 NA 653 Aberdeen Aberdeen Aberdeen NA 654 NA 655 Bute Rothesay NA 656 NA 657 NA 658 NA 659 NA 660 NA 661 NA 662 NA 663 NA 664 NA 665 NA 666 NA 667 NA 668 NA 669 NA 670 NA 671 NA 672 NA 673 NA 674 NA 675 NA 676 NA 677 NA 678 NA 679 NA 680 NA 681 NA 682 NA 683 NA 684 NA 685 NA 686 NA 687 NA 688 NA 689 NA 690 NA 691 NA 692 NA 693 NA 694 NA 695 NA 696 NA 697 NA 698 NA 699 NA 700 NA 701 NA 702 NA 703 NA 704 NA 705 NA 706 NA 707 NA 708 NA 709 NA 710 NA 711 NA 712 NA 713 NA 714 NA 715 NA 716 NA 717 NA 718 NA 719 NA 720 NA 721 NA 722 NA 723 NA 724 NA 725 NA 726 NA 727 NA 728 NA 729 NA 730 NA 731 NA 732 NA 733 NA 734 NA 735 NA 736 NA 737 NA 738 NA 739 NA 740 NA 741 NA 742 NA 743 NA 744 NA 745 NA 746 NA 747 NA 748 NA 749 NA 750 NA 751 NA 752 NA 753 NA 754 NA 755 NA 756 NA 757 NA 758 NA 759 NA 760 NA 761 NA 762 NA 763 NA 764 NA 765 Aberdeen Aberdeen Aberdeen NA 766 NA 767 NA 768 NA 769 NA 770 NA 771 NA 772 NA 773 NA 774 NA 775 NA 776 NA 777 NA 778 NA 779 Dalkeith Edinburgh NA 780 Dalkeith Edinburgh NA 781 P/JO/3540 Dalkeith Edinburgh Dalkeith NA 782 P/JO/3540 Dalkeith Edinburgh Dalkeith NA 783 P/JO/3540 Dalkeith Edinburgh Dalkeith NA 784 P/ST/1334 Dalkeith Edinburgh NA 785 P/ST/1334 Dalkeith Edinburgh NA 786 P/ST/1334 Dalkeith Edinburgh NA 787 NA 788 NA 789 NA 790 NA 791 NA 792 NA 793 P/ST/1334 Dalkeith Edinburgh NA 794 P/ST/1334 Dalkeith Edinburgh NA 795 NA 796 NA 797 NA 798 NA 799 NA 800 NA 801 NA 802 NA 803 NA 804 P/JO/3540 Dalkeith Edinburgh NA 805 NA 806 NA 807 NA 808 NA 809 NA 810 NA 811 NA 812 NA 813 NA 814 NA 815 NA 816 NA 817 NA 818 NA 819 NA 820 NA 821 NA 822 NA 823 NA 824 NA 825 NA 826 NA 827 NA 828 NA 829 NA 830 NA 831 NA 832 NA 833 NA 834 NA 835 NA 836 NA 837 NA 838 NA 839 NA 840 NA 841 NA 842 Dalkeith Edinburgh NA 843 NA 844 NA 845 NA 846 NA 847 NA 848 NA 849 NA 850 NA 851 NA 852 NA 853 NA 854 NA 855 NA 856 NA 857 NA 858 NA 859 NA 860 NA 861 NA 862 NA 863 NA 864 NA 865 NA 866 NA 867 NA 868 NA 869 NA 870 NA 871 NA 872 Stirling Stirling Stirling NA 873 Stirling Stirling Stirling NA 874 NA 875 Stirling Stirling NA 876 NA 877 NA 878 NA 879 NA 880 NA 881 NA 882 NA 883 NA 884 NA 885 NA 886 NA 887 NA 888 NA 889 NA 890 Edinburgh Edinburgh Edinburgh NA 891 NA 892 NA 893 NA 894 NA 895 NA 896 NA 897 NA 898 NA 899 NA 900 NA 901 NA 902 NA 903 NA 904 NA 905 NA 906 NA 907 NA 908 NA 909 NA 910 NA 911 NA 912 NA 913 NA 914 NA 915 NA 916 NA 917 NA 918 NA 919 NA 920 NA 921 NA 922 NA 923 NA 924 NA 925 NA 926 NA 927 NA 928 NA 929 NA 930 NA 931 NA 932 NA 933 NA 934 NA 935 NA 936 NA 937 NA 938 NA 939 NA 940 NA 941 NA 942 NA 943 NA 944 NA 945 NA 946 NA 947 NA 948 NA 949 NA 950 NA 951 NA 952 P/ST/1332 Peebles Peebles NA 953 P/ST/1332 Peebles Peebles NA 954 P/ST/1332 Peebles Peebles Peebles NA 955 P/ST/1332 Peebles Peebles Peebles NA 956 NA 957 P/ST/1332 Peebles Peebles Peebles NA 958 NA 959 NA 960 NA 961 NA 962 P/ST/1332 Peebles Peebles Peebles NA 963 NA 964 P/ST/1332 Peebles Peebles Peebles NA 965 NA 966 NA 967 NA 968 NA 969 NA 970 NA 971 NA 972 NA 973 NA 974 P/ST/703 Dunbar Haddington Dunbar NA 975 NA 976 NA 977 NA 978 NA 979 NA 980 NA 981 NA 982 NA 983 NA 984 NA 985 NA 986 NA 987 NA 988 NA 989 NA 990 NA 991 NA 992 NA 993 P/ST/1328 Paisley Renfrew Paisley NA 994 P/ST/1328 Paisley Renfrew Paisley NA 995 P/ST/1328 Paisley Renfrew Paisley NA 996 P/ST/1328 Paisley Renfrew Paisley NA 997 P/ST/1328 Paisley Renfrew Paisley NA 998 P/ST/1328 Paisley Renfrew Paisley NA 999 NA 1000 NA 1001 NA 1002 NA 1003 NA 1004 NA 1005 NA 1006 NA 1007 NA 1008 NA 1009 NA 1010 NA 1011 NA 1012 NA 1013 NA 1014 NA 1015 NA 1016 NA 1017 NA 1018 NA 1019 NA 1020 NA 1021 NA 1022 NA 1023 NA 1024 NA 1025 NA 1026 NA 1027 NA 1028 NA 1029 Aberdeen Aberdeen Aberdeen NA 1030 Aberdeen Aberdeen NA 1031 NA 1032 NA 1033 NA 1034 NA 1035 NA 1036 NA 1037 NA 1038 NA 1039 NA 1040 NA 1041 NA 1042 P/JO/3539 Haddington Haddington Haddington NA 1043 NA 1044 NA 1045 NA 1046 NA 1047 NA 1048 NA 1049 NA 1050 NA 1051 NA 1052 P/JO/3539 Haddington Haddington Haddington NA 1053 NA 1054 NA 1055 NA 1056 NA 1057 Haddington Haddington Haddington NA 1058 NA 1059 NA 1060 NA 1061 NA 1062 NA 1063 NA 1064 NA 1065 NA 1066 NA 1067 P/JO/3539 Haddington Haddington Haddington NA 1068 NA 1069 NA 1070 NA 1071 NA 1072 NA 1073 NA 1074 NA 1075 NA 1076 NA 1077 NA 1078 NA 1079 NA 1080 NA 1081 NA 1082 NA 1083 NA 1084 NA 1085 NA 1086 NA 1087 NA 1088 NA 1089 Aberdeen Aberdeen Aberdeen NA 1090 NA 1091 NA 1092 NA 1093 NA 1094 NA 1095 NA 1096 NA 1097 NA 1098 NA 1099 NA 1100 Aberdeen Aberdeen NA 1101 NA 1102 NA 1103 NA 1104 NA 1105 NA 1106 NA 1107 NA 1108 NA 1109 NA 1110 NA 1111 NA 1112 NA 1113 NA 1114 NA 1115 NA 1116 NA 1117 NA 1118 NA 1119 NA 1120 NA 1121 NA 1122 NA 1123 NA 1124 NA 1125 NA 1126 NA 1127 NA 1128 NA 1129 NA 1130 NA 1131 NA 1132 NA 1133 NA 1134 Penpoint Dumfries NA 1135 NA 1136 NA 1137 NA 1138 NA 1139 NA 1140 NA 1141 NA 1142 NA 1143 NA 1144 NA 1145 NA 1146 NA 1147 NA 1148 NA 1149 NA 1150 NA 1151 NA 1152 NA 1153 NA 1154 NA 1155 NA 1156 NA 1157 NA 1158 NA 1159 NA 1160 NA 1161 NA 1162 NA 1163 NA 1164 NA 1165 P/ST/1525 Haddington Haddington NA 1166 NA 1167 NA 1168 NA 1169 NA 1170 NA 1171 NA 1172 NA 1173 NA 1174 NA 1175 NA 1176 NA 1177 NA 1178 NA 1179 NA 1180 NA 1181 NA 1182 NA 1183 NA 1184 NA 1185 NA 1186 NA 1187 NA 1188 NA 1189 NA 1190 NA 1191 NA 1192 NA 1193 NA 1194 NA 1195 NA 1196 NA 1197 NA 1198 NA 1199 NA 1200 NA 1201 NA 1202 NA 1203 NA 1204 NA 1205 NA 1206 NA 1207 NA 1208 NA 1209 NA 1210 NA 1211 NA 1212 NA 1213 NA 1214 NA 1215 NA 1216 NA 1217 NA 1218 NA 1219 NA 1220 NA 1221 NA 1222 NA 1223 NA 1224 NA 1225 NA 1226 NA 1227 NA 1228 NA 1229 NA 1230 NA 1231 NA 1232 NA 1233 NA 1234 NA 1235 NA 1236 NA 1237 NA 1238 NA 1239 NA 1240 NA 1241 NA 1242 NA 1243 NA 1244 NA 1245 NA 1246 NA 1247 NA 1248 NA 1249 NA 1250 NA 1251 NA 1252 NA 1253 NA 1254 NA 1255 NA 1256 NA 1257 NA 1258 NA 1259 NA 1260 NA 1261 NA 1262 NA 1263 NA 1264 NA 1265 NA 1266 NA 1267 NA 1268 NA 1269 NA 1270 NA 1271 NA 1272 NA 1273 NA 1274 NA 1275 NA 1276 NA 1277 NA 1278 Orkney Kirkwall NA 1279 Orkney Kirkwall NA 1280 Dumfries Dumfries NA 1281 NA 1282 Moray NA 1283 NA 1284 NA 1285 NA 1286 NA 1287 NA 1288 Orkney Kirkwall NA 1289 Moray Elgin NA 1290 Orkney Kirkwall NA 1291 NA 1292 NA 1293 NA 1294 NA 1295 NA 1296 NA 1297 NA 1298 NA 1299 NA 1300 NA 1301 NA 1302 NA 1303 NA 1304 NA 1305 NA 1306 NA 1307 NA 1308 NA 1309 NA 1310 NA 1311 NA 1312 NA 1313 NA 1314 NA 1315 NA 1316 NA 1317 NA 1318 NA 1319 NA 1320 NA 1321 NA 1322 NA 1323 NA 1324 NA 1325 NA 1326 NA 1327 NA 1328 NA 1329 NA 1330 NA 1331 NA 1332 NA 1333 NA 1334 NA 1335 NA 1336 NA 1337 NA 1338 NA 1339 NA 1340 NA 1341 NA 1342 NA 1343 NA 1344 NA 1345 P/ST/629 Dunfermline Fife Culross NA 1346 Perth Perth NA 1347 Perth Perth NA 1348 Perth Perth NA 1349 NA 1350 P/ST/629 Dunfermline Fife Culross NA 1351 NA 1352 NA 1353 Lanark Lanark NA 1354 Lanark Lanark Lanark NA 1355 NA 1356 NA 1357 NA 1358 NA 1359 NA 1360 NA 1361 NA 1362 NA 1363 Orkney Kirkwall NA 1364 NA 1365 NA 1366 NA 1367 NA 1368 NA 1369 NA 1370 NA 1371 NA 1372 NA 1373 NA 1374 NA 1375 NA 1376 NA 1377 NA 1378 NA 1379 Orkney Kirkwall NA 1380 NA 1381 NA 1382 NA 1383 NA 1384 NA 1385 NA 1386 NA 1387 NA 1388 NA 1389 NA 1390 NA 1391 NA 1392 Perth NA 1393 Perth NA 1394 Perth NA 1395 Ayr Ayr NA 1396 Ayr Ayr NA 1397 Ayr Ayr NA 1398 Dumfries NA 1399 Dumfries Dumfries NA 1400 Dumfries Dumfries NA 1401 Glasgow NA 1402 Ayr Ayr NA 1403 Ayr Ayr NA 1404 Ayr Ayr NA 1405 Ayr Ayr NA 1406 Stirling Stirling NA 1407 Stirling Stirling NA 1408 Stirling Stirling NA 1409 Stirling Stirling NA 1410 Stirling Stirling NA 1411 Stirling Stirling NA 1412 Stirling Stirling NA 1413 NA 1414 NA 1415 P/ST/962 Dunfermline Fife Inverkeithing NA 1416 NA 1417 NA 1418 NA 1419 NA 1420 NA 1421 NA 1422 NA 1423 NA 1424 NA 1425 NA 1426 NA 1427 NA 1428 NA 1429 NA 1430 NA 1431 NA 1432 NA 1433 NA 1434 NA 1435 NA 1436 NA 1437 NA 1438 NA 1439 NA 1440 NA 1441 NA 1442 NA 1443 NA 1444 NA 1445 NA 1446 NA 1447 NA 1448 NA 1449 NA 1450 NA 1451 NA 1452 NA 1453 NA 1454 NA 1455 NA 1456 NA 1457 NA 1458 NA 1459 NA 1460 NA 1461 NA 1462 NA 1463 NA 1464 NA 1465 NA 1466 NA 1467 NA 1468 NA 1469 NA 1470 NA 1471 NA 1472 NA 1473 NA 1474 NA 1475 NA 1476 NA 1477 NA 1478 NA 1479 NA 1480 NA 1481 NA 1482 NA 1483 NA 1484 NA 1485 NA 1486 NA 1487 NA 1488 NA 1489 NA 1490 NA 1491 Stirling Stirling NA 1492 Stirling Stirling NA 1493 Ayr Ayr NA 1494 Dumfries Dumfries NA 1495 Dumfries Dumfries NA 1496 NA 1497 Dumfries Dumfries NA 1498 Dumfries Dumfries NA 1499 Dumfries Dumfries NA 1500 Dumfries Dumfries NA 1501 Dumfries Dumfries NA 1502 NA 1503 Dumfries Dumfries NA 1504 Dumfries Dumfries NA 1505 Aberdeen Aberdeen NA 1506 NA 1507 NA 1508 Aberdeen Aberdeen NA 1509 Banff Banff NA 1510 Moray Elgin NA 1511 Moray Elgin NA 1512 Ross NA 1513 Dumfries Dumfries NA 1514 Dumfries Dumfries NA 1515 NA 1516 NA 1517 NA 1518 NA 1519 NA 1520 NA 1521 Edinburgh Edinburgh Edinburgh NA 1522 Edinburgh Edinburgh Edinburgh NA 1523 Edinburgh Edinburgh Edinburgh NA 1524 Edinburgh Edinburgh Edinburgh NA 1525 Edinburgh Edinburgh Edinburgh NA 1526 Edinburgh Edinburgh Edinburgh NA 1527 Edinburgh Edinburgh Edinburgh NA 1528 Edinburgh Edinburgh Edinburgh NA 1529 Edinburgh Edinburgh Edinburgh NA 1530 Haddington Haddington Haddington NA 1531 Haddington Haddington Haddington NA 1532 Haddington Haddington Haddington NA 1533 Haddington Haddington Haddington NA 1534 Haddington Haddington Haddington NA 1535 Haddington Haddington Haddington NA 1536 Peebles Peebles Peebles NA 1537 Peebles Peebles Peebles NA 1538 Peebles Peebles Peebles NA Trial.NGR.Easting Trial.NGR.Northing Watching WatchingDate 1 NA NA 0 2 NA NA 0 3 NA NA 0 4 NA NA 0 5 NA NA 0 6 NA NA 0 7 NA NA 0 8 NA NA 0 9 NA NA 0 10 NA NA 0 11 NA NA 0 12 NA NA 0 13 NA NA 0 14 NA NA 0 15 NA NA 0 16 NA NA 0 17 NA NA 0 18 NA NA 0 19 NA NA 0 20 NA NA 0 21 NA NA 0 22 NA NA 0 23 NA NA 0 24 NA NA 0 25 NA NA 0 26 NA NA 0 27 NA NA 0 28 NA NA 0 29 NA NA 0 30 NA NA 0 31 NA NA 0 32 NA NA 0 33 NA NA 0 34 NA NA 0 35 NA NA 0 36 NA NA 0 37 NA NA 0 38 NA NA 0 39 NA NA 0 40 NA NA 0 41 NA NA 0 42 NA NA 0 43 NA NA 0 44 NA NA 0 45 NA NA 0 46 NA NA 0 47 NA NA 0 48 NA NA 0 49 NA NA 0 50 NA NA 0 51 NA NA 0 52 NA NA 0 53 NA NA 0 54 NA NA 0 55 NA NA 0 56 NA NA 0 57 NA NA 0 58 NA NA 0 59 NA NA 0 60 NA NA 0 61 NA NA 0 62 NA NA 0 63 NA NA 0 64 NA NA 0 65 NA NA 0 66 NA NA 0 67 NA NA 0 68 NA NA 0 69 NA NA 0 70 NA NA 0 71 NA NA 0 72 NA NA 0 73 NA NA 0 74 NA NA 0 75 NA NA 0 76 NA NA 0 77 NA NA 0 78 NA NA 0 79 NA NA 0 80 NA NA 0 81 NA NA 0 82 NA NA 0 83 NA NA 0 84 NA NA 0 85 NA NA 0 86 NA NA 0 87 NA NA 0 88 NA NA 0 89 NA NA 0 90 NA NA 0 91 NA NA 0 92 NA NA 0 93 NA NA 0 94 NA NA 0 95 NA NA 0 96 NA NA 0 97 NA NA 0 98 NA NA 0 99 NA NA 0 100 NA NA 0 101 NA NA 0 102 NA NA 0 103 NA NA 0 104 NA NA 0 105 NA NA 0 106 NA NA 0 107 NA NA 0 108 NA NA 0 109 NA NA 0 110 NA NA 0 111 NA NA 0 112 NA NA 0 113 NA NA 0 114 NA NA 0 115 NA NA 0 116 NA NA 0 117 NA NA 0 118 NA NA 0 119 NA NA 0 120 NA NA 0 121 NA NA 0 122 NA NA 0 123 NA NA 0 124 NA NA 0 125 NA NA 0 126 NA NA 0 127 NA NA 0 128 NA NA 0 129 NA NA 0 130 NA NA 0 131 NA NA 0 132 NA NA 0 133 NA NA 0 134 NA NA 0 135 NA NA 0 136 NA NA 0 137 NA NA 0 138 NA NA 0 139 NA NA 0 140 NA NA 0 141 NA NA 0 142 NA NA 0 143 NA NA 0 144 NA NA 0 145 NA NA 0 146 NA NA 0 147 NA NA 0 148 NA NA 0 149 NA NA 0 150 NA NA 0 151 NA NA 0 152 NA NA 0 153 NA NA 0 154 NA NA 0 155 NA NA 0 156 NA NA 0 157 NA NA 0 158 NA NA 0 159 NA NA 0 160 NA NA 0 161 NA NA 0 162 NA NA 0 163 NA NA 0 164 NA NA 0 165 NA NA 0 166 NA NA 0 167 NA NA 0 168 NA NA 0 169 NA NA 0 170 NA NA 0 171 NA NA 0 172 NA NA 0 173 NA NA 0 174 NA NA 0 175 NA NA 0 176 NA NA 0 177 NA NA 0 178 NA NA 0 179 NA NA 0 180 NA NA 0 181 NA NA 0 182 NA NA 0 183 NA NA 0 184 NA NA 0 185 NA NA 0 186 NA NA 0 187 NA NA 0 188 NA NA 0 189 NA NA 0 190 NA NA 0 191 NA NA 0 192 NA NA 0 193 NA NA 0 194 NA NA 0 195 NA NA 0 196 NA NA 0 197 NA NA 0 198 NA NA 0 199 NA NA 0 200 NA NA 0 201 NA NA 0 202 NA NA 0 203 NA NA 0 204 NA NA 0 205 NA NA 0 206 NA NA 0 207 NA NA 0 208 NA NA 0 209 NA NA 0 210 NA NA 0 211 NA NA 0 212 NA NA 0 213 NA NA 0 214 NA NA 0 215 NA NA 0 216 NA NA 0 217 NA NA 0 218 NA NA 0 219 NA NA 0 220 NA NA 0 221 NA NA 0 222 NA NA 0 223 NA NA 0 224 NA NA 0 225 NA NA 0 226 NA NA 0 227 NA NA 0 228 NA NA 0 229 NA NA 0 230 NA NA 0 231 NA NA 0 232 NA NA 0 233 NA NA 0 234 NA NA 0 235 NA NA 0 236 NA NA 0 237 NA NA 0 238 NA NA 0 239 NA NA 0 240 NA NA 0 241 NA NA 0 242 NA NA 0 243 NA NA 0 244 NA NA 0 245 NA NA 0 246 NA NA 0 247 NA NA 0 248 NA NA 0 249 NA NA 0 250 NA NA 0 251 NA NA 0 252 NA NA 0 253 NA NA 0 254 NA NA 0 255 NA NA 0 256 NA NA 0 257 NA NA 0 258 NA NA 0 259 NA NA 0 260 NA NA 0 261 NA NA 0 262 NA NA 0 263 NA NA 0 264 NA NA 0 265 NA NA 0 266 NA NA 0 267 NA NA 0 268 NA NA 0 269 NA NA 0 270 NA NA 0 271 NA NA 0 272 NA NA 0 273 NA NA 0 274 NA NA 0 275 NA NA 0 276 NA NA 0 277 NA NA 0 278 NA NA 0 279 NA NA 0 280 NA NA 0 281 NA NA 0 282 NA NA 0 283 NA NA 0 284 NA NA 0 285 NA NA 0 286 NA NA 0 287 NA NA 0 288 NA NA 0 289 NA NA 0 290 NA NA 0 291 NA NA 0 292 NA NA 0 293 NA NA 0 294 NA NA 0 295 NA NA 0 296 NA NA 0 297 NA NA 0 298 NA NA 0 299 NA NA 0 300 NA NA 0 301 NA NA 0 302 NA NA 0 303 NA NA 0 304 NA NA 0 305 NA NA 0 306 NA NA 0 307 NA NA 0 308 NA NA 0 309 NA NA 0 310 NA NA 0 311 NA NA 0 312 NA NA 0 313 NA NA 0 314 NA NA 0 315 NA NA 0 316 NA NA 0 317 NA NA 0 318 NA NA 0 319 NA NA 0 320 NA NA 0 321 NA NA 0 322 NA NA 0 323 NA NA 0 324 NA NA 0 325 NA NA 0 326 NA NA 0 327 NA NA 0 328 NA NA 0 329 NA NA 0 330 NA NA 0 331 NA NA 0 332 NA NA 0 333 NA NA 0 334 NA NA 0 335 NA NA 0 336 NA NA 0 337 NA NA 0 338 NA NA 0 339 NA NA 0 340 NA NA 0 341 NA NA 0 342 NA NA 0 343 NA NA 0 344 NA NA 0 345 NA NA 0 346 NA NA 0 347 NA NA 0 348 NA NA 0 349 NA NA 0 350 NA NA 0 351 NA NA 0 352 NA NA 0 353 NA NA 0 354 NA NA 0 355 NA NA 0 356 NA NA 0 357 NA NA 0 358 NA NA 0 359 NA NA 0 360 NA NA 0 361 NA NA 0 362 NA NA 0 363 NA NA 0 364 NA NA 0 365 NA NA 0 366 NA NA 0 367 NA NA 0 368 NA NA 0 369 NA NA 0 370 NA NA 0 371 NA NA 0 372 NA NA 0 373 NA NA 0 374 NA NA 0 375 NA NA 0 376 NA NA 0 377 NA NA 0 378 NA NA 0 379 NA NA 0 380 NA NA 0 381 NA NA 0 382 NA NA 0 383 NA NA 0 384 NA NA 0 385 NA NA 0 386 NA NA 0 387 NA NA 0 388 NA NA 0 389 NA NA 0 390 NA NA 0 391 NA NA 0 392 NA NA 0 393 NA NA 0 394 NA NA 0 395 NA NA 0 396 NA NA 0 397 NA NA 0 398 NA NA 0 399 NA NA 0 400 NA NA 0 401 NA NA 0 402 NA NA 0 403 NA NA 0 404 NA NA 0 405 NA NA 0 406 NA NA 0 407 NA NA 0 408 NA NA 0 409 NA NA 0 410 NA NA 0 411 NA NA 0 412 NA NA 0 413 NA NA 0 414 NA NA 0 415 NA NA 0 416 NA NA 0 417 NA NA 0 418 NA NA 0 419 NA NA 0 420 NA NA 0 421 NA NA 0 422 NA NA 0 423 NA NA 0 424 NA NA 0 425 NA NA 0 426 NA NA 0 427 NA NA 0 428 NA NA 0 429 NA NA 0 430 NA NA 0 431 NA NA 0 432 NA NA 0 433 NA NA 0 434 NA NA 0 435 NA NA 0 436 NA NA 0 437 NA NA 0 438 NA NA 0 439 NA NA 0 440 NA NA 0 441 NA NA 0 442 NA NA 0 443 NA NA 0 444 NA NA 0 445 NA NA 0 446 NA NA 0 447 NA NA 0 448 NA NA 0 449 NA NA 0 450 NA NA 0 451 NA NA 0 452 NA NA 0 453 NA NA 0 454 NA NA 0 455 NA NA 0 456 NA NA 0 457 NA NA 0 458 NA NA 0 459 NA NA 0 460 NA NA 0 461 NA NA 0 462 NA NA 0 463 NA NA 0 464 NA NA 0 465 NA NA 0 466 NA NA 0 467 NA NA 0 468 NA NA 0 469 NA NA 0 470 NA NA 0 471 NA NA 0 472 NA NA 0 473 NA NA 0 474 NA NA 0 475 NA NA 0 476 NA NA 0 477 NA NA 0 478 NA NA 0 479 NA NA 0 480 NA NA 0 481 NA NA 0 482 NA NA 0 483 NA NA 0 484 NA NA 0 485 NA NA 0 486 NA NA 0 487 NA NA 0 488 NA NA 0 489 NA NA 0 490 NA NA 0 491 NA NA 0 492 NA NA 0 493 NA NA 0 494 NA NA 0 495 NA NA 0 496 NA NA 0 497 NA NA 0 498 NA NA 0 499 NA NA 0 500 NA NA 0 501 NA NA 0 502 NA NA 0 503 NA NA 0 504 NA NA 0 505 NA NA 0 506 NA NA 0 507 NA NA 0 508 NA NA 0 509 NA NA 0 510 NA NA 0 511 NA NA 0 512 NA NA 0 513 NA NA 0 514 NA NA 0 515 NA NA 0 516 NA NA 0 517 NA NA 0 518 NA NA 0 519 NA NA 0 520 NA NA 0 521 NA NA 0 522 NA NA 0 523 NA NA 0 524 NA NA 0 525 NA NA 0 526 NA NA 0 527 NA NA 0 528 NA NA 0 529 NA NA 0 530 NA NA 0 531 NA NA 0 532 NA NA 0 533 NA NA 0 534 NA NA 0 535 NA NA 0 536 NA NA 0 537 NA NA 0 538 NA NA 0 539 NA NA 0 540 NA NA 0 541 NA NA 0 542 NA NA 0 543 NA NA 0 544 NA NA 0 545 NA NA 0 546 NA NA 0 547 NA NA 0 548 NA NA 0 549 NA NA 0 550 NA NA 0 551 NA NA 0 552 NA NA 0 553 NA NA 0 554 NA NA 0 555 NA NA 0 556 NA NA 0 557 NA NA 0 558 NA NA 0 559 NA NA 0 560 NA NA 1 561 NA NA 0 562 NA NA 0 563 NA NA 0 564 NA NA 0 565 NA NA 0 566 NA NA 0 567 NA NA 0 568 NA NA 0 569 NA NA 0 570 NA NA 0 571 NA NA 0 572 NA NA 0 573 NA NA 0 574 NA NA 0 575 NA NA 0 576 NA NA 0 577 NA NA 0 578 NA NA 0 579 NA NA 0 580 NA NA 0 581 NA NA 0 582 NA NA 0 583 NA NA 0 584 NA NA 0 585 NA NA 0 586 NA NA 0 587 NA NA 0 588 NA NA 0 589 NA NA 0 590 NA NA 0 591 NA NA 0 592 NA NA 0 593 NA NA 0 594 NA NA 0 595 NA NA 0 596 NA NA 0 597 NA NA 0 598 NA NA 0 599 NA NA 0 600 NA NA 0 601 NA NA 0 602 NA NA 0 603 NA NA 0 604 NA NA 0 605 NA NA 0 606 NA NA 0 607 NA NA 0 608 NA NA 0 609 NA NA 0 610 NA NA 0 611 NA NA 0 612 NA NA 0 613 NA NA 0 614 NA NA 0 615 NA NA 0 616 NA NA 0 617 NA NA 0 618 NA NA 0 619 NA NA 0 620 NA NA 0 621 NA NA 0 622 NA NA 0 623 NA NA 0 624 NA NA 0 625 NA NA 0 626 NA NA 0 627 NA NA 0 628 NA NA 0 629 NA NA 0 630 NA NA 0 631 NA NA 0 632 NA NA 0 633 NA NA 0 634 NA NA 0 635 NA NA 0 636 NA NA 0 637 NA NA 0 638 NA NA 0 639 NA NA 0 640 NA NA 0 641 NA NA 0 642 NA NA 0 643 NA NA 0 644 NA NA 0 645 NA NA 0 646 NA NA 0 647 NA NA 0 648 NA NA 0 649 NA NA 0 650 NA NA 0 651 NA NA 0 652 NA NA 0 653 NA NA 0 654 NA NA 0 655 NA NA 0 656 NA NA 0 657 NA NA 0 658 NA NA 0 659 NA NA 0 660 NA NA 0 661 NA NA 0 662 NA NA 0 663 NA NA 0 664 NA NA 0 665 NA NA 0 666 NA NA 0 667 NA NA 0 668 NA NA 0 669 NA NA 0 670 NA NA 0 671 NA NA 0 672 NA NA 0 673 NA NA 0 674 NA NA 0 675 NA NA 0 676 NA NA 0 677 NA NA 0 678 NA NA 0 679 NA NA 0 680 NA NA 0 681 NA NA 0 682 NA NA 0 683 NA NA 0 684 NA NA 0 685 NA NA 0 686 NA NA 0 687 NA NA 0 688 NA NA 0 689 NA NA 0 690 NA NA 0 691 NA NA 0 692 NA NA 0 693 NA NA 0 694 NA NA 0 695 NA NA 0 696 NA NA 0 697 NA NA 0 698 NA NA 0 699 NA NA 0 700 NA NA 0 701 NA NA 0 702 NA NA 0 703 NA NA 0 704 NA NA 0 705 NA NA 0 706 NA NA 0 707 NA NA 0 708 NA NA 0 709 NA NA 0 710 NA NA 0 711 NA NA 0 712 NA NA 0 713 NA NA 0 714 NA NA 0 715 NA NA 0 716 NA NA 0 717 NA NA 0 718 NA NA 0 719 NA NA 0 720 NA NA 0 721 NA NA 0 722 NA NA 0 723 NA NA 0 724 NA NA 0 725 NA NA 0 726 NA NA 0 727 NA NA 0 728 NA NA 0 729 NA NA 0 730 NA NA 0 731 NA NA 0 732 NA NA 0 733 NA NA 0 734 NA NA 0 735 NA NA 0 736 NA NA 0 737 NA NA 0 738 NA NA 0 739 NA NA 0 740 NA NA 0 741 NA NA 0 742 NA NA 0 743 NA NA 0 744 NA NA 0 745 NA NA 0 746 NA NA 0 747 NA NA 0 748 NA NA 0 749 NA NA 0 750 NA NA 0 751 NA NA 0 752 NA NA 0 753 NA NA 0 754 NA NA 0 755 NA NA 0 756 NA NA 0 757 NA NA 0 758 NA NA 0 759 NA NA 0 760 NA NA 0 761 NA NA 0 762 NA NA 0 763 NA NA 0 764 NA NA 0 765 NA NA 0 766 NA NA 0 767 NA NA 0 768 NA NA 0 769 NA NA 0 770 NA NA 0 771 NA NA 0 772 NA NA 0 773 NA NA 0 774 NA NA 0 775 NA NA 0 776 NA NA 0 777 NA NA 0 778 NA NA 0 779 NA NA 0 780 NA NA 0 781 NA NA 0 782 NA NA 0 783 NA NA 0 784 NA NA 0 785 NA NA 0 786 NA NA 0 787 NA NA 0 788 NA NA 0 789 NA NA 0 790 NA NA 0 791 NA NA 0 792 NA NA 0 793 NA NA 0 794 NA NA 0 795 NA NA 0 796 NA NA 0 797 NA NA 0 798 NA NA 0 799 NA NA 0 800 NA NA 0 801 NA NA 0 802 NA NA 0 803 NA NA 0 804 NA NA 0 805 NA NA 0 806 NA NA 0 807 NA NA 0 808 NA NA 0 809 NA NA 0 810 NA NA 0 811 NA NA 0 812 NA NA 0 813 NA NA 0 814 NA NA 0 815 NA NA 0 816 NA NA 0 817 NA NA 0 818 NA NA 0 819 NA NA 0 820 NA NA 0 821 NA NA 0 822 NA NA 0 823 NA NA 0 824 NA NA 0 825 NA NA 0 826 NA NA 0 827 NA NA 0 828 NA NA 0 829 NA NA 0 830 NA NA 0 831 NA NA 0 832 NA NA 0 833 NA NA 0 834 NA NA 0 835 NA NA 0 836 NA NA 0 837 NA NA 0 838 NA NA 0 839 NA NA 0 840 NA NA 0 841 NA NA 0 842 NA NA 0 843 NA NA 0 844 NA NA 0 845 NA NA 0 846 NA NA 0 847 NA NA 0 848 NA NA 0 849 NA NA 0 850 NA NA 0 851 NA NA 0 852 NA NA 0 853 NA NA 0 854 NA NA 0 855 NA NA 0 856 NA NA 0 857 NA NA 0 858 NA NA 0 859 NA NA 0 860 NA NA 0 861 NA NA 0 862 NA NA 0 863 NA NA 0 864 NA NA 0 865 NA NA 0 866 NA NA 0 867 NA NA 0 868 NA NA 0 869 NA NA 0 870 NA NA 0 871 NA NA 0 872 NA NA 0 873 NA NA 0 874 NA NA 0 875 NA NA 0 876 NA NA 0 877 NA NA 0 878 NA NA 0 879 NA NA 0 880 NA NA 0 881 NA NA 0 882 NA NA 0 883 NA NA 0 884 NA NA 0 885 NA NA 0 886 NA NA 0 887 NA NA 0 888 NA NA 0 889 NA NA 0 890 NA NA 0 891 NA NA 0 892 NA NA 0 893 NA NA 0 894 NA NA 0 895 NA NA 0 896 NA NA 0 897 NA NA 0 898 NA NA 0 899 NA NA 0 900 NA NA 0 901 NA NA 0 902 NA NA 0 903 NA NA 0 904 NA NA 0 905 NA NA 0 906 NA NA 0 907 NA NA 0 908 NA NA 0 909 NA NA 0 910 NA NA 0 911 NA NA 0 912 NA NA 0 913 NA NA 0 914 NA NA 0 915 NA NA 0 916 NA NA 0 917 NA NA 0 918 NA NA 0 919 NA NA 0 920 NA NA 0 921 NA NA 0 922 NA NA 0 923 NA NA 0 924 NA NA 0 925 NA NA 0 926 NA NA 0 927 NA NA 0 928 NA NA 0 929 NA NA 0 930 NA NA 0 931 NA NA 0 932 NA NA 0 933 NA NA 0 934 NA NA 0 935 NA NA 0 936 NA NA 0 937 NA NA 0 938 NA NA 0 939 NA NA 0 940 NA NA 0 941 NA NA 0 942 NA NA 0 943 NA NA 0 944 NA NA 0 945 NA NA 0 946 NA NA 0 947 NA NA 0 948 NA NA 0 949 NA NA 0 950 NA NA 0 951 NA NA 0 952 NA NA 0 953 NA NA 0 954 NA NA 0 955 NA NA 0 956 NA NA 0 957 NA NA 0 958 NA NA 0 959 NA NA 0 960 NA NA 0 961 NA NA 0 962 NA NA 0 963 NA NA 0 964 NA NA 0 965 NA NA 0 966 NA NA 0 967 NA NA 0 968 NA NA 0 969 NA NA 0 970 NA NA 0 971 NA NA 0 972 NA NA 0 973 NA NA 0 974 NA NA 0 975 NA NA 0 976 NA NA 0 977 NA NA 1 978 NA NA 0 979 NA NA 0 980 NA NA 0 981 NA NA 0 982 NA NA 0 983 NA NA 0 984 NA NA 0 985 NA NA 0 986 NA NA 0 987 NA NA 0 988 NA NA 0 989 NA NA 0 990 NA NA 0 991 NA NA 0 992 NA NA 0 993 NA NA 0 994 NA NA 0 995 NA NA 0 996 NA NA 0 997 NA NA 0 998 NA NA 0 999 NA NA 0 1000 NA NA 0 1001 NA NA 0 1002 NA NA 0 1003 NA NA 0 1004 NA NA 0 1005 NA NA 0 1006 NA NA 0 1007 NA NA 0 1008 NA NA 0 1009 NA NA 0 1010 NA NA 0 1011 NA NA 0 1012 NA NA 0 1013 NA NA 0 1014 NA NA 0 1015 NA NA 0 1016 NA NA 0 1017 NA NA 0 1018 NA NA 0 1019 NA NA 0 1020 NA NA 0 1021 NA NA 0 1022 NA NA 0 1023 NA NA 0 1024 NA NA 0 1025 NA NA 0 1026 NA NA 0 1027 NA NA 0 1028 NA NA 0 1029 NA NA 0 1030 NA NA 0 1031 NA NA 0 1032 NA NA 0 1033 NA NA 0 1034 NA NA 0 1035 NA NA 0 1036 NA NA 0 1037 NA NA 0 1038 NA NA 0 1039 NA NA 0 1040 NA NA 0 1041 NA NA 0 1042 NA NA 0 1043 NA NA 0 1044 NA NA 0 1045 NA NA 0 1046 NA NA 0 1047 NA NA 0 1048 NA NA 0 1049 NA NA 0 1050 NA NA 1 1051 NA NA 1 1052 NA NA 0 1053 NA NA 0 1054 NA NA 0 1055 NA NA 0 1056 NA NA 0 1057 NA NA 0 1058 NA NA 0 1059 NA NA 0 1060 NA NA 0 1061 NA NA 0 1062 NA NA 0 1063 NA NA 0 1064 NA NA 0 1065 NA NA 0 1066 NA NA 0 1067 NA NA 0 1068 NA NA 0 1069 NA NA 0 1070 NA NA 0 1071 NA NA 0 1072 NA NA 0 1073 NA NA 0 1074 NA NA 0 1075 NA NA 0 1076 NA NA 0 1077 NA NA 0 1078 NA NA 0 1079 NA NA 0 1080 NA NA 0 1081 NA NA 0 1082 NA NA 0 1083 NA NA 0 1084 NA NA 0 1085 NA NA 0 1086 NA NA 0 1087 NA NA 0 1088 NA NA 0 1089 NA NA 0 1090 NA NA 0 1091 NA NA 1 1092 NA NA 1 1093 NA NA 1 1094 NA NA 1 1095 NA NA 0 1096 NA NA 0 1097 NA NA 0 1098 NA NA 0 1099 NA NA 0 1100 NA NA 0 1101 NA NA 0 1102 NA NA 0 1103 NA NA 0 1104 NA NA 0 1105 NA NA 0 1106 NA NA 0 1107 NA NA 0 1108 NA NA 0 1109 NA NA 0 1110 NA NA 0 1111 NA NA 0 1112 NA NA 0 1113 NA NA 0 1114 NA NA 0 1115 NA NA 0 1116 NA NA 0 1117 NA NA 0 1118 NA NA 0 1119 NA NA 0 1120 NA NA 0 1121 NA NA 0 1122 NA NA 0 1123 NA NA 0 1124 NA NA 0 1125 NA NA 0 1126 NA NA 0 1127 NA NA 0 1128 NA NA 0 1129 NA NA 0 1130 NA NA 0 1131 NA NA 0 1132 NA NA 0 1133 NA NA 0 1134 NA NA 0 1135 NA NA 0 1136 NA NA 0 1137 NA NA 0 1138 NA NA 0 1139 NA NA 0 1140 NA NA 0 1141 NA NA 0 1142 NA NA 0 1143 NA NA 0 1144 NA NA 0 1145 NA NA 0 1146 NA NA 0 1147 NA NA 0 1148 NA NA 0 1149 NA NA 0 1150 NA NA 0 1151 NA NA 0 1152 NA NA 0 1153 NA NA 0 1154 NA NA 0 1155 NA NA 0 1156 NA NA 0 1157 NA NA 0 1158 NA NA 0 1159 NA NA 0 1160 NA NA 0 1161 NA NA 0 1162 NA NA 0 1163 NA NA 0 1164 NA NA 0 1165 NA NA 0 1166 NA NA 0 1167 NA NA 0 1168 NA NA 0 1169 NA NA 0 1170 NA NA 0 1171 NA NA 0 1172 NA NA 0 1173 NA NA 0 1174 NA NA 0 1175 NA NA 0 1176 NA NA 0 1177 NA NA 0 1178 NA NA 0 1179 NA NA 0 1180 NA NA 0 1181 NA NA 0 1182 NA NA 0 1183 NA NA 0 1184 NA NA 0 1185 NA NA 0 1186 NA NA 0 1187 NA NA 0 1188 NA NA 0 1189 NA NA 0 1190 NA NA 0 1191 NA NA 0 1192 NA NA 0 1193 NA NA 0 1194 NA NA 0 1195 NA NA 0 1196 NA NA 0 1197 NA NA 0 1198 NA NA 0 1199 NA NA 0 1200 NA NA 0 1201 NA NA 0 1202 NA NA 0 1203 NA NA 0 1204 NA NA 0 1205 NA NA 0 1206 NA NA 0 1207 NA NA 0 1208 NA NA 0 1209 NA NA 0 1210 NA NA 0 1211 NA NA 0 1212 NA NA 0 1213 NA NA 0 1214 NA NA 0 1215 NA NA 0 1216 NA NA 0 1217 NA NA 0 1218 NA NA 0 1219 NA NA 0 1220 NA NA 0 1221 NA NA 0 1222 NA NA 0 1223 NA NA 0 1224 NA NA 0 1225 NA NA 0 1226 NA NA 0 1227 NA NA 0 1228 NA NA 0 1229 NA NA 0 1230 NA NA 0 1231 NA NA 0 1232 NA NA 0 1233 NA NA 0 1234 NA NA 0 1235 NA NA 0 1236 NA NA 0 1237 NA NA 0 1238 NA NA 0 1239 NA NA 0 1240 NA NA 0 1241 NA NA 0 1242 NA NA 0 1243 NA NA 0 1244 NA NA 0 1245 NA NA 0 1246 NA NA 0 1247 NA NA 0 1248 NA NA 0 1249 NA NA 0 1250 NA NA 0 1251 NA NA 0 1252 NA NA 0 1253 NA NA 0 1254 NA NA 0 1255 NA NA 0 1256 NA NA 0 1257 NA NA 1 1258 NA NA 1 1259 NA NA 0 1260 NA NA 1 1261 NA NA 0 1262 NA NA 1 1263 NA NA 1 1264 NA NA 1 1265 NA NA 1 1266 NA NA 1 1267 NA NA 1 1268 NA NA 1 1269 NA NA 0 1270 NA NA 1 1271 NA NA 1 1272 NA NA 0 1273 NA NA 0 1274 NA NA 0 1275 NA NA 0 1276 NA NA 0 1277 NA NA 0 1278 NA NA 0 1279 NA NA 0 1280 NA NA 0 1281 NA NA 0 1282 NA NA 0 1283 NA NA 0 1284 NA NA 0 1285 NA NA 0 1286 NA NA 0 1287 NA NA 0 1288 NA NA 0 1289 NA NA 0 1290 NA NA 0 1291 NA NA 0 1292 NA NA 0 1293 NA NA 0 1294 NA NA 0 1295 NA NA 0 1296 NA NA 0 1297 NA NA 0 1298 NA NA 0 1299 NA NA 0 1300 NA NA 0 1301 NA NA 0 1302 NA NA 0 1303 NA NA 0 1304 NA NA 0 1305 NA NA 0 1306 NA NA 0 1307 NA NA 0 1308 NA NA 0 1309 NA NA 0 1310 NA NA 0 1311 NA NA 0 1312 NA NA 0 1313 NA NA 0 1314 NA NA 0 1315 NA NA 0 1316 NA NA 0 1317 NA NA 0 1318 NA NA 0 1319 NA NA 0 1320 NA NA 0 1321 NA NA 0 1322 NA NA 0 1323 NA NA 0 1324 NA NA 0 1325 NA NA 0 1326 NA NA 0 1327 NA NA 0 1328 NA NA 0 1329 NA NA 0 1330 NA NA 0 1331 NA NA 0 1332 NA NA 0 1333 NA NA 0 1334 NA NA 0 1335 NA NA 0 1336 NA NA 0 1337 NA NA 0 1338 NA NA 0 1339 NA NA 0 1340 NA NA 0 1341 NA NA 0 1342 NA NA 0 1343 NA NA 0 1344 NA NA 0 1345 NA NA 0 1346 NA NA 0 1347 NA NA 0 1348 NA NA 0 1349 NA NA 1 1350 NA NA 0 1351 NA NA 0 1352 NA NA 0 1353 NA NA 0 1354 NA NA 0 1355 NA NA 0 1356 NA NA 0 1357 NA NA 0 1358 NA NA 0 1359 NA NA 0 1360 NA NA 0 1361 NA NA 0 1362 NA NA 0 1363 NA NA 0 1364 NA NA 0 1365 NA NA 0 1366 NA NA 0 1367 NA NA 0 1368 NA NA 0 1369 NA NA 0 1370 NA NA 0 1371 NA NA 0 1372 NA NA 0 1373 NA NA 0 1374 NA NA 0 1375 NA NA 0 1376 NA NA 0 1377 NA NA 0 1378 NA NA 0 1379 NA NA 0 1380 NA NA 0 1381 NA NA 0 1382 NA NA 0 1383 NA NA 0 1384 NA NA 0 1385 NA NA 0 1386 NA NA 0 1387 NA NA 0 1388 NA NA 0 1389 NA NA 0 1390 NA NA 0 1391 NA NA 0 1392 NA NA 0 1393 NA NA 0 1394 NA NA 0 1395 NA NA 0 1396 NA NA 0 1397 NA NA 0 1398 NA NA 0 1399 NA NA 0 1400 NA NA 0 1401 NA NA 0 1402 NA NA 0 1403 NA NA 0 1404 NA NA 0 1405 NA NA 0 1406 NA NA 0 1407 NA NA 0 1408 NA NA 0 1409 NA NA 0 1410 NA NA 0 1411 NA NA 0 1412 NA NA 0 1413 NA NA 0 1414 NA NA 0 1415 NA NA 0 1416 NA NA 0 1417 NA NA 0 1418 NA NA 0 1419 NA NA 0 1420 NA NA 0 1421 NA NA 0 1422 NA NA 0 1423 NA NA 0 1424 NA NA 0 1425 NA NA 0 1426 NA NA 0 1427 NA NA 0 1428 NA NA 0 1429 NA NA 0 1430 NA NA 0 1431 NA NA 0 1432 NA NA 0 1433 NA NA 0 1434 NA NA 0 1435 NA NA 0 1436 NA NA 0 1437 NA NA 0 1438 NA NA 0 1439 NA NA 0 1440 NA NA 0 1441 NA NA 0 1442 NA NA 0 1443 NA NA 0 1444 NA NA 0 1445 NA NA 0 1446 NA NA 0 1447 NA NA 0 1448 NA NA 0 1449 NA NA 0 1450 NA NA 0 1451 NA NA 0 1452 NA NA 0 1453 NA NA 0 1454 NA NA 0 1455 NA NA 0 1456 NA NA 0 1457 NA NA 0 1458 NA NA 0 1459 NA NA 0 1460 NA NA 0 1461 NA NA 0 1462 NA NA 0 1463 NA NA 0 1464 NA NA 0 1465 NA NA 0 1466 NA NA 0 1467 NA NA 0 1468 NA NA 0 1469 NA NA 0 1470 NA NA 0 1471 NA NA 0 1472 NA NA 0 1473 NA NA 0 1474 NA NA 0 1475 NA NA 0 1476 NA NA 0 1477 NA NA 0 1478 NA NA 0 1479 NA NA 0 1480 NA NA 0 1481 NA NA 0 1482 NA NA 0 1483 NA NA 0 1484 NA NA 0 1485 NA NA 0 1486 NA NA 0 1487 NA NA 0 1488 NA NA 0 1489 NA NA 0 1490 NA NA 0 1491 NA NA 0 1492 NA NA 0 1493 NA NA 0 1494 NA NA 0 1495 NA NA 0 1496 NA NA 0 1497 NA NA 0 1498 NA NA 0 1499 NA NA 0 1500 NA NA 0 1501 NA NA 0 1502 NA NA 0 1503 NA NA 0 1504 NA NA 0 1505 NA NA 0 1506 NA NA 0 1507 NA NA 0 1508 NA NA 0 1509 NA NA 0 1510 NA NA 0 1511 NA NA 0 1512 NA NA 0 1513 NA NA 0 1514 NA NA 0 1515 NA NA 0 1516 NA NA 0 1517 NA NA 0 1518 NA NA 0 1519 NA NA 0 1520 NA NA 0 1521 NA NA 0 1522 NA NA 0 1523 NA NA 0 1524 NA NA 0 1525 NA NA 0 1526 NA NA 0 1527 NA NA 0 1528 NA NA 0 1529 NA NA 0 1530 NA NA 0 1531 NA NA 0 1532 NA NA 0 1533 NA NA 0 1534 NA NA 0 1535 NA NA 0 1536 NA NA 0 1537 NA NA 0 1538 NA NA 0 WatchingDate.as.date Arrest ArrestDate ArrestDate.as.date Fled FledDate 1 0 0 2 0 0 3 0 0 4 0 0 5 0 0 6 0 0 7 0 0 8 0 0 9 0 0 10 1 0 11 1 0 12 1 0 13 0 0 14 1 0 15 1 0 16 1 0 17 0 0 18 0 0 19 0 0 20 0 0 21 1 0 22 0 0 23 1 0 24 1 0 25 1 0 26 0 0 27 0 0 28 0 0 29 0 0 30 0 0 31 0 0 32 0 0 33 0 0 34 0 0 35 0 0 36 0 0 37 0 0 38 0 0 39 0 0 40 0 0 41 0 0 42 0 0 43 0 0 44 0 0 45 1 0 46 0 0 47 0 0 48 0 0 49 0 0 50 0 0 51 0 0 52 0 0 53 1 0 54 0 0 55 1 0 56 0 0 57 0 0 58 1 0 59 0 0 60 1 0 61 1 0 62 1 29/1/1706 01/29/06 00:00:00 1 17/6/1706 63 1 0 64 1 0 65 0 0 66 0 0 67 0 0 68 1 0 69 0 0 70 1 0 71 0 0 72 1 22/11/1649 11/22/49 00:00:00 0 73 1 0 74 1 22/11/1649 11/22/49 00:00:00 0 75 1 22/11/1649 11/22/49 00:00:00 0 76 1 22/11/1649 11/22/49 00:00:00 0 77 1 22/11/1649 11/22/49 00:00:00 0 78 1 0 79 1 0 80 1 0 81 1 22/11/1649 11/22/49 00:00:00 0 82 1 22/11/1649 11/22/49 00:00:00 0 83 1 22/11/1649 11/22/49 00:00:00 0 84 0 0 85 0 0 86 0 0 87 0 0 88 0 0 89 1 0 90 0 0 91 0 0 92 0 0 93 1 0 94 0 0 95 0 0 96 0 0 97 0 0 98 0 0 99 1 0 100 0 0 101 0 0 102 0 0 103 0 0 104 0 0 105 0 0 106 0 0 107 1 0 108 1 0 109 0 0 110 1 0 111 1 0 112 0 0 113 0 0 114 0 0 115 1 0 116 1 0 117 1 0 118 0 0 119 0 0 120 1 0 121 1 0 122 1 0 123 0 0 124 0 0 125 0 0 126 1 0 127 1 0 128 0 0 129 0 0 130 0 0 131 1 0 132 0 0 133 0 0 134 0 1 1/1644 135 0 1 1/1644 136 0 1 1/1644 137 0 1 1/1644 138 0 0 139 0 0 140 0 0 141 0 0 142 0 0 143 0 0 144 0 0 145 0 0 146 0 0 147 0 0 148 0 0 149 1 0 150 0 0 151 0 0 152 0 0 153 0 0 154 0 0 155 0 0 156 0 0 157 0 0 158 0 0 159 0 0 160 0 0 161 0 0 162 0 0 163 0 0 164 0 0 165 0 0 166 0 0 167 0 0 168 0 0 169 0 0 170 0 0 171 0 1 172 0 0 173 0 1 1644 174 0 0 175 0 0 176 0 1 177 0 1 178 0 1 1643 179 0 1 3/1644 180 0 0 181 0 0 182 0 0 183 1 0 184 1 0 185 0 0 186 0 0 187 0 0 188 0 0 189 0 0 190 0 0 191 0 0 192 1 0 193 0 0 194 0 0 195 0 0 196 0 0 197 0 0 198 0 0 199 0 0 200 0 0 201 0 0 202 1 0 203 0 0 204 0 0 205 0 0 206 0 0 207 0 0 208 0 0 209 0 0 210 1 0 211 0 0 212 1 0 213 0 0 214 0 0 215 0 0 216 1 1 217 0 0 218 0 0 219 0 0 220 0 1 221 0 0 222 0 0 223 0 0 224 0 0 225 0 0 226 0 0 227 0 1 228 0 0 229 0 0 230 0 0 231 1 0 232 0 0 233 0 0 234 1 0 235 0 0 236 0 0 237 0 0 238 0 1 239 0 0 240 0 0 241 1 0 242 1 0 243 0 0 244 0 1 10/1649 245 0 1 4/10/1649 246 1 1 19/10/1649 247 0 0 248 0 0 249 0 0 250 0 0 251 0 0 252 0 0 253 0 0 254 0 0 255 0 0 256 0 0 257 0 0 258 0 0 259 1 0 260 1 0 261 1 0 262 1 0 263 0 0 264 0 0 265 0 0 266 1 0 267 0 0 268 0 0 269 0 0 270 0 0 271 0 0 272 0 0 273 0 0 274 0 0 275 0 0 276 0 1 6/1649 277 0 0 278 0 0 279 0 0 280 0 0 281 0 0 282 0 0 283 1 0 284 0 0 285 0 0 286 0 0 287 0 0 288 0 0 289 0 0 290 0 0 291 0 0 292 0 0 293 0 0 294 0 0 295 1 0 296 0 0 297 0 0 298 0 0 299 0 0 300 1 0 301 0 0 302 1 0 303 0 0 304 0 0 305 0 0 306 1 7/8/1649 08/07/49 00:00:00 0 307 1 0 308 1 0 309 1 0 310 1 0 311 0 0 312 1 0 313 1 0 314 1 0 315 0 0 316 0 0 317 0 0 318 0 0 319 0 0 320 1 0 321 0 0 322 1 0 323 0 0 324 0 0 325 0 0 326 0 0 327 0 0 328 0 0 329 0 0 330 1 0 331 0 0 332 0 0 333 0 0 334 0 0 335 0 0 336 0 0 337 0 0 338 1 0 339 0 0 340 0 0 341 1 0 342 0 0 343 0 0 344 0 0 345 0 0 346 0 0 347 0 0 348 0 0 349 1 1 4/1597 350 0 1 4/1597 351 0 1 4/1597 352 1 0 353 0 0 354 0 0 355 0 0 356 0 0 357 0 0 358 0 0 359 0 0 360 0 0 361 0 0 362 0 0 363 0 0 364 0 0 365 0 0 366 0 0 367 0 0 368 1 0 369 1 0 370 0 0 371 0 0 372 0 0 373 0 0 374 0 0 375 0 0 376 0 0 377 0 0 378 0 0 379 0 0 380 0 0 381 0 0 382 0 0 383 0 0 384 0 0 385 0 0 386 0 0 387 1 0 388 0 0 389 0 0 390 1 0 391 1 0 392 1 0 393 0 0 394 0 0 395 0 0 396 0 0 397 0 0 398 0 0 399 0 0 400 0 0 401 0 0 402 0 0 403 0 0 404 0 0 405 0 0 406 0 0 407 0 0 408 0 0 409 0 0 410 0 0 411 0 0 412 0 0 413 0 0 414 0 0 415 0 0 416 0 0 417 0 1 7/1661 418 0 1 7/1661 419 0 1 7/1661 420 0 0 421 0 0 422 0 0 423 0 0 424 1 0 425 0 0 426 1 0 427 1 0 428 0 0 429 0 0 430 1 18/1/1662 01/18/62 00:00:00 0 431 0 0 432 0 0 433 0 0 434 0 0 435 0 0 436 0 0 437 0 0 438 0 0 439 0 0 440 0 0 441 0 0 442 0 0 443 0 0 444 0 0 445 0 0 446 0 0 447 0 0 448 0 0 449 0 0 450 0 0 451 0 0 452 0 0 453 0 0 454 0 0 455 0 0 456 0 0 457 1 0 458 0 0 459 0 0 460 0 0 461 0 0 462 0 0 463 0 0 464 0 0 465 0 0 466 0 0 467 0 0 468 1 0 469 0 0 470 0 0 471 0 0 472 0 0 473 0 0 474 0 0 475 0 0 476 0 0 477 0 0 478 0 0 479 0 0 480 0 0 481 0 0 482 0 0 483 0 0 484 0 0 485 0 0 486 0 0 487 0 0 488 0 0 489 0 0 490 0 0 491 0 0 492 0 0 493 0 0 494 0 0 495 0 0 496 0 0 497 1 0 498 1 0 499 1 0 500 1 0 501 1 0 502 1 0 503 1 0 504 1 0 505 0 0 506 0 0 507 1 0 508 1 0 509 0 0 510 0 0 511 0 0 512 0 0 513 0 0 514 0 0 515 0 0 516 0 0 517 0 0 518 0 0 519 1 0 520 1 0 521 1 0 522 0 0 523 0 0 524 1 0 525 1 0 526 0 0 527 0 0 528 0 0 529 0 0 530 0 0 531 0 0 532 0 0 533 0 0 534 0 0 535 0 0 536 0 0 537 0 0 538 0 0 539 0 0 540 0 0 541 0 0 542 0 0 543 0 0 544 0 0 545 0 0 546 0 0 547 0 0 548 1 0 549 0 0 550 0 0 551 0 0 552 0 0 553 0 0 554 0 0 555 0 0 556 1 0 557 1 0 558 1 0 559 1 0 560 1 0 561 0 0 562 0 0 563 0 0 564 0 0 565 0 0 566 0 0 567 0 0 568 0 0 569 0 0 570 0 0 571 0 0 572 0 0 573 0 0 574 0 0 575 1 0 576 1 0 577 0 0 578 0 0 579 0 0 580 0 0 581 0 0 582 0 0 583 0 0 584 1 0 585 0 0 586 1 0 587 1 0 588 0 0 589 0 0 590 0 0 591 0 0 592 0 0 593 0 0 594 0 0 595 0 0 596 0 0 597 0 0 598 0 0 599 0 0 600 0 0 601 0 0 602 0 0 603 0 0 604 0 0 605 0 0 606 0 0 607 0 0 608 0 0 609 1 0 610 1 0 611 1 0 612 1 0 613 1 0 614 1 0 615 0 0 616 0 0 617 0 0 618 0 0 619 0 0 620 0 0 621 0 0 622 0 0 623 0 0 624 0 0 625 0 0 626 0 0 627 0 0 628 0 0 629 0 0 630 0 0 631 0 0 632 0 0 633 0 0 634 0 0 635 0 0 636 1 0 637 0 0 638 0 0 639 0 0 640 0 0 641 0 0 642 0 0 643 0 0 644 0 0 645 1 13/6/1649 06/13/49 00:00:00 0 646 0 0 647 0 0 648 0 0 649 0 0 650 0 0 651 0 0 652 0 0 653 0 0 654 1 0 655 1 1662 06/01/62 00:00:00 1 1662 656 0 0 657 0 0 658 0 0 659 0 0 660 0 0 661 0 0 662 0 0 663 0 0 664 0 0 665 0 0 666 0 0 667 0 0 668 0 0 669 0 0 670 0 0 671 0 0 672 0 0 673 0 0 674 0 0 675 0 0 676 0 0 677 0 0 678 0 0 679 0 0 680 0 0 681 0 0 682 0 0 683 0 0 684 0 0 685 0 0 686 0 0 687 0 0 688 0 0 689 0 0 690 0 0 691 0 0 692 0 0 693 0 0 694 0 0 695 1 0 696 0 0 697 0 0 698 0 0 699 0 0 700 0 0 701 0 0 702 0 0 703 0 0 704 0 0 705 0 0 706 0 0 707 0 0 708 0 0 709 0 0 710 0 0 711 0 0 712 0 0 713 0 0 714 0 0 715 0 0 716 0 0 717 0 0 718 0 0 719 0 0 720 0 0 721 0 0 722 0 0 723 0 0 724 0 0 725 0 0 726 0 0 727 0 0 728 0 0 729 0 0 730 0 0 731 0 0 732 0 0 733 0 0 734 0 0 735 0 0 736 0 0 737 0 0 738 0 0 739 0 0 740 0 0 741 0 0 742 0 0 743 0 0 744 0 0 745 0 0 746 0 0 747 0 0 748 0 0 749 0 0 750 0 0 751 0 0 752 0 0 753 0 0 754 0 0 755 0 0 756 0 0 757 0 0 758 0 0 759 0 0 760 0 0 761 0 0 762 0 0 763 0 0 764 0 0 765 0 0 766 0 0 767 0 0 768 0 0 769 0 0 770 0 0 771 1 0 772 0 0 773 0 0 774 0 0 775 0 0 776 0 0 777 0 0 778 0 0 779 0 0 780 0 0 781 0 0 782 0 0 783 0 0 784 0 0 785 0 0 786 0 0 787 0 0 788 0 0 789 0 0 790 0 0 791 0 0 792 0 0 793 0 0 794 0 0 795 0 0 796 1 29/4/1630 04/29/30 00:00:00 0 797 0 0 798 0 0 799 0 0 800 0 0 801 0 0 802 0 0 803 0 0 804 0 0 805 1 0 806 1 0 807 0 0 808 0 0 809 0 0 810 0 0 811 0 0 812 0 0 813 0 0 814 0 0 815 0 0 816 0 0 817 0 0 818 0 0 819 0 0 820 0 0 821 0 0 822 0 0 823 0 0 824 0 0 825 0 0 826 0 1 11/10/1649 827 0 0 828 0 0 829 0 0 830 0 1 11/1649 831 0 0 832 0 0 833 0 0 834 0 0 835 0 0 836 0 0 837 0 0 838 0 0 839 0 0 840 0 0 841 0 0 842 0 0 843 0 0 844 0 0 845 0 0 846 0 0 847 0 0 848 0 0 849 0 0 850 0 0 851 0 0 852 0 0 853 0 0 854 0 0 855 0 0 856 0 0 857 0 0 858 0 0 859 0 0 860 0 0 861 0 0 862 0 0 863 0 0 864 0 0 865 0 0 866 0 0 867 0 0 868 0 0 869 0 0 870 1 0 871 1 0 872 0 0 873 1 0 874 1 0 875 1 0 876 1 0 877 0 0 878 0 0 879 0 0 880 0 0 881 0 0 882 0 0 883 0 0 884 0 0 885 0 0 886 0 0 887 1 0 888 0 1 11/1661 889 0 1 11/1661 890 1 14/8/1678 08/14/78 00:00:00 0 891 1 0 892 1 0 893 0 0 894 1 0 895 0 0 896 0 0 897 0 0 898 0 0 899 0 0 900 0 0 901 0 0 902 1 0 903 0 0 904 0 0 905 0 0 906 0 0 907 0 0 908 0 0 909 0 0 910 1 0 911 0 0 912 0 0 913 0 0 914 0 0 915 0 0 916 0 0 917 0 0 918 0 0 919 0 0 920 1 1/4/1644 04/01/44 00:00:00 0 921 0 0 922 0 0 923 0 0 924 0 0 925 0 0 926 0 0 927 0 0 928 0 0 929 0 0 930 0 0 931 0 0 932 0 0 933 0 0 934 0 0 935 0 0 936 0 0 937 0 0 938 0 0 939 0 0 940 0 0 941 0 0 942 0 0 943 0 0 944 0 0 945 0 0 946 0 0 947 0 0 948 0 0 949 0 0 950 0 0 951 0 0 952 0 0 953 1 1 10/1643 954 1 0 955 0 0 956 0 0 957 1 0 958 0 0 959 1 0 960 0 0 961 0 0 962 1 0 963 0 0 964 1 0 965 0 0 966 0 0 967 0 0 968 0 0 969 0 0 970 1 0 971 1 0 972 1 0 973 0 0 974 1 0 975 0 0 976 0 0 977 1 9/7/1678 07/09/78 00:00:00 0 978 0 0 979 0 0 980 0 0 981 0 0 982 0 0 983 0 0 984 0 0 985 0 0 986 0 0 987 0 0 988 1 0 989 1 0 990 1 0 991 1 0 992 0 0 993 0 0 994 0 0 995 0 0 996 0 0 997 1 1 998 0 0 999 1 0 1000 0 0 1001 0 0 1002 0 0 1003 0 0 1004 0 0 1005 1 0 1006 0 0 1007 0 0 1008 0 0 1009 1 0 1010 1 0 1011 1 0 1012 1 0 1013 1 0 1014 0 0 1015 1 0 1016 1 0 1017 0 1 1018 1 0 1019 0 0 1020 0 0 1021 1 0 1022 1 0 1023 1 0 1024 1 0 1025 1 0 1026 0 0 1027 0 0 1028 0 0 1029 0 0 1030 0 0 1031 1 0 1032 1 12/11/1628 11/12/28 00:00:00 0 1033 1 0 1034 1 0 1035 1 0 1036 0 0 1037 1 0 1038 1 0 1039 1 0 1040 1 0 1041 1 0 1042 1 0 1043 1 0 1044 1 0 1045 1 0 1046 1 0 1047 0 0 1048 0 0 1049 0 0 1050 1 0 1051 1 0 1052 1 0 1053 0 0 1054 0 0 1055 0 0 1056 0 0 1057 1 0 1058 0 0 1059 0 0 1060 0 0 1061 0 0 1062 0 0 1063 0 0 1064 0 0 1065 0 0 1066 0 0 1067 1 0 1068 0 0 1069 0 0 1070 1 0 1071 1 0 1072 1 0 1073 1 0 1074 1 0 1075 1 0 1076 1 0 1077 1 0 1078 1 0 1079 0 0 1080 0 0 1081 0 0 1082 0 0 1083 0 0 1084 0 0 1085 0 0 1086 0 0 1087 0 0 1088 0 0 1089 0 0 1090 1 0 1091 1 0 1092 1 0 1093 1 0 1094 1 0 1095 0 0 1096 0 0 1097 0 0 1098 0 0 1099 0 0 1100 0 0 1101 0 0 1102 0 0 1103 0 0 1104 0 0 1105 0 0 1106 0 0 1107 0 0 1108 0 0 1109 0 0 1110 0 0 1111 0 0 1112 0 0 1113 0 0 1114 0 0 1115 0 0 1116 0 0 1117 0 0 1118 0 0 1119 0 0 1120 0 0 1121 0 0 1122 1 0 1123 0 0 1124 0 0 1125 0 0 1126 0 0 1127 0 0 1128 0 0 1129 0 0 1130 1 0 1131 1 0 1132 0 0 1133 1 0 1134 0 0 1135 0 0 1136 0 0 1137 0 0 1138 0 0 1139 0 0 1140 0 0 1141 0 0 1142 0 0 1143 1 0 1144 1 0 1145 1 0 1146 0 0 1147 0 0 1148 0 0 1149 0 0 1150 0 0 1151 0 0 1152 0 0 1153 0 0 1154 0 0 1155 0 0 1156 0 0 1157 0 0 1158 0 0 1159 0 0 1160 0 0 1161 1 0 1162 1 0 1163 1 0 1164 1 0 1165 0 0 1166 1 0 1167 1 0 1168 0 0 1169 0 0 1170 0 0 1171 1 0 1172 0 0 1173 0 0 1174 0 0 1175 0 0 1176 1 0 1177 0 0 1178 0 0 1179 0 0 1180 0 0 1181 0 0 1182 0 0 1183 0 0 1184 0 0 1185 0 0 1186 0 0 1187 1 0 1188 0 0 1189 0 0 1190 0 0 1191 0 0 1192 0 0 1193 0 0 1194 0 0 1195 0 0 1196 0 0 1197 1 0 1198 0 0 1199 0 0 1200 0 0 1201 0 0 1202 0 0 1203 0 0 1204 0 0 1205 0 0 1206 1 0 1207 1 9/6/1649 06/09/49 00:00:00 0 1208 1 0 1209 1 0 1210 1 0 1211 1 0 1212 1 0 1213 1 0 1214 1 0 1215 1 0 1216 0 0 1217 0 0 1218 0 0 1219 0 0 1220 1 0 1221 1 0 1222 1 0 1223 0 0 1224 0 0 1225 0 0 1226 1 0 1227 1 0 1228 0 0 1229 0 0 1230 0 0 1231 0 0 1232 0 0 1233 0 0 1234 0 0 1235 0 0 1236 0 0 1237 0 0 1238 1 0 1239 0 0 1240 1 0 1241 0 0 1242 0 0 1243 0 0 1244 0 0 1245 0 0 1246 0 0 1247 0 0 1248 0 0 1249 0 0 1250 0 0 1251 0 0 1252 0 0 1253 0 0 1254 0 0 1255 1 0 1256 0 1 1662 1257 1 0 1258 1 0 1259 0 0 1260 1 0 1261 0 0 1262 1 0 1263 1 0 1264 1 0 1265 1 0 1266 1 0 1267 1 0 1268 1 0 1269 0 0 1270 1 0 1271 1 0 1272 0 0 1273 0 0 1274 0 0 1275 0 0 1276 0 0 1277 0 0 1278 0 0 1279 0 0 1280 0 0 1281 0 0 1282 0 0 1283 0 0 1284 0 0 1285 0 0 1286 0 0 1287 0 0 1288 0 0 1289 0 0 1290 0 0 1291 1 2/7/1649 07/02/49 00:00:00 0 1292 0 0 1293 0 0 1294 0 0 1295 0 0 1296 0 0 1297 0 0 1298 0 0 1299 0 0 1300 1 13/7/1649 07/13/49 00:00:00 0 1301 0 0 1302 0 0 1303 0 0 1304 0 0 1305 1 0 1306 0 0 1307 0 0 1308 0 0 1309 0 0 1310 0 0 1311 0 0 1312 0 0 1313 0 0 1314 0 0 1315 0 0 1316 0 0 1317 0 0 1318 1 0 1319 0 0 1320 0 0 1321 0 0 1322 0 0 1323 0 0 1324 0 0 1325 0 0 1326 0 0 1327 0 0 1328 0 0 1329 0 0 1330 0 0 1331 0 0 1332 0 0 1333 0 0 1334 0 0 1335 0 0 1336 0 0 1337 0 0 1338 0 0 1339 0 0 1340 0 0 1341 0 0 1342 0 0 1343 0 0 1344 0 0 1345 0 0 1346 1 0 1347 1 0 1348 1 0 1349 1 0 1350 1 0 1351 1 0 1352 1 0 1353 0 0 1354 0 0 1355 0 0 1356 0 0 1357 0 0 1358 0 0 1359 0 0 1360 0 0 1361 0 0 1362 0 0 1363 0 0 1364 1 0 1365 1 0 1366 0 0 1367 0 0 1368 0 0 1369 0 0 1370 0 0 1371 0 0 1372 0 0 1373 0 0 1374 0 0 1375 0 0 1376 0 0 1377 0 0 1378 0 0 1379 0 0 1380 1 0 1381 0 0 1382 1 0 1383 0 0 1384 1 0 1385 0 0 1386 0 0 1387 0 0 1388 0 0 1389 0 0 1390 0 0 1391 1 0 1392 0 0 1393 0 0 1394 0 0 1395 1 7/10/1651 10/07/51 00:00:00 0 1396 1 7/10/1651 10/07/51 00:00:00 0 1397 0 0 1398 0 0 1399 0 0 1400 0 0 1401 0 0 1402 0 0 1403 0 0 1404 0 0 1405 0 0 1406 1 0 1407 0 0 1408 0 0 1409 0 0 1410 0 0 1411 0 0 1412 1 0 1413 0 0 1414 0 0 1415 0 0 1416 0 0 1417 0 0 1418 0 0 1419 0 0 1420 1 14/12/1633 12/14/33 00:00:00 0 1421 0 0 1422 0 0 1423 0 0 1424 0 0 1425 1 0 1426 0 0 1427 0 0 1428 0 0 1429 0 0 1430 1 0 1431 0 0 1432 0 0 1433 0 0 1434 0 0 1435 0 0 1436 0 0 1437 0 0 1438 0 0 1439 0 0 1440 0 0 1441 0 0 1442 0 0 1443 0 0 1444 0 0 1445 0 0 1446 0 0 1447 0 0 1448 0 0 1449 0 0 1450 0 0 1451 0 0 1452 0 0 1453 0 0 1454 0 0 1455 0 0 1456 0 0 1457 0 0 1458 0 0 1459 0 0 1460 0 0 1461 0 0 1462 0 0 1463 0 0 1464 0 0 1465 0 0 1466 0 0 1467 0 0 1468 0 0 1469 0 0 1470 0 0 1471 0 0 1472 0 0 1473 0 0 1474 0 0 1475 0 0 1476 0 0 1477 0 0 1478 0 0 1479 0 0 1480 0 0 1481 0 0 1482 0 0 1483 0 0 1484 0 0 1485 0 0 1486 0 0 1487 0 0 1488 0 0 1489 0 0 1490 0 0 1491 0 0 1492 0 0 1493 0 0 1494 1 0 1495 0 0 1496 0 0 1497 1 0 1498 0 0 1499 0 0 1500 0 0 1501 0 0 1502 0 0 1503 0 0 1504 0 0 1505 0 0 1506 0 0 1507 0 0 1508 0 0 1509 0 0 1510 0 0 1511 0 0 1512 0 0 1513 1 0 1514 1 0 1515 0 1 1516 1 1 1517 0 0 1518 0 0 1519 0 0 1520 0 0 1521 0 0 1522 0 0 1523 0 0 1524 0 0 1525 0 1 1526 0 1 1527 0 1 1528 0 1 1529 0 0 1530 0 0 1531 0 0 1532 0 0 1533 0 0 1534 1 5/1678 05/01/78 00:00:00 0 1535 0 0 1536 0 0 1537 0 0 1538 0 0 FledDate.as.date ActionDropped Actiondropdate Actiondropdate.as.date 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 49 0 50 0 51 0 52 0 53 0 54 0 55 0 56 0 57 0 58 0 59 0 60 0 61 0 62 06/17/06 00:00:00 0 63 0 64 0 65 0 66 0 67 0 68 0 69 0 70 0 71 0 72 1 28/2/1650 02/28/50 00:00:00 73 1 27/3/1650 03/27/50 00:00:00 74 0 75 1 28/1/1650 01/28/50 00:00:00 76 1 27/3/1650 03/27/50 00:00:00 77 1 18/4/1650 04/18/50 00:00:00 78 1 28/2/1650 02/28/50 00:00:00 79 0 80 0 81 1 28/2/1650 02/28/50 00:00:00 82 1 28/2/1650 02/28/50 00:00:00 83 1 28/2/1650 02/28/50 00:00:00 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 1 31/8/1680 08/31/80 00:00:00 113 1 31/8/1680 08/31/80 00:00:00 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 01/01/44 00:00:00 0 135 01/01/44 00:00:00 0 136 01/01/44 00:00:00 0 137 01/01/44 00:00:00 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 145 0 146 0 147 0 148 0 149 0 150 0 151 0 152 0 153 0 154 0 155 0 156 0 157 0 158 0 159 0 160 0 161 0 162 0 163 0 164 1 6/5/1646 05/06/46 00:00:00 165 0 166 0 167 0 168 0 169 0 170 0 171 0 172 0 173 06/01/44 00:00:00 0 174 0 175 0 176 0 177 0 178 06/01/43 00:00:00 0 179 03/01/44 00:00:00 0 180 0 181 0 182 0 183 0 184 0 185 0 186 0 187 0 188 0 189 0 190 0 191 0 192 0 193 0 194 0 195 0 196 0 197 0 198 0 199 0 200 0 201 0 202 0 203 0 204 0 205 0 206 0 207 0 208 0 209 0 210 0 211 0 212 0 213 0 214 0 215 0 216 0 217 0 218 0 219 0 220 0 221 0 222 0 223 0 224 0 225 0 226 0 227 0 228 0 229 0 230 0 231 0 232 0 233 0 234 0 235 0 236 0 237 0 238 0 239 0 240 0 241 0 242 0 243 0 244 10/01/49 00:00:00 0 245 10/04/49 00:00:00 0 246 10/19/49 00:00:00 0 247 0 248 0 249 0 250 0 251 0 252 0 253 0 254 0 255 0 256 0 257 0 258 0 259 0 260 0 261 0 262 0 263 0 264 0 265 0 266 0 267 0 268 0 269 0 270 0 271 0 272 0 273 0 274 0 275 0 276 06/01/49 00:00:00 0 277 0 278 0 279 0 280 0 281 0 282 0 283 0 284 0 285 0 286 0 287 0 288 0 289 0 290 0 291 0 292 0 293 0 294 0 295 0 296 0 297 0 298 0 299 0 300 0 301 0 302 0 303 0 304 0 305 0 306 0 307 0 308 0 309 0 310 0 311 0 312 0 313 0 314 0 315 0 316 0 317 0 318 0 319 0 320 0 321 0 322 0 323 0 324 0 325 0 326 0 327 0 328 0 329 0 330 0 331 0 332 0 333 0 334 0 335 0 336 0 337 0 338 0 339 0 340 0 341 0 342 0 343 0 344 0 345 0 346 0 347 0 348 0 349 04/01/97 00:00:00 0 350 04/01/97 00:00:00 0 351 04/01/97 00:00:00 0 352 0 353 0 354 0 355 0 356 0 357 0 358 0 359 0 360 0 361 0 362 0 363 0 364 0 365 0 366 0 367 0 368 0 369 0 370 0 371 0 372 0 373 0 374 0 375 0 376 0 377 0 378 0 379 0 380 0 381 0 382 0 383 0 384 0 385 0 386 0 387 0 388 0 389 0 390 0 391 0 392 0 393 1 10/8/1670 08/10/70 00:00:00 394 0 395 0 396 0 397 1 4/1597 04/01/97 00:00:00 398 0 399 0 400 0 401 0 402 0 403 0 404 0 405 0 406 0 407 0 408 0 409 0 410 0 411 0 412 0 413 0 414 0 415 0 416 0 417 07/01/61 00:00:00 0 418 07/01/61 00:00:00 0 419 07/01/61 00:00:00 0 420 0 421 0 422 0 423 0 424 0 425 0 426 0 427 0 428 0 429 0 430 0 431 0 432 0 433 0 434 0 435 0 436 0 437 0 438 0 439 0 440 0 441 0 442 0 443 0 444 0 445 0 446 0 447 0 448 0 449 0 450 0 451 0 452 0 453 0 454 0 455 0 456 0 457 0 458 0 459 0 460 0 461 0 462 0 463 0 464 0 465 0 466 0 467 0 468 0 469 0 470 0 471 0 472 0 473 0 474 0 475 0 476 0 477 0 478 0 479 0 480 0 481 0 482 0 483 0 484 0 485 0 486 0 487 0 488 0 489 0 490 0 491 0 492 0 493 0 494 0 495 0 496 0 497 0 498 0 499 0 500 0 501 0 502 0 503 0 504 0 505 0 506 0 507 0 508 0 509 0 510 0 511 0 512 0 513 0 514 0 515 0 516 0 517 0 518 0 519 0 520 0 521 0 522 0 523 0 524 0 525 0 526 0 527 1 12/1/1661 01/12/61 00:00:00 528 0 529 1 1/1662 01/01/62 00:00:00 530 1 1/1662 01/01/62 00:00:00 531 0 532 0 533 0 534 0 535 0 536 0 537 0 538 0 539 0 540 0 541 0 542 0 543 1 14/3/1699 03/14/99 00:00:00 544 0 545 0 546 0 547 0 548 0 549 0 550 0 551 0 552 0 553 0 554 0 555 0 556 0 557 0 558 0 559 0 560 0 561 0 562 0 563 0 564 0 565 0 566 0 567 0 568 0 569 0 570 0 571 0 572 0 573 0 574 0 575 0 576 0 577 0 578 0 579 0 580 0 581 0 582 0 583 0 584 0 585 0 586 0 587 0 588 0 589 0 590 0 591 0 592 0 593 0 594 0 595 0 596 0 597 0 598 0 599 0 600 0 601 0 602 0 603 0 604 0 605 0 606 0 607 1 31/5/1650 05/31/50 00:00:00 608 0 609 0 610 0 611 0 612 0 613 0 614 0 615 0 616 0 617 0 618 0 619 0 620 0 621 0 622 0 623 0 624 0 625 0 626 0 627 0 628 0 629 0 630 0 631 0 632 0 633 0 634 0 635 0 636 0 637 0 638 0 639 0 640 0 641 0 642 0 643 0 644 0 645 0 646 0 647 0 648 0 649 0 650 0 651 0 652 0 653 0 654 0 655 06/01/62 00:00:00 0 656 0 657 0 658 0 659 0 660 0 661 0 662 0 663 0 664 0 665 0 666 0 667 0 668 0 669 0 670 0 671 0 672 0 673 0 674 0 675 0 676 0 677 0 678 0 679 0 680 0 681 0 682 0 683 0 684 0 685 0 686 0 687 0 688 0 689 0 690 0 691 0 692 0 693 0 694 0 695 0 696 0 697 0 698 0 699 0 700 0 701 0 702 0 703 0 704 0 705 0 706 0 707 0 708 0 709 0 710 0 711 0 712 0 713 0 714 0 715 0 716 0 717 0 718 0 719 0 720 0 721 0 722 0 723 0 724 0 725 0 726 0 727 0 728 0 729 0 730 0 731 0 732 0 733 0 734 0 735 0 736 0 737 0 738 0 739 0 740 0 741 0 742 0 743 0 744 0 745 0 746 0 747 0 748 0 749 0 750 0 751 0 752 0 753 0 754 0 755 0 756 0 757 0 758 0 759 0 760 0 761 0 762 0 763 0 764 1 2/11/1589 11/02/89 00:00:00 765 0 766 0 767 0 768 0 769 0 770 0 771 0 772 0 773 0 774 0 775 0 776 0 777 0 778 0 779 0 780 0 781 0 782 0 783 0 784 0 785 0 786 0 787 0 788 0 789 0 790 0 791 0 792 0 793 0 794 0 795 0 796 0 797 0 798 0 799 0 800 0 801 0 802 0 803 0 804 0 805 0 806 1 24/12/1633 12/24/33 00:00:00 807 0 808 0 809 0 810 0 811 0 812 0 813 0 814 0 815 0 816 0 817 0 818 0 819 0 820 0 821 0 822 0 823 0 824 0 825 0 826 10/11/49 00:00:00 0 827 0 828 0 829 0 830 11/01/49 00:00:00 0 831 0 832 0 833 0 834 0 835 0 836 0 837 0 838 0 839 0 840 0 841 0 842 0 843 0 844 0 845 0 846 0 847 0 848 0 849 0 850 0 851 0 852 0 853 0 854 0 855 0 856 0 857 0 858 0 859 0 860 0 861 0 862 0 863 0 864 0 865 0 866 0 867 0 868 0 869 0 870 0 871 0 872 0 873 0 874 0 875 0 876 0 877 0 878 0 879 0 880 0 881 0 882 0 883 0 884 0 885 0 886 0 887 0 888 11/01/61 00:00:00 0 889 11/01/61 00:00:00 0 890 0 891 0 892 0 893 0 894 0 895 0 896 0 897 0 898 0 899 0 900 0 901 0 902 0 903 0 904 0 905 0 906 0 907 0 908 0 909 0 910 0 911 0 912 0 913 0 914 0 915 0 916 0 917 0 918 0 919 0 920 0 921 0 922 0 923 0 924 0 925 0 926 0 927 0 928 0 929 0 930 0 931 0 932 0 933 0 934 0 935 0 936 0 937 0 938 0 939 0 940 0 941 0 942 0 943 0 944 0 945 0 946 0 947 0 948 0 949 0 950 0 951 0 952 0 953 10/01/43 00:00:00 0 954 0 955 0 956 0 957 0 958 0 959 0 960 0 961 0 962 0 963 0 964 0 965 0 966 0 967 0 968 0 969 0 970 0 971 0 972 0 973 0 974 0 975 0 976 0 977 0 978 0 979 0 980 0 981 0 982 0 983 0 984 0 985 0 986 0 987 0 988 0 989 0 990 0 991 0 992 0 993 0 994 0 995 0 996 0 997 0 998 0 999 0 1000 0 1001 0 1002 0 1003 0 1004 0 1005 0 1006 0 1007 0 1008 0 1009 0 1010 0 1011 0 1012 0 1013 0 1014 0 1015 0 1016 0 1017 0 1018 0 1019 0 1020 0 1021 0 1022 0 1023 0 1024 0 1025 0 1026 0 1027 0 1028 0 1029 0 1030 0 1031 0 1032 0 1033 0 1034 0 1035 0 1036 0 1037 0 1038 0 1039 0 1040 0 1041 0 1042 0 1043 0 1044 0 1045 0 1046 0 1047 0 1048 0 1049 0 1050 0 1051 0 1052 0 1053 0 1054 0 1055 0 1056 0 1057 0 1058 0 1059 0 1060 0 1061 0 1062 0 1063 0 1064 0 1065 0 1066 0 1067 0 1068 0 1069 0 1070 0 1071 0 1072 0 1073 0 1074 0 1075 0 1076 0 1077 0 1078 0 1079 0 1080 0 1081 1 4/7/1609 07/04/09 00:00:00 1082 0 1083 0 1084 0 1085 0 1086 0 1087 0 1088 0 1089 0 1090 0 1091 0 1092 0 1093 0 1094 0 1095 0 1096 0 1097 0 1098 0 1099 0 1100 0 1101 0 1102 0 1103 0 1104 0 1105 0 1106 0 1107 0 1108 0 1109 0 1110 0 1111 0 1112 0 1113 0 1114 0 1115 0 1116 0 1117 0 1118 0 1119 0 1120 0 1121 0 1122 0 1123 0 1124 0 1125 0 1126 0 1127 0 1128 0 1129 0 1130 0 1131 0 1132 0 1133 0 1134 0 1135 0 1136 0 1137 0 1138 0 1139 0 1140 0 1141 0 1142 0 1143 0 1144 0 1145 0 1146 0 1147 0 1148 0 1149 0 1150 0 1151 0 1152 0 1153 0 1154 0 1155 0 1156 0 1157 0 1158 0 1159 0 1160 0 1161 0 1162 0 1163 0 1164 0 1165 0 1166 0 1167 0 1168 0 1169 0 1170 0 1171 0 1172 0 1173 0 1174 0 1175 0 1176 0 1177 0 1178 0 1179 0 1180 0 1181 0 1182 0 1183 0 1184 0 1185 0 1186 0 1187 0 1188 0 1189 0 1190 0 1191 0 1192 0 1193 0 1194 0 1195 0 1196 0 1197 0 1198 0 1199 0 1200 0 1201 0 1202 0 1203 0 1204 0 1205 0 1206 0 1207 0 1208 0 1209 0 1210 0 1211 0 1212 0 1213 0 1214 0 1215 0 1216 0 1217 0 1218 0 1219 0 1220 0 1221 0 1222 0 1223 0 1224 0 1225 0 1226 0 1227 0 1228 0 1229 0 1230 0 1231 0 1232 0 1233 0 1234 0 1235 0 1236 0 1237 1 26/6/1705 06/26/05 00:00:00 1238 0 1239 0 1240 0 1241 0 1242 0 1243 0 1244 0 1245 0 1246 0 1247 0 1248 0 1249 0 1250 0 1251 0 1252 0 1253 0 1254 0 1255 0 1256 06/01/62 00:00:00 0 1257 0 1258 0 1259 0 1260 0 1261 0 1262 0 1263 0 1264 0 1265 0 1266 0 1267 0 1268 0 1269 0 1270 0 1271 0 1272 0 1273 1 1274 0 1275 0 1276 1 14/1/1634 01/14/34 00:00:00 1277 1 14/1/1634 01/14/34 00:00:00 1278 0 1279 0 1280 0 1281 0 1282 0 1283 0 1284 0 1285 0 1286 0 1287 0 1288 0 1289 0 1290 0 1291 0 1292 0 1293 0 1294 0 1295 0 1296 0 1297 0 1298 0 1299 0 1300 0 1301 0 1302 0 1303 0 1304 0 1305 0 1306 0 1307 0 1308 0 1309 0 1310 0 1311 0 1312 0 1313 0 1314 0 1315 0 1316 0 1317 0 1318 0 1319 0 1320 0 1321 0 1322 0 1323 0 1324 0 1325 0 1326 0 1327 0 1328 0 1329 0 1330 0 1331 0 1332 0 1333 0 1334 0 1335 0 1336 0 1337 0 1338 0 1339 0 1340 0 1341 0 1342 0 1343 0 1344 0 1345 0 1346 0 1347 0 1348 0 1349 0 1350 0 1351 0 1352 0 1353 0 1354 0 1355 0 1356 0 1357 0 1358 0 1359 0 1360 0 1361 0 1362 0 1363 0 1364 0 1365 0 1366 0 1367 0 1368 0 1369 0 1370 0 1371 0 1372 0 1373 0 1374 0 1375 0 1376 0 1377 0 1378 0 1379 0 1380 0 1381 0 1382 0 1383 0 1384 0 1385 0 1386 0 1387 0 1388 0 1389 0 1390 0 1391 0 1392 0 1393 0 1394 0 1395 0 1396 0 1397 0 1398 0 1399 0 1400 0 1401 0 1402 0 1403 0 1404 0 1405 0 1406 0 1407 0 1408 0 1409 0 1410 0 1411 0 1412 0 1413 0 1414 0 1415 0 1416 0 1417 0 1418 0 1419 0 1420 0 1421 0 1422 0 1423 0 1424 0 1425 0 1426 0 1427 0 1428 0 1429 0 1430 0 1431 0 1432 0 1433 0 1434 0 1435 0 1436 0 1437 0 1438 0 1439 0 1440 0 1441 0 1442 0 1443 0 1444 0 1445 0 1446 0 1447 0 1448 0 1449 0 1450 0 1451 0 1452 0 1453 0 1454 0 1455 0 1456 0 1457 0 1458 0 1459 0 1460 0 1461 0 1462 0 1463 0 1464 0 1465 0 1466 0 1467 0 1468 0 1469 0 1470 0 1471 0 1472 0 1473 0 1474 0 1475 0 1476 0 1477 0 1478 0 1479 0 1480 0 1481 0 1482 0 1483 0 1484 0 1485 0 1486 0 1487 0 1488 0 1489 0 1490 0 1491 0 1492 0 1493 0 1494 0 1495 0 1496 0 1497 0 1498 0 1499 0 1500 0 1501 0 1502 0 1503 0 1504 0 1505 0 1506 0 1507 0 1508 0 1509 0 1510 0 1511 0 1512 0 1513 0 1514 0 1515 0 1516 0 1517 0 1518 0 1519 0 1520 0 1521 0 1522 0 1523 0 1524 0 1525 0 1526 0 1527 0 1528 0 1529 0 1530 0 1531 0 1532 0 1533 0 1534 0 1535 0 1536 0 1537 0 1538 0 Actiondroppedby Actionbody Confrontingsuspects 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 49 0 50 0 51 0 52 0 53 0 54 0 55 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 63 0 64 0 65 0 66 0 67 0 68 0 69 0 70 0 71 0 72 Presbytery 0 73 Presbytery 0 74 0 75 Presbytery 0 76 Presbytery 0 77 Presbytery 0 78 Presbytery 0 79 0 80 0 81 Presbytery 0 82 Presbytery 0 83 Presbytery 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 Presbytery 0 113 Presbytery 0 114 0 115 0 116 0 117 0 118 0 119 1 120 0 121 1 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 145 0 146 0 147 0 148 0 149 0 150 0 151 0 152 0 153 0 154 0 155 0 156 0 157 0 158 0 159 0 160 0 161 0 162 0 163 0 164 Presbytery 0 165 0 166 0 167 0 168 0 169 0 170 0 171 0 172 0 173 0 174 0 175 0 176 0 177 0 178 0 179 0 180 0 181 0 182 0 183 0 184 0 185 0 186 0 187 0 188 0 189 0 190 0 191 0 192 0 193 0 194 0 195 0 196 0 197 0 198 0 199 0 200 0 201 0 202 0 203 0 204 0 205 0 206 0 207 0 208 0 209 0 210 1 211 0 212 0 213 0 214 0 215 0 216 0 217 0 218 0 219 1 220 1 221 0 222 0 223 0 224 0 225 0 226 0 227 0 228 0 229 0 230 0 231 0 232 1 233 0 234 0 235 0 236 0 237 0 238 1 239 1 240 0 241 0 242 0 243 0 244 0 245 0 246 0 247 0 248 0 249 0 250 0 251 0 252 0 253 0 254 0 255 0 256 0 257 0 258 0 259 0 260 0 261 0 262 0 263 0 264 0 265 0 266 0 267 0 268 0 269 0 270 0 271 0 272 0 273 0 274 0 275 0 276 0 277 0 278 0 279 0 280 0 281 0 282 0 283 0 284 0 285 0 286 0 287 0 288 0 289 0 290 0 291 1 292 1 293 0 294 0 295 0 296 0 297 0 298 0 299 0 300 0 301 0 302 0 303 0 304 0 305 0 306 0 307 0 308 0 309 0 310 0 311 0 312 0 313 0 314 0 315 0 316 0 317 0 318 0 319 0 320 0 321 0 322 0 323 0 324 0 325 0 326 0 327 0 328 0 329 0 330 0 331 0 332 0 333 0 334 0 335 0 336 0 337 0 338 1 339 0 340 0 341 0 342 0 343 0 344 0 345 0 346 0 347 0 348 0 349 0 350 0 351 0 352 0 353 0 354 0 355 0 356 0 357 0 358 0 359 0 360 0 361 0 362 0 363 0 364 0 365 0 366 0 367 0 368 0 369 1 370 0 371 0 372 0 373 0 374 0 375 0 376 0 377 0 378 0 379 0 380 0 381 0 382 0 383 0 384 0 385 0 386 0 387 0 388 0 389 0 390 0 391 0 392 0 393 Presbytery 0 394 0 395 0 396 0 397 Presbytery 0 398 0 399 0 400 0 401 0 402 0 403 0 404 0 405 0 406 0 407 0 408 0 409 0 410 0 411 0 412 0 413 0 414 0 415 0 416 0 417 0 418 0 419 0 420 1 421 1 422 0 423 0 424 1 425 0 426 0 427 0 428 1 429 0 430 1 431 0 432 0 433 0 434 0 435 0 436 0 437 0 438 0 439 0 440 0 441 0 442 0 443 0 444 0 445 0 446 0 447 0 448 0 449 0 450 0 451 0 452 0 453 0 454 0 455 0 456 0 457 0 458 0 459 0 460 0 461 0 462 0 463 0 464 0 465 0 466 0 467 0 468 0 469 0 470 0 471 0 472 0 473 0 474 0 475 0 476 0 477 0 478 0 479 0 480 0 481 0 482 0 483 0 484 0 485 0 486 0 487 0 488 0 489 0 490 0 491 0 492 0 493 1 494 0 495 0 496 0 497 0 498 0 499 0 500 0 501 0 502 0 503 0 504 0 505 0 506 0 507 0 508 0 509 0 510 0 511 0 512 0 513 0 514 0 515 0 516 0 517 0 518 0 519 0 520 0 521 0 522 0 523 0 524 0 525 0 526 0 527 Kirk session 0 528 0 529 Kirk session 0 530 Kirk session 0 531 0 532 0 533 0 534 0 535 0 536 0 537 0 538 0 539 0 540 0 541 0 542 0 543 Presbytery 0 544 0 545 0 546 0 547 0 548 0 549 0 550 0 551 0 552 0 553 0 554 0 555 0 556 0 557 1 558 0 559 1 560 0 561 0 562 0 563 0 564 0 565 0 566 0 567 0 568 0 569 0 570 0 571 0 572 0 573 0 574 0 575 0 576 0 577 0 578 0 579 0 580 0 581 0 582 0 583 0 584 0 585 0 586 0 587 0 588 0 589 0 590 0 591 0 592 0 593 0 594 0 595 0 596 0 597 0 598 0 599 0 600 0 601 0 602 0 603 0 604 0 605 0 606 0 607 Parliamentary 0 608 0 609 0 610 0 611 0 612 0 613 0 614 0 615 0 616 0 617 0 618 0 619 0 620 0 621 0 622 0 623 0 624 0 625 0 626 0 627 0 628 0 629 0 630 0 631 0 632 0 633 0 634 0 635 0 636 0 637 0 638 0 639 0 640 0 641 0 642 0 643 0 644 0 645 0 646 0 647 0 648 0 649 0 650 0 651 0 652 0 653 0 654 1 655 0 656 0 657 0 658 0 659 0 660 0 661 0 662 0 663 0 664 0 665 0 666 0 667 0 668 0 669 0 670 0 671 0 672 0 673 0 674 0 675 0 676 0 677 0 678 0 679 0 680 0 681 0 682 0 683 0 684 0 685 0 686 0 687 0 688 0 689 0 690 0 691 0 692 0 693 0 694 0 695 0 696 0 697 0 698 0 699 0 700 0 701 0 702 0 703 0 704 0 705 0 706 0 707 0 708 0 709 0 710 0 711 0 712 0 713 0 714 0 715 0 716 0 717 0 718 0 719 0 720 0 721 0 722 0 723 0 724 0 725 0 726 0 727 0 728 0 729 0 730 0 731 0 732 0 733 0 734 0 735 0 736 0 737 0 738 0 739 0 740 0 741 0 742 0 743 0 744 0 745 0 746 0 747 0 748 0 749 0 750 0 751 0 752 0 753 0 754 0 755 0 756 0 757 0 758 0 759 0 760 0 761 0 762 0 763 0 764 Kirk session 0 765 0 766 0 767 0 768 0 769 0 770 0 771 0 772 0 773 0 774 0 775 0 776 0 777 0 778 0 779 0 780 0 781 0 782 0 783 0 784 0 785 0 786 0 787 0 788 0 789 0 790 0 791 0 792 0 793 0 794 0 795 0 796 0 797 0 798 0 799 0 800 0 801 0 802 0 803 0 804 0 805 0 806 Bishop 0 807 0 808 0 809 0 810 0 811 0 812 0 813 0 814 0 815 0 816 0 817 0 818 0 819 0 820 0 821 0 822 0 823 0 824 0 825 0 826 0 827 0 828 0 829 0 830 0 831 0 832 0 833 0 834 0 835 0 836 0 837 0 838 0 839 0 840 0 841 0 842 0 843 0 844 0 845 0 846 0 847 0 848 0 849 0 850 0 851 0 852 0 853 0 854 0 855 0 856 0 857 0 858 0 859 0 860 0 861 0 862 0 863 0 864 0 865 0 866 0 867 0 868 0 869 0 870 0 871 0 872 0 873 0 874 0 875 0 876 0 877 0 878 0 879 0 880 0 881 0 882 0 883 0 884 0 885 0 886 0 887 0 888 0 889 0 890 0 891 0 892 0 893 0 894 0 895 0 896 0 897 0 898 0 899 0 900 0 901 0 902 0 903 0 904 0 905 0 906 0 907 0 908 0 909 0 910 0 911 0 912 0 913 0 914 0 915 0 916 0 917 0 918 0 919 0 920 0 921 0 922 0 923 0 924 0 925 0 926 0 927 0 928 0 929 0 930 0 931 0 932 0 933 0 934 0 935 0 936 0 937 0 938 0 939 0 940 0 941 0 942 0 943 0 944 0 945 0 946 0 947 0 948 0 949 0 950 0 951 0 952 0 953 0 954 0 955 1 956 0 957 0 958 0 959 1 960 1 961 0 962 0 963 0 964 0 965 0 966 0 967 0 968 0 969 0 970 0 971 0 972 0 973 0 974 0 975 0 976 0 977 0 978 0 979 0 980 0 981 0 982 0 983 0 984 0 985 0 986 0 987 0 988 0 989 1 990 1 991 1 992 0 993 0 994 0 995 0 996 0 997 0 998 0 999 0 1000 0 1001 0 1002 0 1003 0 1004 0 1005 0 1006 0 1007 0 1008 0 1009 0 1010 0 1011 0 1012 0 1013 0 1014 0 1015 0 1016 0 1017 0 1018 0 1019 0 1020 0 1021 0 1022 0 1023 0 1024 0 1025 0 1026 0 1027 0 1028 0 1029 0 1030 0 1031 0 1032 0 1033 0 1034 0 1035 0 1036 0 1037 0 1038 0 1039 0 1040 0 1041 0 1042 1 1043 0 1044 0 1045 0 1046 0 1047 0 1048 0 1049 0 1050 0 1051 0 1052 1 1053 0 1054 0 1055 0 1056 0 1057 1 1058 0 1059 0 1060 0 1061 0 1062 0 1063 0 1064 0 1065 0 1066 0 1067 1 1068 0 1069 0 1070 0 1071 0 1072 0 1073 0 1074 0 1075 0 1076 0 1077 0 1078 1 1079 0 1080 0 1081 Presbytery 0 1082 0 1083 0 1084 0 1085 0 1086 0 1087 0 1088 0 1089 0 1090 0 1091 0 1092 0 1093 0 1094 0 1095 0 1096 0 1097 0 1098 0 1099 0 1100 0 1101 0 1102 0 1103 0 1104 0 1105 0 1106 0 1107 0 1108 0 1109 0 1110 0 1111 0 1112 0 1113 0 1114 0 1115 0 1116 0 1117 0 1118 0 1119 0 1120 0 1121 0 1122 1 1123 0 1124 0 1125 0 1126 0 1127 0 1128 0 1129 0 1130 0 1131 0 1132 0 1133 1 1134 0 1135 0 1136 0 1137 0 1138 0 1139 0 1140 0 1141 0 1142 0 1143 1 1144 0 1145 0 1146 0 1147 0 1148 0 1149 0 1150 0 1151 0 1152 0 1153 0 1154 1 1155 0 1156 0 1157 0 1158 0 1159 0 1160 0 1161 0 1162 0 1163 0 1164 0 1165 0 1166 0 1167 0 1168 0 1169 0 1170 0 1171 0 1172 0 1173 0 1174 0 1175 0 1176 0 1177 0 1178 0 1179 0 1180 0 1181 0 1182 0 1183 0 1184 0 1185 0 1186 0 1187 0 1188 0 1189 0 1190 0 1191 0 1192 0 1193 0 1194 0 1195 0 1196 0 1197 0 1198 0 1199 0 1200 0 1201 0 1202 0 1203 0 1204 0 1205 0 1206 0 1207 0 1208 0 1209 0 1210 0 1211 0 1212 0 1213 0 1214 0 1215 0 1216 0 1217 0 1218 0 1219 0 1220 0 1221 0 1222 0 1223 0 1224 0 1225 0 1226 0 1227 0 1228 0 1229 0 1230 0 1231 0 1232 0 1233 0 1234 0 1235 0 1236 0 1237 Presbytery 0 1238 0 1239 0 1240 0 1241 0 1242 0 1243 0 1244 0 1245 0 1246 0 1247 0 1248 0 1249 0 1250 0 1251 0 1252 0 1253 0 1254 0 1255 0 1256 0 1257 0 1258 0 1259 0 1260 0 1261 0 1262 0 1263 0 1264 0 1265 0 1266 0 1267 0 1268 0 1269 0 1270 0 1271 0 1272 0 1273 LA/42 1 1274 1 1275 0 1276 Privy Council 0 1277 Privy Council 0 1278 0 1279 0 1280 0 1281 0 1282 0 1283 0 1284 0 1285 0 1286 0 1287 0 1288 0 1289 0 1290 0 1291 0 1292 0 1293 0 1294 0 1295 0 1296 0 1297 0 1298 0 1299 0 1300 0 1301 0 1302 0 1303 0 1304 0 1305 0 1306 0 1307 0 1308 0 1309 0 1310 0 1311 0 1312 0 1313 0 1314 0 1315 0 1316 0 1317 0 1318 1 1319 0 1320 0 1321 0 1322 0 1323 0 1324 0 1325 0 1326 0 1327 0 1328 0 1329 0 1330 0 1331 0 1332 0 1333 0 1334 0 1335 0 1336 0 1337 0 1338 0 1339 0 1340 0 1341 0 1342 0 1343 0 1344 0 1345 0 1346 0 1347 0 1348 0 1349 0 1350 0 1351 0 1352 0 1353 1 1354 1 1355 0 1356 0 1357 0 1358 0 1359 0 1360 0 1361 0 1362 0 1363 0 1364 1 1365 1 1366 0 1367 0 1368 0 1369 0 1370 0 1371 1 1372 0 1373 0 1374 0 1375 0 1376 0 1377 0 1378 0 1379 0 1380 0 1381 0 1382 0 1383 0 1384 0 1385 0 1386 0 1387 0 1388 0 1389 0 1390 0 1391 0 1392 0 1393 0 1394 0 1395 0 1396 0 1397 0 1398 0 1399 0 1400 0 1401 0 1402 0 1403 0 1404 0 1405 0 1406 0 1407 0 1408 0 1409 0 1410 0 1411 0 1412 0 1413 0 1414 0 1415 0 1416 0 1417 0 1418 0 1419 0 1420 0 1421 0 1422 0 1423 0 1424 0 1425 0 1426 0 1427 0 1428 0 1429 0 1430 0 1431 0 1432 0 1433 0 1434 0 1435 0 1436 0 1437 0 1438 0 1439 0 1440 0 1441 0 1442 0 1443 0 1444 0 1445 0 1446 0 1447 0 1448 0 1449 0 1450 0 1451 0 1452 0 1453 0 1454 0 1455 0 1456 0 1457 0 1458 0 1459 0 1460 0 1461 0 1462 0 1463 0 1464 0 1465 0 1466 0 1467 0 1468 0 1469 0 1470 0 1471 0 1472 0 1473 0 1474 0 1475 0 1476 0 1477 0 1478 0 1479 0 1480 0 1481 0 1482 0 1483 0 1484 0 1485 0 1486 0 1487 0 1488 0 1489 0 1490 0 1491 0 1492 0 1493 0 1494 0 1495 0 1496 0 1497 1 1498 0 1499 0 1500 0 1501 0 1502 0 1503 0 1504 0 1505 0 1506 0 1507 0 1508 0 1509 0 1510 0 1511 0 1512 0 1513 0 1514 0 1515 0 1516 0 1517 0 1518 0 1519 0 1520 0 1521 0 1522 0 1523 0 1524 0 1525 0 1526 0 1527 0 1528 0 1529 0 1530 0 1531 0 1532 0 1533 0 1534 0 1535 0 1536 0 1537 0 1538 0 PretrialNotes 1 2 Presbytery notes that none of the accused are subject to the authority of ministers or the presbytery and so cannot attest their depositions. Makghie nominated to witness their confessions before commission can be requested. Note about re-examining the suspects in order to confirm their depositions. Once this had been done commission was to be requested. 3 Commission issued after accused had confessed to some aspect of witchcraft but PC urged the commissioners not to use torture and to ensure that the accused are mentally and legally competent to stand trial. 4 Commission for trial but the accused was to be legally and mentally competent to stand trial. 5 Commission issued after accused had confessed but PC urged caution about use of torture. The accusedwas to confess voluntarily and be of legal and mental competency to stand trial. 6 Commission issued after the accused had confessed. 7 Commission issued after the accused had confessed. 8 Commission issued after the accused had confessed. 9 Commission issued after the accused had confessed. 10 Commission issued, accused already imprisoned. 11 Accused imprisoned before commission issued. 12 Commission issued after the accused was imprisoned. 13 14 Commission issued after the accused was imprisoned. 15 Commission issued after the accused was imprisoned. 16 Commission issued after the accused was imprisoned. 17 Accused recorded as having confessed before commission issued. 18 Commission appears to have been issued after the accused confessed. 19 Commission issued after the accused had confessed. 20 Commission issued after the accused had confessed. 21 It seems that she may have been released as there is no further reference to trial or outome. 22 The accused petitioned PC about illegal pricking by John Dick, who was ordered to be arrested and questioned. Second petition requested public announcement of his innocence as he claimed Dick&#39;s actions had brought &#39;infamie and disgrace&#39; on him. He did not have a trial but PC cleared his name. 23 Commission for trial, suspect imprisoned. Commission to report to PC before sentence. 24 Deposition attested and request for commission to try and judge the suspect recorded in presbytery records. 25 Accused petitioned PC about her imprisonment. Claimed that as she was being held in prison over the harvest she would lose her crops and income. PC ordered her to be released on payment of 2000 merks and caution her to appear at a later date. 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 Note in presbytery that suspect imprisoned, depositions attested and commission to be requested. 46 47 48 49 50 51 52 53 Note in presbytery records that suspect imprisoned with 2 others and that commission is to be requested. 54 Note in the presbytery that the suspect was under investigation and that they recommended to the magistrate of the bounds that the matter be tried. Suspect appears to have been quite high status and reference to a local bound court suggests desire to keep the trial within local control with no reference to central authorities. 55 Presbytery notes that deposition from accused had been attested and therefore commission for trial and judge was to be requested. 56 57 58 Bailies of the Canongate to proceed to trial without torture. 59 Died after being pricked by John Ramsay. 60 Accused appealed to PC that she had been held in prison for 18 months. Order for trial or release by 1/4/1663. 61 Accused complained about being held in prison for 18 months. PC ordered trial without any torture. 62 Request for commission recorded as having been sent to Queen&#39;s Advocate in Edinburgh, but no record of any reply or commission.The presbytery paid for her keep in prison, later they called in bonds of money due to the accused (£40 Scots) which was used to pay for her imprisonment. 63 deposition attested and commission for trial and judge requested. 12 others named in list for commission. 64 deposition attested and commission to try and judge to be requested. 65 66 Church discussed the case and ordered her to be censured. The person who consulted her also seems to have been punished as well. 67 Local ministers and lairds (?elders) involved. Reported that the accused confessed in her local kirk. Investigation went on for some months and several ministers involved. Found guilty of charming but appears that they could not sentence her to death for this. Presbytery recorded that a commission was to be requested. 20/7/1642 Mr John Currie reported that the council felt the points of the application in &#39;no wayes demerit death&#39;, ?no further action. 68 deposition attested and commission for trial and judge to be requested. 69 No details apart from minister was to make some investigations. 70 Brother and husband requested that she was set at liberty. Further entries only record that she &#39;continues under caution as before&#39;. No details of accusations. 71 Local minister reported that he was investigating the suspect, but no further details. 72 Accused named by Janet Coutts (C/EGD/1817) and presbytery arrest and investigate case. Commission granted and suspects pricked but nothing found against Moffat. Ordered to be released. Ministers had wanted Coutts to be brought to confront those she had named but this seems not to have happened, and this appears to be another example of Coutts&#39; naming without any cause. 73 Named by Janet Coutts (C/EGD/1817) along with several others. Presbytery investigate and requested commission from Committee of Estates. There were some witnesses against McBirnie who accused her of causing harm but, after further investigation, case was dismissed. Birnie wanted Coutts brought to confront suspects but this appears not to have happened. 74 Accused was named, with several others, by Janet Coutts (C/EGD/1817). Local ministers investigated and commission requested from Committee of Estates. Janet Coutts was meant to be brought to confront the accused but this does not appear to have happened. Most of the other accused were dismissed but nothing was recorded about Acheson. 75 Presbytery and ministers investigated accusations made by Janet Coutts (C/EGD/1817). Commission applied for from committee of estates and accused imprisoned and pricked but case dismissed as no witnesses found against her. Coutts may have been brought to confront the accused but no record of this. 76 Suspect named by Janet Coutts (C/EGD/1817) and local ministers investigated case. Commission from committee of estates granted and, although one witness appeared against Laidlaw, the case was dismissed. Coutts and Cathie seem to have had a double act as he was brought in to examine the suspects. Coutts may have been brought to confront them but no record of it. 77 Named by Janet Coutts (C/EGD/1817). Investigations made at local level and committee of estates applied to for commisison. Suspects examined by Cathie (who was working with Coutts) but evidence seems to have been non-existent. Hunter at one point confessed to demonic stuff but this appears not to have been enough to convict and case was dismissed. 78 Denounced by Janet Coutts (C/EGD/1817) and presbytery investigated case. There seems to have been little evidence or witnesses apart from Coutts and Cathie the witch-pricker, although commission was granted. Case dismissed. 79 deposition attested and request for commission to try and judge to be made. 80 Denounced by Janet Coutts. George Cathie witch pricker involved. Presbytery investigated the case and got commission. After imprisonment and pricking there seems to have been insufficient evidence to pursue the suspects. Bessie Gibson is not recorded as having been released (as most of them were) but it is likely that she was too. 81 denounced by Janet Coutts (C/EGD/1817) and case investigated by presbytery. Commission granted and suspects examined by Cathie the witch pricker, who seem to have a bit of a double act with Coutts. However the investigators did not come up with sufficient evidence and case dismissed. 82 Denounced by Janet Coutts (C/EGD/1817) and case investigated by presbytery. Commission granted and suspects imprisoned and pricked. However there appears to have been no witnesses apart from Coutts and George Cathie, the pricker, and the case was dismissed. 83 denounced by Janet Coutts (C/EGD/1817) and the presbytery investigated the case. Commission applied for and granted, suspects imprisoned and pricked but apart from Coutts&#39; accusation and the evidence of Cathie, the pricker, there appears to have been no other evidence or witnesses and case was dismissed. 84 Suspects were being &#39;interviewed&#39; by ministers in the following months. 85 The suspects were being questioned and interviewed by ministers during the following months. 86 The suspects were questioned and interviewed by ministers over the following months. 87 Suspects were questioned and interviewed by ministers over the following months. 88 Presbytery note that they recommend applying to the Privy Council for a commission, but no evidence if this was received. 89 Deposition attested and request for commission to try and judge to be made. 90 Presbytery involved in investigations. Ordered prayer and fasting with the victim, Christian Shaw, and that an account of her sufferings be recorded by Turner and Brisbane, 2 ministers. The commission was read out on 18/3/1697 in Renfrew. This case was under a PC commission (see PC1/51 p. 136-9) along with most of the people tried at the same time. There were other Renfrewshire witchcraft suspects tried at different places and times. I am keeping this as a mixed/central local because the Privy Council maintained very strict control over the proceedings, even though they granted a commission. For details of the proceedings of Privy Council in this matter see the no named witches case c/la/3235. 91 She was one of a number accused of bewitching Christian Shaw. Note in presbytery that the suspects were held in the houses of several of the ministers. The commission was read out in the burgh of Renfrew 18/3/1697. This case was under a PC commission (see PC1/51 p. 136-9) along with most of the people tried at the same time. There were other Renfrewshire witchcraft suspects tried at different places and times. I am keeping this as a mixed/central local because the Privy Council maintained very strict control over the proceedings, even though they granted a commission. For details of the proceedings of Privy Council in this matter see the no named witches case c/la/3235. 92 Note in presbytery that the suspects were held in the houses of the local ministers. One of several people accused by Christian Shaw. Accused of trying to bribe his way out of a previous witchcraft accusation. The commission was read out in the burgh of Renfrew on 18/3/1697. This case was under a PC commission (see PC1/51 p. 136-9) along with most of the people tried at the same time. There were other Renfrewshire witchcraft suspects tried at different places and times. I am keeping this as a mixed/central local because the Privy Council maintained very strict control over the proceedings, even though they granted a commission. For details of the proceedings of Privy Council in this matter see the no named witches case c/la/3235. 93 One of several people accused by Christian Shaw of bewitching her. Suspect held in the houses of the local ministers. He was determined to be a witness not a suspect due to young age. He was mentioned in the Privy Council commission but wasn&#39;t tried with that group. 94 She was originally part of the 1697 Renfrewshire witches, but she was not tried at that time due to pregnancy. She was confined to Edinburgh by the Privy council on 6 Sept. 1698. (joyce notes) I think this is mixed trial as presbytery note that committee of justiciary was due to travel through to the west in 4/1699. JC references imply that there was supposed to be a trial in Glasgow in May 1699. 95 Presbytery investigated but no further proceedings. 96 Presbytery note that the details were to be sent to the judge competent in order to get a commission. Later, 29/1/1650, referred to burgh magistrates who were to approach Privy Council. 97 Presbytery note that commission to be requested from Privy Council after she was referred to burgh council 98 Presbytery note that they advised the magistrate about the suspect, and later note that they recommend requesting a commission. 99 deposition attested and commission for trial and judge to be requested. 100 Presbytery note that they advised the magistrate about the suspects and later that they recommend applying for a commission. 101 Presbytery note that the suspect was to be recommended to the &#39;judge ordinair&#39; after she had confessed witchcraft. 102 Presbytery note that the accused had confessed to witchcraft and they recommend referring her to the &#39;judge ordinair&#39;. 103 Presbytery note that they recommend referring details to the &#39;judge competent&#39;. Later 2/7/1650, they recommend the magistrate apply for a commission. 104 Presbytery note that details to be referred to the magistrate in order for commission to be requested. 105 106 107 deposition attested and commission to try and judge to be requested 108 Deposition attested and commission to try and judge to be requested. 109 Presbytery sent two ministers to Edinburgh, along with sheriff depute, to request commission. Note that commission obtained, 11/3/1696. Also notes that she accused other people but no names mentioned. The Privy Council handed the whole matter over to his majesty&#39;s Advocate due to irregularities in the handling of the commission. 110 Presbytery note that the accused was to be imprisoned in Balliemore and to appear at the next provincial presbytery meeting. No further details recorded in the minutes. 111 Deposition attested and commission to try and judge to be requested. 112 The presbytery investigated the accusations, which were raised by another woman. The other witnesses all denied the charges or were vague about just what had happened and the charges were dropped. The accuser had to make public repentance. 113 The charges brought against the accused were not proven by witnesses. They denied or were vague about details and the charges were dropped. The accuser had to make public repentance for raising the scandal. 114 Recorded in presbytery records as having confessed to witchcraft but not to pact. Named others. Reported to have died of sickness. 115 Presbytery minutes show that the accused (and others) were imprisoned and ministers sent to encourage their confession. The records also referred to a commission granted from parliament. There are 2 commissions granted from parliament in 1649 that refer to Inverkeithing witches, APS, vol VI, part 2, pp, 463 and 538, so presumably she was part of these general commissions for un-specified or un-named individuals. 116 The presbytery notes recorded that the accused (and others) was imprisoned and ministers were to visit and encourage them to confess. The records also referred to a commission granted by parliament. There are two references to commissions that included people from Inverkeithing, APS, vol vi, part 2, pp. 463 and 538, so presumable she was included in these general commissions for un-specified individuals. She complained to the Committee of Estates about being arrested and kept in stocks in the steeple. The Committee of Estates ordered her to be moved to better accommodation and that her husband was to have free access to see her and that no torture or &#39;hard usage&#39; be put to her. They also ordered the presbytery of Dunfermline to send all its probation against her to the committee for review by 11/9/1649. On 13/9/ 1649 the presbytery presented evidence that the original complaint (given in by her husband) had been &#39;calumnious&#39; and she had bribed the watch and escaped but was recaptured and held at Burntisland where they found the Devil&#39;s mark. The presbytery was praised for their diligence and her husband was fined. 117 The presbytery minutes noted that the accused was imprisoned (with others) and ministers were to visit to encourage them to confess. The minutes also referred to a commission from parliament. There are two parliamentary commissions that include Inverkeithing, APS, vol vi, part 2, pp. 463 and 538, so presumably she was included in one of these general commissions for un-specified individuals. 118 Note in presbytery records that ministers from Dunfermline and Beath were to participate in her trial. 119 Presbytery records note that accused was imprisoned and had confessed to witchcraft. The minister was to send the confessions to the judge in order that the accused was brought to trial. There is another entry in Aberdour kirk session records that the accused and 2 others named another woman and she was brought to the prison to confront them. 120 Presbytery records note that the accused was imprisoned and had confessed to witchcraft. The minister was to send confessions to the judge in order to proceed with a trial. 121 Presbytery records note that the accused was imprisoned and had confessed to witchcraft. The minister was to send confessions to the judge in order to proceed with a trial. Another entry in Aberdour kirk session notes that the accused and 2 other women accused a third woman who was brought to confront them in prison. 122 Deposition attested and commission to try and judge to be requested. 123 Note in presbytery minutes(14/11/1633) that the minister from Dysart was to attend the assize in Kirkcaldy the next day. No other details. Depositions reviewed by the archbishop of St Andrews 124 Note in presbytery records (14/11/1633) that minister from Dysart was to attend the trial in Kirkcaldy the next day. No other details about case. Case reviewed by the archbishop of St Andrews 125 Few details although unusually the presbytery appears to have referred the details to the Bishop of St Andrews for advice. 126 No details about trial but records implied they may have been imprisoned in Dysart. 127 Presbytery records note that the accused may have been imprisoned in Dysart but no specific details. 128 The presbytery interviewed the witnesses against MG and imprisoned her in Dysart. The minutes record that the brethren had heard nothing proven against her that merited death and so she was to be brought before the presbytery and dismissed. 129 Presbytery interviewed witnesses and ordered that accused was warded to await further trial. 130 Presbytery minutes recorded that witnesses were interviewed about accusations against MD over several months. By 20/7/1650 the brethren decided that the accusations against her were not proven. 131 Presbytery minutes recorded that the suspect was questioned but denied all charges. As they found no grounds to put her to an assize they released her on caution. 132 The presbytery minutes record that they think they have enough grounds to apprehend her. 133 134 135 Interviewed but refused to confess. Presbytery decided to refer to magistrate for further advice. 136 Presbytery minutes recorded that the suspect had fled and that she was to be excommunicated. 137 Presbytery minutes recorded that the suspect had fled and she was to be excommunicated. 138 Presbytery minutes record that she was to be put to an assize. 139 Presbytery minutes recorded that they wanted to get a commission to put the suspect to an assize. Later entry indicates that they could not get a commission. ?discharged. 140 Presbytery minutes recorded that they wanted to get a commission to put the suspect to an assize. Later entry indicates that they could not get a commission.?discharged. 141 Presbytery minutes recorded that they wanted to get a commission to put the suspect to an assize. Later entry indicates that they could not get a commission.?discharged. 142 Presbytery minutes recorded that they wanted to apply for a commission. 143 deposition attested sufficient grounds to request commission to try and judge. 144 Presbytery called witnesses and question them on several occasions in 2/1650. 145 Not many details as the case was discussed in a different presbytery. No details about outcome. 146 Witnessed questioned by presbytery. Accused imprisoned and confessed to demonic pact. Named others.\\n?no more details or information about what happened. 147 Presbytery questioned accused and witnesses. Appears to have died after her confession. Recorded that she named others but no names. 148 Witnesses and accused questioned by the presbytery. Noted that she had been imprisoned. Minutes are confusing as presbytery implied that she had not confessed but brought 16 male witnesses who had guarded her and to whom she appeared to have confessed some items. 149 Presbytery questioned the accused and witnesses. Appears to have been imprisoned and confessed but no further details. 150 deposition attested sufficient grounds to request commission to try and judge. 151 Presbytery questioned witnesses and suspect. No further details. 152 Presbytery minutes recorded that the suspect was imprisoned in Montrose and 2 ministers were appointed to hear the witnesses&#39; depositions. No further details. 153 154 155 156 157 158 159 160 deposition attested sufficient grounds to request commission to try and judge. 161 deposition attested sufficient grounds to request commission to try and judge. 162 deposition attested sufficient grounds to request commission to try and judge. 163 deposition attested sufficient grounds to request commission to try and judge. 164 The presbytery discussed the matter and appointed ministers to assist the magistrates of Perth. By 6/5/1646 the presbytery again discussed the delay in this matter and decide that the accusations were not fully or sufficiently proven and could not find her guilty. Process to stop for the time being. 165 Presbytery involved in investigation. Merser applied to presbytery to be put to trial as she claimed she had been slandered by a local man. Presbytery note that the justice depute, Mr Alex Colville, to be contacted. Last entry records that witness deposition produced (no details) but no indication about next step. 166 Presbytery appear to have made note of her as being suspected as a witch and made some inquiries. Nothing else recorded. 167 Minister, ruling elders and other brethren investigated details at request of provincial assembly. Took witness statements and suspect&#39;s confession. Referred the case back to (?provincial) assembly or synod for advice. 168 Davidson was accused by 4 people (2 married couples) of being a witch. She denied the accusations, which seem vague, and presbytery allowed her to call witnesses to support her counter claim of slander. There seems to have been a disagreement between her and one of the other women. No further action appears to have been taken. 169 Presbytery appear to have considered the accusation and called both parties to appear with witnesses. Later entry records that James Annand (her accuser) was absolved from accusation of slander. 170 Deposition attested. No reference to request for commission. 171 Appears to have been fugitive in 1607 and then again in 1627, so presumably she had returned to the parish at some point. First note records her as a charmer but the later one notes that she is dilated for both charming and witchcraft 172 173 Presbytery ordered local ministers to make inquiries about the suspect but they reported that he was fugitive in 1644. 174 Presbytery made inquiries and witnesses made statements about healing rituals. 175 Presbytery asked for more evidence from kirk session. Reports of malefice but records very difficult to read and actions/outcome not clear. Appears to have confessed at some point. 176 Presbytery got local minister to take statements. Accused denied charges and was put in ward for &#39;private confession and prayer&#39;. She appears to have escaped and fled the area. 177 Strathbogie presbytery recorded her as having escaped ward in Aberdeen and ordained the brethren to make inquiries about her. 178 Presbytery interviewed accused and witnesses over several weeks. By 20/5/1640 the accused did not appear at the meeting and there are no further entries about her until 1643. She was summoned and searched for, but not found. Continued to be called and not appear, ordered to satisfy in sackloth in her own parish and eventually excommunicated. Recorded as dead in 11/1644. 179 Presbytery call accused and witnesses. Several appeared but Malcolmie di not and was reported to have fled. 180 Called by the presbytery to answer charges but did not appear. 181 Deposition attested. No reference to request for commission. 182 Called before presbytery in 1672. Seems to have cursed and shouted at one of the ministers and to have been &#39;mala fama&#39; for witchcraft. 10/7/1672 ordained to be publicly rebuked at this time, but no further referrals. 183 Presbytery note that a commission had been applied for. Sheriff depute asked to keep the accused separate from other prisoners but this does not appear to have happened. Sheriff depute noted that king&#39;s solicitor had asked for a precognition to be taken 184 Presbytery note that a commission had been applied for. Sheriff depute asked to keep the suspects separate from other prisoners but this does seem to have happened. Sheriff depute also asked to get precognition by king&#39;s solicitor. 185 Presbytery note that a commission had been applied for. Sheriff depute was asked to keep the suspects separate from other prisoners but this did seem to have happened. Sheriff depute also asked to get precognition by king&#39;s solicitor. 186 Presbytery note that a commission had been applied for. Sheriff depute was asked to keep the suspects separate from other prisoners but this did seem to have happened. Sheriff depute was also asked to get precognition by king&#39;s solicitor. 187 Presbytery note that a commission had been applied for. Sheriff depute was asked to keep the suspects separate from other prisoners but this does seem to have happened. Sheriff depute was also asked to get precognition by king&#39;s solicitor. 188 Presbytery note that a commission had been applied for. Sheriff depute was asked to keep the suspects separate from other prisoners but this does seem to have happened. Sheriff depute was also asked to get precognition by king&#39;s solicitor. 189 Presbytery investigated and questioned the suspect and witnesses. Case referred to Mr John Mitchell but no further details. Accused had been earned to leave Calvester. 190 Presbytery investigated and questioned the suspect and witnesses. Details referred to Mr John Mitchell Steward of Shetland, but no further details. 191 Presbytery investigated, questioned witnesses and the suspect. Had been called before the kirk session of Sandness. Case referred to Mr John Mitchell Steward of Shetland, but no further details. 192 Deposition attested. No reference to request for commission. 193 Presbytery investigated case, questioned witnesses and the suspect. They referred matters to Mr John Mitchell Steward of Shetland but no further details. 194 Later trial investigation in 1725. No details of accusations but Mr George Duncan still involved and matter referred to the steward/civil magistrate. Entry records reply from steward stating that he could find nothing that could infer the crime of witchcraft, but that she was a deluder of the people and so he intended to proceed against her. 195 Presbytery called the suspect and charged her but she denied all the charges. They want the Stranraer magistrates to ward her until her trial. 1/7/1650 dittays drawn up and note that a commission was to be requested. The commissioners who attended the General Assembly were recommended to be in charge of this. 196 Presbytery noted that ditays against the group of accused were drawn up and a commission for trial was to be requested. 197 Presbytery noted that dittays against the suspects were drawn up and a commission for trial was to be requested. 198 Presbytery noted that dittays against the suspects were drawn up and a commission for trial was to be requested. 199 Presbytery recorded that dittays against the accused have been drawn up and a commission for trial was to be requested. 200 Presbytery recorded that dittays against the suspects were drawn up and that a commission for trial was to be requested. 201 Presbytery recorded that dittays had been drawn up against the accused and that a commission for trial was to be requested. 202 Kirk session found several scandalous and horrid things and although they tried to get evidence could not get things sufficiently proven. They referred case to presbytery, who advised consulting the King&#39;s advocate and the General Assembly. Held in prison for 1 year and eventually released but banished. 203 Deposition attested. No reference to request for commission. 204 Wharrie took the case herself to KS and presbytery and claimed she had been slandered. Presbytery investigated, interviewed suspect and witnesses and referred case to synod. By 12/1697 nothing from the synod and a lawyer in Edinburgh advised there was too much business to consider the accusations further. She was still around in 11/1699 as presbytery noted that nothing had been done about her. 205 206 207 208 209 210 Man appears to have confronted Jonet Leisk and identified her as a witch. 211 212 Deposition attested but no reference to commission. 213 214 215 216 Wobster had fled from her own house when she heard about the other executions but was apprehended - no date. 217 218 219 Appears to have been taken to Aberdeen to be warded. Her son tried to bribe her release in return for gold and silver. Would appear to have been released as the charges against her were not proven and she was acquitted. 220 Pursued by Lord Errol for casting a sickness on his wife. Fidlar appears to have fled for some time but was captured and imprisoned at Slains for a year and a day, by Lord Errol. Was confronted by Andro Man. 221 222 223 Her deposition was attested, no reference to a commission. 224 225 226 227 Noted to have fled the area for 3 days when her mother was tried in Aberdeen. 228 229 Minister made some investigations. 230 231 232 233 234 Deposition attested. No reference to request for commission. 235 236 237 238 Was fugitive for some time. Appears to have been questioned in the kirk before the provost, minister and session but she denied all charges and did not confess anything. 239 Appears to have been questioned in the kirk and confronted by Christen Michell but does not seem to have confessed. 240 Appears to have confessed to pact and healing rituals. 241 Presbytery notes that her deposition was attested as sufficient grounds to request commission to try and judge the accused. 242 Presbytery notes that her deposition was attested as sufficient grounds to request a commission to try and judge the accused. 243 Presbytery records note that request to be sent to council - ?Privy Council. 244 Noted in presbytery records as having fled from justice and their names were to be read out publicly. 245 Presbytery records note that suspect has fled from justice and name to be announced publicly, with 2 others, in order to apprehend them. 246 Presbytery notes that she has fled from tolbooth and her name is to be announced in all congregations. 247 Confession attested by presbytery. 248 Minister investigated accusations of witchcraft but presbytery records do not contain any more information. 249 Points of witchcraft against Scottie brought to the attention of the presbytery, but no further details. 250 Presbytery record that they were to consider accusations but no further details. 251 Presbytery records note that they were to consider accusations, but no details. 252 Presbytery note that they were to consider accusations of witchcraft against the accused but no further details. 253 Confession attested by presbytery. 254 Presbytery noted that they were to consider accusations of witchcraft against the accused, but no further details. 255 Presbytery noted that they were to consider accusations of witchcraft against the accused, but no further details. 256 Presbytery recorded that they are to consider accusations of witchcraft against the accused but no further details. 257 Presbytery to consider accusations but no further details. 258 Presbytery to consider accusations of witchcraft but no further details. 259 Presbytery note that the sheriff-depute had brought accusations against several people suspected of witchcraft. They appear to have been brought to Kirkwall and imprisoned. No further details. 260 Presbytery note that the sheriff-depute had brought accusations against several people suspected of witchcraft. They appear to have been brought to Kirkwall and imprisoned. No further details. 261 Presbytery note that the sheriff-depute had brought accusations against several people suspected of witchcraft. They appear to have been brought to Kirkwall and imprisoned. No further details. 262 Presbytery note that the sheriff-depute had brought accusations against several people suspected of witchcraft. They appear to have been brought to Kirkwall and imprisoned. No further details. 263 264 Confession attested by presbytery. 265 Son of suspect and Paply denied the charges. They claimed she had been slandered by Elspeth Culsetter (C/JO/3044) and later by Barbara Bowdie (C/JO/3046). She was told to submit a bill of complaint about the slander. The complaints by son continued until 1645 but no further details of any trial or accusations. 266 Questioned by ministers and elders about previous statements but appears to have denied much of what she had said, particularly in relation to her naming of other accused. 267 268 269 270 271 Presbytery note that she is accused of witchcraft but no further details. 272 Presbytery record that she was accused. Complainers told to re-submit the bill, but no further details. 273 Presbytery record that a bill of complaint put in about alleged witchcraft. No further details 274 Presbytery note that a bill of complaint about alleged witchcraft had been submitted. No further details. 275 Confession attested by presbytery. 276 Summoned for investigation by kirk session but she did not appear and was recorded as fugitive. No further details. 277 Investigated by the presbytery of Shetland. 278 279 280 Confession attested by presbytery. 281 Presbytery requested to examine her and decide if there is sufficient cause to purchase a commission to put her to trial by an assize. ?this was agreed but no further details. 282 Presbytery interview witnesses about their allegations. They were requested to imprison her by Mr Henry Livingstone but not sure if this happened. No further details. 283 Presbytery investigated and recorded her confession. Decided there was enough grounds to refer her to civil magistrate to be put to an assize. No further details. 284 Presbytery investigated over several months. Both sides produced witnesses and eventually they referred her to the provost and bailies of Stirling. There is some mention that she was to be put to an assize but also that she was to be set at liberty. No further details. 285 Kirk made some investigations and questioned Murray and witnesses. No further details. 286 Some investigations by kirk session but no details. 287 Some kirk session investigations but no details. 288 Confession attested by presbytery. 289 Kirk made some investigations about accusations that Lauson had cursed the minister from Dalmeny. Not many details. She may have been imprisoned as there is a later entry asking about making a collection to pay for the costs. Her case was reviewed by the presbytery of Linlithgow. 290 Entry in kirk session records that she had been named as a witch by people from Dalmeny. Later entry noted that there was to be a collection to pay the costs of keeping the witchcraft suspects warded so she may have been imprisoned. 291 Kirk session made some investigations and took her to confront the other women who had named her. 292 Kirk session records note that the accused and 2 others were delated as witches. They were imprisoned and then named a fourth woman who was brought to confront them. 293 Presbytery investigated and questioned witnesses. She denied accusations. Later local sheriff was requested to raise a commission for trial. No details if this was done. 294 295 Kirk session interview and question accused and witnesses. She named other accused witch. 296 297 She was named by Issoble Garner then named 4 more women. 298 299 Confession attested by presbytery. 300 Investigated by the kirk session and recorded as having had a trial. KS notes that those imprisoned were to be searched but there are no details about if this was done. 301 302 Investigated by kirk session and named several others. KS notes that a witch pricker was to search those imprisoned but not clear if this happened to her, as this was after her guilty verdict. 303 304 Investigated by kirk session. Appears to have confessed at some point, but few details. Also ?retracted confession at later date. 305 306 Investigated by kirk session and ordered to be imprisoned. Searched for Devil&#39;s mark. 307 Investigated by kirk session, searched for mark and accused by another man of having been drinking in Kirkcaldy. No details of any other accusations. 308 Searched by pricker and may have been imprisoned. No further details. 309 Searched for mark and may have been imprisoned but no other details. 310 Presbytery records have note that the accused and others appealed for release from imprisonment to the magistrate of Haddington which was denied. 20/3/1650 petition from the accused against Thomas Crawford. She accused him of slandering her. It was claimed that she had asked him to search her for the mark privately and that if he found it she would pay 1000 merks for him to deny it. Presbytery decide in Crawford&#39;s favour\\n1/5/1650 presbytery refer her request for release to synod 26/6/1650, Presbytery request information from parishes about accused. It was noted that she refused to confess. 311 Investigated by KS and referred to presbytery and/or banished. Writing very difficult. 312 Investigated for charming (first entry includes reference to other charmers who do not seem to have been pursued). Eventually recorded as being warded. 313 Presbytery ordered the Stirling ministers to investigate her case. They wanted them to try and examine the accused. Note that she had confessed but no details. No details about accusations or outcome. 314 Presbytery requested that ministers in Stirling try and examine the accused. She appears to have been imprisoned and made a confession, but no details. No details of trial, accusations or outcome. 315 The presbytery was requested by the Laird of Keir to investigate accusations of witchcraft (really healing). No further details about trial or outcome. 316 Presbytery questioned her over a few years about her use of charms. Initially ordered to stop using them but did not do so. Accusation then changed to witchcraft but no further details. 317 Presbytery questioned her mother over some years about charming. By 8/1615 both were implicated and the accusations included witchcraft, but no details. Presbytery record that she confessed. 318 Presbytery questioned her over several days in 1/1633 and 2/1633. Also questioned witnesses. No details of trial. Several confessions. 319 Presbytery questioned the accused and several witnesses but no details of trial or outcome. 320 Presbytery records noted that the accused and others appealed for release from imprisonment to the magistrate of Haddington which was denied.\\nLater request (1/5/1650) was passed to the synod.\\nThe presbytery requested information from parishes about accused, 26/6/1650. Refusal to confess noted in records. 321 Presbytery interviewed accused and several witnesses. Had been identified by Jonet Tailzour. No details of trial or outcome. 322 Presbytery investigated accusations and took confessions. Letter to be sent to the justice of the peace and ordered to imprison the group. 323 324 325 326 327 328 329 330 Presbytery records noted that the accused and others appealed for release from imprisonment to the magistrate of Haddington which was denied.\\nLater request (1/5/1650) was passed to the synod.\\nThe presbytery requested information from parishes about accused, 26/6/1650. Refusal to confess noted in records. In 5/1650 she was released on caution. No mark found on her 331 332 333 334 335 336 337 338 Questioned by presbytery as part of a bigger group. Confronted Bessie Paton who she said took her to meetings. 339 340 341 Presbytery records noted that the accused and others appealed for release from imprisonment to the magistrate of Haddington which was denied.\\nLater request (1/5/1650) was passed to the synod.\\nThe presbytery requested information from parishes about accused, 26/6/1650. Refusal to confess noted in records. 342 343 344 345 346 347 348 There is also another note in Spalding that an Elspett Strathauchyn was fugitive. ?same person although this was in 4/1597 after her date of execution. 349 Note in Spalding about caution for her entry. She seems to have fled the area. Order to be apprehended (6/4/1597). Commission from Aberdeen provost and baillies to find the accused. Church elders claim no knowledge of her whereabouts. 350 Order to be apprehended (6/4/1597) Commission from Aberdeen provost and baillies to the church elders about the whereabouts of the accused, who replied they knew nothing. 351 Fled from justice and goods to be escheat. Aberdeen provost and bailles asked the church elders if they knew anything about the accused. They claimed they knew nothing about her whereabouts. 352 Deposition attested by presbytery. Later note records that the presbytery will seek the advice of the synod. 353 354 355 356 357 Ordered to be apprehended. 358 Order to be apprehended. 359 Order to be apprehended. 360 Order to be apprehended. 361 Order to be apprehended. 362 Order to be apprehended. Investigated by the presbytery. 363 Deposition attested by the presbytery. 364 Order to be apprehended. Presbytery investigated accusations. 365 Order to be apprehended. 366 Order to be apprehended. Presbytery investigated the accusations and decided there was not suffifcient cause to take it further. However they seem to have passed the matter over to the judge to decide if there should be a trial. 367 Investigation held by kirk session by commission from the provost and baillies of Aberdeen. 368 Kirk session interviewed witnesses and accused. They requested Lord of Corstorphine to apprehend and imprison her. While she was left alone she hanged herself. 369 370 371 372 373 Deposition attested by the presbytery. 374 375 Questioned by the kirk session and named many others. 376 377 378 379 380 381 382 383 384 Deposition attested by the presbytery. 385 386 387 Apprehended and questioned by the kirk session. 388 Questioned by the kirk session. 389 Kirk session question accused and took witness depositions. Case involved the local laird and was referred to the presbytery. 390 391 John Kincaid was requested to search for the mark. 392 Note that she had been incarcerated. 393 Presbytery had received some accusations. Synod advised them to refer case to magistrates, who in turn wrote to the Lord&#39;s advocate. Advocate would not issue commission. Presbytery unable to do any more but suspects noted as having been banished. 394 Local presbytery investigated accusations and decided that they were not sufficient. However, it seems that the matter was to be remitted to a trial if the judges thought it sufficient. Not clear what happened next. 395 Deposition attested by the presbytery. 396 Presbytery investigated the accusations and decided that there was not sufficient evidence to pursue further. However it seems that it was remitted to the judges to decide whether to go for a trial. 397 Had been named by Margaret Bane but ivestigators find nothing and charges dropped. 398 Local investigations by kirk sessions. 399 400 401 No details but cautioner for trial named. 402 403 404 405 406 deposition attested by the presbytery. 407 408 409 deposition attested. 410 Deposition attested. 411 deposition attested. 412 deposition attested. 413 deposition attested. 414 Deposition attested. 415 deposition attested. 416 deposition attested. 417 In 1649, process note from the locality to the Privy Council to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested. He had been denounced and arrested. Although he had been named he had not been apprehended or searched by 4/1661. Noted as being fugitive for witchcraft in Humbie KS records. 418 Noted as being fugitive in Humbie KS records in 1661. 419 Noted as being fugitive in Humbie KS in 1661. 420 The kirk sesion investigated and referred matter to presbytery. It involved a group of people turning the riddle. They all eventually confessed and seem to have been ordered to make public repentance. 421 The kirk sesion investigated and referred matter to presbytery. It involved a group of people turning the riddle. They all eventually confessed and seem to have been ordered to make public repentance. 422 423 424 NcLevin and Jonet Morisone confronted Margaret NcWilliam. NcLevin also confronted Kathrine Moore 425 Presbytery attested her confession. 426 427 She made confessions in 1662 but appears to have escaped prosecution somehow, as she was re-investigated in 1673. 428 There had been previous claims made against her in 1645 and she had been apprehended in 1649. She had been examined and the mark found but she was released. She appears to have been examined again in 1662, three marks were found but she denied all her charges. She was confronted by Jonet Morisone and Margaret NcLevin. 429 Seems to have been charged with stealing a cow but later accusations involved his association with the devil, who he consulted for advice about stolen goods.His confession sounds more like he attended outdoor conventicles. 430 Morisone and NcLevin confronted Margaret NcWilliam. 431 432 433 434 435 436 Presbytery attested her confession. 437 438 439 440 441 442 443 444 445 446 Confession attested by presbytery. 447 448 449 450 451 452 453 454 455 456 457 Requested presbytery to deal with the magistrate so they can be set at liberty. 458 459 460 461 462 This may not have been a separate trial investigation but simply a reference to her confession from 1649. The wording is not clear. 463 464 465 466 467 468 Requested presbytery to deal with the magistrate so they can be set at liberty. 469 470 471 472 473 474 475 476 477 478 479 Presbytery attested confession 480 481 482 483 484 Presbytery attested confession 485 Presbytery attested confession 486 487 Investigated by the kirk session and presbytery. Eventually reprimanded and told to stop charming practices. 488 The kirk session and presbytery investigated and reprimanded Gillies and his wife for charming not witchcraft. 489 Presbytery appears to have called witnesses and carried out some investigation at local level, but no details. 490 491 492 The kirk session investigated and referred matter to presbytery. It involved a group of people turning the riddle. They all eventually confessed and seem to have been ordered to make public repentance. 493 The kirk sesion investigated and referred matter to presbytery. It involved a group of people turning the riddle. They all eventually confessed and seem to have been ordered to make public repentance. 494 Kirk session investigated alleged witchcraft as it was claimed that she disappeared for a day every quarter. Later it was claimed that she went with the fairies every time. Ordered to be apprehended. 495 Confession attested. 496 Investigated by church although they seemed more concerned to get information about others that she named. 497 The kirk session recorded that she had been imprisoned but appeared to have been released. She was not attending the church and the church authorities then noted concerns about her use of charming. No further details. 498 Group of women appear to have been named by Janet Fairlie (C/EGD/1607). They were investigated and presbytery advised they were examined by the pricker. They were imprisoned and kirk session requested witnesses etc. No further details after 12/1649. 499 Group of women appear to have been named by Janet Fairlie (C/EGD/1607). They were investigated and presbytery advised they were examined by the pricker. They were all &#39;glad&#39; to be examined this way, according to the KS. They were imprisoned and kirk session requested witnesses etc. No further details after 12/1649. 500 Group of women appear to have been named by Janet Fairlie (C/EGD/1607). They were investigated and presbytery advised they were examined by the pricker. They were all &#39;glad&#39; to be examined this way, according to the KS. They were imprisoned and kirk session requested witnesses etc. No further details after 12/1649. 501 Group of women appear to have been named by Janet Fairlie (C/EGD/1607). They were investigated and presbytery advised they were examined by the pricker. They were all &#39;glad&#39; to be examined this way, according to the KS. They were imprisoned and kirk session requested witnesses etc. No further details after 12/1649. 502 Group of women appear to have been named by Janet Fairlie (C/EGD/1607). They were investigated and presbytery advised they were examined by the pricker. They were all &#39;glad&#39; to be examined this way, according to the KS. They were imprisoned and kirk session requested witnesses etc. No further details after 12/1649. 503 Group of women appear to have been named by Janet Fairlie (C/EGD/1607). They were investigated and presbytery advised they were examined by the pricker. They were all &#39;glad&#39; to be examined this way, according to the KS. They were imprisoned and kirk session requested witnesses etc. No further details after 12/1649. 504 Group of women appear to have been named by Janet Fairlie (C/EGD/1607). They were investigated and presbytery advised they were examined by the pricker. They were all &#39;glad&#39; to be examined this way, according to the KS. They were imprisoned and kirk session requested witnesses etc. No further details after 12/1649. 505 Group of women who appear to have been named by Janet Fairlie (C/EGD/1607). They were investigated and presbytery advised they were examined by the pricker. They were all &#39;glad&#39; to be examined this way, according to the KS. They were imprisoned and kirk session requested witnesses etc. No further details after 12/1649. 506 confession attested. 507 Group of women appear to have been named by Janet Fairlie (C/EGD/1607). They were investigated and presbytery advised they were examined by the pricker. They were all &#39;glad&#39; to be examined this way, according to the KS. They were imprisoned and kirk session requested witnesses etc. No further details after 12/1649. 508 Group of women appear to have been named by Janet Fairlie (C/EGD/1607). They were investigated and presbytery advised they were examined by the pricker. They were all &#39;glad&#39; to be examined this way, according to the KS. They were imprisoned and kirk session requested witnesses etc. No further details after 12/1649. 509 KS noted that she had been accused of witchcraft and wanted to refer her to the civil magistrate, but I think she went to the presbytery first. The presbytery suggested that she should be examined for the mark and by 21/12 KS noted that they were sending someone to Tranent for the man there who searches for the mark. 510 511 512 513 514 515 516 517 confession attested. 518 Husband complained to Dalkeith KS that she had been slandered as a witch because she was associated with an accused witch (Agnes Lasson) who had died in prison. He put up 500 merks but KS referred her/case to civil magistrate. 519 No details but note that she was imprisoned in the tolbooth for witchcraft. 520 Note in KS that she was imprisoned and parishioners asked if they have any evidence against her. 521 Accusations brought before the KS. Later she was named be another confessing witch (Issobell Fergussone C/EGD/381), was searched for the mark and then imprisoned to await further trial. No more details 522 Named as a witch by John McMullan (a confesing warlock). They were searched for the mark. 523 Was named by a confessing warlock, John McMillan, and was then searched for the mark. Does not appear to have confessed. 524 Was named by a confessing warlock, John McMillan and searched for the mark. Imprisoned to await further trial. No further details. She denied that she had anything to do with him or the devil. 525 Named by a confessing warlock, John McMillan. She was searched for the mark and imprisoned, to await further trial. No more details. She denied the accusations. 526 Appears to have confessed to a KS and named several woman as witches. 527 KS recorded charges made by a neighbour. The women denied them and agreed to be pricked as evidence of their innocence. They were found to be clean and so charges appear to have been dropped. They then brought accusation of slander against their accuser. 528 confession attested. 529 Charges against them were investigated by the KS. They all denied them and requested that they be searched to prove their innocence. They were found to be clean and therefore the charges seem to have been dropped. They then brought accusations of slander against their accuser. 530 Charges brought by neighbour investigated by the KS. They denied them and agreed to be searched to prove their innocence. They were found to be clean and charges appear to have been dropped. They then brought charges of slander against their accuser. 531 532 KS noted that she had confessed. No further details. 533 Commission for trial issued after parliament received supplication from the General Assembly. She had been named by several others who were executed for witchcraft. 534 The kirk session had attested her depositions. 535 536 537 Had been named by another person who was burnt for witchcraft. Presbytery investigate but find nothing in the records. Requested advice from GA and asked local congregations for info. ?no further action. 538 Had been denounced by another person who was burnt as a witch. Presbytery found nothing in their records but did request minister to get advice from the GA. Requested information from congregations but ?anything further 539 confession attested by presbytery. 540 KS reported to have investigated accusations of malefice. She denied charges. Presbytery then decided that she had not been sufficiently cleared by KS and was to be called before the ministers.?if this ever happened. 541 KS recorded as having investigated accusations. Presbytery noted that she had not been sufficiently cleared and called her to appear before the ministers. She denied charges. Eventually the ministers asked the provost/baillies of Cupar to take her off their hands and imprison her. They refused. The presbytery wanted to apply to Committee of Estates for commission. 542 Presbytery noted that she had made a voluntary confession and ordered her to appear - no further details. 543 Investigated by KS and presbytery. Witnesses interviewed but decided there was nothing in the charges and she was absolved. 544 Presbytery ordered ministers to interview suspect. 545 Parish minister requested information about her. 546 Presbytery requested local ministers to make inquiries about the suspect. 547 Parish minister complained to presbytery and they decided that it was superstitious charming. 548 Minister reported that she had been imprisoned and tortured but was near death. Wanted advice for next stage. Referred to the next meeting but no further reference/details -?died. 549 Parish minister reported suspect to presbytery. Committee of other ministers were to investigate. 550 confession attested by presbytery. 551 Ordered to be brought for questioning. 552 Ordered to be brought for questioning after being named. 553 Presbytery ordered her to be brought for questioning after being named. 554 Named by a confessing suspect. 555 Parish minister reported her to the presbytery. Ministers appointed to question her and bring her to confession. She appears to have made one confession to Mr Edward but refused to make any more. Referred to local magistrates to get commission. Magistrate said there were no grounds. Mr Edward then reported she had died in prison. 556 Was accused of tormenting a boy. Was held in prison and questioned by ministers. She was named by others but denied her involvement. 557 Accused of causing a boy to take fits. She appears to have confessed and named others. 558 Accused of causing a boy to take fits. The baillies of Pittenween asked the ministers to investigate and question them. She appears to have confessed and named others. 559 Accused by Patrik Morton. Baillies of Pittenweem asked the ministers to question the suspect. She was confronted by one of the confessing witches but denied the charges. 560 Presbytery asked by local baillies to question the suspects. Laying (Laing) confessed to a number of things. She eventually got the protection of the government on 1 May 1705 when she wrote to the Privy Council detailing her ill treatment by the towns people and by the magistrates. 561 confession attested by presbytery. 562 563 564 565 566 567 568 Her 1649 confession was attested to by the minister and some elders. The presbytery verified the confession and applied for a commission from the Committee of Estates. 569 570 571 572 confession attested. 573 574 575 Imprisoned by Earl of Haddington, who reported that they had been searched and some had confessed and named others. Petition to parliament from Earl of Haddington. He claimed that witchcraft was increasing in his lands and had imprisoned the suspects. He also claimed that two of them were accused of robbery as well. 576 Earl of Haddington imprisoned the suspects and appears to have had them searched. Some of them confessed and named others. Petition to parliament from Earl of Haddington. He claimed that witchcraft was increasing in his lands and had imprisoned the suspects. He also claimed that two of them were accused of robbery as well. 577 confession attested by presbytery. 578 presbytery attested his confession. 579 Presbytery attested her deposition. 580 Presbytery attested her deposition. 581 Presbytery attested her deposition. 582 Presbytery attested his confession. 583 Presbytery attested deposition. 584 Earl of Haddington had her arrested and searched. Marks were found and some of the accused appear to have confessed and named others. Petition to parliament from Earl of Haddington. He claimed that witchcraft was increasing in his lands and had imprisoned the suspects. He also claimed that two of them were accused of robbery as well. 585 Presbytery attested deposition. 586 Earl of Haddington imprisoned the suspects for 10 weeks, had then searched. Claimed that some confessed and named others.Petition to parliament from Earl of Haddington. He claimed that witchcraft was increasing in his lands and had imprisoned the suspects. He also claimed that two of them were accused of robbery as well. 587 Earl of Haddington had suspects imprisoned for 10 weeks. They appear to have been searched, some of them confessed and named others. Petition to parliament from Earl of Haddington. He claimed that witchcraft was increasing in his lands and had imprisoned the suspects. He also claimed that two of them were accused of robbery as well. 588 The suspect had been named but had not been apprehended. Petition to parliament from Earl of Haddington. He claimed that witchcraft was increasing in his lands and had imprisoned some of the suspects. He also claimed that two of them were accused of robbery as well. 589 Cathie had been named but had not been apprehended or searched by 4/1661. Petition to parliament from Earl of Haddington. He claimed that witchcraft was increasing in his lands and had imprisoned the suspects. He also claimed that two of them were accused of robbery as well. 590 Pilmure had been named but had not been apprehended or searched by 4/1661. Petition to parliament from Earl of Haddington. He claimed that witchcraft was increasing in his lands and had imprisoned the suspects. He also claimed that two of them were accused of robbery as well. 591 Petition to parliament from Earl of Haddington. He claimed that witchcraft was increasing in his lands and had imprisoned the suspects. He also claimed that two of them were accused of robbery as well. She had not been apprehended by 3/4/1661. 592 Suspect had not been apprehended by 3/4/1661. Petition to parliament from Earl of Haddington. He claimed that witchcraft was increasing in his lands and had imprisoned the suspects. He also claimed that two of them were accused of robbery as well. 593 Petition to parliament from Earl of Haddington. He claimed that witchcraft was increasing in his lands and had imprisoned the suspects. He also claimed that two of them were accused of robbery as well. Suspect had not been arrested by 4/1661 but commission for trial by 5/1661. Deposition attested. 594 Suspect had not been arrested by 3/4/1661. 595 She had not been apprehended by 3/4/1661. 596 presbytery attested confession. 597 598 It was claimed the suspect had confessed to pact and renunciation of baptism. 599 The suspects had been delated for witchcraft but does not appear to have been investigated by this date. 600 The suspects had been delated for witchcraft but does not appear to have been investigated by this date. 601 The suspects had been delated for witchcraft but do not appear to have been investigated by this date. 602 603 604 605 606 607 Presbytery attested her confession. Parliament approved the suspension of the process, 31/5/1650. 608 609 The accused was already dilated guilty and had been apprehended. 610 The accused was already dilated guilty and had been apprehended. 611 The accused was already dilated guilty and was apprehended. 612 The accused was already dilated guilty and was apprehended. 613 The accused was already dilated guilty and was apprehended. 614 The accused was already dilated guilty and was apprehended. 615 616 617 deposition attested. 618 619 620 621 622 623 624 No details of outcome but she was still alive in 1678, when she was confronted by another accused witch. 625 626 627 presbytery attested confession. 628 629 630 631 632 633 634 635 636 Note in APS about a report from the commission for Isobel Alexander, imprisoned for witchcraft. 637 Presbytery attested her deposition. 638 Presbytery attested her confession. 639 deposition attested by presbytery. 640 Presbytery attested confession. 641 Order to her son to bring her to Edinburgh to be examined, on pain of payment of 30, 000 merks. 642 643 644 645 The accused had been named by another suspect and was held prisoner. She agreed to be searched by Kincaid. Presbytery to pursue a commission. 646 647 Presbytery attested confession 648 Presbytery attested confession 649 650 Presbytery attested confession. 651 confession attested by the presbytery 652 Confession attested by the Presbytery 653 654 Referred to civil magistrate by presbytery, 5/1/1659. Interrogated at Stenton. And in the tolbooth of Dunbar at a JP quarter session 23/1/1659. She was &#39;seriously exhorted&#39; to tell the truth about her relations with the Devil. She denounced many people who she then confronted at the next interrogations. The JPs held interrogations on 8/2/1659 and she confronted the 5 people she denounced. 655 Named by 4 others and imprisoned, but fled to Kilmarnock. Rearrested in 1673.The 4 others are not named but are recorded as having been executed in 1662. 656 Julian Goodare checked the burgh court book and noted that she was cautioned to appear. 657 Julian Goodare checked the burgh court book and noted that she was cautioned to appear. She was identified by Agnes Ewying ?whether she was another witch or a witch identifier. 658 Julian Goodare checked the burgh court book and noted that she was cautioned to appear. He was identified by Agnes Ewyng ?was she another witch or some sort of identifier of witches. 659 Julian Goodare checked the burgh court book and noted that she was cautioned to appear. She was identified by Agnes Ewyng -?another witch or some sort of witch identifier. 660 Note that she was cautioned to appear. 661 Note that she was cautioned to appear. 662 Note that she was cautioned to appear. 663 Note that she was cautioned to appear. 664 Note that she was cautioned to appear. 665 Note that she was cautioned to appear. 666 Note that she was cautioned to appear. 667 Note that she was cautioned to appear. 668 669 Synod desired the civil magistrate to apprehend and imprison her. 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 No details about the trial or process, just that he failed to appear before James VI at Holyrood. 726 727 728 729 730 No details, process note only. 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 No details. 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 Investigated by kirk session between 19/9/1649 and 3/10/1649. Entry indicated that she was to be tried but no details. 764 The KS interviewed witnesses about a claim of witchcraft. They reported that she had not done anything that made them suspect she was a witch. They said she was poor, honest and hardworking. The KS dismissed the case as slander and the two who had reported her were to make repentance for slander. 765 766 Very few details apart from several entries about different people appointed to investigate.There are no entries after 19/8/1613. Possibly the case dropped after 19/8/1613. 767 No details of who requested commission. Note in presbytery to remit the accused appears after commission granted so probably not requested by church authorities. Confessed pact but no other information. 768 No details about who requested commission but note in presbytery is later than the date of commission so probably not requested by church authorities. Presbytery noted that the accused was to be remitted to the commissioners. Pact confessed. 769 No details about who requested commission but note in presbytery is later than the date of commission so unlikely that they requested it. Presbytery note that accused was to be remitted to the commissioners. Pact confessed. 770 Initial commission ordered for witchcraft but later trial for murder was added at request of 2 families. Presbytery minutes note accused confessed to witchcraft and paction with the devil. 771 Initial trial for witchcraft extended to include accusation for murder at request of families. Accused confessed to witchcraft and paction with the devil. Presbytery note that confession made and trial to be held. 772 Presbytery noted that accused had confessed and she was to be remitted to the commissioners appointed. 773 Note in presbytery that accused has confessed to witchcraft, charming and paction. No details of accusations. 774 Few details in presbytery minutes but accused had confessed to witchcraft, pact and charming. 775 2 commissions granted to try accused. Presbytery minutes record the accused had confessed to witchcraft, paction and charming. 776 2 commissions for trial issued.Presbytery notes that accused confessed to witchcraft, paction and charming. No other details. 777 2 commissions issued but nothing about who requested them. Presbytery minutes record that accused had confessed witchcraft, paction with the devil and charming and was to be remitted to the named commissioners. 778 2 commissions issued but no details about who applied for them. Presbytery minutes record that the accused has confessed to witchcraft, paction and charming but no other details. Accused to be remitted to the commissioners for trial. 779 Commission granted for assize to try for witchcraft. Presbytery minutes record that accused thought to be guilty of witchcraft and assize to be held. Mr Patrick Turnour requested brethren to attend. 780 Note in presbytery minutes that accused was to stand trial as guilty of witchcraft and Mr Patrick Turnour requested brethren to attend assize. 781 Record of commission for trial. Presbytery note that accused is to be tried and brethren requested to attend the assize. 782 Record of commission for trial. Presbytery minutes record that trial to be held and brethren requested to attend the assize the next day. 783 Record of commission issued. Presbytery minutes record trial to be held and brethren requested to attend the assize. 784 Note of commission for trial. Presbytery minutes note 3 ministers to be sent to attend the presentation of the accused at Penicuik. 785 Commission issued for trial. Presbytery minutes note that 3 ministers were to attend the assize in Penicuik. 786 Records the commission issued. Presbytery notes that 3 ministers are to attend the trial in Penicuik. 787 Record of commission for trial. Commission to arrest only mentioned in presbytery minutes. 788 Record of commission for trial. Presbytery referred to another warrant for arrest but no details. 789 Presbytery note that accused was to be arrested and requested help with this. No record of arrest but later commission for trial issued by privy council 790 Presbytery note that accused is to be arrested on warrant from council, they requested help with this. 791 Presbytery referred to a warrant for her arrest and also requested the help of the Laird of Braid for the arrest (or possibly for the warrant request). 792 Presbytery request help to apprehend the suspect. 793 Commission issued for trial. Presbytery recorded execution but no details. 794 Commission for trial issued, presbytery records execution witnessed by minister but no details about trial. 795 No details of commissions for trial etc. 796 Presbytery requested help from &#39;guidman of Kekmure, bailie of Crichton&#39; to keep fast the accused. He is not named. The accused is recorded as having confessed herself a witch. 797 Commission recorded in RPC, presbytery notes that they are to assist the commissioners in carrying out the orders of the council. Names individual commissioners but also the moderator and brethren of the Dalkeith presbytery as a group, not individually. No record of the suspects being arrested or warded. 798 Commissions noted in RPC. Presbytery minutes record that the brethren are ordered to assist the commissioners to fulfil the orders of the council. Commissioners are named individually but the moderator and brethren of the whole presbytery are involved as a group. No record/details of arrest etc. 799 Record of commission issued to individual commissioners and also the moderator and brethren of the whole presbytery of Dalkeith. They are ordered to assist the commissioners follow the council orders. No record of commission for trial. 800 Commission issued to named commissioners and also the whole of the Dalkeith brethren as a group. Presbytery minutes record that they are ordered to assist the commissioners in carrying out the council&#39;s orders. No record of commission for trial or of any arrest. 801 Issued to named commissioners and the brethren of the presbytery of Dalkeith. The presbytery note that they are to assist the commissioners in carrying out the orders of the council. No record of arrest. 802 Record of commission in RPC issued to named commissioners and also the whole of the brethren of the Dalkeith presbytery. The presbytery minutes record that they are to assist the commissioners in carrying out the orders of the council. No details of any arrest. 803 Commission issued to named individual commissioners but the whole brethren of the presbytery of Dalkeith are ordered to assist them. No record of any arrest etc. 804 No details of pre-trial actions 805 Presbytery note that the accusations against the suspect were confirmed and the depositions were to be subscribed in their name and sent to the bishop. 806 Presbytery requested that the bailie of Dalkeith ward the accused. Later referred to bishop who decided there was nothing in the case and ordered her release. She was ordered to abstain from cursing and &#39;evill speaking&#39; in the future. 807 Presbytery noted that the case is to be referred to the civil magistrate, but no other details. Accused had confessed to the crimes of sorcery and witchcraft. 808 Presbytery noted the complaint about sorcery and witchcraft and decide that the case should be referred to the civil magistrate, but no further details. Accused had confessed. 809 Presbytery referred to PC as accused had confessed demonic pact to her local minister and elders. 810 Accused confessed demonic pact to local minister and presbytery referred matter to the lords of council. 811 Presbytery minutes record that accused had confessed to witchcraft to her local minister and confirmed her statement to the presbytery. They decide there are sufficient grounds for seeking a commission for further trial probably from Committee of Estates, not PC. 812 Presbytery investigated and decided to refer case for further trial. Accused confessed. 813 Presbytery investigated and decided to request commission for further trial. 814 Presbytery investigated accused&#39;s confession and decided to request commission from Committee of Estates 815 Presbytery investigated and decided to request commission for further trial. 816 Presbytery confirmed the confession of witchcraft and commission was to be requested, possibly from the Committee of Estates 817 Presbytery minutes record that accused&#39;s confession was attested and that a commission for further trial was to be requested, possibly from Committee of Estates 818 Presbytery minutes record that accused&#39;s confession was confirmed and that commission was to be requested. From the Committee of Estates. 819 Confession attested by the presbytery and a commission was to be requested probably from the Committee of Estates. 820 Presbytery note that accused had confessed and that commission for further trial was to be requested. 821 Presbytery note that accused had confessed witchcraft and commission for further trial was to be requested. 822 Presbytery note that that accused had confessed witchcraft and that a commission for further trial was to be requested. 823 Presbytery note accused had confessed witchcraft and commission for further trial was to be requested. 824 Presbytery noted that the accused had confessed to witchcraft and a commission for further trial was to be requested. 825 Presbytery note that accused had confessed and that commission for further trial was to be requested. 826 Note in presbytery minutes that accused had fled from justice after being named by 9 confessing witches. No other information 827 Presbytery note that the accused had confessed to witchcraft and that a commission was to be requested. 828 Accused had confessed and presbytery was to request commission for further trial. 829 Note in presbytery minutes that the accused had confessed witchcraft and a commission was to be requested. 830 First accused in 1632 but pleaded that it was a case of mistaken identity. Local minister to make inquiries but nothing after 3/5/1632. Later note (1649) in presbytery that accused had fled justice. Case referred to synod who recommend circulating details about accused to the different prebyteries. Case also to be referred to General Assembly for circulation of details throughout the kingdom so that he can be apprehended 831 Presbytery notes that confession read and attested. 832 Presbytery minutes note that the confession was attested. 833 Presbytery note that confession attested. 834 Deposition attested by presbytery. 835 Presbytery attested her confession 836 Presbytery attested her confession of witchcraft. 837 Presbytery minutes record that confession of witchcraft was attested. 838 Presbytery minutes record that her confession was attested. 839 Presbytery attested confession of witchcraft. 840 Presbytery attested confession of witchcraft. 841 Presbytery attested confession of witchcraft. 842 Presbytery attested confession of witchcraft. 843 Presbytery attested confession of witchcraft. 844 Presbytery attested confession of witchcraft. 845 Presbytery attested confession of witchcraft. 846 Presbytery attested confession of witchcraft. 847 Presbytery attested her confession of witchcraft. 848 Presbytery attested confession of witchcraft. 849 Presbytery attested confession of witchcraft. 850 Presbytery attested confession of witchcraft. 851 Presbytery appointed ministers to investigate the confessions. 852 Presbytery note that ministers appointed to investigate confesssions. 853 This may have not been a central trial.The only document is a confession included in docs for other Duddingston witches which was not signed by witnesses and may have not been vaild. 854 The only document is a witnessed confession by the accused in process notes for Duddingston witches. Searched for devil&#39;s mark. 855 Central trial possible as process notes include his confession to pact. 856 857 858 859 860 There may have been a central trial, process notes include her confession. 861 May have been central trial as confession included in process notes. No torture used. 862 863 Note about confession in process notes 864 865 866 867 868 869 870 To be tried by the magistrates of Edinburgh and bailies of Canongate. She was in prison by at least 10/1661. 871 It appears that the accused, with 2 others, was held in Stirling tolbooth until 1661 when another trial was ordered. The first trial at Stirling had material errors and it was ordered to be deleted from the Books of Adjournal. 872 873 JPs to put her to liberty on 8/1/1659 until she stood trial. One witness testified that a misfortune was probably not due to witchraft. 874 875 She was first arrested in 9/1658 and eventually released on 28/12/1658 due to illness (bloody flux). She was then rearrested and released on bail. Testificate (solemn declaration in writing) described her appalling jail conditions (JC26/26). The order from the Privy Council to release her from prison was addressed to the JPs of Clackmannanshire. She was then tried in the circuit court and tried again later. 876 Accused appealed to PC about her long imprisonment. 877 878 879 880 881 882 883 884 885 886 887 few details, case referred to presbytery and accused interrogated and denied all accusations. 888 No trial details apart from entry in presbytery noting that the accused was fugitive in 11/1661. 889 No other details apart from an entry in the presbytery records noting that the accused was fugitive. 890 No details about witchcraft accusation in presbytery minutes. Only entries related to his scandalous carriage. Last entry notes that he was imprisoned under accusation of witchcraft. Commission for arrest issued to sheriff and depute in Edinburgh to bring him to the tolbooth to await trial. He was put under caution by the High Court on 13/9/1678 to appear for trial when summoned. 16/10/1678 he was ordered to be arrested for a trial on 2/12/1678. On 13/1/1679 he was ordered by the High Court to be released from the Edinburgh tolbooth on caution. He wanted to be released because he was a &#39;weak and tender old man.&#39; 891 Only local investigation at presbytery level took place. Accused was interviewed and questioned about her healing knowledge and confessed that she cured people. The parish and baillies requested advice from presbytery who decided that the cost of imprisonment and trial was too expensive and as she was not a local then they would simply banish her. 892 Note in presbytery records that she is to be incarcerated until 3000 merks found to pay her bail. 10/1/1616 referred to sheriff of Linlithgow to request commission 893 894 Few details. Mr Richard Dickson was ordered by the presbytery to provide more evidence. Later entries (1632) record further investigations and note that she was to be kept in ward, location not specified. 895 Presbytery note that people were frightened to appear against her so they sent a request to Lord Linlithgow to have her imprisoned. No specific details whether this happened. No other information apart from complaint from accused against one witness for slandering her as a witch. 896 Note in presbytery that brethren and provost were to try to obtain a warrand for trial and assize from the privy council. RPC records date of her confession. 897 Presbytery minutes record that a commission from the PC was to be requested 31/1/1644. No details if this happened. 898 Note in presbytery minutes that accused held in prison accused of witchcraft. Brethren were to assist in requesting commission from PC for an assize, 20/12/1643. 899 Note in presbytery that accused held in prison and commission from PC was to be requested, 20/12/1643. 900 Note in presbytery minutes that accused was held in prison and that commission for assize was to be requested from PC, 20/12/1643. 901 Note in presbytery that accused was held in prison and that the brethren were to request a commission for an assize from PC, 20/12/1643. 902 Note in presbytery that accused was in prison and the brethren were to apply for a commission for assize, 20/12/1643. 903 Presbytery records note that the accused was held in prison and that the brethren were to request a commission from the PC, 20/12/1643. 904 Note that Ephraim Melvill had named her as a witch and the brethren recorded that she should be imprisoned, 27/3/1644. Later reference that she confessed to Melvill and Samuel Wilsone (baillie). 905 Note in presbytery that she was accused but denied all accusations. 906 907 908 Local minister asked the presbytery to apply to PC for commission. 909 Note that local minister has named her to the presbytery, but further investigations needed. 910 Note that she has been imprisoned and had confessed to local kirk session, presbytery to request commission from PC. 911 Confession read to presbytery on 15/3/1648, commission to be requested but no other details. 912 No details about trial, presbytery pass the matter back to the local minister. He is told to deal with the civil magistrate himself. 913 Presbytery entry records that she had confessed to several points and that the matter was to be referred to the &#39;judge competant&#39; to get a commission to put her to assize. They decided that this was enough evidence to move ahead. 914 Note in presbytery that she had been named as a witch and was mala fama. The matter was to be referred to the Laird of Ingliston. 915 Entry in presbytery records that accused had been named and the grounds were sufficient to refer the matter to the Laird of Ingliston(?). No other details. She was mentioned as a witch in a later trial (1661) but it is not clear if she was still alive then or not. 916 Note in presbytery that accused had confessed and the matter was to be referred to the &#39;judge competent&#39; for commission but no other details about case. He was mentioned in a trial in 1661 but not clear if he was still alive then. 917 Note in presbytery that accused had confessed and that the matter was to be referred to the &#39;judge competent&#39; for a commission. No further details. 918 Entry in presbytery minutes notes that the accused had confessed and the matter was to be referred to the &#39;judge competent&#39; for a commission for assize. No further details. 919 Presbytery minutes record that the brethren have been advised to go to parliament, privy council or the committeee of estates to get a commission. 920 The bailies and minister were ordered to appear before the PC to explain why she had not been tried, 8/8/1644. Later they were ordered to release Young, 20/4/1644. No further details about trial or outcome. 921 922 923 No pre-trial or trial details. 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 Commission to report to PC for further instructions and examination to be carried out within 15 days after the apprehension of the suspect. 952 953 Dalgleish recorded as fugitive in 1643 and had been in trouble 5 years before. 954 Presbytery record complaint by minister and investigate case. Witnesses and accused nterviewed by ministers.Twedy refused to confess. Case referred to GA. Twedy was not mentioned in the Committee of Estates commission of justiciary with the rest of those accused with her. She was named in her own commission. 955 Presbytery heard witness statements. Accused denied charges. Decide to refer case to GA. Commission from CoE issued as recorded by presbytery. She eventually made a confession which included references to covenant etc and naming other people. Later Biggar presbytery wanted her brought to confront those persons she named. The committee of estates ordered that she be brought around to confront all the people she denounced in the presbytery and town of Biggar. 956 957 Named by Janet Coutts and appears to have confessed to presbytery. 958 959 Named by Janet Coutts and confessed to presbytery. Confronted by Bessie Eumond. 960 Note in presbytery about her confession and confronting of Marion Watsone. 961 962 Presbytery heard report of his confession and naming of other witches 963 964 Held in prison with others and confessed to meeting the devil. 965 966 967 968 969 970 Note in presbytery that commissioner requested ministers to attend the accused and encourage him to confess and then to prepare him for death. No details about confession 971 Note that accused was held in Peebles and commissioners requested ministers to hear her confession and prepare her for death. No further details 972 Note in Edinburgh presbytery (1708) implied that she had been released or escaped. Letter to presbytery from Patrick Couper (minister, Pittenweem) reported she had confessed but then retracted. 973 Presbytery referred case back to kirk session to get more evidence before they would pursue it further. No further information about what happened. The presbytery said they would pursue it with the magistrates if more evidence was found by the Kirk session. 974 975 976 Order from Privy Council to transfer the accused from Ayr to her trial in Edinburgh, 2/3/1682. To be imprisoned in tolbooth in Edinburgh. 977 Taken prisoner by local bailie and others and subjected to torture. Appealed to Privy Council and ordered to be released. Those involved in torture were questioned by Privy Council but only the witch pricker (David Cowan) was punished. John Rutherford was ordered not to seize any suspects without warrant. 978 Commission to put accused to trial from Privy Council 979 Commission to put accused to trial from Privy Council 980 Commission to put accused to trial from Privy Council 981 Commission to put accused to trial from Privy Council 982 Commission for trial issued. 983 commission for trial issued. 984 commission for trial issued. 985 commission for trial issued 986 commission for trial issued 987 commission for trial issued 988 Local laird and others requested permission for local trial which appears to have been refused. They were tried eventually in Edinburgh. 989 Warrant for execution issued. Local laird and others requested permission for local trial which appears to have been refused. They were tried eventually in Edinburgh. 990 Warrant for execution issued. Financial accounts demonstrate that the local laird and others had attempted to obtain commission to hold the trial locally. These appear to have been refused and the trial was eventually held in Edinburgh. She was confronted by Marion Campbell. 991 Execution ordered. Financial accounts demonstrate that the local laird and others had requested commissions for local trial which were refused. The trial appears to have been held in Edinburgh. She was confronted by Marion Cambpell, she denied all the charges. 992 993 Commission for trial issued but suspect had already been imprisoned. The commission specified that no torture was to be used. Text of the commission in JC10/4 994 Commission for trial issued although suspect had already been imprisoned in Paisley. Later ordered to be moved to Glasgow. Archbishop was requested to recommend ministers to pray with the accused. The text of the commission is in JC10/4. The commission specified no use of torture. 995 Commission for trial issued although suspect already imprisoned. Commission specified no use of torture. Text of commission in JC10/4. 996 Comission for trial issued although suspect had already been imprisoned. Text said no use of torture. The trial text is in JC10/4 997 Commission for trial issued although suspect already imprisoned. Commission specified no torture. The text is in JC10/4. Weir escaped from prison and fled to the parish of Carmanack (?Kilmarnock) where she pretended to be Bessie Aikin, married to a man named Chrystie in Glasgow. 998 Commission for trial issued although suspect already imprisoned 999 commission to try accused issued to provost and baillies of Haddington and other named commissioners. Commission stressed that no torture to be used. She had already been imprisoned. 1000 Commission for trial issued although suspect already imprisoned. To be conducted without any torture. 1001 Commission for trial issued although suspect already imprisoned. To be conducted without any torture. 1002 Commission for trial issued although suspect already imprisoned. To be conducted without any torture. 1003 Commission for trial issued although suspect already imprisoned. To be conducted without any torture. 1004 Commission for trial issued although suspect already imprisoned. To be conducted without any torture. 1005 Robert Douglas requested commission for trial at public expense or for the release of the accused. Magistrates lodged another request for release on 19/7/1677 as they had been in prison for 15 weeks. Commission issued to examine the prisoners. 1006 PC record supplications from Robert Douglas 5/7/1677 and the magistrates of Stirling 19/7/1677 complaining about the cost of keeping the suspects in prison. They had been in prison for 15 weeks. They want a trial at public expense or release of the prisoners. Commission granted to examine them on 19/7/1667. They were examined and the charged were deemed malicious, and they were released. 1007 Supplication to PC from Robert Douglas on 5/7/1677 to either release suspects or hold trial at public expense. Later supplication from magistrates in Stirling requesting release of prisoners as costing too much to hold them. They were held for 15 weeks. Commission to examine the suspects issued. There is an undated warrant for setting Thomas and Mary Mitchell and other witches at liberty. 1008 Supplications to PC from Robert Douglas and Stirling magistrates complaining about cost of keeping suspects in prison. They were held in prison for 15 weeks. They want to hold trial at public expense or release the suspects. Commission to examine them issued. They were examined and released. An undated warrant for their release exists. 1009 Complaint from accused to PC that she had been wrongfully imprisoned for 3 months on the word of a woman executed for witchcraft. PC issue renewal of commission to examine, try and judge the accused and others who were not named. 1010 Commission to try and judge the accused although she was already held in prison. PC stress that no torture to be used. According to JC26/50 torture was used. 1011 Commission to try the accused but PC stress no torture to be used. Suspect already in prison. Torture was used according to JC26/50. 1012 Commission to hold trial although suspect already imprisoned either in tolbooth or castle. 1013 Commission to hold trial although suspect already imprisoned in either tolbooth or castle. 1014 No specific details, only entry in kirk session that before her execution she named those who had consulted her. 1015 Commission to hold trial although accused already imprisoned in either the tolbooth or castle. 1016 Commission for trial issued although accused already imprisoned in the tolbooth or castle at Scalloway. 1017 Few details about the case but the presbytery entry notes that a commission against the accused had been issued as early as 1/6/1650 and that she had been fugitive. 31/12/1661 the presbytery with the laird of Langton, Archibald Cockburn, refer the case to the sheriff depute. No more details in the presbytery records. 1018 Commission to hold trial issued although suspect already imprisoned. No torture to be used. 1019 Commission for trial issued although suspect already imprisoned in Aberdeen. 1020 Commission for trial issued although suspect already imprisoned in Aberdeen. 1021 Commission for trial issued although accused already imprisoned. 1022 Commission for trial issued although suspect already imprisoned. 1023 Commission issued although suspect already imprisoned 1024 Commission to hold trial issued, accused imprisoned already. 1025 Commission issued although suspect already imprisoned. 1026 Commission for trial issued, although suspect already in prison. 1027 Suspect already imprisoned in tolbooth before commission issued. 1028 1029 1030 1031 Commission 12/1664 for local trial. Had been taken to Edinburgh for central trial but then returned to Stirling for local trial. Claimed that she was also held in Dunblane. Held in prison for over a year and she appealed to PC to order her trial or release. In 1666 further commission ordered trial to be held by 10/1666. 31/1/1667 Drummond again appealed to PC saying that her accusers had refused to attend the trial. The high court books of adjournal deserted her diet and ordered the case remitted back to the locality. 1032 Reference to her being in the tolbooth in Dalkeith. 1033 First commission for trial issued in 1662. There may never have been any trial. Appeal from accused to PC to order her trial as she had already been imprisoned for several years by 1/1666. 1034 Suspect imprisoned before commission issued. Committee of ministers to question her. 1035 Suspect imprisoned before order for trial issued. 1036 Suspect imprisoned before commission for trial issued. 1037 Commission for trial issued after suspect imprisoned. 1038 Commission for trial issed after suspect imprisoned. 1039 Commission for trial issued after suspect imprisoned. 1040 Commission for trial issued after suspect imprisoned. 1041 Commission for trial issued after suspect imprisoned. 1042 Named by Alexander Hamilton and ordered to be brought to Edinburgh and confront him.Other commissions chart the legal process from investigation, appeal for local imprisonment and local trial. Appeal from suspect and three others objecting to a local trial and questioning the competency of the local commissioners. Appeal rejected although on sheriff of Haddington to be involved. 1043 Commission for trial issued after suspect imprisoned. 1044 commission for trial issued although suspect already imprisoned. 1045 suspect imprisoned before commission for trial issued. 1046 suspect imprisoned before commission for trial issued. 1047 To be apprehended (20/4/1608) but no further details 1048 No details apart from investigations by the church. No outcome or further referral recorded. 1049 Her depositions were attested to by the minister of Preston and &#39;revised&#39; by the presbytery of Haddington. 1050 The suspect was watched and warded and the searcher from Tranent was requested to examine her. Mr John Lauder noted that the council issued a commission to hold an assize but no other evidence for it. 1051 Mr John Lauder noted that the suspect was watched and warded and that the searcher from Tranent examined him. The minister also noted that a commission to hold an assize came from the council but no other evidence for this. 1052 Charts legal process and commissions for different reasons at different stages. Appeal from accused and three others against having local trial. Questioned the competency of local commissioners. Appeal denied but only Sheriff of Haddington to be involved. 1053 The presbytery considered the case over several months before referrring it to the magistrate in Jedburgh. No further details. 1054 No official permission to hold trial appears to have been granted to the church authorities. 1055 No official permission to hold trial appears to have been granted from central authorities. 1056 PC records that accused had confessed before commission issued. 1057 Legal process charted from preliminary investigation after naming by Hamilton, orders for further investigation, request for permission to arrest and commission for local trial. Appeal from accused and three others against having local trial. Questioned the competency of local commissioners. Appeal denied but only Sheriff of Haddington to be involved. 1058 Accused recorded as having confessed before commission issued. 1059 Accused noted as having already confessed to her crimes. 1060 Commission appears to have been issued after the accused had confessed tp witchcraft, pact and renunciation of baptism. 1061 Commission appears to have been issued after accused confessed to witchcraft, demonic pact and renunciation of baptism. 1062 Accused appears to have confessed before commission issued. 1063 Commission issued after the accused had confessed. 1064 Commission issued after the accused had confessed. 1065 Commission appears to have been issued after the accused had confessed. 1066 Commission appears to have been issued after the accused confessed to pact 1067 Commission to bring her to Edinburgh to confront Alexander Hamilton. Later commissions cover futher investigation, request for warding and finally for trial. Appealed to Privy Council to change the location of their trial to Edinburgh, rather than Haddington. Questioned the competency of the local commissioners. Appeal denied. 1068 commission appears to have been issued after the accused had confessed. 1069 Commission issued after the accused had confessed. 1070 Commission issued after some in the group had confessed to pact and renunication of baptism. Others were still only suspected of the crime. Does not state where imprisoned. 1071 Commission issued after some in the group had confessed to pact and renunication of baptism. Others were still only suspected of the crime. Place of imprisonment not stated. 1072 Commission issued after some in the group had confessed to pact and renunication of baptism. Others were still only suspected of the crime. No location stated for imprisonment 1073 Commission issued after some in the group had confessed to pact and renunication of baptism. Others were still only suspected of the crime. No location for imprisonment recorded. 1074 Commission issued after some in the group had confessed to pact and renunication of baptism. Others were still only suspected of the crime. No location of imprisonment recorded. 1075 Commission issued after some in the group had confessed to pact and renunication of baptism. Others were still only suspected of the crime. Imprisonment details not recorded. 1076 Commission issued after some in the group had confessed to pact and renunication of baptism. Others were still only suspected of the crime. No details about imprisonment recorded. 1077 Commission issued after some in the group had confessed to pact and renunication of baptism. Others were still only suspected of the crime. Imprisonment details not recorded 1078 Charts PC involvement ordering confronting, investigation and arrest. Hepburne complained to PC about unlawful arrest. After consideration and payment of bail she was ordered to be released and to appear later (no date or details) to answer the charges against her. 1079 Recorded as having confessed to pact and renunciation of baptism but no specific details about confession. 1080 Commission issued after the accused had confessed to pact and renunciation of baptism, but no other details of confession. 1081 Had been slandered by another woman. Presbytery questioned both but decided to take no further action. 1082 PC notes that the accused had already confessed to the crime of witchcraft. 1083 PC records that the accused had confessed to the crime before commission for trial issued. 1084 Commission issued after the accused had confessed to the crime of witchcraft. 1085 Commission issued after the accused had confessed to the crime of witchcraft. 1086 Commission issued after confession made. Commission stressed that no torture to be used. 1087 Commission issued after the accused had confessed. No torture to be used. 1088 Commission issued after accused had confessed but for further trial, no torture to be used. 1089 1090 Commission ordered the release of accused until a later trial might be held, but no date for this mentioned. Later another application for release from Eyemouth granted. 1091 RPC (1/4/1662) indicates that local men imprisoned and carried out punishment illegally, for which they were later reprimanded. 1092 No details about accusation but accused had already confessed. Later (1/4/1662) PC express concern about illegal imprisonment and punishment and reprimand those men involved. 1093 No details of accusation but accused had already confessed to witchcraft before commission issued. Later PC (1/4/1662) expressed concern about illegal imprisonment, torture and punishment of the accused. The men involved were reprimanded. 1094 Commission issued after accused had confessed, no details of accusations. Later entry (1/4/1662) records the PC&#39;s concern that a group of men had illegally imprisoned, tortured and executed the accused. The men were reprimanded. 1095 Commission issued after suspect had confessed. No details of accusations or confession. 1096 Suspect had confessed before commission issued. 1097 Suspect had confessed before commission issued. 1098 Commission issued after suspect had confessed. No details of accusations or confession. 1099 Commission issued after the accused had confessed. 1100 1101 Commission issued after suspect had confessed. 1102 Commission issued after suspect had confessed. 1103 Commission issued after suspect had confessed. 1104 Commission issued after suspect had confessed. 1105 Commission issued after suspect had confessed. 1106 Suspect recorded as having acknowledged her guilt of the crime of witchcraft before commission issued. 1107 Suspect confessed prior to commission being issued. 1108 Suspect confessed before commission issued. 1109 Suspect confessed before commission issued. 1110 Suspect confessed before commission issued. 1111 1112 Suspect confessed before commission issued. 1113 Suspect confessed before commission issued. 1114 Commission issued after suspect had confessed. 1115 Commission issued after suspect had confessed. 1116 Commission issued after suspect had confessed. 1117 Commission issued after accused had confessed. 1118 Commission issued after the accused had confessed. 1119 Suspect confessed before commission issued. 1120 Commission issued after the accused had confessed. 1121 Suspect had confessed before the commission was issued. 1122 Commissions chart progress from investigation to arrest and relationship between local and central authorities. 1123 Commission issued after the suspect had confessed. 1124 Commission issued after accused had confessed. 1125 Commission issued after suspect had confessed. 1126 Commission issued after suspect had confessed. 1127 Commission issued after the accused had confessed. 1128 Commission issued after the suspect had confessed. 1129 Commission issued after the suspect had confessed. 1130 Held in prison for 6 weeks, no record of any commission for trial. Accused claimed that there was no evidence against them. The pricker had been used and had found marks on her but she knew nothing about them. 1131 Recorded that accused in prison for 6 weeks but no evidence apart from examination by pricker. Ordered to be released and a legal trial to be arranged. No record of commission for trial from PC. 1132 Investigation by presbytery, three male witnesses, recorded as her neighbours and servants, did not appear. Case referred back to kirk session to get more info. 1133 Commissions chart progress from investigation after being named by Alexander Hamilton to request for arrest from presbytery. No further information about trial found in RPC. 1134 Complicated case which involves slander and counter slander between the minister and the accused. Inquiry held at presbytery level and several witnesses called for both sides. Eventually Mr Rae&#39;s case was proven and Kirkpatrick sentenced to lesser excommunication. Rae then wanted the case, now an accusation of witchcraft, referred to bailie of regality of New Dalgarno. The suspect was scratched (a form of counter-magic) in 1706. 1135 In 1650, a commentator from the Presbytery (unknown identity) requested a commission of justiciary from either the Privy Council or from the Committee of Estates. The commentator also requested more information about each case. The commentator wrote his remarks on each draft dittay, presumably to make the dittay stronger. In 1659, Presbytery investigated case and referred it back to kirk session at Irongray. No further details. Corsan was not held in prison, not enough evidence, but her mother was. 1136 Presbytery note about referral to local sheriff in order to secure her, but no indication if she was held or where. She was the subject of an ongoing Presbytery investigation, but the ink in the volume was difficult to read. 1137 Commission issued to try accused after she had confessed. No details of confession. 1138 commission issued, no other details. 1139 commission issued but no other details 1140 commission issued but no other details 1141 commission issued but no other details. 1142 Commission issued but no other details 1143 Charts progress through commissions for investigation and confronting after being named by another suspect to request for permission to arrest. 1144 Order to be released from imprisonment on caution, to be tried later. 1145 Released from imprisonment on caution to appear later, no further details. 1146 1147 1148 Commission issued after accused had confessed, but no other details. 1149 Commission issued after accused had confessed, but no further details. 1150 Commission issued after accused had confessed but no other details. 1151 Commission issued after accused had confessed,but no further details. 1152 Commission issued after accused had confessed, but no further details. 1153 Commission issued after accused had confessed, but no other details. 1154 Charts progress of commissions to investigate charges brought by Hamilton against several women. Request for arrest although appears to have already died. 1155 Commission issued after accused had confessed,but no other details. 1156 Commission issued after accused had confessed, but no other details. 1157 Commission issued after accused had confessed,but no other details. 1158 Commission issued after accused had confessed,but no other details. 1159 Commission issued after accused had confesse. No other details. 1160 Commission issued after the accused had confessed, no other details 1161 Ordered to be released but no further details 1162 The accused had been imprisoned locally but PC order the local sheriff to transport her to Edinburgh to await trial there. 1163 PC concerned that local men had imprisoned and tortured a number of accused women. They ordered that the local sheriff principal transport the accused to Edinburgh for trial. 1164 PC order that accused be moved to Edinburgh by the local sheriff principal. A number of local men were involved in illegal imprisonment, torture and execution of accused women and were reprimanded by PC. 1165 Note in presbytery records warrant from Lord Chancellor to deal with accused and bring her &#39;to confession&#39;. Confessed to the ministers of Tranent and other witnesses. The records state that they went to the Committee of Estates for a commission because there wasn&#39;t a quorum of the Privy Council. She had previously been put out of Preston and forced to beg forgivness for cursing and blowing in people&#39;s faces. 1166 A number of local men appear to have imprisoned, tortured and executed accused women. They were reprimanded for this and ordered to transport the accused to Edinburgh to await trial there. 1167 PC concerned that a number of local men had imprisoned, tortured and executed some women accused of witchcraft. Order that the sheriff principal transport the accused to Edinburgh for trial there. The men were reprimanded. 1168 Commission issued after accused had confessed. 1169 Commission issued after accused had confessed. 1170 Commission issued after accused had confessed. 1171 Ordered to be released after suspect held for 22 weeks. To be set free on caution and to attend any later legal trial. 1172 Commission to try accused but no torture to be used. 1173 Commission to try accused but no torture to be used. 1174 Order for trial after accused had confessed. 1175 Commission issued after accused had confessed. 1176 Presbytery records request for commission to try and judge and that the suspect is imprisoned.Also records that he has confessed but no details about confession noted. 1177 Commission issued after accused had confessed 1178 Commission issued after suspect had confessed. 1179 Commission after suspect had confessed. 1180 Two commissions of justiciary issued. First one to try accused and second to try and judge her. 1181 Two commissions issued. First one to try the suspect and the second to try and judge her. 1182 Commission issued after the accused had confessed. 1183 Commission issued after accused had confessed. 1184 Commission issued after accused had confessed. 1185 Commission issued after suspect had confessed. 1186 Commission issued after accused confessed. 1187 Presbytery records note that the suspect had confessed along with two others andthat the brethren requested a commission for trial and judgement. Also notes that she is imprisoned but no details. 1188 Commission issued after suspect had confessed. 1189 Commission issued after accused confessed. 1190 Commission issued after the accused had confessed. 1191 Commission issued after suspect had confessed. 1192 Commission issued after the accused had confessed. 1193 Commission issued after the accused had confessed. 1194 Commission issued after the accused had confessed. 1195 Commission issued after the accused had confessed. 1196 Commission issued after the accused had confessed. 1197 Presbytery records note that the suspect had confessed her witchcraft and they had enough evidence to request a commission to try and judge her along with others. Also mention that she had been imprisoned. 1198 Commission issued after the accused had confessed. 1199 Commission issued after accused had confessed. 1200 Accused suspected of witchcraft 1201 Accused suspected of witchcraft. Trial must have been held as commission for execution was issued. 1202 Accused suspected of witchcraft 1203 Accused suspected of witchcraft but no confession. Trial must have been held as commission for execution issued. 1204 Accused was suspected of witchcraft but no confession 1205 Accused was suspected of witchcraft but no confession 1206 Suspected of witchcraft, no confession but imprisoned. Trial held and death sentence was to be pronounced. 1207 Details of confession in RPC, in presbytery only note that the confession had been attested. 1208 Accused was suspected of witchcraft, no confession but imprisoned. Later commission was issued to carry out the death sentence. 1209 Accused was suspected of witchcraft, no confession but imprisoned. 1210 Accused suspected of witchcraft, imprisoned but no confession. Second commission issued to pronounce death sentence. 1211 Accused was suspected of witchcraft, imprisoned but no confession. 1212 Accused suspected of witchcraft, imprisoned but no confession 1213 accused suspected, imprisoned but no confession. Trial must have been held as commission for death sentence was issued. 1214 Suspected of witchcraft, imprisoned but no confession. Trial must have been held, as execution was to be carried out. 1215 Suspected of witchcraft and imprisoned but no confession. Trial must have been held and accused found guilty, as the death sentence was ordered. 1216 Commission issued after the accused had confessed 1217 Commission issued after the accused had confessed. Second commission listed 4 other accused people. 1218 1219 First commission issued before accused had confessed, second one issued after confession 1220 Commission to try suspect who was imprisoned. Confessed to crime later. 1221 Suspect imprisoned and later confessed 1222 Suspect imprisoned and later confessed. 1223 Commission issued after accused had confessed 1224 Commission issued after accused had confessed 1225 Commission issued after accused had confessed 1226 Heritors of Auchtermuchty complained about keeping accused in local prison and requested her transfer to Edinburgh. 1227 Husband petitioned PC for his wife to be put to a trial or set free. Local magistrates counter-petitioned and PC ordered to report on process to be given to them before sentence. No further entries. 1228 Accused appeared to have confessed to witchcraft but not many details. PC stressed that no toture to be used, accused was to be in sound mind and competent age before the commissioners can use death sentence. 1229 Note in presbytery that a request for a commission to try and judge the suspect and Elizabeth Hamiltoun had been made. Their depositions were attested. 1230 Accused seems to have confessed to some aspect of witchcraft but no details. PC stressed that any confessions to be made voluntarily, the accused was to be legally and mentally competent before the death sentence can be made. 1231 Accused appears to have confessed to some degree of witchcraft but no details. PC stressed to the commissioners that further confession had to contain detail about pact and renunciation of baptism etc, no torture was to be used and the accused was to be mentally competent before the death sentence could be used. 1232 Accused seems to have confessed to some aspect of witchcraft but no details. PC stressed to commissioners that information about pact and renunciation etc could only be used if no torture was used and the accused was legally and mentally competent. The death penalty could only be used in these circumstances. 1233 Commission to try and judge the accused who had confessed to witchcraft. 1234 Commission to try and judge issued after the accused had confessed to witchcraft. 1235 Commission issued after accused had confessed to some aspect of witchcraft, but PC stressed that death penalty should only be used if the confession was voluntary, that pact, renunciation and malefice were confessed and the accused was mentally and legally competent. 1236 Presbytery investigated the case but there seems to have been a long delay. No details about accusations against her. By 2/4/1700 it was noted that the civil judge was not going to pursue the case. Mr Paton appointed to apply to the sheriff and stewat deputes to get an order to banish her. At some point she requested a testimonial from the Presbytery of Dumfries and was refused due to her mala fama. The JC40/11 document narrates that she took a voluntary banishement from Dumfries to avoid trouble, but was seen in those parts. 1237 Presbytery sent ministers to Caerlaverock to investigate and question those involved. Besse Heslope is the only one who they do not question. Decided to refer the details to the Queen&#39;s Advocate, 27/3/1705 since they could not decide whether or not witchcraft had been proven. He replied that no criminal process would be undertaken and presbytery decide to drop the matter. 1238 Record of two commissions, both in response to petitions from brother to try the accused or free them. It also appeared that there were two other commissions ordering trials, which were ignored by the local powers. Sheriff principal and deputes ordered not to use any torture. 1239 Presbytery records include reference to a request for commission to try and judge but no details about which body or from whom. Suspect&#39;s deposition had been attested. 1240 The commissions were issued in response to petitions from the brother of accused. The accused was imprisoned and the orders were for trial or release, which appear to have been ignored. No trial appears to have taken place. Last commission ordered the release of the accused and her sister. 1241 Commission issued after the accused had confessed. 1242 Commission issued after the accused had confessed. 1243 Commission issued after the accused had confessed. 1244 Commission issued after the accused had confessed. 1245 Commission issued after the accused had confessed. 1246 Commission issued after the accused had confessed. 1247 Commission issued after accused had confessed. 1248 Commission issued after the accused confessed. 1249 Commission issued after the accused had confessed. 1250 Presbytery noted that the three are suspect of witchcraft and that they have confessed but they are not subject to the authority of any of the ministers or presbytery so cannot attest their statements. They are to be re-examined by Andrew Makghie and their statements confirmed.Second confession 25/7/1649 appears to be retracting some details. Note about depositions being attested and that commission to be sought. 1251 Commission issued after accused had confessed. 1252 Commission issued after the accused had confessed. 1253 Commission to try accused but to report to the council about any confessions, and ensure that she was mentally and legally competent. 1254 Commission for trial issued after some confession but council wanted more detail about her confession. No torture was to be used and the commissioners needed to show that she was not legally or mentally incompetent. 1255 Petition from Sir Rory Mclean about the illegal imprisonment and pursuit of his relatives. Reference to a previous commission (6/1662) for the execution of the accused but no documentary evidence. Council ordered the Chisholms to bring the accused to Edinburgh and to appear themselves to answer charges. 4/9/1662 petition by the Chisholms that the McLeans had not appeared at council to prosecute their accusations and so the charges about illegal imprisonment dropped. 1256 PC petitioned by Sir Rory McLean about the illegal pursuit of his relatives. Reference to an earlier commission issued in 6/1662 for their execution. He complained that the Chisholms were trying to get the lands and property belonging to the McLeans by illegal means. By 9/1662 the Chisholms complained that none of the McLeans had appeared before the council to prosecute these complaints and so the Chisholms were discharged.\\nDonald was pursued but appears to have escaped imprisonment. 1257 Petition and counter-petitions from Sir Rory McLean and the Chisholms. McLean complained the Chisholms had illegally imprisoned his relatives because they wanted their lands and property. Reference to a commission isssued in 6/1662 for the execution of the accused. Chisholms complain about cost of transport. By 9/1662 the Chisholms complain that none of the McLeans had appeared before council to prosecute their complaints and so they were discharged. 1258 Petition and counter-petition from McLeans and Chisholms. McLean complained that the Chisholms wanted the lands and property of his relatives. Reference to earlier commission for execution of accused, 6/1662 but no documentary evidence. Chisholms complain that none of the McLeans appeared before the council to prosecute these complaints and so the charges were dropped by council. 1259 Petition and counter-petition about illegal imprisonment and torture. Mclean suggested that Chisholms were trying to get his relatives lands and properties illegally. Reference to a commission for execution of accused from 6/1662 but no documentary evidence. Chisholms complained to PC that none of the McLeans had appeared to prosecute the complaints against the Chisholms and so the charges were dropped. 1260 Petition and counter-petition from McLeans and Chisholms about illegal torture and imprisonment. McLean claimed that the Chisholms were trying to get land and property illegally. Reference to commission for execution of accused from 6/1662 but no documentary evidence.\\nChisholms complained that none of the McLeans appeared before the council to prosecute their complaints and so charges against the Chisholms appear to have been dropped. 1261 Presbytery notes that none of the accused are subject to the authority of ministers or the presbytery and so cannot attest their depositions. Makghie nominated to witness their confessions before commission can be requested. Second confession admits she was at meeting and saw Alexander Wilsone there. 1262 Petition and counter-petition about illegal treatment of the McLean family members. McLean complained that the Chisholms were attempting to gain the land and properties illegally. Reference to earlier commission for execution of accused which was obtained 6/1662 but no documentary evidence. Eventually Chisholms appeared before council but no McLeans prosecuted the complaints so the council dropped charges against the Chisholms. 1263 Petition from McLean about treatment of his relatives. Accused Chisholm of trying to get their lands and property illegally. Reference to earlier commission for execution, 6/1662 but no documentary evidence. Chisholm counter-petitioned about the accusations and by 4/9/1662 no McLeans had appeared to prosecute the allegations against him. Charges dropped by PC. 1264 Petition and counter-petition. McLean complained that Chisholm was trying to take land and property from his relatives and using a charge of witchcraft as an excuse. Reference to a commission for execution issued in 6/1662 but no documentary evidence. Chisholm counter-petitioned and charges against the Chisholms were dropped. 1265 Petition from Mclean about illegal treatment. He alledged that Chisholm was trying to take land and property illegally and using witchcraft as an excuse. Reference to an earlier commission for execution from 6/1662 but no documentary evidence. Chisholm counter-petitioned and charges against him were dropped by the PC in 9/1662. 1266 McLean petitioned PC about illegal torture and imprisonment of his relatives. He complained that Chisholm was using witchcraft as an excuse to obtain their lands and property. Reference to an earlier commisison for execution from 6/1662 but no documentary evidence. Chisholm appealed to PC and the charges against him were dropped by the PC. 1267 McLean complained to PC about treatment of his relatives by Chisholm Alledged that witchcraft was being used as an excuse to get hold of lands and property illegally. Reference to an earlier commission for execution issued in 6/1662 bu no documents. Chisholm counter-petitioned and charges against him were dropped by the PC. 1268 McLean complained to PC about illegal imprisonment and torture of hie relatives. He alledged that Chisholm was trying to get their land and property and using witchcraft as an excuse. Reference to an earlier petition for execution issued in 6/1662 but no documentary evidence. Chisholm counter-peitioned and charges against him were dropped by the PC. 1269 McLean complained about the treatment of his relatives by the Chisholms. He alledged that witchcraft was being used as an excuse to acquire lands and property of the McLeans. Reference to an earlier commission for execution from 6/1662. Chisholm counter-petitioned PC and charges against him were dropped, 9/1662. 1270 McLean complained about treatment of his relatives. He alledged that Chisholm was using witchcraft as an excuse to obtain their land and property. Reference to an earlier commission for execution from 6/1662. Chisholm counter-petitioned and charges against him were dropped by the PC. 1271 McLean complained about the treatment of his relatives by the Chisholms. He alledged that they were trying to obtain the lands and property belonging to the McLeans and using witchcraft as an excuse. Reference to a commission for execution issued in 6/1662. Chisholm counter-petitioned and charges against him were dropped by the PC in 9/1662. 1272 A healer, Alexander Fortune, testified before the session at Duns about a strange wound she had that would not heal on 17 January 1619. Her case was examined in front of the Dunbar Presbytery 22-29 April 1624, five years before her trial. 11 January 1629 the Tyninghame minister was assisting Mr. John Home, minister of Dunbar with Isobell&#39;s case. She was interrogated on 26 Jan 1629 by members of her commission. 1273 Witness depositions against her beginning in 14/7/1628 and she was denounced by two confessing witches. A commission was sought but the Bishop of St. Andrews wouldn&#39;t proceed based on the evidence. Ordered to report her depositions to the council on 20/7/1629; commission for the central trial was granted to the Sheriffs and bailies of Edinburgh becaue the lord advocate was going to attend a funeral. Sir Thomas Hope of Craighall sent a notice to &#39;our sherrifs in that part&#39; to call the assize and witnesses for her trial to happen on 1/11/1629. 1274 Witnesses were called on 22 June 1630, and JC26 has an interrogatory set for her. She was to asked about her involvement in Lady Samuelston&#39;s plot to kill her husband and the supposed conspiracy to kill Manderston. 1275 1276 George and his wife were summond at the instance of Alexander Stewart to appear before the Privy Council on 21 November 1633. George went to Edinburgh to end the pursuit of himself and his wife for witchcraft on 21/11/1633. He spoke for his wife because of her ill health. The Privy Council narrates a lot of previous actions between Fraser and Stewart his main accuser. The final action was 14/1/1634. Essentially they charged their accuser, Stewart, with slander and won. Tthey produced testimonials about their own good standing in the community. A testificate from their minister is in the Privy Council. Stewart was ordered to pay Fraser £100 and to be committed to ward in Edinburgh 1277 The couple were summond at the instance of Alexander Stewart to appear before the Privy Council on 21 November 1633. George Fraser went to Edinburgh to end the pursuit of himself and his wife for witchcraft on 21/11/1633. He spoke for his wife because of her ill health. The Privy Council narrates a lot of previous actions between Fraser and Stewart his main accuser. The final action was 14/1/1634. Essentially they charged their accuser, Stewart, with slander and won. They produced testimonials about their own good standing in the community. A testificate from their minister is in the Privy Council. Stewart was ordered to pay Fraser £100 and to be committed to ward in Edinburgh 1278 She was investigated by the Session of Sanday on 17/3/1633, 31/3/1633,and 7,14,19,21 April 1633. 1279 1280 1281 depositions taken at the Presbytery of Kirkcudbright 1282 1283 1284 He was cautioned. 1285 1286 1287 1288 She denounced several people for healing in a deposition, including - Margaret Ranie alias Todlock, Cristane Poock (Pollock), Elspeth Linay. They were all called healers. Witnesses were summoned on 7/7/1643. 1289 1290 22 July 1643 witnesses were summond by Sir William Dick of Braid, the sherrif. 1291 1292 We just have her confession report. 1293 1294 1295 1296 1297 1298 1299 1300 1301 1302 Deposition from neighbours dated 14/7/1649 1303 same commission registered in two places, with same date and same commissioners. 1304 same commission registered in two places, with same date and same commissioners. 1305 Wemyss KS noted that she had been apprehended but had not confessed fully. Probably imprisoned at Burntisland. Requested info about her from the parishioners. [same commission registered in two places, with same date and same commissioners.] 1306 1307 1308 1309 1310 1311 1312 1313 1314 1315 process note from the locality to the Privy Councl to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested. 1316 process note from the locality to the Privy Council to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested. (I think this is from 1649?) 1317 Process note from the locality to the Privy Council to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested. She was denounced and to be apprehended. From 1649. 1318 She and her husband complained two times to PC, 1st about her false imprisonment, and then protesting her trial postponement and petitioning for her release from prison pending trial. She wanted an order to remain in Edinburgh (which was granted). Claimed financial hardship of maintaining her in prison. Her third complaint was that witness depositions taken outwith her presence, and not in a court of justice, were going to be offfered into evidence in her trial. The statements were disalllowed unless the deponers came to Edinburgh to ratify them. 1319 process note from the locality to the Privy Council to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested. She was denounced and to be arrested. 1320 Process note from the locality to the Privy Council to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested. He was denounced and to be apprehended 1321 Process note from the locality to the Privy Council to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested. Denounced and to be apprehended 1322 Process note from the locality to the Privy Council to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested in 1649. No mention of what happened. 1323 process note from the locality to the Privy Council to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested. (this is in 1649) 1324 Process note from the locality to the Privy Council to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested. From 1649. 1325 Process note from the locality to the Privy Council to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested in 1649. Denounced and arrested. 1326 Process note from the locality to the Privy Council to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested in 1649. The accused was denounced and to be apprehended. 1327 Process note from the locality to the Privy Council to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested in 1649. The accused was denounced and to be arrested. 1328 Process note from the locality to the Privy Council to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested. Was denounced and to be arrested in 1649. 1329 Process note from the locality to the Privy Council to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested. She was denounced and to be arrested in 1649. 1330 Process note from the locality to the Privy Council to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested. She was denounced and to be arrested in 1649. 1331 Process note from the locality to the Privy Council to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested. She was denounced and to be arrested in 1649. 1332 Process note from the locality to the Privy Council to justify their request to have their specific commission widened to a general commission so they can try all those named, confessed and arrested. He was denounced and to be apprehended in 1649. 1333 1334 She gave statements to the chamberlain of Dirleton, then it was reviewed by the Presbytery who decided there was enough to warrant an application for a commission of justiciary. 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 1345 1346 Commission wanted for trial and assize. According to presbytery entry 3/5/1643 they were found guilty and convicted, but this was before the commission was granted. No further details in presbytery records after 2/8/1643. 1347 Commission wanted for trial and assize. According to presbytery entry 3/5/1643 they were found guilty and convicted, but this was before the commission was granted. No further details in presbytery records after 2/8/1643. 1348 Commission wanted for trial and assize. According to presbytery entry 3/5/1643 they were found guilty and convicted, but this was before the commission was granted. No further details in presbytery records after 2/8/1643. 1349 She said she was kept awake by the minister and tutor of Calder for 20 days, being naked except for a sackcloth. She was being held in the Stocks. The Privy Council investigated her claims of being held in prison for 16 weeks, forced to stand 26 days, causing her to fall and break her face, being beaten and bleeding. On 2/10/1644 there were depositions about the treatment of her during imprisonment. The witnesses confirmed her complaint. A list of 8 men who &#39;walked&#39; her at various points in her imprisonment. The tutor and the minister were summond to appear before the Privy Council along with 22 other men involved in her imprisonment, warding and investigation. 1350 She was ordered to pay for her imprisonment in Culross, and her transportation to Edinburgh/Canongate. She managed to get someone to authorise her release on caution and the charges seem to have dropped for over a year. 4/2/1645 the commissioners tried to reactivate her case under the lord advocate. A rather harrowing description of how they were investigated and treated in prison. 1351 She was ordered to pay for her imprisonment in Culross, and her transportation to Edinburgh/Canongate. She managed to get someone to authorise their release on caution and the charges seem to have dropped for over a year. She complained about her and her mother&#39;s treatment, I think they were released although it is unclear. A rather harrowing description of how they were investigated and treated in prison. 1352 Husband appealed to presbytery for her release on 7/8/1644 - refused. She again sought release on 11/9/1644 but the minister convinced the Privy Council to give him 20 days to get complaints against her. No complaints came in, so she was ordered released. She was originally denounced by someone. 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363 1364 She was summoned for questioning after being denounced in a nearby parish. She confessed after pressure from ministers, described as &#39;some few days conference&#39;. Commission from PC to be requested by the presbytery. 14/11/1644 presbytery note that commission had been granted. 1365 Confessed to devilish practices and found guilty by presbytery. Commission to be requested from PC. 14/11/1644 presbytery note that commission had been granted. 1366 Local minister reported to presbytery but they passed it back to kirk session for more information. 5/11/1644 record that a commission was to be requested for apprehending and trying the suspects. Later entries note that commission received. 1367 Local minister gave details to presbytery but they referred it back to kirk session for more information. 5/11/1644 note that commission for apprehending and trying of suspects was to be requested. Later entries record that commission received. 1368 Presbytery heard details from local minister but initially passed it back to kirk session to get more info. 5/11/1644 decide to write for permission to apprehend and try the suspects. Further entries note that this had been done and commission received. 1369 Presbytery heard details from local minister but pass it back to kirk session for more information. By 5/1//1644 note that there is to be a request for apprehending and trying the suspects. Later entries note that the commission had been granted. 1370 Local minister reported details to presbytery but they referred it back to kirk session for more information. 5/11/1644 note that a commission for apprehending and trying of suspects to be requested. Later entries note that commission received. 1371 She was denounced by a witch, summoned for questioning before the kirk session, moved up to the presbytery then a request for a commission. 1372 1373 1374 1375 1376 1377 1378 She was charged with charming, she denied it. The session ordered her to abstain from all charming. [Somewhere along the line, the accusations of charming turned into witchcraft.] 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 Seems to have been examined by the Privy Council 9/4/1591 where he confessed and said it was all at the instigation of Bothwell. April 1591, King James VI ordered Maitland to make sure Grahame got his ordinary allowance. Graham conveyed a verbal complaint about his mistreatment in prison to a the Master of Wark who wrote it down and delivered it to the King. Graham said he was promised better conditions in ward and a servant. 1392 1393 1394 1395 She was orginally arrested in 1651. Also, it seems that a former provost and two former bailies tried to exonerate her and the three other arrested with her (7 October 1651). There is some evidence of a commission being granted that was not acted upon (from 13 July 1652). 1396 She was orginally arrested in 1651. Also, it seems that a former provost and two former bailies tried to exonerate her and the three other arrested with her (7 October 1651). There is some evidence of a commission being granted that was not acted upon (from 13 July 1652). 1397 She was orginally arrested in 1651. Also, it seems that a former provost and two former bailies tried to exonerate her and the three other arrested with her (7/10/1651). There is some evidence of a commission being granted that was not acted upon (from 13/7/1652). 1398 Appears to have been investigated in 1656 by Dumfries presbytery. No details from Kirkcudbright as the presbytery records start too late, but no specific action taken/punishment. 1399 1400 Accused of trying to bribe a minister of Ayr after she was challenged before the Session for witchcraft. 1401 1402 She confessed to her minister. The suspects were interrogated in their parishes, referred to the Presbytery and then the JPs asked the presbytery to present their susptects to the JPs for trial. 1403 1404 The suspects were interrogated in their parishes, referred to the presbytery and then the JPs asked the presbytery to present the suspects to the JPs for trial. 1405 The suspects were interrogated in their parishes, referred to the presbytery and then the JPs asked the presbytery to present their suspects to the JPs for trial. 1406 She confessed to healing with deeds, but denied using any words. 1407 confessed to charming, but denied witchcraft 1408 She was denounced to the minister by a neighbour. 1409 She confessed. She said that the Devil told her to drown herself but a man rescued her from the water. 1410 1411 Depositions taken on 25/2/1659 at Stirling court. 1412 Depositions taken on 25/2/1659 at Stirling court. 1413 1414 1415 1416 1417 1418 1419 1420 He got a commission but refused to put her to trial, just held her in prison. John Home, minister told her husband that she should pretend to be with bairn. She was released into his custody and re-arrested. Her case was reviewed by the Archbishop of Glasgow before going to the Privy Council. 1421 1422 She was listed as interrogated in 8/1651 1423 1424 1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 1441 1442 1443 This case was under a Privy Council commission (see PC1/51 p. 136-9) along with most of the people tried at the same time. There were other Renfrewshire witchcraft suspects tried at different places and times. I am keeping this as a mixed/central local because the Privy Council maintained very strict control over the proceedings, even though they granted a commission. For details of the proceedings of Privy Council in this matter see the no named witches case c/la/3235. He was not tried with the rest of the group. 1444 1445 He was interrogated by the Privy Council until he confessed and named his sisters and others. 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 1489 1490 1491 1492 1493 she was questioned before a committee of the Presbytery of Ayr 1494 Her confession was read in Dumfries on the dittay roll. 1495 The Provost of Kircudbright testified against her. She was investigated before the Kirk Session and the JPs on 4/5/1658. 1496 1497 She had been previously censured by the Kirk. She was confronted by Janet Miller a confessing witch who had denounced her. Witness statements were collected on 4/5/1658. Witnesses were summond on 31/3/1659 to appear at her trial. 1498 1499 She was interrogated by JPs on 19/5/1658. 1500 1501 Also mention of a commission granted by the committee of estates for the trial of witches? The date is for 20/3/1659. 1502 1503 1504 witness statements were collected on 4/5/1658 1505 1506 1507 1508 1509 1510 1511 1512 1513 The corpse bleedingordeal was conducted unofficially. Witness statements were given on 23, 30 April 1671, 7 May 1671 and 13/5/1671. Janet Callen has supposedly lived with Elspeth before Callen was charged and executed for witchcraft. On 2 May 1671 she was summond to appear at Dumfries on 12 May 1671 for her trial. 1514 Witnesses called on 3 May 1671 for her trial to be held on 12 May 1671. On 16 April 1671 she was summond to appear for trial in Dumfries. 1515 She was on a fugitive roll at some point. 1516 She was described as delinquent, I think that means that she did not appear when summond. 1517 1518 1519 1520 1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 She was accused of being pressured and tortured to falsely accuse someone sometime in 1677 or 1678. 1534 She was tortured, tormented and arrested illegally by 3 men (a bailie and two others) on May 1678. The came to her house in the night with pistols and drawn swords, but she was saved by others. 1535 She was accused of being pressured and tortured to falsely accuse someone sometime in 1677 or 1678. 1536 1537 1538 ProcessType TrialDate TrialDate.as.date TrialPlace Female.accusers 1 NA 17/2/1597 02/17/97 00:00:00 Tolbooth 19 2 NA 0 3 NA 0 4 NA 0 5 NA 0 6 NA 0 7 NA 0 8 NA 0 9 NA 0 10 NA 0 11 NA 0 12 NA 0 13 NA 0 14 NA 0 15 NA 0 16 NA 0 17 NA 0 18 NA 0 19 NA 0 20 NA 0 21 NA 0 22 NA 0 23 NA 0 24 NA 0 25 NA 0 26 NA 0 27 NA 0 28 NA 0 29 NA 0 30 NA 0 31 NA 0 32 NA 0 33 NA 0 34 NA 0 35 NA 0 36 NA 0 37 NA 0 38 NA 0 39 NA 0 40 NA 0 41 NA 0 42 NA 0 43 NA 0 44 NA 0 45 NA 0 46 NA 0 47 NA 0 48 NA 0 49 NA 0 50 NA 0 51 NA 0 52 NA 0 53 NA 0 54 NA 0 55 NA 0 56 NA 0 57 NA 0 58 NA 0 59 NA 0 60 NA 0 61 NA 0 62 NA 0 63 NA 0 64 NA 0 65 NA 0 66 NA 0 67 NA 0 68 NA 0 69 NA 0 70 NA 0 71 NA 0 72 NA 0 73 NA 0 74 NA 0 75 NA 0 76 NA 0 77 NA 0 78 NA 0 79 NA 0 80 NA 0 81 NA 0 82 NA 0 83 NA 0 84 NA 24/7/1650 07/24/50 00:00:00 0 85 NA 24/7/1650 07/24/50 00:00:00 0 86 NA 24/7/1650 07/24/50 00:00:00 0 87 NA 24/7/1650 07/24/50 00:00:00 0 88 NA 0 89 NA 0 90 NA 12/5/1697 05/12/97 00:00:00 16 91 NA 13/4/1697 04/13/97 00:00:00 NA 92 NA 12/5/1697 05/12/97 00:00:00 16 93 NA 13/4/1697 04/13/97 00:00:00 NA 94 NA 13/4/1697 04/13/97 00:00:00 0 95 NA 0 96 NA 0 97 NA 0 98 NA 0 99 NA 0 100 NA 0 101 NA 0 102 NA 0 103 NA 0 104 NA 0 105 NA 0 106 NA 0 107 NA 0 108 NA 0 109 NA 0 110 NA 0 111 NA 0 112 NA 0 113 NA 0 114 NA 0 115 NA 0 116 NA 0 117 NA 0 118 NA 0 119 NA 0 120 NA 0 121 NA 0 122 NA 0 123 NA 15/11/1633 11/15/33 00:00:00 0 124 NA 15/11/1633 11/15/33 00:00:00 0 125 NA 0 126 NA 1 127 NA 1 128 NA 2 129 NA 2 130 NA 4 131 NA 0 132 NA 0 133 NA 0 134 NA 0 135 NA 0 136 NA 0 137 NA 0 138 NA 0 139 NA 0 140 NA 0 141 NA 0 142 NA 0 143 NA 0 144 NA 5 145 NA 0 146 NA 8 147 NA 2 148 NA 3 149 NA 4 150 NA 0 151 NA 0 152 NA 0 153 NA 0 154 NA 0 155 NA 0 156 NA 0 157 NA 0 158 NA 0 159 NA 0 160 NA 0 161 NA 0 162 NA 0 163 NA 0 164 NA 0 165 NA 0 166 NA 0 167 NA 5 168 NA 0 169 NA 0 170 NA 0 171 NA 0 172 NA 24/4/1597 04/24/97 00:00:00 Tolbooth 0 173 NA 0 174 NA 0 175 NA 0 176 NA 0 177 NA 0 178 NA 0 179 NA 0 180 NA 0 181 NA 0 182 NA 0 183 NA 0 184 NA 0 185 NA 0 186 NA 0 187 NA 0 188 NA 0 189 NA 2 190 NA 2 191 NA 0 192 NA 0 193 NA 7 194 NA 0 195 NA 0 196 NA 0 197 NA 0 198 NA 0 199 NA 0 200 NA 0 201 NA 0 202 NA 0 203 NA 0 204 NA 0 205 NA 19/2/1597 02/19/97 00:00:00 Tolbooth 0 206 NA 0 207 NA 0 208 NA 0 209 NA 0 210 NA 20/1/1598 01/20/98 00:00:00 Tolbooth 0 211 NA 0 212 NA 0 213 NA 27/4/1597 04/27/97 00:00:00 Tolbooth 0 214 NA 0 215 NA 0 216 NA 24/4/1597 04/24/97 00:00:00 Tolbooth 0 217 NA 0 218 NA 21/11/1597 11/21/97 00:00:00 Tolbooth 0 219 NA 21/11/1597 11/21/97 00:00:00 Tolbooth 0 220 NA 21/11/1597 11/21/97 00:00:00 Tolbooth 0 221 NA 24/4/1597 04/24/97 00:00:00 0 222 NA 0 223 NA 0 224 NA 0 225 NA 0 226 NA 24/4/1597 04/24/97 00:00:00 Tolbooth 0 227 NA 24/4/1597 04/24/97 00:00:00 Tolbooth 0 228 NA 24/4/1597 04/24/97 00:00:00 Tolbooth 1 229 NA 24/4/1597 04/24/97 00:00:00 Tolbooth 0 230 NA 24/4/1597 04/24/97 00:00:00 Tolbooth 0 231 NA 25/3/1597 03/25/97 00:00:00 Tolbooth 0 232 NA 9/3/1597 03/09/97 00:00:00 Tolbooth 0 233 NA 0 234 NA 0 235 NA 0 236 NA 0 237 NA 0 238 NA 9/3/1597 03/09/97 00:00:00 Tolbooth 0 239 NA 3/9/1597 09/03/97 00:00:00 Tolbooth 2 240 NA 15/4/1597 04/15/97 00:00:00 Tolbooth 0 241 NA 0 242 NA 0 243 NA 0 244 NA 0 245 NA 0 246 NA 0 247 NA 0 248 NA 0 249 NA 0 250 NA 0 251 NA 0 252 NA 0 253 NA 0 254 NA 0 255 NA 0 256 NA 0 257 NA 0 258 NA 0 259 NA 0 260 NA 0 261 NA 0 262 NA 0 263 NA 0 264 NA 0 265 NA 0 266 NA 0 267 NA 0 268 NA 0 269 NA 0 270 NA 0 271 NA 0 272 NA 0 273 NA 0 274 NA 0 275 NA 0 276 NA 0 277 NA 21/3/1644 03/21/44 00:00:00 0 278 NA 0 279 NA 0 280 NA 0 281 NA 0 282 NA 0 283 NA 0 284 NA 0 285 NA 1 286 NA 0 287 NA 0 288 NA 0 289 NA 0 290 NA 0 291 NA 0 292 NA 0 293 NA 0 294 NA 0 295 NA 0 296 NA 0 297 NA 8/1649 08/01/49 00:00:00 0 298 NA 0 299 NA 0 300 NA 8/1649 08/01/49 00:00:00 1 301 NA 0 302 NA 8/1649 08/01/49 00:00:00 0 303 NA 0 304 NA 0 305 NA 0 306 NA 0 307 NA 0 308 NA 0 309 NA 0 310 NA 0 311 NA 0 312 NA 0 313 NA 0 314 NA 0 315 NA 0 316 NA 0 317 NA 0 318 NA 2 319 NA 2 320 NA 0 321 NA 0 322 NA 0 323 NA 0 324 NA 0 325 NA 0 326 NA 0 327 NA 0 328 NA 0 329 NA 0 330 NA 0 331 NA 0 332 NA 0 333 NA 0 334 NA 0 335 NA 0 336 NA 0 337 NA 0 338 NA 0 339 NA 15/4/1597 04/15/97 00:00:00 Tolbooth 0 340 NA 15/4/1597 04/15/97 00:00:00 Tolbooth 0 341 NA 0 342 NA 15/4/1597 04/15/97 00:00:00 Tolbooth 0 343 NA 0 344 NA 0 345 NA 0 346 NA 0 347 NA 0 348 NA 0 349 NA 0 350 NA 0 351 NA 0 352 NA 0 353 NA 25/4/1597 04/25/97 00:00:00 Tolbooth 0 354 NA 25/4/1597 04/25/97 00:00:00 Tolbooth 0 355 NA 25/4/1597 04/25/97 00:00:00 Tolbooth 0 356 NA 0 357 NA 0 358 NA 0 359 NA 0 360 NA 0 361 NA 0 362 NA 0 363 NA 0 364 NA 0 365 NA 0 366 NA 0 367 NA 0 368 NA 4 369 NA 6/1649 06/01/49 00:00:00 2 370 NA 0 371 NA 0 372 NA 0 373 NA 0 374 NA 0 375 NA 0 376 NA 0 377 NA 0 378 NA 0 379 NA 0 380 NA 0 381 NA 0 382 NA 0 383 NA 0 384 NA 0 385 NA 0 386 NA 0 387 NA 0 388 NA 0 389 NA 2 390 NA 0 391 NA 0 392 NA 0 393 NA 0 394 NA 0 395 NA 0 396 NA 0 397 NA 0 398 NA 0 399 NA 0 400 NA 0 401 NA 0 402 NA 0 403 NA 0 404 NA 0 405 NA 0 406 NA 0 407 NA 0 408 NA 0 409 NA 0 410 NA 0 411 NA 0 412 NA 0 413 NA 0 414 NA 0 415 NA 0 416 NA 0 417 NA 0 418 NA 0 419 NA 0 420 NA 0 421 NA 0 422 NA 0 423 NA 0 424 NA 0 425 NA 0 426 NA 0 427 NA 0 428 NA 0 429 NA 15/11/1677 11/15/77 00:00:00 Tolbooth 0 430 NA 0 431 NA 0 432 NA 0 433 NA 0 434 NA 0 435 NA 0 436 NA 0 437 NA 0 438 NA 0 439 NA 0 440 NA 0 441 NA 0 442 NA 0 443 NA 0 444 NA 0 445 NA 0 446 NA 0 447 NA 0 448 NA 0 449 NA 0 450 NA 0 451 NA 0 452 NA 0 453 NA 0 454 NA 0 455 NA 0 456 NA 0 457 NA 0 458 NA 0 459 NA 0 460 NA 0 461 NA 0 462 NA 0 463 NA 0 464 NA 0 465 NA 0 466 NA 0 467 NA 0 468 NA 0 469 NA 0 470 NA 0 471 NA 0 472 NA 0 473 NA 0 474 NA 0 475 NA 0 476 NA 0 477 NA 0 478 NA 0 479 NA 0 480 NA 0 481 NA 0 482 NA 0 483 NA 0 484 NA 0 485 NA 0 486 NA 0 487 NA 0 488 NA 0 489 NA 0 490 NA 0 491 NA 0 492 NA 0 493 NA 0 494 NA 0 495 NA 0 496 NA 0 497 NA 0 498 NA 0 499 NA 0 500 NA 0 501 NA 0 502 NA 0 503 NA 0 504 NA 0 505 NA 0 506 NA 0 507 NA 0 508 NA 0 509 NA 0 510 NA 0 511 NA 0 512 NA 0 513 NA 0 514 NA 0 515 NA 0 516 NA 0 517 NA 0 518 NA 0 519 NA 0 520 NA 0 521 NA 0 522 NA 0 523 NA 0 524 NA 0 525 NA 0 526 NA 0 527 NA 0 528 NA 0 529 NA 0 530 NA 0 531 NA 1597 06/01/97 00:00:00 0 532 NA 0 533 NA 0 534 NA 0 535 NA 0 536 NA 0 537 NA 0 538 NA 0 539 NA 0 540 NA 0 541 NA 0 542 NA 0 543 NA 0 544 NA 0 545 NA 0 546 NA 0 547 NA 0 548 NA 0 549 NA 0 550 NA 0 551 NA 0 552 NA 0 553 NA 0 554 NA 0 555 NA 0 556 NA 0 557 NA 0 558 NA 0 559 NA 0 560 NA 0 561 NA 0 562 NA 0 563 NA 0 564 NA 0 565 NA 0 566 NA 0 567 NA 0 568 NA 0 569 NA 0 570 NA 0 571 NA 0 572 NA 0 573 NA 0 574 NA 0 575 NA 0 576 NA 0 577 NA 0 578 NA 0 579 NA 0 580 NA 0 581 NA 0 582 NA 0 583 NA 0 584 NA 0 585 NA 0 586 NA 0 587 NA 0 588 NA 0 589 NA 0 590 NA 0 591 NA 0 592 NA 0 593 NA 0 594 NA 0 595 NA 0 596 NA 0 597 NA 0 598 NA 0 599 NA 0 600 NA 0 601 NA 0 602 NA 0 603 NA 0 604 NA 0 605 NA 0 606 NA 0 607 NA 0 608 NA 0 609 NA 0 610 NA 0 611 NA 0 612 NA 0 613 NA 0 614 NA 0 615 NA 0 616 NA 0 617 NA 0 618 NA 0 619 NA 0 620 NA 0 621 NA 0 622 NA 0 623 NA 0 624 NA 0 625 NA 0 626 NA 0 627 NA 0 628 NA 0 629 NA 0 630 NA 0 631 NA 0 632 NA 0 633 NA 0 634 NA 0 635 NA 0 636 NA 0 637 NA 0 638 NA 0 639 NA 0 640 NA 0 641 NA 0 642 NA 0 643 NA 0 644 NA 0 645 NA 0 646 NA 0 647 NA 0 648 NA 0 649 NA 0 650 NA 0 651 NA 0 652 NA 0 653 NA 21/4/1597 04/21/97 00:00:00 Tolbooth 3 654 NA 0 655 NA 15/10/1673 10/15/73 00:00:00 0 656 NA 0 657 NA 0 658 NA 0 659 NA 0 660 NA 0 661 NA 0 662 NA 0 663 NA 0 664 NA 0 665 NA 0 666 NA 0 667 NA 0 668 NA 0 669 NA 0 670 NA 0 671 NA 0 672 NA 0 673 NA 0 674 NA 0 675 NA 0 676 NA 0 677 NA 0 678 NA 0 679 NA 0 680 NA 0 681 NA 0 682 NA 0 683 NA 0 684 NA 0 685 NA 0 686 NA 0 687 NA 0 688 NA 0 689 NA 0 690 NA 0 691 NA 0 692 NA 0 693 NA 0 694 NA 0 695 NA 0 696 NA 0 697 NA 0 698 NA 0 699 NA 0 700 NA 0 701 NA 0 702 NA 0 703 NA 0 704 NA 0 705 NA 0 706 NA 0 707 NA 0 708 NA 0 709 NA 0 710 NA 0 711 NA 0 712 NA 0 713 NA 0 714 NA 0 715 NA 0 716 NA 0 717 NA 0 718 NA 0 719 NA 0 720 NA 0 721 NA 0 722 NA 0 723 NA 0 724 NA 0 725 NA 0 726 NA 0 727 NA 0 728 NA 0 729 NA 0 730 NA 0 731 NA 0 732 NA 0 733 NA 0 734 NA 0 735 NA 0 736 NA 0 737 NA 0 738 NA 0 739 NA 0 740 NA 0 741 NA 0 742 NA 0 743 NA 0 744 NA 0 745 NA 0 746 NA 0 747 NA 0 748 NA 0 749 NA 0 750 NA 0 751 NA 0 752 NA 0 753 NA 0 754 NA 0 755 NA 0 756 NA 0 757 NA 0 758 NA 0 759 NA 0 760 NA 0 761 NA 0 762 NA 0 763 NA 0 764 NA 0 765 NA 23/2/1597 02/23/97 00:00:00 Tolbooth 5 766 NA 0 767 NA 0 768 NA 0 769 NA 0 770 NA 0 771 NA 0 772 NA 0 773 NA 0 774 NA 0 775 NA 0 776 NA 0 777 NA 0 778 NA 0 779 NA 1629 06/01/29 00:00:00 0 780 NA 1629 06/01/29 00:00:00 0 781 NA 12/7/1629 07/12/29 00:00:00 0 782 NA 12/7/1629 07/12/29 00:00:00 0 783 NA 12/7/1629 07/12/29 00:00:00 0 784 NA 1629 06/01/29 00:00:00 0 785 NA 1629 06/01/29 00:00:00 0 786 NA 1629 06/01/29 00:00:00 0 787 NA 0 788 NA 0 789 NA 0 790 NA 0 791 NA 0 792 NA 0 793 NA 12/1629 12/01/29 00:00:00 0 794 NA 12/1629 12/01/29 00:00:00 0 795 NA 12/1629 12/01/29 00:00:00 0 796 NA 0 797 NA 0 798 NA 0 799 NA 0 800 NA 0 801 NA 0 802 NA 0 803 NA 0 804 NA 23/7/1630 07/23/30 00:00:00 0 805 NA 0 806 NA 0 807 NA 0 808 NA 0 809 NA 0 810 NA 0 811 NA 0 812 NA 0 813 NA 0 814 NA 0 815 NA 0 816 NA 0 817 NA 0 818 NA 0 819 NA 0 820 NA 0 821 NA 0 822 NA 0 823 NA 0 824 NA 0 825 NA 0 826 NA 0 827 NA 0 828 NA 0 829 NA 0 830 NA 0 831 NA 0 832 NA 0 833 NA 0 834 NA 0 835 NA 0 836 NA 0 837 NA 0 838 NA 0 839 NA 0 840 NA 0 841 NA 0 842 NA 1649 06/01/49 00:00:00 0 843 NA 0 844 NA 0 845 NA 0 846 NA 0 847 NA 0 848 NA 0 849 NA 0 850 NA 0 851 NA 0 852 NA 0 853 NA 0 854 NA 1661 06/01/61 00:00:00 0 855 NA 0 856 NA 0 857 NA 0 858 NA 0 859 NA 0 860 NA 1661 06/01/61 00:00:00 0 861 NA 1661 06/01/61 00:00:00 0 862 NA 0 863 NA 0 864 NA 0 865 NA 0 866 NA 0 867 NA 0 868 NA 0 869 NA 0 870 NA 0 871 NA 0 872 NA 23/3/1659 03/23/59 00:00:00 Tolbooth 0 873 NA 3/1659 03/01/59 00:00:00 Tolbooth 0 874 NA 0 875 NA 23/3/1659 03/23/59 00:00:00 Tolbooth 4 876 NA 0 877 NA 0 878 NA 0 879 NA 0 880 NA 0 881 NA 0 882 NA 0 883 NA 0 884 NA 0 885 NA 0 886 NA 0 887 NA 0 888 NA 0 889 NA 0 890 NA 8/9/1679 09/08/79 00:00:00 0 891 NA 0 892 NA 0 893 NA 0 894 NA 0 895 NA 0 896 NA 0 897 NA 0 898 NA 0 899 NA 0 900 NA 0 901 NA 0 902 NA 0 903 NA 0 904 NA 0 905 NA 0 906 NA 0 907 NA 0 908 NA 0 909 NA 0 910 NA 0 911 NA 0 912 NA 0 913 NA 0 914 NA 0 915 NA 0 916 NA 0 917 NA 0 918 NA 0 919 NA 0 920 NA 0 921 NA 0 922 NA 0 923 NA 0 924 NA 0 925 NA 0 926 NA 0 927 NA 0 928 NA 0 929 NA 0 930 NA 0 931 NA 0 932 NA 0 933 NA 0 934 NA 0 935 NA 0 936 NA 0 937 NA 0 938 NA 0 939 NA 0 940 NA 0 941 NA 0 942 NA 0 943 NA 0 944 NA 0 945 NA 0 946 NA 0 947 NA 0 948 NA 0 949 NA 0 950 NA 0 951 NA 0 952 NA 1/1644 01/01/44 00:00:00 0 953 NA 1/1644 01/01/44 00:00:00 0 954 NA 21/11/1649 11/21/49 00:00:00 6 955 NA 21/11/1649 11/21/49 00:00:00 5 956 NA 0 957 NA 21/11/1649 11/21/49 00:00:00 0 958 NA 0 959 NA 0 960 NA 0 961 NA 0 962 NA 21/11/1649 11/21/49 00:00:00 0 963 NA 0 964 NA 21/11/1649 11/21/49 00:00:00 0 965 NA 0 966 NA 0 967 NA 0 968 NA 0 969 NA 0 970 NA 0 971 NA 0 972 NA 0 973 NA 0 974 NA 30/5/1688 05/30/88 00:00:00 Tolbooth 19 975 NA 0 976 NA 0 977 NA 0 978 NA 0 979 NA 0 980 NA 0 981 NA 0 982 NA 0 983 NA 0 984 NA 0 985 NA 0 986 NA 0 987 NA 0 988 NA 13/9/1678 09/13/78 00:00:00 0 989 NA 13/9/1678 09/13/78 00:00:00 0 990 NA 13/9/1678 09/13/78 00:00:00 0 991 NA 0 992 NA 0 993 NA 14/2/1677 02/14/77 00:00:00 0 994 NA 14/2/1677 02/14/77 00:00:00 0 995 NA 14/2/1677 02/14/77 00:00:00 0 996 NA 14/2/1677 02/14/77 00:00:00 0 997 NA 14/2/1677 02/14/77 00:00:00 0 998 NA 14/2/1677 02/14/77 00:00:00 0 999 NA 0 1000 NA 0 1001 NA 0 1002 NA 0 1003 NA 0 1004 NA 0 1005 NA 0 1006 NA 2/12/1677 12/02/77 00:00:00 0 1007 NA 3/12/1677 12/03/77 00:00:00 0 1008 NA 3/12/1677 12/03/77 00:00:00 0 1009 NA 0 1010 NA 0 1011 NA 0 1012 NA 0 1013 NA 0 1014 NA 0 1015 NA 0 1016 NA 0 1017 NA 0 1018 NA 0 1019 NA 0 1020 NA 0 1021 NA 0 1022 NA 0 1023 NA 0 1024 NA 0 1025 NA 0 1026 NA 0 1027 NA 0 1028 NA 0 1029 NA 22/3/1597 03/22/97 00:00:00 Tolbooth 0 1030 NA 22/3/1597 03/22/97 00:00:00 Tolbooth 0 1031 NA 0 1032 NA 0 1033 NA 0 1034 NA 0 1035 NA 0 1036 NA 0 1037 NA 0 1038 NA 0 1039 NA 0 1040 NA 0 1041 NA 0 1042 NA 2/7/1630 07/02/30 00:00:00 0 1043 NA 0 1044 NA 0 1045 NA 0 1046 NA 0 1047 NA 0 1048 NA 0 1049 NA 0 1050 NA 0 1051 NA 0 1052 NA 2/7/1630 07/02/30 00:00:00 0 1053 NA 0 1054 NA 0 1055 NA 0 1056 NA 0 1057 NA 2/7/1630 07/02/30 00:00:00 0 1058 NA 0 1059 NA 0 1060 NA 0 1061 NA 0 1062 NA 0 1063 NA 0 1064 NA 0 1065 NA 0 1066 NA 0 1067 NA 2/7/1630 07/02/30 00:00:00 0 1068 NA 0 1069 NA 0 1070 NA 0 1071 NA 0 1072 NA 0 1073 NA 0 1074 NA 0 1075 NA 0 1076 NA 0 1077 NA 0 1078 NA 0 1079 NA 0 1080 NA 0 1081 NA 0 1082 NA 0 1083 NA 0 1084 NA 0 1085 NA 0 1086 NA 0 1087 NA 0 1088 NA 0 1089 NA 22/3/1597 03/22/97 00:00:00 Tolbooth 0 1090 NA 0 1091 NA 0 1092 NA 0 1093 NA 0 1094 NA 0 1095 NA 0 1096 NA 0 1097 NA 0 1098 NA 0 1099 NA 0 1100 NA 22/3/1597 03/22/97 00:00:00 Tolbooth 0 1101 NA 0 1102 NA 0 1103 NA 0 1104 NA 0 1105 NA 0 1106 NA 0 1107 NA 0 1108 NA 0 1109 NA 0 1110 NA 0 1111 NA 0 1112 NA 0 1113 NA 0 1114 NA 0 1115 NA 0 1116 NA 0 1117 NA 0 1118 NA 0 1119 NA 0 1120 NA 0 1121 NA 0 1122 NA 0 1123 NA 0 1124 NA 0 1125 NA 0 1126 NA 0 1127 NA 0 1128 NA 0 1129 NA 0 1130 NA 0 1131 NA 0 1132 NA 0 1133 NA 0 1134 NA 1706 06/01/06 00:00:00 0 1135 NA 1 1136 NA 0 1137 NA 0 1138 NA 0 1139 NA 0 1140 NA 0 1141 NA 0 1142 NA 0 1143 NA 0 1144 NA 0 1145 NA 0 1146 NA 24/6/1596 06/24/96 00:00:00 0 1147 NA 0 1148 NA 0 1149 NA 0 1150 NA 0 1151 NA 0 1152 NA 0 1153 NA 0 1154 NA 0 1155 NA 0 1156 NA 0 1157 NA 0 1158 NA 0 1159 NA 0 1160 NA 0 1161 NA 0 1162 NA 0 1163 NA 0 1164 NA 0 1165 NA 27/4/1649 04/27/49 00:00:00 Tolbooth 4 1166 NA 0 1167 NA 0 1168 NA 0 1169 NA 0 1170 NA 0 1171 NA 0 1172 NA 0 1173 NA 0 1174 NA 0 1175 NA 0 1176 NA 0 1177 NA 0 1178 NA 0 1179 NA 0 1180 NA 0 1181 NA 0 1182 NA 0 1183 NA 0 1184 NA 0 1185 NA 0 1186 NA 0 1187 NA 0 1188 NA 0 1189 NA 0 1190 NA 0 1191 NA 0 1192 NA 0 1193 NA 0 1194 NA 0 1195 NA 0 1196 NA 0 1197 NA 0 1198 NA 0 1199 NA 0 1200 NA 0 1201 NA 0 1202 NA 0 1203 NA 0 1204 NA 0 1205 NA 0 1206 NA 0 1207 NA 0 1208 NA 0 1209 NA 0 1210 NA 0 1211 NA 0 1212 NA 0 1213 NA 0 1214 NA 0 1215 NA 0 1216 NA 0 1217 NA 0 1218 NA 0 1219 NA 0 1220 NA 0 1221 NA 0 1222 NA 0 1223 NA 0 1224 NA 0 1225 NA 0 1226 NA 0 1227 NA 0 1228 NA 0 1229 NA 0 1230 NA 0 1231 NA 0 1232 NA 0 1233 NA 0 1234 NA 0 1235 NA 0 1236 NA 0 1237 NA 0 1238 NA 0 1239 NA 0 1240 NA 0 1241 NA 0 1242 NA 0 1243 NA 0 1244 NA 0 1245 NA 0 1246 NA 0 1247 NA 0 1248 NA 0 1249 NA 0 1250 NA 0 1251 NA 0 1252 NA 0 1253 NA 0 1254 NA 0 1255 NA 0 1256 NA 0 1257 NA 0 1258 NA 0 1259 NA 0 1260 NA 0 1261 NA 0 1262 NA 0 1263 NA 0 1264 NA 0 1265 NA 0 1266 NA 0 1267 NA 0 1268 NA 0 1269 NA 0 1270 NA 0 1271 NA 0 1272 NA 4/2/1629 02/04/29 00:00:00 13 1273 NA 11/11/ 1629 11/11/29 00:00:00 6 1274 NA 0 1275 NA 0 1276 NA 0 1277 NA 0 1278 NA 29/5/1633 05/29/33 00:00:00 12 1279 NA 29/5/1633 05/29/33 00:00:00 6 1280 NA 9/8/1642 08/09/42 00:00:00 0 1281 NA 12/10/1642 10/12/42 00:00:00 0 1282 NA 8/3/1643 03/08/43 00:00:00 0 1283 NA 8/11/1576 11/08/76 00:00:00 0 1284 NA 0 1285 NA 0 1286 NA 24/10/1677 10/24/77 00:00:00 0 1287 NA 0 1288 NA 17/6/1640 06/17/40 00:00:00 5 1289 NA 0 1290 NA 11/7/1643 07/11/43 00:00:00 10 1291 NA 0 1292 NA 0 1293 NA 0 1294 NA 0 1295 NA 0 1296 NA 0 1297 NA 0 1298 NA 0 1299 NA 0 1300 NA 0 1301 NA 0 1302 NA 0 1303 NA 0 1304 NA 0 1305 NA 0 1306 NA 0 1307 NA 0 1308 NA 0 1309 NA 0 1310 NA 0 1311 NA 0 1312 NA 0 1313 NA 0 1314 NA 0 1315 NA 0 1316 NA 0 1317 NA 0 1318 NA 4/6/1634 06/04/34 00:00:00 4 1319 NA 0 1320 NA 0 1321 NA 0 1322 NA 0 1323 NA 0 1324 NA 0 1325 NA 0 1326 NA 0 1327 NA 0 1328 NA 0 1329 NA 0 1330 NA 0 1331 NA 0 1332 NA 0 1333 NA 0 1334 NA 0 1335 NA 0 1336 NA 0 1337 NA 0 1338 NA 0 1339 NA 0 1340 NA 0 1341 NA 0 1342 NA 0 1343 NA 0 1344 NA 0 1345 NA 25/10/1643 10/25/43 00:00:00 0 1346 NA 30/8/1643 08/30/43 00:00:00 0 1347 NA 30/8/1643 08/30/43 00:00:00 0 1348 NA 30/8/1643 08/30/43 00:00:00 0 1349 NA 0 1350 NA 28/8/1644 08/28/44 00:00:00 0 1351 NA 15/8/1644 08/15/44 00:00:00 0 1352 NA 0 1353 NA 31/12/1644 12/31/44 00:00:00 0 1354 NA 31/12/1644 12/31/44 00:00:00 0 1355 NA 0 1356 NA 0 1357 NA 0 1358 NA 0 1359 NA 0 1360 NA 0 1361 NA 0 1362 NA 0 1363 NA 12/7/1643 07/12/43 00:00:00 5 1364 NA 0 1365 NA 0 1366 NA 0 1367 NA 0 1368 NA 0 1369 NA 0 1370 NA 0 1371 NA 27 1372 NA 0 1373 NA 0 1374 NA 0 1375 NA 0 1376 NA 0 1377 NA 0 1378 NA 0 1379 NA 7/7/1624 07/07/24 00:00:00 7 1380 NA 15/7/1624 07/15/24 00:00:00 10 1381 NA 11/11/1629 11/11/29 00:00:00 4 1382 NA 0 1383 NA 20/12/1664 12/20/64 00:00:00 0 1384 NA 0 1385 NA 0 1386 NA 0 1387 NA 0 1388 NA 0 1389 NA 0 1390 NA 0 1391 NA 0 1392 NA 26/8/1656 08/26/56 00:00:00 0 1393 NA 26/8/1656 08/26/56 00:00:00 0 1394 NA 0 1395 NA 6/4/1658 04/06/58 00:00:00 Tolbooth 16 1396 NA 30/3/1659 03/30/59 00:00:00 Tolbooth 7 1397 NA 30/3/1659 03/30/59 00:00:00 Tolbooth 13 1398 NA 9/4/1658 04/09/58 00:00:00 4 1399 NA 9/5/1658 05/09/58 00:00:00 5 1400 NA 9/4/1658 04/09/58 00:00:00 6 1401 NA 3/4/1658 04/03/58 00:00:00 0 1402 NA 6/4/1658 04/06/58 00:00:00 Tolbooth 0 1403 NA 6/4/1658 04/06/58 00:00:00 Tolbooth 0 1404 NA 6/4/1658 04/06/58 00:00:00 Tolbooth 0 1405 NA 6/4/1658 04/06/58 00:00:00 Tolbooth 0 1406 NA 22/3/1659 03/22/59 00:00:00 Tolbooth 18 1407 NA 22/3/1659 03/22/59 00:00:00 Tolbooth 22 1408 NA 22/3/1659 03/22/59 00:00:00 Tolbooth 3 1409 NA 23/3/1659 03/23/59 00:00:00 Tolbooth 0 1410 NA 23/3/1659 03/23/59 00:00:00 Tolbooth 0 1411 NA 23/3/1659 03/23/59 00:00:00 Tolbooth 2 1412 NA 23/3/1659 03/23/59 00:00:00 Tolbooth 0 1413 NA 0 1414 NA 0 1415 NA 11/7/1649 07/11/49 00:00:00 0 1416 NA 0 1417 NA 0 1418 NA 0 1419 NA 0 1420 NA 0 1421 NA 0 1422 NA 6/4/1658 04/06/58 00:00:00 0 1423 NA 0 1424 NA 0 1425 NA 4/1698 04/01/98 00:00:00 0 1426 NA 0 1427 NA 0 1428 NA 0 1429 NA 0 1430 NA 0 1431 NA 0 1432 NA 0 1433 NA 0 1434 NA 0 1435 NA 0 1436 NA 0 1437 NA 0 1438 NA 0 1439 NA 0 1440 NA 0 1441 NA 25/6/1706 06/25/06 00:00:00 0 1442 NA 25/6/1706 06/25/06 00:00:00 0 1443 NA 0 1444 NA 26/6/1563 06/26/63 00:00:00 0 1445 NA 1/12/1613 12/01/13 00:00:00 0 1446 NA 0 1447 NA 0 1448 NA 0 1449 NA 0 1450 NA 0 1451 NA 0 1452 NA 0 1453 NA 0 1454 NA 0 1455 NA 0 1456 NA 0 1457 NA 0 1458 NA 0 1459 NA 0 1460 NA 0 1461 NA 0 1462 NA 0 1463 NA 0 1464 NA 0 1465 NA 0 1466 NA 0 1467 NA 0 1468 NA 0 1469 NA 0 1470 NA 0 1471 NA 0 1472 NA 0 1473 NA 0 1474 NA 0 1475 NA 0 1476 NA 0 1477 NA 0 1478 NA 0 1479 NA 0 1480 NA 0 1481 NA 0 1482 NA 0 1483 NA 0 1484 NA 0 1485 NA 0 1486 NA 0 1487 NA 0 1488 NA 0 1489 NA 0 1490 NA 0 1491 NA 23/3/1659 03/23/59 00:00:00 Tolbooth 7 1492 NA 23/3/1659 03/23/59 00:00:00 Tolbooth 2 1493 NA 29/3/1659 03/29/59 00:00:00 Tolbooth 4 1494 NA 2/4/1659 04/02/59 00:00:00 Tolbooth 0 1495 NA 2/4/1659 04/02/59 00:00:00 Tolbooth 14 1496 NA 0 1497 NA 2/4/1659 04/02/59 00:00:00 Tolbooth 9 1498 NA 2/4/1659 04/02/59 00:00:00 Tolbooth 6 1499 NA 4/4/1659 04/04/59 00:00:00 Tolbooth 11 1500 NA 4/4/1659 04/04/59 00:00:00 Tolbooth 14 1501 NA 4/4/1659 04/04/59 00:00:00 Tolbooth 12 1502 NA 0 1503 NA 4/4/1659 04/04/59 00:00:00 Tolbooth 3 1504 NA 5/4/1659 04/05/59 00:00:00 Tolbooth 5 1505 NA 9/5/1671 05/09/71 00:00:00 6 1506 NA 0 1507 NA 0 1508 NA 30/3/1671 03/30/71 00:00:00 0 1509 NA 3/4/1671 04/03/71 00:00:00 0 1510 NA 6/4/1671 04/06/71 00:00:00 0 1511 NA 6/4/1671 04/06/71 00:00:00 0 1512 NA 15/4/1671 04/15/71 00:00:00 0 1513 NA 15/5/1671 05/15/71 00:00:00 3 1514 NA 15/5/1671 05/15/71 00:00:00 3 1515 NA 16/9/1679 09/16/79 00:00:00 0 1516 NA 16/9/1679 09/16/79 00:00:00 0 1517 NA 0 1518 NA 0 1519 NA 0 1520 NA 0 1521 NA 8/9/1679 09/08/79 00:00:00 0 1522 NA 8/9/1679 09/08/79 00:00:00 0 1523 NA 8/9/1679 09/08/79 00:00:00 0 1524 NA 8/9/1679 09/08/79 00:00:00 0 1525 NA 8/9/1679 09/08/79 00:00:00 0 1526 NA 8/9/1679 09/08/79 00:00:00 0 1527 NA 8/9/1679 09/08/79 00:00:00 0 1528 NA 8/9/1679 09/08/79 00:00:00 0 1529 NA 8/9/1679 09/08/79 00:00:00 0 1530 NA 9/9/1679 09/09/79 00:00:00 0 1531 NA 9/9/1679 09/09/79 00:00:00 0 1532 NA 9/9/1679 09/09/79 00:00:00 0 1533 NA 9/9/1679 09/09/79 00:00:00 0 1534 NA 9/9/1679 09/09/79 00:00:00 0 1535 NA 9/9/1679 09/09/79 00:00:00 0 1536 NA 26/9/1679 09/26/79 00:00:00 0 1537 NA 26/9/1679 09/26/79 00:00:00 0 1538 NA 26/9/1679 09/26/79 00:00:00 0 Male.accusers High.status Defence Verdict Sentence Cjtorder 1 25 0 0 Guilty Execution 0 2 0 0 0 0 3 0 0 0 0 4 0 0 0 0 5 0 0 0 0 6 0 0 0 0 7 0 0 0 0 8 0 0 0 0 9 0 0 0 0 10 0 0 0 0 11 0 0 0 0 12 0 0 0 0 13 0 0 0 0 14 0 0 0 0 15 0 0 0 0 16 0 0 0 0 17 0 0 0 0 18 0 0 0 0 19 0 0 0 0 20 0 0 0 0 21 0 0 0 0 22 0 0 0 Not Guilty 0 23 0 0 0 0 24 0 0 0 0 25 0 0 0 0 26 0 0 0 0 27 0 0 0 0 28 0 0 0 0 29 0 0 0 0 30 0 0 0 0 31 0 0 0 0 32 0 0 0 0 33 0 0 0 0 34 0 0 0 0 35 0 0 0 0 36 0 0 0 0 37 0 0 0 0 38 0 0 0 0 39 0 0 0 0 40 0 0 0 0 41 0 0 0 0 42 0 0 0 0 43 0 0 0 0 44 0 0 0 0 45 0 0 0 0 46 0 0 0 0 47 0 0 0 0 48 0 0 0 0 49 0 0 0 0 50 0 0 0 0 51 0 0 0 0 52 0 0 0 0 53 0 0 0 0 54 0 0 0 0 55 0 0 0 0 56 0 0 0 0 57 0 0 0 0 58 0 0 0 0 59 0 0 0 0 60 0 0 0 0 61 0 0 0 0 62 0 0 0 Guilty Excommunicated 0 63 0 0 0 0 64 0 0 0 0 65 0 0 0 0 66 0 0 0 0 67 0 0 0 0 68 0 0 0 0 69 0 0 0 0 70 0 0 0 0 71 0 0 0 0 72 0 0 0 0 73 0 0 0 0 74 0 0 0 0 75 0 0 0 0 76 0 0 0 0 77 0 0 0 0 78 0 0 0 0 79 0 0 0 0 80 0 0 0 0 81 0 0 0 0 82 0 0 0 0 83 0 0 0 0 84 0 0 0 0 85 0 0 0 0 86 0 0 0 0 87 0 0 0 0 88 0 0 0 0 89 0 0 0 0 90 22 1 1 Guilty Execution 0 91 NA 0 0 Not Guilty Released 0 92 22 1 1 Guilty Execution 0 93 0 0 0 Released 0 94 0 0 0 0 95 0 0 0 0 96 0 0 0 0 97 0 0 0 0 98 0 0 0 0 99 0 0 0 0 100 0 0 0 0 101 0 0 0 0 102 0 0 0 0 103 0 0 0 0 104 0 0 0 0 105 0 0 0 0 106 0 0 0 0 107 0 0 0 0 108 0 0 0 0 109 0 0 0 0 110 0 0 0 0 111 0 0 0 0 112 0 0 0 0 113 0 0 0 0 114 0 0 0 0 115 0 0 0 0 116 0 0 0 0 117 0 0 0 0 118 0 0 0 0 119 0 0 0 0 120 0 0 0 0 121 0 0 0 0 122 0 0 0 0 123 0 0 0 Guilty Execution 0 124 0 0 0 Guilty Execution 0 125 0 0 0 0 126 0 0 0 0 127 0 0 0 0 128 3 0 0 Not Proven 0 129 2 0 0 0 130 2 0 0 Not Proven 0 131 0 0 0 0 132 0 0 0 0 133 0 0 0 0 134 0 0 0 0 135 0 0 0 0 136 0 0 0 Excommunicated 0 137 0 0 0 Excommunicated 0 138 0 0 0 0 139 0 0 0 0 140 0 0 0 0 141 0 0 0 0 142 0 0 0 0 143 0 0 0 0 144 6 0 0 0 145 0 0 0 0 146 3 0 0 0 147 2 0 0 0 148 22 0 0 0 149 4 0 0 0 150 0 0 0 0 151 0 0 0 0 152 0 0 0 0 153 0 0 0 0 154 0 0 0 0 155 0 0 0 0 156 0 0 0 0 157 0 0 0 0 158 0 0 0 0 159 0 0 0 0 160 0 0 0 0 161 0 0 0 0 162 0 0 0 0 163 0 0 0 0 164 0 0 0 0 165 0 0 0 0 166 0 0 0 0 167 6 0 0 0 168 0 0 0 Banishment 0 169 0 0 0 0 170 0 0 0 0 171 0 0 0 0 172 0 0 0 Guilty Banishment 0 173 0 0 0 0 174 0 0 0 0 175 0 0 0 0 176 0 0 0 0 177 0 0 0 0 178 0 0 0 Excommunicated 0 179 0 0 0 0 180 0 0 0 0 181 0 0 0 0 182 0 0 0 0 183 0 0 0 0 184 0 0 0 0 185 0 0 0 0 186 0 0 0 0 187 0 0 0 0 188 0 0 0 0 189 2 0 0 0 190 4 0 0 0 191 0 0 0 0 192 0 0 0 0 193 5 0 0 0 194 0 0 0 0 195 0 0 0 0 196 0 0 0 0 197 0 0 0 0 198 0 0 0 0 199 0 0 0 0 200 0 0 0 0 201 0 0 0 0 202 0 0 0 Banishment 0 203 0 0 0 0 204 0 0 0 0 205 8 0 0 Guilty Execution 0 206 0 0 0 0 207 0 0 0 0 208 0 0 0 0 209 0 0 0 0 210 0 0 0 Guilty 0 211 0 0 0 0 212 0 0 0 0 213 0 0 0 Guilty Execution 0 214 0 0 0 0 215 0 0 0 0 216 3 0 0 Guilty Execution 0 217 0 0 0 0 218 8 0 1 Not Guilty 0 219 6 0 1 Not Guilty 0 220 2 1 1 Not Guilty 0 221 0 0 0 Guilty Execution 0 222 0 0 0 0 223 0 0 0 0 224 0 0 0 0 225 0 0 0 0 226 0 0 0 Guilty Execution 0 227 2 0 0 Guilty Execution 0 228 1 0 0 Half Guilty Banishment 0 229 0 0 0 Guilty Execution 0 230 0 0 0 Banishment 0 231 0 0 0 Guilty Execution 0 232 0 0 0 Guilty Execution 0 233 0 0 0 0 234 0 0 0 0 235 0 0 0 0 236 0 0 0 0 237 0 0 0 0 238 2 0 0 Guilty Execution 0 239 2 0 0 Guilty Execution 0 240 0 0 0 Guilty Execution 0 241 0 0 0 0 242 0 0 0 0 243 0 0 0 0 244 0 0 0 0 245 0 0 0 0 246 0 0 0 0 247 0 0 0 0 248 0 0 0 0 249 0 0 0 0 250 0 0 0 0 251 0 0 0 0 252 0 0 0 0 253 0 0 0 0 254 0 0 0 0 255 0 0 0 0 256 0 0 0 0 257 0 0 0 0 258 0 0 0 0 259 0 0 0 0 260 0 0 0 0 261 0 0 0 0 262 0 0 0 0 263 0 0 0 0 264 0 0 0 0 265 0 0 0 0 266 0 0 0 0 267 0 0 0 0 268 0 0 0 0 269 0 0 0 0 270 0 0 0 0 271 0 0 0 0 272 0 0 0 0 273 0 0 0 0 274 0 0 0 0 275 0 0 0 0 276 0 0 0 0 277 0 0 0 Guilty Execution 0 278 0 0 0 0 279 0 0 0 0 280 0 0 0 0 281 0 0 0 0 282 4 0 0 0 283 0 0 0 0 284 0 0 0 0 285 3 0 0 0 286 0 0 0 0 287 0 0 0 0 288 0 0 0 0 289 0 0 0 0 290 0 0 0 0 291 0 0 0 0 292 0 0 0 0 293 0 0 0 0 294 0 0 0 Not Guilty 0 295 0 0 0 0 296 0 0 0 0 297 0 0 0 Guilty 0 298 0 0 0 0 299 0 0 0 0 300 0 0 0 Guilty 0 301 0 0 0 0 302 0 0 0 Guilty 0 303 0 0 0 0 304 0 0 0 0 305 0 0 0 0 306 0 0 0 0 307 1 0 0 0 308 0 0 0 0 309 0 0 0 0 310 0 0 0 0 311 0 0 0 0 312 0 0 0 0 313 0 0 0 0 314 0 0 0 0 315 0 0 0 0 316 0 0 0 Excommunicated 0 317 0 0 0 0 318 4 0 0 Execution 0 319 6 0 0 0 320 0 0 0 0 321 14 0 0 0 322 0 0 0 Execution 0 323 0 0 0 0 324 0 0 0 0 325 0 0 0 0 326 0 0 0 0 327 0 0 0 0 328 0 0 0 0 329 0 0 0 0 330 0 0 0 0 331 0 0 0 0 332 0 0 0 0 333 0 0 0 0 334 0 0 0 0 335 0 0 0 0 336 0 0 0 0 337 0 0 0 0 338 0 0 0 0 339 0 0 0 Guilty Execution 0 340 0 0 0 Guilty Execution 0 341 0 0 0 0 342 0 0 0 0 343 0 0 0 0 344 0 0 0 0 345 0 0 0 0 346 0 0 0 0 347 0 0 0 0 348 0 0 0 Execution 0 349 0 0 0 0 350 0 0 0 0 351 0 0 0 0 352 0 0 0 0 353 0 0 0 Not Proven 0 354 0 0 0 Not Proven 0 355 0 0 0 Guilty 0 356 0 0 0 0 357 0 0 0 0 358 0 0 0 0 359 0 0 0 0 360 0 0 0 0 361 0 0 0 0 362 0 0 0 0 363 0 0 0 0 364 0 0 0 0 365 0 0 0 0 366 0 0 0 0 367 0 0 0 0 368 5 0 0 0 369 1 0 0 Guilty Execution 0 370 0 0 0 0 371 0 0 0 0 372 0 0 0 0 373 0 0 0 0 374 0 0 0 0 375 0 0 0 0 376 0 0 0 0 377 0 0 0 0 378 0 0 0 0 379 0 0 0 0 380 0 0 0 0 381 0 0 0 0 382 0 0 0 0 383 0 0 0 0 384 0 0 0 0 385 0 0 0 0 386 0 0 0 0 387 0 0 0 0 388 0 0 0 0 389 3 0 0 0 390 0 0 0 0 391 0 0 0 0 392 0 0 0 0 393 0 0 0 Banishment 0 394 0 0 0 0 395 0 0 0 0 396 0 0 0 0 397 0 0 0 0 398 0 0 0 0 399 0 0 0 Guilty Execution 0 400 0 0 0 0 401 0 0 0 0 402 0 0 0 0 403 0 0 0 0 404 0 0 0 0 405 0 0 0 0 406 0 0 0 0 407 0 0 0 0 408 0 0 0 0 409 0 0 0 0 410 0 0 0 0 411 0 0 0 0 412 0 0 0 0 413 0 0 0 0 414 0 0 0 0 415 0 0 0 0 416 0 0 0 0 417 0 0 0 0 418 0 0 0 0 419 0 0 0 0 420 0 0 0 0 421 0 0 0 0 422 0 0 0 0 423 0 0 0 0 424 0 0 0 0 425 0 0 0 0 426 0 0 0 0 427 0 0 0 0 428 0 0 0 0 429 0 0 0 Guilty Hang 0 430 0 0 0 0 431 0 0 0 0 432 0 0 0 0 433 0 0 0 0 434 0 0 0 0 435 0 0 0 0 436 0 0 0 0 437 0 0 0 0 438 0 0 0 0 439 0 0 0 0 440 0 0 0 0 441 0 0 0 0 442 0 0 0 0 443 0 0 0 0 444 0 0 0 0 445 0 0 0 0 446 0 0 0 0 447 0 0 0 0 448 0 0 0 0 449 0 0 0 0 450 0 0 0 0 451 0 0 0 0 452 0 0 0 0 453 0 0 0 0 454 0 0 0 0 455 0 0 0 0 456 0 0 0 0 457 0 0 0 0 458 0 0 0 0 459 0 0 0 0 460 0 0 0 0 461 0 0 0 0 462 0 0 0 0 463 0 0 0 0 464 0 0 0 0 465 0 0 0 0 466 0 0 0 0 467 0 0 0 0 468 0 0 0 0 469 0 0 0 0 470 0 0 0 0 471 0 0 0 0 472 0 0 0 0 473 0 0 0 0 474 0 0 0 0 475 0 0 0 0 476 0 0 0 0 477 0 0 0 0 478 0 0 0 0 479 0 0 0 0 480 0 0 0 0 481 0 0 0 0 482 0 0 0 0 483 0 0 0 0 484 0 0 0 0 485 0 0 0 0 486 0 0 0 0 487 0 0 0 0 488 0 0 0 0 489 0 0 0 0 490 0 0 0 0 491 0 0 0 0 492 0 0 0 0 493 0 0 0 0 494 0 0 0 0 495 0 0 0 0 496 0 0 0 0 497 0 0 0 0 498 0 0 0 0 499 0 0 0 0 500 0 0 0 0 501 0 0 0 0 502 0 0 0 0 503 0 0 0 0 504 0 0 0 0 505 0 0 0 0 506 0 0 0 0 507 0 0 0 0 508 0 0 0 0 509 0 0 0 0 510 0 0 0 0 511 0 0 0 0 512 0 0 0 0 513 0 0 0 0 514 0 0 0 0 515 0 0 0 0 516 0 0 0 0 517 0 0 0 0 518 0 0 0 0 519 0 0 0 0 520 0 0 0 0 521 0 0 0 0 522 0 0 0 0 523 0 0 0 0 524 0 0 0 0 525 0 0 0 0 526 0 0 0 0 527 0 0 0 0 528 0 0 0 0 529 0 0 0 0 530 0 0 0 0 531 0 0 0 Half Guilty 0 532 0 0 0 0 533 0 0 0 0 534 0 0 0 0 535 0 0 0 0 536 0 0 0 0 537 0 0 0 0 538 0 0 0 0 539 0 0 0 0 540 0 0 0 0 541 0 0 0 0 542 0 0 0 0 543 0 0 0 0 544 0 0 0 0 545 0 0 0 0 546 0 0 0 0 547 0 0 0 0 548 0 0 0 0 549 0 0 0 0 550 0 0 0 0 551 0 0 0 0 552 0 0 0 0 553 0 0 0 0 554 0 0 0 0 555 0 0 0 0 556 0 0 0 0 557 0 0 0 0 558 0 0 0 0 559 0 0 0 0 560 0 0 0 0 561 0 0 0 0 562 0 0 0 0 563 0 0 0 0 564 0 0 0 0 565 0 0 0 0 566 0 0 0 0 567 0 0 0 0 568 0 0 0 0 569 0 0 0 0 570 0 0 0 0 571 0 0 0 0 572 0 0 0 0 573 0 0 0 0 574 0 0 0 0 575 0 0 0 0 576 0 0 0 0 577 0 0 0 0 578 0 0 0 0 579 0 0 0 0 580 0 0 0 0 581 0 0 0 0 582 0 0 0 0 583 0 0 0 0 584 0 0 0 0 585 0 0 0 0 586 0 0 0 0 587 0 0 0 0 588 0 0 0 0 589 0 0 0 0 590 0 0 0 0 591 0 0 0 0 592 0 0 0 0 593 0 0 0 0 594 0 0 0 0 595 0 0 0 0 596 0 0 0 0 597 0 0 0 0 598 0 0 0 0 599 0 0 0 0 600 0 0 0 0 601 0 0 0 0 602 0 0 0 0 603 0 0 0 0 604 0 0 0 0 605 0 0 0 0 606 0 0 0 0 607 0 0 0 0 608 0 0 0 0 609 0 0 0 0 610 0 0 0 0 611 0 0 0 0 612 0 0 0 0 613 0 0 0 0 614 0 0 0 0 615 0 0 0 0 616 0 0 0 0 617 0 0 0 0 618 0 0 0 0 619 0 0 0 0 620 0 0 0 0 621 0 0 0 0 622 0 0 0 0 623 0 0 0 0 624 0 0 0 0 625 0 0 0 0 626 0 0 0 0 627 0 0 0 0 628 0 0 0 0 629 0 0 0 0 630 0 0 0 0 631 0 0 0 0 632 0 0 0 0 633 0 0 0 0 634 0 0 0 0 635 0 0 0 0 636 0 0 0 0 637 0 0 0 0 638 0 0 0 0 639 0 0 0 0 640 0 0 0 0 641 0 0 0 0 642 0 0 0 0 643 0 0 0 0 644 0 0 0 0 645 0 0 0 0 646 0 0 0 0 647 0 0 0 0 648 0 0 0 0 649 0 0 0 0 650 0 0 0 0 651 0 0 0 0 652 0 0 0 0 653 15 0 0 Guilty Execution 0 654 0 0 0 0 655 0 0 0 Guilty Execution 0 656 0 0 0 0 657 0 0 0 0 658 0 0 0 0 659 0 0 0 0 660 0 0 0 0 661 0 0 0 0 662 0 0 0 0 663 0 0 0 0 664 0 0 0 0 665 0 0 0 0 666 0 0 0 0 667 0 0 0 0 668 0 0 0 0 669 0 0 0 0 670 0 0 0 0 671 0 0 0 0 672 0 0 0 0 673 0 0 0 0 674 0 0 0 0 675 0 0 0 0 676 0 0 0 0 677 0 0 0 0 678 0 0 0 0 679 0 0 0 0 680 0 0 0 0 681 0 0 0 0 682 0 0 0 0 683 0 0 0 0 684 0 0 0 0 685 0 0 0 0 686 0 0 0 0 687 0 0 0 0 688 0 0 0 0 689 0 0 0 0 690 0 0 0 0 691 0 0 0 0 692 0 0 0 0 693 0 0 0 0 694 0 0 0 0 695 0 0 0 0 696 0 0 0 0 697 0 0 0 0 698 0 0 0 0 699 0 0 0 0 700 0 0 0 0 701 0 0 0 0 702 0 0 0 0 703 0 0 0 0 704 0 0 0 0 705 0 0 0 0 706 0 0 0 0 707 0 0 0 0 708 0 0 0 0 709 0 0 0 0 710 0 0 0 0 711 0 0 0 0 712 0 0 0 0 713 0 0 0 0 714 0 0 0 0 715 0 0 0 0 716 0 0 0 0 717 0 0 0 0 718 0 0 0 0 719 0 0 0 0 720 0 0 0 0 721 0 0 0 0 722 0 0 0 0 723 0 0 0 0 724 0 0 0 0 725 0 0 0 0 726 0 0 0 0 727 0 0 0 0 728 0 0 0 0 729 0 0 0 0 730 0 0 0 0 731 0 0 0 0 732 0 0 0 0 733 0 0 0 Guilty Execution 0 734 0 0 0 0 735 0 0 0 0 736 0 0 0 0 737 0 0 0 0 738 0 0 0 0 739 0 0 0 0 740 0 0 0 0 741 0 0 0 0 742 0 0 0 0 743 0 0 0 0 744 0 0 0 0 745 0 0 0 0 746 0 0 0 0 747 0 0 0 0 748 0 0 0 0 749 0 0 0 0 750 0 0 0 0 751 0 0 0 0 752 0 0 0 0 753 0 0 0 0 754 0 0 0 0 755 0 0 0 0 756 0 0 0 0 757 0 0 0 0 758 0 0 0 0 759 0 0 0 0 760 0 0 0 0 761 0 0 0 0 762 0 0 0 0 763 0 0 0 0 764 0 0 0 0 765 6 0 0 Guilty Execution 0 766 0 0 0 0 767 0 0 0 0 768 0 0 0 0 769 0 0 0 0 770 0 1 0 0 771 0 1 0 0 772 0 0 0 0 773 0 0 0 0 774 0 0 0 0 775 0 0 0 0 776 0 0 0 0 777 0 0 0 0 778 0 0 0 0 779 0 0 0 0 780 0 0 0 0 781 0 0 0 0 782 0 0 0 0 783 0 0 0 0 784 0 0 0 0 785 0 0 0 0 786 0 0 0 0 787 0 0 0 0 788 0 0 0 0 789 0 0 0 Guilty Execution 0 790 0 0 0 0 791 0 0 0 0 792 0 0 0 0 793 0 0 0 Execution 0 794 0 0 0 Execution 0 795 0 0 0 Execution 0 796 0 0 0 0 797 0 0 0 0 798 0 0 0 0 799 0 0 0 0 800 0 0 0 0 801 0 0 0 0 802 0 0 0 0 803 0 0 0 0 804 0 0 0 Guilty Execution 0 805 0 0 0 0 806 0 0 0 0 807 0 0 0 0 808 0 0 0 0 809 0 0 0 0 810 0 0 0 0 811 0 0 0 0 812 0 0 0 0 813 0 0 0 0 814 0 0 0 0 815 0 0 0 0 816 0 0 0 0 817 0 0 0 0 818 0 0 0 0 819 0 0 0 0 820 0 0 0 0 821 0 0 0 0 822 0 0 0 0 823 0 0 0 0 824 0 0 0 0 825 0 0 0 0 826 0 0 0 0 827 0 0 0 0 828 0 0 0 0 829 0 0 0 0 830 0 0 0 0 831 0 0 0 0 832 0 0 0 0 833 0 0 0 0 834 0 0 0 0 835 0 0 0 0 836 0 0 0 0 837 0 0 0 0 838 0 0 0 0 839 0 0 0 0 840 0 0 0 0 841 0 0 0 0 842 0 0 0 0 843 0 0 0 0 844 0 0 0 0 845 0 0 0 0 846 0 0 0 0 847 0 0 0 0 848 0 0 0 0 849 0 0 0 0 850 0 0 0 0 851 0 0 0 0 852 0 0 0 0 853 0 0 0 0 854 0 0 0 0 855 0 0 0 0 856 0 0 0 0 857 0 0 0 0 858 0 0 0 0 859 0 0 0 0 860 0 0 0 0 861 0 0 0 0 862 0 0 0 0 863 0 0 0 0 864 0 0 0 0 865 0 0 0 0 866 0 0 0 0 867 0 0 0 0 868 0 0 0 0 869 0 0 0 0 870 0 0 0 0 871 0 0 0 0 872 0 0 0 Guilty Banishment 0 873 1 0 0 Guilty Banishment 0 874 0 0 0 0 875 7 0 0 Guilty Banishment 0 876 0 0 0 0 877 0 0 0 0 878 0 0 0 0 879 0 0 0 0 880 0 0 0 0 881 0 0 0 0 882 0 0 0 0 883 0 0 0 0 884 0 0 0 0 885 0 0 0 0 886 0 0 0 0 887 0 0 0 0 888 0 0 0 0 889 0 0 0 0 890 0 0 0 1 891 0 0 0 Banishment 0 892 0 0 0 0 893 0 0 0 0 894 0 0 0 0 895 0 0 0 0 896 0 0 0 0 897 0 0 0 0 898 0 0 0 0 899 0 0 0 0 900 0 0 0 0 901 0 0 0 0 902 0 0 0 0 903 0 0 0 0 904 0 0 0 0 905 0 0 0 0 906 0 0 0 0 907 0 0 0 0 908 0 0 0 0 909 0 0 0 0 910 0 0 0 0 911 0 0 0 0 912 0 0 0 0 913 0 0 0 0 914 0 0 0 0 915 0 0 0 0 916 0 0 0 0 917 0 0 0 0 918 0 0 0 0 919 0 0 0 0 920 0 0 0 0 921 0 0 0 0 922 0 0 0 0 923 0 0 0 0 924 0 0 0 0 925 0 0 0 0 926 0 0 0 0 927 0 0 0 0 928 0 0 0 0 929 0 0 0 0 930 0 0 0 0 931 0 0 0 0 932 0 0 0 0 933 0 0 0 0 934 0 0 0 0 935 0 0 0 0 936 0 0 0 0 937 0 0 0 0 938 0 0 0 0 939 0 0 0 0 940 0 0 0 0 941 0 0 0 0 942 0 0 0 0 943 0 0 0 0 944 0 0 0 0 945 0 0 0 0 946 0 0 0 0 947 0 0 0 0 948 0 0 0 0 949 0 0 0 0 950 0 0 0 0 951 0 0 0 0 952 3 1 0 0 953 0 0 0 0 954 1 1 0 0 955 3 0 0 Guilty Execution 0 956 0 0 0 0 957 0 0 0 0 958 0 0 0 0 959 0 0 0 0 960 0 0 0 0 961 0 0 0 0 962 0 0 0 0 963 0 0 0 0 964 0 0 0 0 965 0 0 0 0 966 0 0 0 0 967 0 0 0 0 968 0 0 0 0 969 0 0 0 0 970 0 0 0 0 971 0 0 0 Guilty Execution 0 972 0 0 0 0 973 0 0 0 0 974 25 0 0 Guilty 0 975 0 0 0 0 976 0 0 0 0 977 0 0 0 0 978 0 0 0 0 979 0 0 0 0 980 0 0 0 0 981 0 0 0 0 982 0 0 0 0 983 0 0 0 0 984 0 0 0 0 985 0 0 0 0 986 0 0 0 0 987 0 0 0 0 988 0 0 0 Guilty Execution 0 989 0 0 0 Guilty Execution 0 990 0 0 0 Guilty Execution 0 991 0 0 0 Guilty Execution 0 992 0 0 0 Banishment 0 993 7 1 0 Guilty Execution 0 994 7 1 0 Guilty Execution 0 995 7 0 1 Guilty Execution 0 996 7 0 0 Guilty Execution 0 997 7 1 0 Guilty Execution 0 998 0 0 0 Guilty Execution 0 999 0 0 0 0 1000 0 0 0 0 1001 0 0 0 0 1002 0 0 0 0 1003 0 0 0 0 1004 0 0 0 0 1005 0 0 0 0 1006 0 0 0 Not Proven Released 0 1007 0 0 0 Not Proven Released 0 1008 0 0 0 Not Proven Released 0 1009 0 0 0 0 1010 0 0 0 0 1011 0 0 0 0 1012 0 0 0 0 1013 0 0 0 0 1014 0 0 0 Guilty Execution 0 1015 0 0 0 0 1016 0 0 0 0 1017 0 0 0 0 1018 0 0 0 0 1019 0 0 0 0 1020 0 0 0 Guilty Execution 0 1021 0 0 0 0 1022 0 0 0 0 1023 0 0 0 0 1024 0 0 0 0 1025 0 0 0 0 1026 0 0 0 0 1027 0 0 0 0 1028 0 0 0 0 1029 0 0 0 Half Guilty Banishment 0 1030 0 0 0 Half Guilty Banishment 0 1031 0 0 0 0 1032 0 0 0 0 1033 0 0 0 0 1034 0 0 0 0 1035 0 0 0 0 1036 0 0 0 0 1037 0 0 0 0 1038 0 0 0 0 1039 0 0 0 0 1040 0 0 0 0 1041 0 0 0 0 1042 0 0 0 0 1043 0 0 0 0 1044 0 0 0 0 1045 0 0 0 0 1046 0 0 0 0 1047 0 0 0 0 1048 0 0 0 0 1049 0 0 0 0 1050 0 0 0 0 1051 0 0 0 0 1052 0 0 0 0 1053 0 0 0 0 1054 0 0 0 0 1055 0 0 0 0 1056 0 0 0 0 1057 0 0 0 0 1058 0 0 0 0 1059 0 0 0 0 1060 0 0 0 0 1061 0 0 0 0 1062 0 0 0 0 1063 0 0 0 0 1064 0 0 0 0 1065 0 0 0 0 1066 0 0 0 0 1067 0 0 0 0 1068 0 0 0 0 1069 0 0 0 0 1070 0 0 0 0 1071 0 0 0 0 1072 0 0 0 0 1073 0 0 0 0 1074 0 0 0 0 1075 0 0 0 0 1076 0 0 0 0 1077 0 0 0 0 1078 0 0 0 0 1079 0 0 0 0 1080 0 0 0 0 1081 0 0 0 0 1082 0 0 0 0 1083 0 0 0 0 1084 0 0 0 0 1085 0 0 0 0 1086 0 0 0 0 1087 0 0 0 0 1088 0 0 0 0 1089 0 0 0 Half Guilty Banishment 0 1090 0 0 0 0 1091 0 0 0 0 1092 0 0 0 0 1093 0 0 0 0 1094 0 0 0 0 1095 0 0 0 0 1096 0 0 0 0 1097 0 0 0 0 1098 0 0 0 0 1099 0 0 0 0 1100 0 0 0 Half Guilty Banishment 0 1101 0 0 0 0 1102 0 0 0 0 1103 0 0 0 0 1104 0 0 0 0 1105 0 0 0 0 1106 0 0 0 0 1107 0 0 0 0 1108 0 0 0 0 1109 0 0 0 0 1110 0 0 0 0 1111 0 0 0 0 1112 0 0 0 0 1113 0 0 0 0 1114 0 0 0 0 1115 0 0 0 0 1116 0 0 0 0 1117 0 0 0 0 1118 0 0 0 0 1119 0 0 0 0 1120 0 0 0 0 1121 0 0 0 0 1122 0 0 0 0 1123 0 0 0 0 1124 0 0 0 0 1125 0 0 0 0 1126 0 0 0 0 1127 0 0 0 0 1128 0 0 0 0 1129 0 0 0 0 1130 0 0 0 0 1131 0 0 0 0 1132 0 0 0 0 1133 0 0 0 0 1134 1 1 0 Guilty Banishment 0 1135 2 0 0 0 1136 0 0 0 0 1137 0 0 0 0 1138 0 0 0 0 1139 0 0 0 0 1140 0 0 0 0 1141 0 0 0 0 1142 0 0 0 0 1143 0 0 0 0 1144 0 0 0 0 1145 0 0 0 0 1146 0 0 1 Not Guilty 0 1147 0 0 0 0 1148 0 0 0 0 1149 0 0 0 0 1150 0 0 0 0 1151 0 0 0 0 1152 0 0 0 0 1153 0 0 0 0 1154 0 0 0 0 1155 0 0 0 0 1156 0 0 0 0 1157 0 0 0 0 1158 0 0 0 0 1159 0 0 0 0 1160 0 0 0 0 1161 0 0 0 0 1162 0 0 0 0 1163 0 0 0 0 1164 0 0 0 0 1165 11 0 0 0 1166 0 0 0 0 1167 0 0 0 0 1168 0 0 0 0 1169 0 0 0 0 1170 0 0 0 0 1171 0 0 0 0 1172 0 0 0 0 1173 0 0 0 0 1174 0 0 0 0 1175 0 0 0 0 1176 0 0 0 0 1177 0 0 0 0 1178 0 0 0 0 1179 0 0 0 0 1180 0 0 0 0 1181 0 0 0 0 1182 0 0 0 0 1183 0 0 0 0 1184 0 0 0 0 1185 0 0 0 0 1186 0 0 0 0 1187 0 0 0 0 1188 0 0 0 0 1189 0 0 0 0 1190 0 0 0 0 1191 0 0 0 0 1192 0 0 0 0 1193 0 0 0 0 1194 0 0 0 0 1195 0 0 0 0 1196 0 0 0 0 1197 0 0 0 0 1198 0 0 0 0 1199 0 0 0 0 1200 0 0 0 0 1201 0 0 0 Guilty Execution 0 1202 0 0 0 0 1203 0 0 0 Guilty Execution 0 1204 0 0 0 0 1205 0 0 0 0 1206 0 0 0 Guilty Execution 0 1207 0 0 0 0 1208 0 0 0 Guilty Execution 0 1209 0 0 0 0 1210 0 0 0 Guilty Execution 0 1211 0 0 0 0 1212 0 0 0 0 1213 0 0 0 Guilty Execution 0 1214 0 0 0 Guilty Execution 0 1215 0 0 0 Guilty Execution 0 1216 0 0 0 0 1217 0 0 0 0 1218 0 0 0 0 1219 0 0 0 0 1220 0 0 0 0 1221 0 0 0 0 1222 0 0 0 0 1223 0 0 0 0 1224 0 0 0 0 1225 0 0 0 0 1226 0 0 0 0 1227 0 0 0 0 1228 0 0 0 0 1229 0 0 0 0 1230 0 0 0 0 1231 0 0 0 0 1232 0 0 0 0 1233 0 0 0 0 1234 0 0 0 0 1235 0 0 0 0 1236 0 0 0 Banishment 0 1237 0 0 0 0 1238 0 0 0 0 1239 0 0 0 0 1240 0 0 0 0 1241 0 0 0 0 1242 0 0 0 0 1243 0 0 0 0 1244 0 0 0 0 1245 0 0 0 0 1246 0 0 0 0 1247 0 0 0 0 1248 0 0 0 0 1249 0 0 0 0 1250 0 0 0 0 1251 0 0 0 0 1252 0 0 0 0 1253 0 0 0 0 1254 0 0 0 0 1255 0 0 0 0 1256 0 0 0 0 1257 0 0 0 0 1258 0 0 0 0 1259 0 0 0 0 1260 0 0 0 0 1261 0 0 0 0 1262 0 0 0 0 1263 0 0 0 0 1264 0 0 0 0 1265 0 0 0 0 1266 0 0 0 0 1267 0 0 0 0 1268 0 0 0 0 1269 0 0 0 0 1270 0 0 0 0 1271 0 0 0 0 1272 25 1 1 Guilty Execution 1 1273 6 0 1 Guilty Execution 1 1274 0 0 0 0 1275 0 0 0 0 1276 0 0 0 0 1277 0 0 0 0 1278 12 0 0 Guilty Execution 0 1279 8 0 0 Guilty Branded 0 1280 0 0 0 Guilty 0 1281 0 0 0 Guilty 0 1282 0 0 0 Guilty 0 1283 0 0 0 Guilty Execution 0 1284 0 0 0 0 1285 0 0 0 0 1286 0 0 0 Guilty Execution 0 1287 0 0 0 0 1288 5 0 0 Not Guilty 0 1289 0 0 0 Guilty 0 1290 9 0 0 Guilty Execution 0 1291 0 0 0 0 1292 0 0 0 0 1293 0 0 0 0 1294 0 0 0 0 1295 0 0 0 0 1296 0 0 0 0 1297 0 0 0 0 1298 0 0 0 0 1299 0 0 0 0 1300 0 0 0 0 1301 0 0 0 0 1302 0 0 0 0 1303 0 0 0 0 1304 0 0 0 0 1305 0 0 0 0 1306 0 0 0 0 1307 0 0 0 0 1308 0 0 0 0 1309 0 0 0 0 1310 0 0 0 0 1311 0 0 0 0 1312 0 0 0 0 1313 0 0 0 0 1314 0 0 0 0 1315 0 0 0 0 1316 0 0 0 0 1317 0 0 0 0 1318 11 1 1 Not Guilty 1 1319 0 0 0 0 1320 0 0 0 0 1321 0 0 0 0 1322 0 0 0 0 1323 0 0 0 0 1324 0 0 0 0 1325 0 0 0 0 1326 0 0 0 0 1327 0 0 0 0 1328 0 0 0 0 1329 0 0 0 0 1330 0 0 0 0 1331 0 0 0 0 1332 0 0 0 0 1333 0 0 0 0 1334 0 0 0 0 1335 0 0 0 0 1336 0 0 0 0 1337 0 0 0 0 1338 0 0 0 0 1339 0 0 0 0 1340 0 0 0 0 1341 0 0 0 0 1342 0 0 0 0 1343 0 0 0 0 1344 0 0 0 0 1345 0 0 0 Guilty 0 1346 0 0 0 Guilty Execution 0 1347 0 0 0 Guilty Execution 0 1348 0 0 0 Guilty Execution 0 1349 0 0 0 0 1350 0 0 1 Not Proven 0 1351 0 0 1 Not Proven 0 1352 0 0 0 0 1353 0 0 0 Guilty Execution 0 1354 0 0 0 Guilty 0 1355 0 0 0 0 1356 0 0 0 0 1357 0 0 0 0 1358 0 0 0 0 1359 0 0 0 0 1360 0 0 0 0 1361 0 0 0 0 1362 0 0 0 0 1363 9 0 0 Guilty Execution 0 1364 0 0 0 0 1365 0 0 0 0 1366 0 0 0 0 1367 0 0 0 0 1368 0 0 0 0 1369 0 0 0 0 1370 0 0 0 0 1371 24 0 0 0 1372 0 0 0 0 1373 0 0 0 0 1374 0 0 0 0 1375 0 0 0 0 1376 0 0 0 0 1377 0 0 0 0 1378 0 0 0 0 1379 7 0 0 Guilty Execution 0 1380 19 0 0 Guilty Execution 0 1381 13 0 0 Guilty Execution 0 1382 0 0 0 0 1383 0 0 0 0 1384 0 0 0 0 1385 0 0 0 Guilty Execution 0 1386 0 0 0 Guilty Execution 0 1387 0 0 0 Guilty Execution 0 1388 0 0 0 Guilty Execution 0 1389 0 0 0 Guilty Execution 0 1390 0 0 0 Guilty Execution 0 1391 0 0 0 0 1392 0 0 0 Not Guilty 0 1393 0 0 0 Not Guilty 0 1394 0 0 0 0 1395 21 0 0 Guilty Execution 0 1396 13 0 0 Guilty Execution 0 1397 12 0 0 Guilty Execution 0 1398 7 0 0 Guilty Execution 0 1399 5 0 0 Guilty Execution 0 1400 9 0 0 Not Guilty 0 1401 0 0 0 0 1402 0 0 0 0 1403 0 0 0 0 1404 0 0 0 0 1405 0 0 0 0 1406 4 0 0 Guilty 0 1407 9 0 0 Guilty 0 1408 5 0 0 Not Guilty 0 1409 0 0 0 Guilty 0 1410 3 0 0 Not Guilty 0 1411 4 0 0 Not Guilty 0 1412 0 0 0 0 1413 0 0 0 0 1414 0 0 0 0 1415 0 0 0 0 1416 0 0 0 0 1417 0 0 0 0 1418 0 0 0 0 1419 0 0 0 0 1420 0 0 0 0 1421 0 0 0 0 1422 0 0 0 0 1423 0 0 0 0 1424 0 0 0 0 1425 0 0 0 Guilty Execution 0 1426 0 0 0 0 1427 0 0 0 0 1428 0 0 0 Guilty 0 1429 0 0 0 0 1430 0 0 0 Guilty 0 1431 0 0 0 0 1432 0 0 0 0 1433 0 0 0 Not Guilty 0 1434 0 0 0 0 1435 0 0 0 0 1436 0 0 0 Not Guilty 0 1437 0 0 0 0 1438 0 0 0 0 1439 0 0 0 0 1440 0 0 0 0 1441 0 0 0 Guilty Execution 0 1442 0 0 0 Guilty Execution 0 1443 0 0 0 0 1444 0 0 0 Guilty Banishment 0 1445 0 0 0 Guilty Execution 0 1446 0 0 0 0 1447 0 0 0 0 1448 0 0 0 0 1449 0 0 0 0 1450 0 0 0 0 1451 0 0 0 0 1452 0 0 0 0 1453 0 0 0 0 1454 0 0 0 0 1455 0 0 0 0 1456 0 0 0 0 1457 0 0 0 0 1458 0 0 0 0 1459 0 0 0 0 1460 0 0 0 0 1461 0 0 0 0 1462 0 0 0 0 1463 0 0 0 0 1464 0 0 0 0 1465 0 0 0 0 1466 0 0 0 0 1467 0 0 0 0 1468 0 0 0 0 1469 0 0 0 0 1470 0 0 0 0 1471 0 0 0 0 1472 0 0 0 0 1473 0 0 0 0 1474 0 0 0 0 1475 0 0 0 0 1476 0 0 0 0 1477 0 0 0 0 1478 0 0 0 0 1479 0 0 0 0 1480 0 0 0 0 1481 0 0 0 0 1482 0 0 0 0 1483 0 0 0 0 1484 0 0 0 0 1485 0 0 0 0 1486 0 0 0 0 1487 0 0 0 0 1488 0 0 0 0 1489 0 0 0 0 1490 0 0 0 0 1491 12 1 0 Guilty 0 1492 0 0 0 Not Guilty 0 1493 8 0 0 Not Guilty 0 1494 10 0 0 Guilty Execution 0 1495 11 0 0 Guilty Execution 0 1496 0 0 0 0 1497 6 0 0 Guilty Execution 0 1498 6 0 0 Guilty Execution 0 1499 9 0 0 Guilty Execution 0 1500 11 0 0 Guilty Execution 0 1501 9 0 0 Guilty Execution 0 1502 0 0 0 0 1503 10 0 0 Guilty Execution 0 1504 4 0 0 Not Guilty 0 1505 6 0 1 Not Guilty 0 1506 0 0 0 0 1507 0 0 0 0 1508 3 0 0 0 1509 4 0 0 0 1510 0 0 0 0 1511 0 0 0 0 1512 0 0 0 0 1513 5 0 0 Guilty Execution 0 1514 6 0 0 Guilty Execution 0 1515 0 0 0 Released 0 1516 0 0 0 0 1517 0 0 0 0 1518 0 0 0 0 1519 0 0 0 0 1520 0 0 0 0 1521 0 0 0 0 1522 0 0 0 0 1523 0 0 0 0 1524 0 0 0 0 1525 0 0 0 0 1526 0 0 0 0 1527 0 0 0 0 1528 0 0 0 0 1529 0 0 0 0 1530 0 0 0 0 1531 0 0 0 0 1532 0 0 0 0 1533 0 0 0 Declared Fugitive 0 1534 0 0 0 Released 0 1535 0 0 0 Declared Fugitive 0 1536 0 0 0 Released 0 1537 0 0 0 Released 0 1538 0 0 0 Released 0 Cjtdate Cjtdate.as.date Circuit Circuitname Localwithcrep 1 0 0 2 0 0 3 0 0 4 0 0 5 0 0 6 0 0 7 0 0 8 0 0 9 0 0 10 0 0 11 0 0 12 0 0 13 0 0 14 0 0 15 0 0 16 0 0 17 0 0 18 0 0 19 0 0 20 0 0 21 0 0 22 0 0 23 0 0 24 0 0 25 0 0 26 0 0 27 0 0 28 0 0 29 0 0 30 0 0 31 0 0 32 0 0 33 0 0 34 0 0 35 0 0 36 0 0 37 0 0 38 0 0 39 0 0 40 0 0 41 0 0 42 0 0 43 0 0 44 0 0 45 0 0 46 0 0 47 0 0 48 0 0 49 0 0 50 0 0 51 0 0 52 0 0 53 0 0 54 0 0 55 0 0 56 0 0 57 0 0 58 0 0 59 0 0 60 0 0 61 0 0 62 0 0 63 0 0 64 0 0 65 0 0 66 0 0 67 0 0 68 0 0 69 0 0 70 0 0 71 0 0 72 0 0 73 0 0 74 0 0 75 0 0 76 0 0 77 0 0 78 0 0 79 0 0 80 0 0 81 0 0 82 0 0 83 0 0 84 0 0 85 0 0 86 0 0 87 0 0 88 0 0 89 0 0 90 0 0 91 0 0 92 0 0 93 0 0 94 0 0 95 0 0 96 0 0 97 0 0 98 0 0 99 0 0 100 0 0 101 0 0 102 0 0 103 0 0 104 0 0 105 0 0 106 0 0 107 0 0 108 0 0 109 0 0 110 0 0 111 0 0 112 0 0 113 0 0 114 0 0 115 0 0 116 0 0 117 0 0 118 0 0 119 0 0 120 0 0 121 0 0 122 0 0 123 0 0 124 0 0 125 0 0 126 0 0 127 0 0 128 0 0 129 0 0 130 0 0 131 0 0 132 0 0 133 0 0 134 0 0 135 0 0 136 0 0 137 0 0 138 0 0 139 0 0 140 0 0 141 0 0 142 0 0 143 0 0 144 0 0 145 0 0 146 0 0 147 0 0 148 0 0 149 0 0 150 0 0 151 0 0 152 0 0 153 0 0 154 0 0 155 0 0 156 0 0 157 0 0 158 0 0 159 0 0 160 0 0 161 0 0 162 0 0 163 0 0 164 0 0 165 0 0 166 0 0 167 0 0 168 0 0 169 0 0 170 0 0 171 0 0 172 0 0 173 0 0 174 0 0 175 0 0 176 0 0 177 0 0 178 0 0 179 0 0 180 0 0 181 0 0 182 0 0 183 0 0 184 0 0 185 0 0 186 0 0 187 0 0 188 0 0 189 0 0 190 0 0 191 0 0 192 0 0 193 0 0 194 0 0 195 0 0 196 0 0 197 0 0 198 0 0 199 0 0 200 0 0 201 0 0 202 0 0 203 0 0 204 0 0 205 0 0 206 0 0 207 0 0 208 0 0 209 0 0 210 0 0 211 0 0 212 0 0 213 0 0 214 0 0 215 0 0 216 0 0 217 0 0 218 0 0 219 0 0 220 0 0 221 0 0 222 0 0 223 0 0 224 0 0 225 0 0 226 0 0 227 0 0 228 0 0 229 0 0 230 0 0 231 0 0 232 0 0 233 0 0 234 0 0 235 0 0 236 0 0 237 0 0 238 0 0 239 0 0 240 0 0 241 0 0 242 0 0 243 0 0 244 0 0 245 0 0 246 0 0 247 0 0 248 0 0 249 0 0 250 0 0 251 0 0 252 0 0 253 0 0 254 0 0 255 0 0 256 0 0 257 0 0 258 0 0 259 0 0 260 0 0 261 0 0 262 0 0 263 0 0 264 0 0 265 0 0 266 0 0 267 0 0 268 0 0 269 0 0 270 0 0 271 0 0 272 0 0 273 0 0 274 0 0 275 0 0 276 0 0 277 0 0 278 0 0 279 0 0 280 0 0 281 0 0 282 0 0 283 0 0 284 0 0 285 0 0 286 0 0 287 0 0 288 0 0 289 0 0 290 0 0 291 0 0 292 0 0 293 0 0 294 0 0 295 0 0 296 0 0 297 0 0 298 0 0 299 0 0 300 0 0 301 0 0 302 0 0 303 0 0 304 0 0 305 0 0 306 0 0 307 0 0 308 0 0 309 0 0 310 0 0 311 0 0 312 0 0 313 0 0 314 0 0 315 0 0 316 0 0 317 0 0 318 0 0 319 0 0 320 0 0 321 0 0 322 0 0 323 0 0 324 0 0 325 0 0 326 0 0 327 0 0 328 0 0 329 0 0 330 0 0 331 0 0 332 0 0 333 0 0 334 0 0 335 0 0 336 0 0 337 0 0 338 0 0 339 0 0 340 0 0 341 0 0 342 0 0 343 0 0 344 0 0 345 0 0 346 0 0 347 0 0 348 0 0 349 0 0 350 0 0 351 0 0 352 0 0 353 0 0 354 0 0 355 0 0 356 0 0 357 0 0 358 0 0 359 0 0 360 0 0 361 0 0 362 0 0 363 0 0 364 0 0 365 0 0 366 0 0 367 0 0 368 0 0 369 0 0 370 0 0 371 0 0 372 0 0 373 0 0 374 0 0 375 0 0 376 0 0 377 0 0 378 0 0 379 0 0 380 0 0 381 0 0 382 0 0 383 0 0 384 0 0 385 0 0 386 0 0 387 0 0 388 0 0 389 0 0 390 0 0 391 0 0 392 0 0 393 0 0 394 0 0 395 0 0 396 0 0 397 0 0 398 0 0 399 0 0 400 0 0 401 0 0 402 0 0 403 0 0 404 0 0 405 0 0 406 0 0 407 0 0 408 0 0 409 0 0 410 0 0 411 0 0 412 0 0 413 0 0 414 0 0 415 0 0 416 0 0 417 0 0 418 0 0 419 0 0 420 0 0 421 0 0 422 0 0 423 0 0 424 0 0 425 0 0 426 0 0 427 0 0 428 0 0 429 0 0 430 0 0 431 0 0 432 0 0 433 0 0 434 0 0 435 0 0 436 0 0 437 0 0 438 0 0 439 0 0 440 0 0 441 0 0 442 0 0 443 0 0 444 0 0 445 0 0 446 0 0 447 0 0 448 0 0 449 0 0 450 0 0 451 0 0 452 0 0 453 0 0 454 0 0 455 0 0 456 0 0 457 0 0 458 0 0 459 0 0 460 0 0 461 0 0 462 0 0 463 0 0 464 0 0 465 0 0 466 0 0 467 0 0 468 0 0 469 0 0 470 0 0 471 0 0 472 0 0 473 0 0 474 0 0 475 0 0 476 0 0 477 0 0 478 0 0 479 0 0 480 0 0 481 0 0 482 0 0 483 0 0 484 0 0 485 0 0 486 0 0 487 0 0 488 0 0 489 0 0 490 0 0 491 0 0 492 0 0 493 0 0 494 0 0 495 0 0 496 0 0 497 0 0 498 0 0 499 0 0 500 0 0 501 0 0 502 0 0 503 0 0 504 0 0 505 0 0 506 0 0 507 0 0 508 0 0 509 0 0 510 0 0 511 0 0 512 0 0 513 0 0 514 0 0 515 0 0 516 0 0 517 0 0 518 0 0 519 0 0 520 0 0 521 0 0 522 0 0 523 0 0 524 0 0 525 0 0 526 0 0 527 0 0 528 0 0 529 0 0 530 0 0 531 0 0 532 0 0 533 0 0 534 0 0 535 0 0 536 0 0 537 0 0 538 0 0 539 0 0 540 0 0 541 0 0 542 0 0 543 0 0 544 0 0 545 0 0 546 0 0 547 0 0 548 0 0 549 0 0 550 0 0 551 0 0 552 0 0 553 0 0 554 0 0 555 0 0 556 0 0 557 0 1 558 0 1 559 0 0 560 0 1 561 0 0 562 0 0 563 0 0 564 0 0 565 0 0 566 0 0 567 0 0 568 0 0 569 0 0 570 0 0 571 0 0 572 0 0 573 0 0 574 0 0 575 0 0 576 0 0 577 0 0 578 0 0 579 0 0 580 0 0 581 0 0 582 0 0 583 0 0 584 0 0 585 0 0 586 0 0 587 0 0 588 0 0 589 0 0 590 0 0 591 0 0 592 0 0 593 0 0 594 0 0 595 0 0 596 0 0 597 0 0 598 0 0 599 0 0 600 0 0 601 0 0 602 0 0 603 0 0 604 0 0 605 0 0 606 0 0 607 0 0 608 0 0 609 0 0 610 0 0 611 0 0 612 0 0 613 0 0 614 0 0 615 0 0 616 0 0 617 0 0 618 0 0 619 0 0 620 0 0 621 0 0 622 0 0 623 0 0 624 0 0 625 0 0 626 0 0 627 0 0 628 0 0 629 0 0 630 0 0 631 0 0 632 0 0 633 0 0 634 0 0 635 0 0 636 0 0 637 0 0 638 0 0 639 0 0 640 0 0 641 0 0 642 0 0 643 0 0 644 0 0 645 0 0 646 0 0 647 0 0 648 0 0 649 0 0 650 0 0 651 0 0 652 0 0 653 0 0 654 0 0 655 0 0 656 0 0 657 0 0 658 0 0 659 0 0 660 0 0 661 0 0 662 0 0 663 0 0 664 0 0 665 0 0 666 0 0 667 0 0 668 0 0 669 0 0 670 0 0 671 0 0 672 0 0 673 0 0 674 0 0 675 0 0 676 0 0 677 0 0 678 0 0 679 0 0 680 0 0 681 0 0 682 0 0 683 0 0 684 0 0 685 0 0 686 0 0 687 0 0 688 0 0 689 0 0 690 0 0 691 0 0 692 0 0 693 0 0 694 0 0 695 0 0 696 0 0 697 0 0 698 0 0 699 0 0 700 0 0 701 0 0 702 0 0 703 0 0 704 0 0 705 0 0 706 0 0 707 0 0 708 0 0 709 0 0 710 0 0 711 0 0 712 0 0 713 0 0 714 0 0 715 0 0 716 0 0 717 0 0 718 0 0 719 0 0 720 0 0 721 0 0 722 0 0 723 0 0 724 0 0 725 0 0 726 0 0 727 0 0 728 0 0 729 0 0 730 0 0 731 0 0 732 0 0 733 0 0 734 0 0 735 0 0 736 0 0 737 0 0 738 0 0 739 0 0 740 0 0 741 0 0 742 0 0 743 0 0 744 0 0 745 0 0 746 0 0 747 0 0 748 0 0 749 0 0 750 0 0 751 0 0 752 0 0 753 0 0 754 0 0 755 0 0 756 0 0 757 0 0 758 0 0 759 0 0 760 0 0 761 0 0 762 0 0 763 0 0 764 0 0 765 0 0 766 0 0 767 0 0 768 0 0 769 0 0 770 0 0 771 0 0 772 0 0 773 0 0 774 0 0 775 0 0 776 0 0 777 0 0 778 0 0 779 0 0 780 0 0 781 0 0 782 0 0 783 0 0 784 0 0 785 0 0 786 0 0 787 0 0 788 0 0 789 0 0 790 0 0 791 0 0 792 0 0 793 0 0 794 0 0 795 0 0 796 0 0 797 0 0 798 0 0 799 0 0 800 0 0 801 0 0 802 0 0 803 0 0 804 0 0 805 0 0 806 0 0 807 0 0 808 0 0 809 0 0 810 0 0 811 0 0 812 0 0 813 0 0 814 0 0 815 0 0 816 0 0 817 0 0 818 0 0 819 0 0 820 0 0 821 0 0 822 0 0 823 0 0 824 0 0 825 0 0 826 0 0 827 0 0 828 0 0 829 0 0 830 0 0 831 0 0 832 0 0 833 0 0 834 0 0 835 0 0 836 0 0 837 0 0 838 0 0 839 0 0 840 0 0 841 0 0 842 0 0 843 0 0 844 0 0 845 0 0 846 0 0 847 0 0 848 0 0 849 0 0 850 0 0 851 0 0 852 0 0 853 0 0 854 0 0 855 0 0 856 0 0 857 0 0 858 0 0 859 0 0 860 0 0 861 0 0 862 0 0 863 0 0 864 0 0 865 0 0 866 0 0 867 0 0 868 0 0 869 0 0 870 0 0 871 0 0 872 1 North 0 873 1 North 0 874 0 0 875 1 North 0 876 0 0 877 0 0 878 0 0 879 0 0 880 0 0 881 0 0 882 0 0 883 0 0 884 0 0 885 0 0 886 0 0 887 0 0 888 0 0 889 0 0 890 13/9/1678 09/13/78 00:00:00 1 0 891 0 0 892 0 0 893 0 0 894 0 0 895 0 0 896 0 0 897 0 0 898 0 0 899 0 0 900 0 0 901 0 0 902 0 0 903 0 0 904 0 0 905 0 0 906 0 0 907 0 0 908 0 0 909 0 0 910 0 0 911 0 0 912 0 0 913 0 0 914 0 0 915 0 0 916 0 0 917 0 0 918 0 0 919 0 0 920 0 0 921 0 0 922 0 0 923 0 0 924 0 0 925 0 0 926 0 0 927 0 0 928 0 0 929 0 0 930 0 0 931 0 0 932 0 0 933 0 0 934 0 0 935 0 0 936 0 0 937 0 0 938 0 0 939 0 0 940 0 0 941 0 0 942 0 0 943 0 0 944 0 0 945 0 0 946 0 0 947 0 0 948 0 0 949 0 0 950 0 0 951 0 0 952 0 0 953 0 0 954 0 0 955 0 0 956 0 0 957 0 0 958 0 0 959 0 0 960 0 0 961 0 0 962 0 0 963 0 0 964 0 0 965 0 0 966 0 0 967 0 0 968 0 0 969 0 0 970 0 0 971 0 0 972 0 1 973 0 0 974 0 0 975 0 0 976 0 0 977 0 0 978 0 0 979 0 0 980 0 0 981 0 0 982 0 0 983 0 0 984 0 0 985 0 0 986 0 0 987 0 0 988 0 0 989 0 0 990 0 0 991 0 0 992 0 0 993 0 1 994 0 1 995 0 1 996 0 1 997 0 1 998 0 1 999 0 0 1000 0 0 1001 0 0 1002 0 0 1003 0 0 1004 0 0 1005 0 0 1006 0 0 1007 0 0 1008 0 0 1009 0 0 1010 0 0 1011 0 0 1012 0 0 1013 0 0 1014 0 0 1015 0 0 1016 0 0 1017 0 0 1018 0 0 1019 0 0 1020 0 0 1021 0 0 1022 0 0 1023 0 0 1024 0 0 1025 0 0 1026 0 0 1027 0 0 1028 0 0 1029 0 0 1030 0 0 1031 0 0 1032 0 0 1033 0 0 1034 0 0 1035 0 0 1036 0 0 1037 0 0 1038 0 0 1039 0 0 1040 0 0 1041 0 0 1042 0 0 1043 0 0 1044 0 0 1045 0 0 1046 0 0 1047 0 0 1048 0 0 1049 0 0 1050 0 0 1051 0 0 1052 0 0 1053 0 0 1054 0 0 1055 0 0 1056 0 0 1057 0 0 1058 0 0 1059 0 0 1060 0 0 1061 0 0 1062 0 0 1063 0 0 1064 0 0 1065 0 0 1066 0 0 1067 0 0 1068 0 0 1069 0 0 1070 0 0 1071 0 0 1072 0 0 1073 0 0 1074 0 0 1075 0 0 1076 0 0 1077 0 0 1078 0 0 1079 0 0 1080 0 0 1081 0 0 1082 0 0 1083 0 0 1084 0 0 1085 0 0 1086 0 0 1087 0 0 1088 0 0 1089 0 0 1090 0 0 1091 0 0 1092 0 0 1093 0 0 1094 0 0 1095 0 0 1096 0 0 1097 0 0 1098 0 0 1099 0 0 1100 0 0 1101 0 0 1102 0 0 1103 0 0 1104 0 0 1105 0 0 1106 0 0 1107 0 0 1108 0 0 1109 0 0 1110 0 0 1111 0 0 1112 0 0 1113 0 0 1114 0 0 1115 0 0 1116 0 0 1117 0 0 1118 0 0 1119 0 0 1120 0 0 1121 0 0 1122 0 0 1123 0 0 1124 0 0 1125 0 0 1126 0 0 1127 0 0 1128 0 0 1129 0 0 1130 0 0 1131 0 0 1132 0 0 1133 0 0 1134 0 0 1135 0 0 1136 0 0 1137 0 0 1138 0 0 1139 0 0 1140 0 0 1141 0 0 1142 0 0 1143 0 0 1144 0 0 1145 0 0 1146 0 0 1147 0 0 1148 0 0 1149 0 0 1150 0 0 1151 0 0 1152 0 0 1153 0 0 1154 0 0 1155 0 0 1156 0 0 1157 0 0 1158 0 0 1159 0 0 1160 0 0 1161 0 0 1162 0 0 1163 0 0 1164 0 0 1165 0 0 1166 0 0 1167 0 0 1168 0 0 1169 0 0 1170 0 0 1171 0 0 1172 0 0 1173 0 0 1174 0 0 1175 0 0 1176 0 0 1177 0 0 1178 0 0 1179 0 0 1180 0 0 1181 0 0 1182 0 0 1183 0 0 1184 0 0 1185 0 0 1186 0 0 1187 0 0 1188 0 0 1189 0 0 1190 0 0 1191 0 0 1192 0 0 1193 0 0 1194 0 0 1195 0 0 1196 0 0 1197 0 0 1198 0 0 1199 0 0 1200 0 0 1201 0 0 1202 0 0 1203 0 0 1204 0 0 1205 0 0 1206 0 0 1207 0 0 1208 0 0 1209 0 0 1210 0 0 1211 0 0 1212 0 0 1213 0 0 1214 0 0 1215 0 0 1216 0 0 1217 0 0 1218 0 0 1219 0 0 1220 0 0 1221 0 0 1222 0 0 1223 0 0 1224 0 0 1225 0 0 1226 0 0 1227 0 0 1228 0 0 1229 0 0 1230 0 0 1231 0 0 1232 0 0 1233 0 0 1234 0 0 1235 0 0 1236 0 0 1237 0 0 1238 0 0 1239 0 0 1240 0 0 1241 0 0 1242 0 0 1243 0 0 1244 0 0 1245 0 0 1246 0 0 1247 0 0 1248 0 0 1249 0 0 1250 0 0 1251 0 0 1252 0 0 1253 0 0 1254 0 0 1255 0 0 1256 0 0 1257 0 0 1258 0 0 1259 0 0 1260 0 0 1261 0 0 1262 0 0 1263 0 0 1264 0 0 1265 0 0 1266 0 0 1267 0 0 1268 0 0 1269 0 0 1270 0 0 1271 0 0 1272 28/1/1629 01/28/29 00:00:00 0 0 1273 5/9/1629 09/05/29 00:00:00 0 0 1274 0 0 1275 0 0 1276 0 0 1277 0 0 1278 0 0 1279 0 0 1280 0 0 1281 0 0 1282 0 0 1283 0 0 1284 0 0 1285 0 0 1286 0 0 1287 1 West 0 1288 0 0 1289 0 0 1290 0 0 1291 0 0 1292 0 0 1293 0 0 1294 0 0 1295 0 0 1296 0 0 1297 0 0 1298 0 0 1299 0 0 1300 0 0 1301 0 0 1302 0 0 1303 0 0 1304 0 0 1305 0 0 1306 0 0 1307 0 0 1308 0 0 1309 0 0 1310 0 0 1311 0 0 1312 0 0 1313 0 0 1314 0 0 1315 0 0 1316 0 0 1317 0 0 1318 9/1/1634 01/09/34 00:00:00 0 0 1319 0 0 1320 0 0 1321 0 0 1322 0 0 1323 0 0 1324 0 0 1325 0 0 1326 0 0 1327 0 0 1328 0 0 1329 0 0 1330 0 0 1331 0 0 1332 0 0 1333 0 0 1334 0 0 1335 0 0 1336 0 0 1337 0 0 1338 0 0 1339 0 0 1340 0 0 1341 0 0 1342 0 0 1343 0 0 1344 0 0 1345 0 0 1346 0 0 1347 0 0 1348 0 0 1349 0 0 1350 0 0 1351 0 0 1352 0 0 1353 0 0 1354 0 0 1355 0 0 1356 0 0 1357 0 0 1358 0 0 1359 0 0 1360 0 0 1361 0 0 1362 0 0 1363 0 0 1364 0 0 1365 0 0 1366 0 0 1367 0 0 1368 0 0 1369 0 0 1370 0 0 1371 0 0 1372 0 0 1373 0 0 1374 0 0 1375 0 0 1376 0 0 1377 0 0 1378 0 0 1379 0 0 1380 0 0 1381 0 0 1382 0 0 1383 0 0 1384 0 0 1385 0 0 1386 0 0 1387 0 0 1388 0 0 1389 0 0 1390 0 0 1391 0 0 1392 1 North 0 1393 1 North 0 1394 1 North 0 1395 1 South and West 0 1396 1 South and West 0 1397 1 South and West 0 1398 1 South and West 0 1399 1 South and West 0 1400 1 South and West 0 1401 1 South and West 0 1402 1 South and West 0 1403 1 South and West 0 1404 1 South and West 0 1405 1 South and West 0 1406 1 North 0 1407 1 North 0 1408 1 North 0 1409 1 North 0 1410 1 North 0 1411 1 North 0 1412 1 North 0 1413 0 0 1414 0 0 1415 0 0 1416 0 0 1417 0 0 1418 0 0 1419 0 0 1420 0 0 1421 0 0 1422 0 0 1423 0 0 1424 0 0 1425 0 0 1426 0 0 1427 0 0 1428 0 0 1429 0 0 1430 0 0 1431 0 0 1432 0 0 1433 0 0 1434 0 0 1435 0 0 1436 0 0 1437 0 0 1438 0 1 1439 0 1 1440 0 1 1441 0 0 1442 0 0 1443 0 0 1444 0 0 1445 0 1 1446 0 0 1447 0 0 1448 0 0 1449 0 0 1450 0 0 1451 0 0 1452 0 0 1453 0 0 1454 0 0 1455 0 0 1456 0 0 1457 0 0 1458 0 0 1459 0 0 1460 0 0 1461 0 0 1462 0 0 1463 0 0 1464 0 0 1465 0 0 1466 0 0 1467 0 0 1468 0 0 1469 0 0 1470 0 0 1471 0 0 1472 0 0 1473 0 0 1474 0 0 1475 0 0 1476 0 0 1477 0 0 1478 0 0 1479 0 0 1480 0 0 1481 0 0 1482 0 0 1483 0 0 1484 0 0 1485 0 0 1486 0 0 1487 0 0 1488 0 0 1489 0 0 1490 0 0 1491 1 North 0 1492 1 North 0 1493 1 South and West 0 1494 1 South and West 0 1495 1 South and West 0 1496 0 0 1497 1 South and West 0 1498 1 South and West 0 1499 1 South and West 0 1500 1 South and West 0 1501 1 South and West 0 1502 0 0 1503 1 South and West 0 1504 1 South and West 0 1505 1 North 0 1506 0 0 1507 0 0 1508 1 North 0 1509 1 North 0 1510 1 North 0 1511 0 0 1512 0 0 1513 1 South 0 1514 1 South 0 1515 1 South 0 1516 1 South 0 1517 1 South 0 1518 1 South 0 1519 1 South 0 1520 0 0 1521 1 0 1522 1 0 1523 1 0 1524 1 0 1525 1 0 1526 1 0 1527 1 0 1528 1 0 1529 1 0 1530 1 0 1531 1 0 1532 1 0 1533 1 0 1534 1 0 1535 1 0 1536 0 0 1537 1 0 1538 1 0 Noreftocentral 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 49 0 50 0 51 0 52 0 53 0 54 1 55 0 56 0 57 0 58 0 59 0 60 0 61 0 62 1 63 0 64 0 65 0 66 0 67 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 1 85 1 86 1 87 1 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 1 129 1 130 1 131 0 132 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 145 0 146 0 147 0 148 0 149 0 150 0 151 0 152 0 153 0 154 0 155 0 156 0 157 0 158 0 159 0 160 0 161 0 162 0 163 0 164 0 165 0 166 0 167 0 168 0 169 0 170 0 171 0 172 0 173 0 174 0 175 0 176 0 177 0 178 0 179 0 180 0 181 0 182 0 183 0 184 0 185 0 186 0 187 0 188 0 189 0 190 0 191 0 192 0 193 0 194 0 195 0 196 0 197 0 198 0 199 0 200 0 201 0 202 0 203 0 204 0 205 0 206 0 207 0 208 0 209 0 210 0 211 0 212 0 213 0 214 0 215 0 216 0 217 0 218 0 219 0 220 0 221 0 222 0 223 0 224 0 225 0 226 0 227 0 228 0 229 0 230 0 231 0 232 0 233 0 234 0 235 0 236 0 237 0 238 0 239 0 240 0 241 0 242 0 243 0 244 0 245 0 246 0 247 0 248 0 249 0 250 0 251 0 252 0 253 0 254 0 255 0 256 0 257 0 258 0 259 0 260 0 261 0 262 0 263 0 264 0 265 0 266 0 267 0 268 0 269 0 270 0 271 0 272 0 273 0 274 0 275 0 276 0 277 0 278 0 279 0 280 0 281 0 282 0 283 0 284 0 285 0 286 0 287 0 288 0 289 0 290 0 291 0 292 0 293 0 294 1 295 0 296 0 297 1 298 0 299 0 300 1 301 0 302 1 303 0 304 0 305 0 306 0 307 0 308 0 309 0 310 0 311 0 312 0 313 0 314 0 315 0 316 1 317 1 318 0 319 0 320 0 321 0 322 0 323 0 324 0 325 0 326 0 327 0 328 0 329 0 330 0 331 0 332 0 333 0 334 0 335 0 336 0 337 0 338 0 339 0 340 0 341 0 342 0 343 0 344 0 345 0 346 0 347 0 348 0 349 0 350 0 351 0 352 0 353 0 354 0 355 0 356 0 357 0 358 0 359 0 360 0 361 0 362 0 363 0 364 0 365 0 366 0 367 0 368 0 369 1 370 0 371 0 372 0 373 0 374 0 375 0 376 0 377 0 378 0 379 0 380 0 381 0 382 0 383 0 384 0 385 0 386 0 387 0 388 0 389 0 390 0 391 0 392 0 393 0 394 0 395 0 396 0 397 0 398 0 399 0 400 0 401 0 402 0 403 0 404 0 405 0 406 0 407 0 408 0 409 0 410 0 411 0 412 0 413 0 414 0 415 0 416 0 417 0 418 0 419 0 420 0 421 0 422 0 423 0 424 0 425 0 426 0 427 0 428 0 429 0 430 0 431 0 432 0 433 0 434 0 435 0 436 0 437 0 438 0 439 0 440 0 441 0 442 0 443 0 444 0 445 0 446 0 447 0 448 0 449 0 450 0 451 0 452 0 453 0 454 0 455 0 456 0 457 0 458 0 459 0 460 0 461 0 462 0 463 0 464 0 465 0 466 0 467 0 468 0 469 0 470 0 471 0 472 0 473 0 474 0 475 0 476 0 477 0 478 0 479 0 480 0 481 0 482 0 483 0 484 0 485 0 486 0 487 0 488 0 489 0 490 0 491 0 492 0 493 0 494 0 495 0 496 0 497 0 498 0 499 0 500 0 501 0 502 0 503 0 504 0 505 0 506 0 507 0 508 0 509 0 510 0 511 0 512 0 513 0 514 0 515 0 516 0 517 0 518 0 519 0 520 0 521 0 522 0 523 0 524 0 525 0 526 0 527 0 528 0 529 0 530 0 531 0 532 0 533 0 534 0 535 0 536 0 537 0 538 0 539 0 540 0 541 0 542 0 543 0 544 0 545 0 546 0 547 0 548 0 549 0 550 0 551 0 552 0 553 0 554 0 555 0 556 0 557 0 558 0 559 0 560 0 561 0 562 0 563 0 564 0 565 0 566 0 567 0 568 0 569 0 570 0 571 0 572 0 573 0 574 0 575 0 576 0 577 0 578 0 579 0 580 0 581 0 582 0 583 0 584 0 585 0 586 0 587 0 588 0 589 0 590 0 591 0 592 0 593 0 594 0 595 0 596 0 597 0 598 0 599 0 600 0 601 0 602 0 603 0 604 0 605 0 606 0 607 0 608 0 609 0 610 0 611 0 612 0 613 0 614 0 615 0 616 0 617 0 618 0 619 0 620 0 621 0 622 0 623 0 624 0 625 0 626 0 627 0 628 0 629 0 630 0 631 0 632 0 633 0 634 0 635 0 636 0 637 0 638 0 639 0 640 0 641 0 642 0 643 0 644 0 645 0 646 0 647 0 648 0 649 0 650 0 651 0 652 0 653 0 654 0 655 0 656 0 657 0 658 0 659 0 660 0 661 0 662 0 663 0 664 0 665 0 666 0 667 0 668 0 669 0 670 0 671 0 672 0 673 0 674 0 675 0 676 0 677 0 678 0 679 0 680 0 681 0 682 0 683 0 684 0 685 0 686 0 687 0 688 0 689 0 690 0 691 0 692 0 693 0 694 0 695 0 696 0 697 0 698 0 699 0 700 0 701 0 702 0 703 0 704 0 705 0 706 0 707 0 708 0 709 0 710 0 711 0 712 0 713 0 714 0 715 0 716 0 717 0 718 0 719 0 720 0 721 0 722 0 723 0 724 0 725 0 726 0 727 0 728 0 729 0 730 0 731 0 732 0 733 0 734 0 735 0 736 0 737 0 738 0 739 0 740 0 741 0 742 0 743 0 744 0 745 0 746 0 747 0 748 0 749 0 750 0 751 0 752 0 753 0 754 0 755 0 756 0 757 0 758 0 759 0 760 0 761 0 762 0 763 0 764 0 765 0 766 0 767 0 768 0 769 0 770 0 771 0 772 0 773 0 774 0 775 0 776 0 777 0 778 0 779 0 780 1 781 0 782 0 783 0 784 0 785 0 786 0 787 0 788 0 789 0 790 0 791 0 792 0 793 0 794 0 795 1 796 0 797 0 798 0 799 0 800 0 801 0 802 0 803 0 804 0 805 0 806 0 807 0 808 0 809 0 810 0 811 0 812 0 813 0 814 0 815 0 816 0 817 0 818 0 819 0 820 0 821 0 822 0 823 0 824 0 825 0 826 0 827 0 828 0 829 0 830 0 831 0 832 0 833 0 834 0 835 0 836 0 837 0 838 0 839 0 840 0 841 0 842 0 843 0 844 0 845 0 846 0 847 0 848 0 849 0 850 0 851 0 852 0 853 0 854 0 855 0 856 0 857 0 858 0 859 0 860 0 861 0 862 0 863 0 864 0 865 0 866 0 867 0 868 0 869 0 870 0 871 0 872 0 873 0 874 0 875 0 876 0 877 0 878 0 879 0 880 0 881 0 882 0 883 0 884 0 885 0 886 0 887 0 888 0 889 0 890 0 891 0 892 0 893 0 894 0 895 0 896 0 897 0 898 0 899 0 900 0 901 0 902 0 903 0 904 0 905 0 906 0 907 0 908 0 909 0 910 0 911 0 912 0 913 0 914 0 915 0 916 0 917 0 918 0 919 0 920 0 921 0 922 0 923 0 924 0 925 0 926 0 927 0 928 0 929 0 930 0 931 0 932 0 933 0 934 0 935 0 936 0 937 0 938 0 939 0 940 0 941 0 942 0 943 0 944 0 945 0 946 0 947 0 948 0 949 0 950 0 951 0 952 0 953 1 954 0 955 0 956 0 957 0 958 0 959 0 960 0 961 0 962 0 963 0 964 0 965 0 966 0 967 0 968 0 969 0 970 0 971 0 972 0 973 0 974 0 975 0 976 0 977 0 978 0 979 0 980 0 981 0 982 0 983 0 984 0 985 0 986 0 987 0 988 0 989 0 990 0 991 0 992 0 993 0 994 0 995 0 996 0 997 0 998 0 999 0 1000 0 1001 0 1002 0 1003 0 1004 0 1005 0 1006 0 1007 0 1008 0 1009 0 1010 0 1011 0 1012 0 1013 0 1014 1 1015 0 1016 0 1017 0 1018 0 1019 0 1020 0 1021 0 1022 0 1023 0 1024 0 1025 0 1026 0 1027 0 1028 0 1029 0 1030 0 1031 0 1032 0 1033 0 1034 0 1035 0 1036 0 1037 0 1038 0 1039 0 1040 0 1041 0 1042 0 1043 0 1044 0 1045 0 1046 0 1047 0 1048 0 1049 0 1050 0 1051 0 1052 0 1053 0 1054 1 1055 1 1056 0 1057 0 1058 0 1059 0 1060 0 1061 0 1062 0 1063 0 1064 0 1065 0 1066 0 1067 0 1068 0 1069 0 1070 0 1071 0 1072 0 1073 0 1074 0 1075 0 1076 0 1077 0 1078 0 1079 0 1080 0 1081 0 1082 0 1083 0 1084 0 1085 0 1086 0 1087 0 1088 0 1089 0 1090 0 1091 0 1092 0 1093 0 1094 0 1095 0 1096 0 1097 0 1098 0 1099 0 1100 0 1101 0 1102 0 1103 0 1104 0 1105 0 1106 0 1107 0 1108 0 1109 0 1110 0 1111 0 1112 0 1113 0 1114 0 1115 0 1116 0 1117 0 1118 0 1119 0 1120 0 1121 0 1122 0 1123 0 1124 0 1125 0 1126 0 1127 0 1128 0 1129 0 1130 0 1131 0 1132 0 1133 0 1134 1 1135 0 1136 0 1137 0 1138 0 1139 0 1140 0 1141 0 1142 0 1143 0 1144 0 1145 0 1146 0 1147 0 1148 0 1149 0 1150 0 1151 0 1152 0 1153 0 1154 0 1155 0 1156 0 1157 0 1158 0 1159 0 1160 0 1161 0 1162 0 1163 0 1164 0 1165 0 1166 0 1167 0 1168 0 1169 0 1170 0 1171 0 1172 0 1173 0 1174 0 1175 0 1176 0 1177 0 1178 0 1179 0 1180 0 1181 0 1182 0 1183 0 1184 0 1185 0 1186 0 1187 0 1188 0 1189 0 1190 0 1191 0 1192 0 1193 0 1194 0 1195 0 1196 0 1197 0 1198 0 1199 0 1200 0 1201 0 1202 0 1203 0 1204 0 1205 0 1206 0 1207 0 1208 0 1209 0 1210 0 1211 0 1212 0 1213 0 1214 0 1215 0 1216 0 1217 0 1218 0 1219 0 1220 0 1221 0 1222 0 1223 0 1224 0 1225 0 1226 0 1227 0 1228 0 1229 0 1230 0 1231 0 1232 0 1233 0 1234 0 1235 0 1236 0 1237 0 1238 0 1239 0 1240 0 1241 0 1242 0 1243 0 1244 0 1245 0 1246 0 1247 0 1248 0 1249 0 1250 0 1251 0 1252 0 1253 0 1254 0 1255 0 1256 0 1257 0 1258 0 1259 0 1260 0 1261 0 1262 0 1263 0 1264 0 1265 0 1266 0 1267 0 1268 0 1269 0 1270 0 1271 0 1272 0 1273 0 1274 0 1275 0 1276 0 1277 0 1278 0 1279 0 1280 0 1281 0 1282 0 1283 0 1284 0 1285 0 1286 0 1287 0 1288 0 1289 0 1290 0 1291 0 1292 0 1293 0 1294 0 1295 0 1296 0 1297 0 1298 0 1299 0 1300 0 1301 0 1302 0 1303 0 1304 0 1305 0 1306 0 1307 0 1308 0 1309 0 1310 0 1311 0 1312 0 1313 0 1314 0 1315 0 1316 0 1317 0 1318 0 1319 0 1320 0 1321 0 1322 0 1323 0 1324 0 1325 0 1326 0 1327 0 1328 0 1329 0 1330 0 1331 0 1332 0 1333 0 1334 0 1335 0 1336 0 1337 0 1338 0 1339 0 1340 0 1341 0 1342 0 1343 0 1344 0 1345 0 1346 0 1347 0 1348 0 1349 0 1350 0 1351 0 1352 0 1353 0 1354 0 1355 0 1356 0 1357 0 1358 0 1359 0 1360 0 1361 0 1362 0 1363 1 1364 0 1365 0 1366 0 1367 0 1368 0 1369 0 1370 0 1371 0 1372 0 1373 0 1374 0 1375 0 1376 0 1377 0 1378 0 1379 1 1380 0 1381 0 1382 0 1383 0 1384 0 1385 0 1386 0 1387 0 1388 0 1389 0 1390 0 1391 0 1392 0 1393 0 1394 0 1395 0 1396 0 1397 0 1398 0 1399 0 1400 0 1401 0 1402 0 1403 0 1404 0 1405 0 1406 0 1407 0 1408 0 1409 0 1410 0 1411 0 1412 0 1413 0 1414 0 1415 0 1416 0 1417 0 1418 0 1419 0 1420 0 1421 0 1422 0 1423 0 1424 0 1425 0 1426 0 1427 0 1428 0 1429 0 1430 0 1431 0 1432 0 1433 0 1434 0 1435 0 1436 0 1437 0 1438 0 1439 0 1440 0 1441 0 1442 0 1443 0 1444 0 1445 0 1446 0 1447 0 1448 0 1449 0 1450 0 1451 0 1452 0 1453 0 1454 0 1455 0 1456 0 1457 0 1458 0 1459 0 1460 0 1461 0 1462 0 1463 0 1464 0 1465 0 1466 0 1467 0 1468 0 1469 0 1470 0 1471 0 1472 0 1473 0 1474 0 1475 0 1476 0 1477 0 1478 0 1479 0 1480 0 1481 0 1482 0 1483 0 1484 0 1485 0 1486 0 1487 0 1488 0 1489 0 1490 0 1491 0 1492 0 1493 0 1494 0 1495 0 1496 0 1497 0 1498 0 1499 0 1500 0 1501 0 1502 0 1503 0 1504 0 1505 0 1506 0 1507 0 1508 0 1509 0 1510 0 1511 0 1512 0 1513 0 1514 0 1515 0 1516 0 1517 0 1518 0 1519 0 1520 0 1521 0 1522 0 1523 0 1524 0 1525 0 1526 0 1527 0 1528 0 1529 0 1530 0 1531 0 1532 0 1533 0 1534 0 1535 0 1536 0 1537 0 1538 0 TrialNotes 1 2 No trial details. 3 No details 4 5 No details 6 No details 7 No details 8 No details 9 No details 10 No details 11 No details 12 No details 13 14 No details 15 No details 16 No details 17 No details 18 No details 19 No details 20 No details 21 No details 22 23 24 No trial details. 25 No details 26 No details 27 No details 28 No details 29 No details 30 No details 31 No details 32 No details 33 34 35 36 37 38 39 40 41 42 43 44 45 No trial details. 46 47 48 49 50 51 52 53 No trial details. 54 no trial details. 55 No details. 56 57 58 59 60 No details 61 No details 62 Did not appear for trial as she had escaped. Sentence of excommunication passed. 63 No details of trial. 64 No trial details. 65 66 67 68 No details 69 70 71 72 73 74 75 76 77 78 79 No details of trial. 80 81 82 83 84 There is a note in the presbyteryon 24/7/1550 that witches were to be tried on the following Monday in Renfrew but no details of outcome. 85 24/7/1650, note in presbytery records that the trial was to be held the following Monday in Renfrew but no details of outcome. 86 Note in presbytery records on 24/7/1650 that a trial was to be held the following Monday in Renfrew, but no record of verdict. 87 Note in presbytery records on 24/7/1650 that a trial was to be held on the following Monday in Renfrew but no details about outcome. 88 89 No details 90 Note in presbytery records on 17/3/1697 that ministers and commissioners to meet tomorrow in Renfrew for trial (?). Trial started on 13/4/1697 but was continued until 12/5/1697 it lasted until the 19th. 91 Note in presbytery records on 17/3/1697 that ministers and commissioners to meet at Renfrew tomorrow. The commission was read out in 18/3/1697. But the trial happened on 13/4/1697 she was not proceeded against but was a star witness. 92 Note in presbytery records on 18/3/1697 that the ministers and accused are to go to Renfrew tomorrow for the trial. Trial started on 13/4/1697 but was continued until 12/5/1697 and lasted until 19/5/1697. 93 Note in presbytery records on 17/3/1697 that the ministers and commissioners are to meet in Renfrew tomorrow for the trial. Trials of other witches started on 13/4/1697 but was continued until 12/5/1697 it lasted until the 19th. He was never actually tried for witchcraft. The charges were dropped due to young age. 94 She was indicted in 1697 and released due to pregnancy. But I think she was rearrested in 1699 and then her diet was deserted in 1700 see second trial 95 96 97 98 I think she was released as APS commission for John McWilliam mentioned putting others to liberty on caution to answer at a later date. 99 No details. 100 I think she was freed as APS commission for John McWilliam mentioned setting the others to liberty to answer under the law at a later date. 101 102 103 I think she was freed as commission from APS to try John McWilliam mentioned putting the others at liberty to answer at a later date. 104 It seems that he was executed since the commission mentions it, but no details. 105 It seems likely that the accused was executed as the commission mentioned it, but there are no details. 106 It is likely that the accused was executed as the commission mentioned it, but no details. 107 No details. 108 No details. 109 No details 110 111 No details. 112 113 114 115 116 117 118 119 120 121 122 No details 123 No details about trial but records refer to an assize to be held in Kirkcaldy. 124 No trial details apart from reference in presbytery minutes. 125 126 127 128 Presbytery decided that nothing against her had been proven and dismissed her. 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 No details. 144 145 146 147 She appeared to have died after her confession so likely no trial held. 148 149 150 No trial details, 151 152 153 154 155 156 157 158 159 160 No details. 161 No details. 162 No details of trial. 163 No trial details. 164 165 166 167 168 Assize decided that she was an evil neighbour and ordered her to be banished to the south. If she returned she would be burnt 169 170 No details. 171 172 She was found guilty of being an evil neighbour and banished from the sheriffdom of Aberdeen. Appears to have moved and was in trouble the next year.\\nNeed to link her trial to several others whose records have not been done. 173 174 175 176 177 178 Recorded as dead in 11/1644. 179 180 181 No details about trial. 182 183 184 185 186 187 188 189 190 191 192 No details. 193 194 195 196 197 198 199 200 201 202 There does not appear to have been any trial as such but after 1 year she was to be released from prison, and kirk session recommended that she was to be banished and put out of town. 203 No details. 204 205 206 207 208 209 210 211 212 No details. 213 214 215 216 217 218 The items all have &#39;clengis&#39; recorded on the dittay= not guilty. ?released. 219 The accused was acquitted and the pursuers (Crukshanks) were banned from taking the matter any further. Also the Crukshanks were reassured that none of the Leisks or the other families would trouble them. 220 221 Appears to have been named by other accused as the dittays have no named witnesses to the accusations of harm. 222 223 No details of trial. 224 225 226 227 228 Absolved from all accusations apart from using the thread as a charm. The jury found her guilty of this and suggested that it warranted death but they would leave this to the judge to decide. Final sentence was that this crime did not justify death but she was to be banished from the sheriffdom of Aberdeen. If she was found within 12 miles of the boundaries she would be executed as a witch. 229 Found guilty of using a beetle to change the weather and marking cloth with a green thread but the jury did not think these merited death sentence and referred it to the judge. The judge sentenced her to be strangled and burned. 230 Jury found her guilty of being a suspicious person and associated with her mother, but they thought it only merited banishment. Refer to justice. According to Spalding she was banished from Aberdeen sheriffdom and 12 miles beyond. 231 232 233 234 No details. 235 236 237 238 Although found guilty Thom denied all charges. Accusers (including Christen Michell) brought and confronted Thom 239 Found guilty but denied charges. 240 241 No details about trial. 242 No trial details. 243 No trial details, 244 No trial details. 245 No trial details. 246 No trial details. 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 No details 265 266 267 268 269 270 271 272 273 274 275 No trial details. 276 277 278 279 280 No details. 281 282 No known outcome. 283 Brethren noted that there were sufficient grounds for her to die according to law, but required civil magistrate to put her to assize. 284 285 286 287 288 No details. 289 290 291 292 293 294 Entry in presbytery records that she was not convicted at her trial. 295 296 297 Entry in kirk session records, 7/8/1649 that Boswell had been &#39;fyllied&#39; (found guilty) by an assize. 298 299 No trial details. 300 Entry in kirk session on 7/8/1649 notes that she was fyllied (found guilty). 301 302 Entry in kirk session records that she was fyllied (found guilty). 303 304 305 306 307 308 309 310 No trial details. 311 312 No details 313 314 315 316 Appears to have been publicly excommunicated. 317 Appears to have been threatened with excommunication. 318 Later entry in presbytery records notes that she was executed at the stake. No date. 319 320 321 322 323 324 325 326 327 328 329 330 No details of trial. 331 332 333 334 335 336 337 338 339 340 Gerard denied the charges. 341 No details. 342 Tried with three others but no details of accusations or outcome. Denied the charges. 343 344 345 346 347 348 349 350 351 352 No details of trial. 353 354 Cleared of charges. 355 356 357 358 359 360 361 362 363 No details. 364 365 366 367 368 369 370 371 372 373 no trial details 374 375 376 377 378 379 380 381 382 383 384 No details 385 386 387 388 389 390 391 392 393 She does not seem to have been officially tried, but she was banished by the Presbytery 394 395 no details. 396 397 398 399 400 401 402 403 404 405 406 no details. 407 408 409 no details. 410 no details. 411 no details. 412 no details. 413 no details. 414 no details. 415 no details. 416 no details. 417 418 419 420 421 422 423 424 425 few details. 426 427 428 429 The jury found him guilty of theft and of consulting evil spirits. 430 431 432 433 434 435 436 few details. 437 438 439 440 441 442 443 444 445 446 No details 447 448 449 450 451 452 453 454 455 456 457 no details. 458 459 460 461 462 463 464 465 466 467 468 No details 469 470 471 472 473 474 475 476 477 478 479 no details. 480 481 482 483 484 no details. 485 no details. 486 487 488 489 490 491 no details. 492 493 494 495 no details. 496 497 498 499 500 501 502 503 504 505 506 no details. 507 508 509 510 511 512 513 514 515 516 517 no details. 518 There is an entry in KS that witches were to be executed on 6/8/1661 but it does not name them. 519 520 521 522 523 524 525 526 527 528 no details. 529 530 531 Found guilty on most items of her dittay but acquitted on others. 532 533 534 535 536 537 538 539 no details. 540 541 542 543 544 545 546 547 548 549 550 no details. 551 552 553 554 555 556 557 She was scheduled to be tried in the locality by the Lord Advocate. 558 trial orded by the Privy Council to be held in the locality with the Lord Advocate. 559 560 She was scheduled to be tried in the locality by the Lord Advocate 561 few details. 562 563 564 565 566 567 568 569 570 571 572 few details. 573 574 575 576 577 few details. 578 few details. 579 few details. 580 few details. 581 few details. 582 few details. 583 few details. 584 585 few details. 586 587 588 589 590 591 592 593 594 595 596 few details. 597 598 599 600 601 602 603 604 605 606 607 few details. 608 609 610 611 612 613 614 615 616 617 few details. 618 619 620 621 622 623 624 625 626 627 few details. 628 629 630 631 632 633 634 635 636 637 few details. 638 few details. 639 few details. 640 few details. 641 642 643 644 645 646 no details. 647 no details. 648 no details. 649 650 no details. 651 no details. 652 no details. 653 Assize found her guilty in &#39;ane voice but contradiction&#39; but also appears to have been acquitted by a majority verdict 654 They wanted to prosecute her so they asked the commissioners how to proceed. No evidence of how they proceeded. The people she named were all tried by the JPs and sent to Edinburgh for sentencing. Have an undated indictment. 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 No details about the trial or process, just that he failed to appear before James VI at Holyrood. 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 Records of the sheriff court of Orkney. 746 No details. 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 Leyis was found guilty of the first charge of being the leader of a witches&#39; meeting and three of the other charges. The jury was not unanamous - three of the assize found him not guilty. 766 No details about any trial. 767 No trial details. 768 No trial details. 769 No trial details 770 No other trial details. 771 No other details of trial. 772 No trial details. 773 774 No details of trial. 775 no trial details. 776 No details of trial. 777 No details about trial. 778 No details of trial. 779 No other details of trial. 780 No other details of trial. 781 No trial details but presbytery note that trial to be held on 12/7/1629 782 Few trial details but presbytery notes trial to be held on 12/7/1629. 783 No trial details but note in presbytery that trial to be held on 12/7/1629. 784 No details of trial itself. 785 No other trial details. 786 No other details about trial. 787 No details from trial. 788 No details from trial. 789 Commission for trial issued 21/4/1630 790 No details from trial. 791 No details of trial. 792 No trial details. 793 No information about trial itself. 794 No details about trial itself. 795 No details about trial 796 No details of trial itself. 797 No trial details. 798 No details apart from commission 799 No details of trial 800 no details 801 No trial details 802 no trial details 803 no details about trial 804 No details of trial apart from mention in presbytery that brethren to attend the assize on 23/7/1630 805 no details 806 No trial 807 No trial details 808 no details 809 No details 810 No details 811 No details 812 No details 813 No details 814 No details 815 No details 816 No details 817 No details 818 No details 819 No details 820 No details 821 No details 822 no details 823 no details 824 No details 825 No details 826 No details if accused was apprehended and tried 827 No details 828 No details 829 No details 830 no details 831 No details 832 No details 833 no details 834 No details 835 No details 836 No details of trial 837 No details about trial 838 No trial details 839 no trial details 840 No details of trial 841 no details of trial 842 no trial details 843 no details 844 no details 845 no details 846 No trial details 847 No trial details 848 No details of trial 849 no details about trial 850 No details about trial 851 no details 852 no details 853 no details 854 no details 855 no details 856 857 858 859 860 no details 861 no details 862 863 864 865 866 867 868 869 870 871 872 I think this was the north circuit even though it is bound in with the West and South area. In 1661 the PC ordered that there had been irregularities in it and that another trial was to be held.\\nAlso on an undated list of people from 1658-9 to be arraigned before the justice courts.\\n\\nShe pleaded not guilty 873 Assize ordered to go to Edinburgh for 3/8/1658 for trial of Alloway/Alloa witches, (I don&#39;t think the trial happened there?).\\n\\nOn 22/3/1659 Katherine and Elizabeth Black wrote a supplication to the justice commissioners asking for a postponement of sentencing and for the jury to be recalled and instructed at law. \\n\\nPleaded not guilty\\n\\nI think it is the North circuit even though it is bound in with South and West circuit secion. She pleaded not guilty. Later docs show that there were irregularities and another trial was ordered to be held. 874 no details 875 JC26 documents show that she was imprisoned and released several times due to illness. On 18/12/1658, the Privy Council ordered her to be tried at the circuit court of Stirling. \\n\\nAssize ordered to go to Edinburgh for 3/8/1658 for trial of Alloway/Alloa witches, (I don&#39;t think the trial happened there?)\\n\\nShe pleaded not guilty\\n\\nI think it is the North circuit even though it is bound in with South and West circuit secion. She plead not guilty. On an undated list of people from 1658-9 to be arraigned before the justice courts.\\n\\nWas arrested again and petitioned for release (on 16/3/1659) was granted, trial was set for circuit court in Stirling to be held 22/3/1659.\\n\\nOn 22/3/1659 Katherine and Elizabeth Black wrote a supplication to the justice commissioners asking for a postponement of sentencing and for the jury to be recalled and instructed at law. \\n\\n Later documents indicate a number of irregularities at this trial and the accused was held in prison until 1661 when an order for another trial was issued. 876 no details 877 878 879 880 881 882 883 884 885 886 887 888 889 890 Order to be brought to Edinburgh for trial on 13/9/1678. On 16/10/1678 he was ordered to appear before the Privy Council or other lawful court on 2 December 1678. He was eventually tried in a circuit court held in Edinburgh. 891 no trial held just preliminary inquiries. Presbytery decided that the cheapest option was to banish her. 892 893 894 895 896 No details 897 898 899 900 901 902 Note that she was acquitted. 903 Note that she was acquitted. 904 No details 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 No details 927 928 No details 929 no details 930 no details 931 no details 932 no details 933 no details 934 no details 935 no details 936 no details 937 no details 938 no details 939 no details 940 no details 941 no details 942 no details 943 no details 944 no details 945 no details 946 no details 947 no details 948 no details 949 no details 950 no details 951 no details 952 It appears that the presbytery held a local trial/investigation in 1643 at which witnesses including a minister appeared and gave statements. Robisone failed to appear in front of the presbytery committee. Later entry 4/1/1644 implies that a trial is to be held the following Thursday in Peebles. 29/2/1644 note records that accused denied the charges. 953 Entry in presbytery records (4/1/1644) that accused to stand trial the next Thursday and the ministers were to encourage witnesses to attend the trial. 954 Note about date of trial in presbytery records 955 Note that trial to be held. 956 957 Note in presbytery records that trial to be held 958 959 No details 960 No details 961 962 Note in presbytery records that trial held. 963 964 Note in presbytery that trial to be held. 965 966 967 968 969 970 No details 971 No details 972 She was tried in the locality (I think) by the Lord Advocate! 973 no information 974 975 976 No details 977 978 no details 979 no details 980 no details 981 no details 982 no details 983 no details 984 no details 985 no details 986 no details 987 no details 988 The prosecutor was the Lord Advocate. They were to report the execution back to the Privy Council. 989 They were to report the execution back to the privy Council. 990 The prosecutor was the Lord Advocate. We have the assize verdict. 991 we have the assize verdict 992 No details but ordered to be banished 993 She had a Privy Council commission for trial, but was tried in front of what looks like a local trial with central representation. Edinburgh officials were sent out to the trial, and the trial appears in the minute books of the circuit court. 994 Note in PC requested that any sentence passed would be delayed as she was underage. The judge in her trial commuted her sentence because whe was underage. 4/4/1677 note records that she had been found guilty but was moved to Glasgow from Paisley to receive spiritual guidance from ministers. 995 He had a Privy Council commission for trial, but he was tried in front of what looks like a local trial with central representation. Edinburgh officials were sent out to the trial, and the trial appears in the minute books of the circuit court. 996 She had a Privy Council commission for trial, but was tried in front of what looks like a local trial with central representation. Edinburgh officials were sent out to the trial, and the trial appears in the minute books of the circuit court. 997 She had a Privy Council commission for trial, and was tried in front of what looks like a local trial with central representation. Edinburgh officials were sent out to the trial, and the trial appears in the minute books of the circuit court. 998 999 no details 1000 no details 1001 no details 1002 no details 1003 no details 1004 no details 1005 no details 1006 They were examined by the lord commissioners and they found no presumption of guilt. The charges were deemed malicious,and they were released. 1007 They were examined by the lord commissioners and they found no presumption of guil. The charges were deemed malicious, and they were released. 1008 They were examined by the lord commissioners and they found no presumption of guilt and the charges were deemed malicious, they were released. 1009 no details 1010 no details 1011 no details 1012 1013 no details 1014 no details but KS notes that she was to be burnt. 1015 no details 1016 no details 1017 1018 no details 1019 no details 1020 She was described as &#39;ane dying and confessing witch&#39; in the trial of Geillis Burnet (c/egd/584). 1021 no details 1022 no details 1023 no details 1024 no details 1025 no details 1026 no details 1027 no details 1028 1029 John and his daughters were absolved from the charges of practising witchcraft and sorcery but were guilty of assocation with known witches ie Wischert and Thomas Leyis. They were ordered to be banished. 1030 Elspet, her sisters and father were found not guilty of practising witchcraft and sorcery but guilty of being &#39;airt and pairt&#39; by association with their mother Wischert and brother Thomas Leyis. They were banished as punishment. 1031 1032 1033 1034 1035 no details 1036 no details 1037 no details 1038 1039 no details 1040 no details 1041 no details 1042 Brethren ordered to attend Haddington on 2/7/1630 where commissioners will try the women imprisoned in the tolbooth in Haddington by assize. 1043 no details 1044 1045 1046 1047 1048 1049 1050 1051 1052 Brethren ordered to attend Haddington on 2/7/1630 where commissioners will try the women imprisoned in the tolbooth in Haddington by assize. 1053 no details 1054 No details of a trial, but she was executed and seems to have been tried without any reference to central authorities. 1055 No details about a trial, but it seemingly took place and without any central authorisation. 1056 no details 1057 Note in presbytery records: imprisoned in tolbooth Haddington, awaiting trial by assize there on 2/7/1630. Brethren ordered to attend the assize. 1058 no details 1059 no details 1060 no details 1061 no details 1062 no details 1063 No details 1064 No details 1065 no details 1066 no details 1067 Note in presbytery records the brethren called to appear at assize to try the suspect on 2/7/1630. 1068 no details 1069 no details 1070 no details 1071 no details 1072 no details 1073 no details 1074 no details 1075 no details 1076 no details 1077 1078 1079 no details 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 John Leyis and his daughters were absolved from accusations of witchcraft but guilty of assocation with known witches (wife and brother). They were ordered to be banished. 1090 1091 no details 1092 no details 1093 no details 1094 no details 1095 no details 1096 no details 1097 no details 1098 no details 1099 No details 1100 Father and three daughters tried together but absolved from accusations but were guilty by association with mother and brother. Ordered to be banished. 1101 No details 1102 No details 1103 No details 1104 No details. 1105 No details 1106 No details 1107 No details 1108 No details 1109 No details 1110 No details 1111 1112 No details 1113 No details 1114 No details 1115 No details 1116 No details 1117 No details 1118 No details 1119 No details 1120 No details 1121 No details 1122 Although pre trial commissions exist there is no reference to a trial date or any trial details for Mitchell. 1123 No details 1124 No details 1125 No details 1126 No details 1127 No details 1128 No details 1129 No details 1130 no details 1131 No details 1132 1133 No details in RPC about a trial which mentions Lawder. 1134 No trial appears to have been held apart from interrogation of witnesses and two main parties. Case referred to bailie of regality who ordered her to be &#39;put out of bounds&#39;. This sentence is only recorded in the presbytery book. 1135 Presbytery decided in 165o there was not enough information to hold her in prison. 1136 no details 1137 No details 1138 1139 1140 1141 1142 no details 1143 No details about trial or date of trial in RPC. 1144 1145 no details 1146 1147 1148 No details 1149 No details 1150 No details 1151 No details 1152 No details 1153 1154 No trial details possibly because suspect died before any procedure started. 1155 1156 1157 1158 1159 1160 1161 1162 To be moved to Edinburgh but no other details 1163 No details but ordered to be moved to Edinburgh for trial there. 1164 To be moved to Edinburgh for trial but no details. 1165 Presbytery notes request from Robert Balcanquhal for the brethren to attend the next Friday at Craige&#39;s assize. We have an order for the trial dated 26/4/1649 and empowering Ramsay as the prosecutor. 1166 To be moved to Edinburgh for trial but no details. 1167 Order to be moved to Edinburgh for trial but no details 1168 No details 1169 No details 1170 1171 1172 1173 No details 1174 No details 1175 No details 1176 No trial details recorded. 1177 No details 1178 No details 1179 No details 1180 No details 1181 No details 1182 No details 1183 No details 1184 No details 1185 No details 1186 No details 1187 No details. 1188 No details 1189 No details 1190 No details 1191 No details 1192 No details 1193 No details 1194 No details 1195 No details 1196 No details 1197 No trial details. 1198 No details 1199 No details 1200 No details 1201 1202 No details 1203 No details 1204 No details 1205 No details 1206 No details 1207 No trial details. 1208 no details 1209 No details 1210 No details 1211 No details 1212 No details 1213 No details 1214 No details 1215 No details 1216 No details 1217 No details 1218 No trial details. 1219 No details 1220 No details 1221 No details 1222 No details 1223 No details 1224 No details 1225 No details 1226 No details 1227 No details 1228 No details 1229 No details. 1230 No details 1231 No details 1232 No details 1233 No details 1234 No details 1235 No details 1236 No details but investigation by Dumfries presbytery in 1700 resulted in her being banished from the area of the presbytery and synod. She agreed to do this and it seems that she then re-appeared in Kirkcudbright area. 1237 1238 1239 No details about trial. 1240 1241 No details 1242 No details 1243 No details 1244 No details 1245 No details 1246 No details 1247 No details 1248 No details 1249 No details 1250 No details. 1251 No details 1252 No details 1253 No detaisl 1254 1255 No details 1256 No details 1257 No details 1258 No details 1259 No details 1260 No details 1261 No details 1262 No details 1263 No details 1264 No details 1265 No details 1266 No details 1267 No detaisl 1268 No details 1269 No details 1270 No details 1271 No details 1272 Very complicated defence pleadings. Case carried over to next day. I found another order for central justiciary trial dated 13/2/1629. On 22 Jan 1629 the trial date was set for 15 days. 1273 1274 1275 1276 1277 1278 The indictment and trial information were in the register of Privy Council. The trial was prosecuted by the procurator fiscal. 1279 the prosecutor was the procurator fiscal. The indictment and trial information were in the register of Privy Council 1280 1281 ordered to report back to the PC for sentencing. 1282 report back to Privy Council for sentencing 1283 1284 1285 1286 1287 It was referred to the Jusiciar of Ayr from the court of Justiciary in Edinburgh. 1288 Prosecutor was the procurator fiscal. Found her guilty of only 3 of the charges. No record of the sentence. I think she was set free because she had a second trial three years later. The assize found her guilty, but the Judge absolved her. 1289 the only document we have is a brief report of the Elgin trial&#39;s findings to the Privy Council for direction as to sentencing. 31/1/1643 the Privy Council has a note &#39;the report of the processe of a witche in Murray to be advysit.&#39; no mention of their advice. 1290 procurator fiscal was the prosecutor. Other new, charges were brought. 1291 1292 1293 1294 1295 1296 1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 1313 1314 1315 1316 1317 1318 11/2/1634-continuance for trial due to bad weather, witnesses and assize could not get to Edinburgh for the trial. 11/3/1634 the defence asked for a continuance because they hadn&#39;t yet seen the dittay. More strict adherence to rules of evidence than normal. Very detailed defence pleadings 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 1345 the sentence was to be the ordinary sentence. 1346 1347 1348 1349 1350 It is difficult to determine exactly what happened. She appears to have been tried in Culross, then moved to Edinburgh where the Lord Advocate maybe oversaw her trial. 1351 There was a trial at Culross, but the the procurator did not continue with the trial, but he also didn&#39;t release them. Mention of a trial happening at 28/8/1644 as well, but possibly just her mother? 1352 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363 she was found guilty of charming, but still executed 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 1377 1378 1379 She was tried earlier and banished, but refused to leave. She was banished from Birsay parish. Not clear what kind of court heard the first &#39;trial&#39;, but appears that she voluntarily said she would leave in exchange for droppign the charges. 1380 1381 1382 1383 Diet was deserted by order of the Privy Council, and she was remitted to be tried in the place from which she came. 1384 1385 1386 1387 1388 1389 1390 1391 1392 Not guilty because the assize found no malefice 1393 1394 referred to the Justice of the Peace 1395 On two porteous rolls on 31 March 1658 summond to appear on 6 April 1658. 1396 On two porteous rolls on 31 March 1658 summond to appear on 6 April 1658. First mentioned in 6/4/1568 the Justice of the Peace was to investigate and report back at the next court. They made a report that is in JC26/26. The trial was held on 30/3/1659 almost a year later. Both appearances before the circuit court were in the tolbooth of Ayr. Also have a list of witnesses 14 men and 10 women. Her daughter testified against her. 1397 Two porteous rolls (one of which dated 31/3/1658 summoned the whole 1658 group to appear for trial). Mentioned on 6/4/1658 that the Justice of the Peace was to investigate and report back at the next court. Her trial happened on 29-30/3/1659 a year later. Both of her appearances in front of the circuit court were in the tolbooth of Ayr. There is also a dittay with a list of witnesses and another one from 6/4/1658 with details (21 male and 13 female witnesses). 1398 7 men and 8 women testified in her draft dittay. She was mentioned in a Kirkcudbright Roll 1648. 1399 listed in the Kircudbirgh Roll 4/1658. 1400 Most of the witnesses in her case said they didn&#39;t know anything about the accusations against her. The witnesses were called on 5/4/1658. A minister ratified that the testimony in her case was true. But doesn&#39;t say which minister? Statements from 15 men and 7 women in pre-trial statements. Listed in the 4/1658 Kircudbrigh Roll in JC26/25. Only 9 and 6 of them testified at the trial. 1401 Her case was reffered to Sir George Maxwell of Pollok for trial. 1402 The Justice of the Peace was to investigate and report back at the next court.\\n\\nAyr Court list from 6/4/1658 1403 The Justice of the Peace was to investigate and report back at the next court. 1404 The Justice of the Peace was to investigate and report back at the next court.\\n\\nAyr Court list from 6/4/1658 1405 The Justice of the Peace was to investigate and report back at the next court.\\n\\nAyr Court list from 6/4/1658 1406 In a later addition to the book labelled South and West, but this is a mistake. She confessed to healing with deeds, but denied witchcraft or using of words. On an undated list of people from 1658-9 to be arraigned before the justice courts. 16/3/1658 witness list issued. Witnesses were summond on 18/3/1659 for trial. She pleaded not guilty 1407 I think this is the North Circuit, even though it was bound in with the South and West circuit materials. She plead not guilty. On an undated list of people from 1658-9 to be arraigned before the justice courts. Witness list issued on 16/3/1658 1408 I think it is the North circuit even though it was bound in with the South and West circuits. She denied the whole thing. On an undated list of people from 1658-9 to be arraigned before the justice courts. Witness list generated 16/3/1658. She pleaded not guilty 1409 I think it is the North circuit even though it is bound in with South and West circuit secion. On an undated list of people from 1658-9 to be arraigned before the justice courts. 1410 I think it is the North circuit even though it is bound in with South and West circuit secion. He plead not guilty. On an undated list of people from 1658-9 to be arraigned before the justice courts.\\n\\nPlead not guilty 1411 I think it’s the North circuit even though it is bound in the part of the book that says south and west. She plead not guilty. On an undated list of people from 1658-9 to be arraigned before the justice courts. 1412 I think it’s the North circuit even though it is bound in the part of the book that says south and west. She pleaded not guilty. On an undated list of people from 1658-9 she was to be arraigned before the justice courts. 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 Ayr Court list from 6/4/1658, two porteous rolls (one of which dated 31/3/ 1658 summoned the whole 1658 group to appear for trial). 1423 1424 1425 the verdict was presented to the Privy Council on 26/7/1698 1426 Result given 2/1/1700 1427 Result given 2/1/1700, I think she was convicted. 1428 Result given on 2/1/1700, guilty but the Privy Council forbad the death penalty for her. 1429 Result given 2/1/1700, not sure what happned. 1430 Result given on 2/1/1700, but free from death penalty. 1431 Result given 2/1/1700 1432 Result given 2/1/1700 1433 Result given 2/1/1700 1434 Result given 2/1/1700 1435 Result given 2/1/1700 1436 result given 2/1/1700 1437 Result given 2/1/1700 1438 Privy Council ordered the trial to be held in the locality with the Lord Advocate 1439 Privy Council ordered the trial to be held in the locality with the Lord Advocate. 1440 Privy Council ordered the trial in the locality with the Lord Advocate. 1441 A verdict to be reported to the Privy Council no later than 22/3/1705,but this didn&#39;t happened. They were sentenced on 16/7/1706. 1442 Verdict to be reported to the Privy Council no later than 22/3/1705, but this didn&#39;t happen at this time. 1443 1444 Assumed this was a central trial because that is what Pitcairn said. 1445 He was charged with witchcraft among other things, but executed for poisoning. I am not sure where he was tried, but I don&#39;t think it was the High Cour. His trial record was not in JC2, but he was prosecuted by the Lord Advocate. Lots of high status people on the assize. 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 1489 1490 1491 I think it’s the North circuit even though it is bound in the part of the book that says south and west. She plead not guilty. On an undated list of people from 1658-9 to be arraigned before the justice courts. Witnesses summond on 18/3/1659. 1492 I think it’s the North circuit even though it is bound in the part of the book that says south and west. She plead not guilty. There are depositions against her taken on 16/5/1659. 1493 She plead not guilty, she was cautioned a day later to be of good behaviour in all time coming. Have a list of charges from 6/4/1658, it has 13 male witnesses and 6 female. 1494 She plead not guilty 1495 on 31/3/1659 witnesses were summond to appear at her trial. She plead not guilty. 1496 1497 She plead not guilty. The provost of Kirkcudbright testified in her case. 1498 She denied all the charges, the Provost of Kirkcudbright testified against her. Her indictment to be read in Dumfries on 4/4/1659. 1499 She plead not guilty. Courtbook notes in JC26. 1500 She plead not guilty 1501 She plead not guilty. She may have been tried earlier under a commission from the committee of estates. We know she was definitely tried at the Circuit Court. 1502 1503 She plead not guilty. 1504 She was to remain in good behaviour under pain of 50 merks and banishment. 1505 1506 1507 1508 No inidcation of the verdict or anything. The Aberdeen roll says she was &#39;Abs&#39; probably means she was acquitted. 1509 No indication of the outcome 1510 He was previously banished for charming, but doesn&#39;t say by whom. Perhaps the church? 1511 1512 1513 1514 Not a complete record, so could be more people involved 1515 The circuit court says that she was to be released and cautioned to appear for trial in Edinburgh if called, 24/5/1671. In 1679 she was called and her diet was deserted. 1516 The circuit court says that she was to be released and cautioned to appear for trial in Edinburgh if called, 24/5/1671. She was cautioned to appear for trial at the circuit court, described as delinquent. It said &#39;dead&#39; next to her name in the delinquents porteous roll. 1517 The circuit court says that she was to be released and cautioned to appear for trial in Edinburgh if called, 24/5/1671. 1518 The circuit court says that he was to be released and cautioned to appear for trial in Edinburgh if called, 24/5/1671. 1519 The circuit court says that she was to be released and cautioned to appear for trial in Edinburgh if called, 24/5/1671. 1520 1521 listed on a porteous roll of deliquent dittays 1522 listed on a porteous roll of deliquent dittays 1523 listed on a porteous roll of deliquent dittays 1524 listed on a porteous roll of deliquent dittays 1525 listed on a porteous roll of deliquent dittays. Also indicted on a porteous roll from 1683. Marginal note says &#39;all absent and resited&#39; (all refers to three others in group). 1526 listed on a porteous roll of deliquent dittays. Also indicted on a porteous roll from 1683. Marginal note says &#39;all absent and resited&#39; (all refers to three others in group). 1527 listed on a porteous roll of deliquent dittays. she was indicted again on a proteous roll from 1683. Marginal note says &#39;all absent and resited&#39; (all refers to three others in group). 1528 listed on a porteous roll of deliquent dittays. Not sure what happened he is listed in a Porteous roll again for 1683. Marginal note says &#39;all absent and resited&#39; (all refers to three others in group). 1529 listed on a porteous roll of deliquent dittays 1530 Porteous roll for Haddington of Deliquent dittays for 12/9/1679 this group is listed as fugitive. 1531 She was declared fugitive on 12/9/1678 1532 declared fugitive on 12/9/1679 1533 She was declared fugitive for not appearing in court. The second reference says the trial was in a circuit court held in Edinburgh? 1534 Several people were tried for illegally torturing and arresting her. Her tormentors were tried on the same day. Her diet was deserted. 1535 She was declared fugitive for not appearing in court. The second reference says the court was held in Edinburgh? Same date for both. 1536 diet was deserted 1537 diet was deserted 1538 diet was deserted Execution Executionmethod ExecutionDate ExecutionDate.as.date 1 1 Burn 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 49 0 50 0 51 0 52 0 53 0 54 0 55 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 63 0 64 0 65 0 66 0 67 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 85 0 86 0 87 0 88 0 89 0 90 1 Strangle &amp; Burn 10/6/1697 06/10/97 00:00:00 91 0 92 1 Strangle &amp; Burn 10/6/1697 06/10/97 00:00:00 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 1 Strangle &amp; Burn 17/12/1633 12/17/33 00:00:00 124 1 Strangle &amp; Burn 17/12/1633 12/17/33 00:00:00 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 145 0 146 0 147 0 148 0 149 0 150 0 151 0 152 0 153 0 154 0 155 0 156 0 157 0 158 0 159 0 160 0 161 0 162 0 163 0 164 0 165 0 166 0 167 0 168 0 169 0 170 0 171 0 172 0 173 0 174 0 175 0 176 0 177 0 178 0 179 0 180 0 181 0 182 0 183 0 184 0 185 0 186 0 187 0 188 0 189 0 190 0 191 0 192 0 193 0 194 0 195 0 196 0 197 0 198 0 199 0 200 0 201 0 202 0 203 0 204 0 205 1 Burn 19/2/1597 02/19/97 00:00:00 206 0 207 0 208 0 209 0 210 0 211 0 212 0 213 1 Burn 4/1597 04/01/97 00:00:00 214 0 215 0 216 1 Burn 4/1597 04/01/97 00:00:00 217 0 218 0 219 0 220 0 221 1 Strangle &amp; Burn 4/1598 04/01/98 00:00:00 222 0 223 0 224 0 225 0 226 1 Strangle &amp; Burn 227 1 Strangle &amp; Burn 24/4/1597 04/24/97 00:00:00 228 0 229 1 Strangle &amp; Burn 24/4/1597 04/24/97 00:00:00 230 0 231 1 3/1597 03/01/97 00:00:00 232 1 9/3/1597 03/09/97 00:00:00 233 0 234 0 235 0 236 0 237 0 238 1 9/3/1597 03/09/97 00:00:00 239 1 9/3/1597 03/09/97 00:00:00 240 1 Strangle &amp; Burn 241 0 242 0 243 0 244 0 245 0 246 0 247 0 248 0 249 0 250 0 251 0 252 0 253 0 254 0 255 0 256 0 257 0 258 0 259 0 260 0 261 0 262 0 263 0 264 0 265 0 266 0 267 0 268 0 269 0 270 0 271 0 272 0 273 0 274 0 275 0 276 0 277 1 Strangle &amp; Burn 278 0 279 1 Strangle &amp; Burn 280 0 281 0 282 0 283 0 284 0 285 0 286 0 287 0 288 0 289 0 290 0 291 0 292 0 293 0 294 0 295 0 296 0 297 0 298 0 299 0 300 0 301 0 302 0 303 0 304 0 305 0 306 0 307 0 308 0 309 0 310 0 311 0 312 0 313 0 314 0 315 0 316 0 317 0 318 1 Burn 3/4/1633 04/03/33 00:00:00 319 0 320 0 321 0 322 1 1658 06/01/58 00:00:00 323 0 324 0 325 0 326 0 327 0 328 0 329 0 330 0 331 0 332 0 333 0 334 0 335 0 336 0 337 0 338 0 339 1 Strangle &amp; Burn 4/1597 04/01/97 00:00:00 340 1 Strangle &amp; Burn 4/1597 04/01/97 00:00:00 341 0 342 0 343 0 344 0 345 0 346 0 347 0 348 1 349 0 350 0 351 0 352 0 353 0 354 0 355 1 Strangle &amp; Burn 25/4/1597 04/25/97 00:00:00 356 0 357 0 358 0 359 0 360 0 361 0 362 0 363 0 364 0 365 0 366 0 367 0 368 0 369 1 Burn 6/1649 06/01/49 00:00:00 370 0 371 0 372 0 373 0 374 0 375 0 376 0 377 0 378 0 379 0 380 0 381 0 382 0 383 0 384 0 385 0 386 0 387 0 388 0 389 0 390 0 391 0 392 0 393 0 394 0 395 0 396 0 397 0 398 0 399 1 3/1597 03/01/97 00:00:00 400 0 401 0 402 1 Strangle &amp; Burn 24/4/1597 04/24/97 00:00:00 403 1 1597 06/01/97 00:00:00 404 1 1597 06/01/97 00:00:00 405 1 1597 06/01/97 00:00:00 406 0 407 0 408 0 409 0 410 0 411 0 412 0 413 0 414 0 415 0 416 0 417 0 418 0 419 0 420 0 421 0 422 0 423 1 Strangle &amp; Burn 424 0 425 0 426 0 427 0 428 0 429 0 430 0 431 0 432 0 433 0 434 0 435 0 436 0 437 0 438 0 439 0 440 0 441 0 442 0 443 0 444 0 445 0 446 0 447 0 448 0 449 0 450 0 451 0 452 0 453 0 454 0 455 0 456 0 457 0 458 0 459 0 460 0 461 0 462 0 463 0 464 0 465 0 466 0 467 0 468 0 469 0 470 0 471 0 472 0 473 0 474 0 475 0 476 0 477 0 478 0 479 0 480 0 481 0 482 0 483 0 484 0 485 0 486 0 487 0 488 0 489 0 490 0 491 0 492 0 493 0 494 0 495 0 496 0 497 0 498 0 499 0 500 0 501 0 502 0 503 0 504 0 505 0 506 0 507 0 508 0 509 0 510 0 511 0 512 0 513 0 514 0 515 0 516 0 517 0 518 0 519 0 520 0 521 0 522 0 523 0 524 0 525 0 526 0 527 0 528 0 529 0 530 0 531 0 532 0 533 0 534 0 535 0 536 1 Burn 537 0 538 0 539 0 540 0 541 0 542 0 543 0 544 0 545 0 546 0 547 0 548 0 549 0 550 0 551 0 552 0 553 0 554 0 555 0 556 0 557 0 558 0 559 0 560 0 561 0 562 0 563 0 564 0 565 0 566 0 567 0 568 0 569 0 570 0 571 0 572 0 573 0 574 0 575 0 576 0 577 0 578 0 579 0 580 0 581 0 582 0 583 0 584 0 585 0 586 0 587 0 588 0 589 0 590 0 591 0 592 0 593 0 594 0 595 0 596 0 597 0 598 0 599 0 600 0 601 0 602 0 603 0 604 0 605 0 606 0 607 0 608 0 609 0 610 0 611 0 612 0 613 0 614 0 615 0 616 0 617 0 618 0 619 0 620 0 621 0 622 0 623 0 624 0 625 0 626 0 627 0 628 0 629 0 630 0 631 0 632 0 633 0 634 0 635 0 636 0 637 0 638 0 639 0 640 0 641 0 642 0 643 0 644 0 645 0 646 0 647 0 648 0 649 0 650 0 651 0 652 0 653 1 Burn 25/4/1597 04/25/97 00:00:00 654 0 655 1 Strangle &amp; Burn 24/10/1673 10/24/73 00:00:00 656 0 657 0 658 0 659 0 660 0 661 0 662 0 663 0 664 0 665 0 666 0 667 0 668 0 669 0 670 0 671 0 672 0 673 0 674 0 675 0 676 0 677 0 678 0 679 0 680 0 681 0 682 0 683 0 684 0 685 0 686 0 687 0 688 0 689 0 690 0 691 0 692 0 693 0 694 0 695 0 696 0 697 0 698 0 699 0 700 0 701 0 702 0 703 0 704 0 705 0 706 0 707 0 708 0 709 0 710 0 711 0 712 0 713 0 714 0 715 0 716 0 717 0 718 0 719 0 720 0 721 0 722 0 723 0 724 0 725 0 726 0 727 0 728 0 729 0 730 0 731 0 732 0 733 1 Burn 734 0 735 0 736 0 737 0 738 0 739 0 740 0 741 0 742 0 743 0 744 0 745 0 746 0 747 0 748 0 749 0 750 0 751 0 752 0 753 0 754 0 755 0 756 0 757 0 758 0 759 0 760 0 761 0 762 0 763 0 764 0 765 1 Burn 23/2/1597 02/23/97 00:00:00 766 0 767 0 768 0 769 0 770 0 771 0 772 0 773 0 774 0 775 0 776 0 777 0 778 0 779 0 780 0 781 0 782 0 783 0 784 0 785 0 786 0 787 0 788 0 789 1 Burn 5/1630 05/01/30 00:00:00 790 0 791 0 792 0 793 1 Burn 12/1629 12/01/29 00:00:00 794 1 Burn 12/1629 12/01/29 00:00:00 795 1 Burn 12/1629 12/01/29 00:00:00 796 0 797 0 798 0 799 0 800 0 801 0 802 0 803 0 804 1 Burn 7/1630 07/01/30 00:00:00 805 0 806 0 807 0 808 0 809 0 810 0 811 0 812 0 813 0 814 0 815 0 816 0 817 0 818 0 819 0 820 0 821 0 822 0 823 0 824 0 825 0 826 0 827 0 828 0 829 0 830 0 831 0 832 0 833 0 834 0 835 0 836 0 837 1 838 0 839 0 840 0 841 0 842 0 843 0 844 0 845 0 846 0 847 0 848 0 849 0 850 0 851 0 852 0 853 0 854 0 855 0 856 0 857 0 858 0 859 0 860 0 861 0 862 0 863 0 864 0 865 0 866 0 867 0 868 0 869 0 870 0 871 0 872 0 873 0 874 0 875 0 876 0 877 0 878 0 879 0 880 0 881 0 882 1 Burn 883 1 Burn 884 0 885 0 886 1 Burn 887 0 888 0 889 0 890 0 891 0 892 0 893 0 894 0 895 0 896 1 Burn 1643 06/01/43 00:00:00 897 0 898 1 899 1 900 1 Burn 1644 06/01/44 00:00:00 901 1 Burn 1644 06/01/44 00:00:00 902 0 903 0 904 1 Burn 1644 06/01/44 00:00:00 905 1 Burn 1644 06/01/44 00:00:00 906 0 907 0 908 0 909 0 910 0 911 0 912 0 913 0 914 0 915 0 916 0 917 0 918 0 919 0 920 0 921 0 922 0 923 1 Burn 1644 06/01/44 00:00:00 924 0 925 0 926 0 927 0 928 0 929 0 930 0 931 0 932 0 933 0 934 0 935 0 936 0 937 0 938 0 939 0 940 0 941 0 942 0 943 0 944 0 945 0 946 0 947 0 948 0 949 0 950 0 951 0 952 0 953 0 954 0 955 1 956 0 957 0 958 0 959 0 960 0 961 0 962 0 963 0 964 0 965 0 966 0 967 0 968 0 969 0 970 1 11/1661 11/01/61 00:00:00 971 1 11/1661 11/01/61 00:00:00 972 0 973 0 974 0 975 0 976 0 977 0 978 0 979 0 980 0 981 0 982 0 983 0 984 0 985 0 986 0 987 0 988 1 Strangle &amp; Burn 20/9/1678 09/20/78 00:00:00 989 1 Strangle &amp; Burn 20/9/1678 09/20/78 00:00:00 990 1 Strangle &amp; Burn 20/9/1678 09/20/78 00:00:00 991 1 Strangle &amp; Burn 20/9/1678 09/20/78 00:00:00 992 0 993 1 Strangle &amp; Burn 20/2/1677 02/20/77 00:00:00 994 0 995 1 Strangle &amp; Burn 20/2/1677 02/20/77 00:00:00 996 1 Strangle &amp; Burn 20/2/1677 02/20/77 00:00:00 997 1 Strangle &amp; Burn 20/2/1677 02/20/77 00:00:00 998 1 Strangle &amp; Burn 20/2/1677 02/20/77 00:00:00 999 0 1000 0 1001 0 1002 0 1003 0 1004 0 1005 0 1006 0 1007 0 1008 0 1009 0 1010 0 1011 0 1012 0 1013 0 1014 0 1015 0 1016 0 1017 0 1018 0 1019 0 1020 0 1021 0 1022 0 1023 0 1024 0 1025 0 1026 0 1027 0 1028 0 1029 0 1030 0 1031 0 1032 0 1033 0 1034 0 1035 0 1036 0 1037 0 1038 0 1039 0 1040 0 1041 0 1042 0 1043 0 1044 0 1045 0 1046 0 1047 0 1048 0 1049 1 Burn 9/1649 09/01/49 00:00:00 1050 1 9/4/1650 04/09/50 00:00:00 1051 1 9/4/1650 04/09/50 00:00:00 1052 0 1053 0 1054 1 4/1647 04/01/47 00:00:00 1055 1 4/1647 04/01/47 00:00:00 1056 0 1057 0 1058 0 1059 0 1060 0 1061 0 1062 0 1063 0 1064 0 1065 0 1066 0 1067 0 1068 0 1069 0 1070 0 1071 0 1072 0 1073 0 1074 0 1075 0 1076 0 1077 0 1078 0 1079 0 1080 0 1081 0 1082 0 1083 0 1084 0 1085 0 1086 0 1087 0 1088 0 1089 0 1090 0 1091 0 1092 1 1093 1 1094 1 1095 0 1096 0 1097 0 1098 0 1099 0 1100 0 1101 0 1102 0 1103 0 1104 0 1105 0 1106 0 1107 0 1108 0 1109 0 1110 0 1111 0 1112 0 1113 0 1114 0 1115 0 1116 0 1117 0 1118 0 1119 0 1120 0 1121 0 1122 0 1123 0 1124 0 1125 0 1126 0 1127 0 1128 0 1129 0 1130 0 1131 0 1132 0 1133 0 1134 0 1135 0 1136 0 1137 0 1138 0 1139 0 1140 0 1141 0 1142 0 1143 0 1144 0 1145 0 1146 0 1147 0 1148 0 1149 0 1150 0 1151 0 1152 0 1153 0 1154 0 1155 0 1156 0 1157 0 1158 0 1159 0 1160 0 1161 0 1162 0 1163 0 1164 0 1165 1 Strangle &amp; Burn 1/5/1649 05/01/49 00:00:00 1166 0 1167 0 1168 0 1169 0 1170 0 1171 0 1172 0 1173 0 1174 0 1175 0 1176 0 1177 0 1178 0 1179 0 1180 0 1181 0 1182 0 1183 0 1184 0 1185 0 1186 0 1187 0 1188 0 1189 0 1190 0 1191 0 1192 0 1193 0 1194 0 1195 0 1196 0 1197 0 1198 0 1199 0 1200 0 1201 1 1202 0 1203 1 1204 0 1205 0 1206 1 1207 0 1208 1 1209 0 1210 1 1211 0 1212 0 1213 1 1214 1 1215 1 1216 0 1217 0 1218 0 1219 0 1220 0 1221 0 1222 0 1223 0 1224 0 1225 0 1226 0 1227 0 1228 0 1229 0 1230 0 1231 0 1232 0 1233 0 1234 0 1235 0 1236 0 1237 0 1238 0 1239 0 1240 0 1241 0 1242 0 1243 0 1244 0 1245 0 1246 0 1247 0 1248 0 1249 0 1250 0 1251 0 1252 0 1253 0 1254 0 1255 0 1256 0 1257 0 1258 0 1259 0 1260 0 1261 0 1262 0 1263 0 1264 0 1265 0 1266 0 1267 0 1268 0 1269 0 1270 0 1271 0 1272 1 Strangle &amp; Burn 1273 1 Strangle &amp; Burn 13/11/1629 11/13/29 00:00:00 1274 0 1275 0 1276 0 1277 0 1278 1 Strangle &amp; Burn 30/5/1638 05/30/38 00:00:00 1279 0 1280 0 1281 0 1282 0 1283 0 1284 0 1285 0 1286 0 1287 0 1288 0 1289 0 1290 1 Strangle &amp; Burn 22/7/1643 07/22/43 00:00:00 1291 0 1292 0 1293 0 1294 0 1295 0 1296 0 1297 0 1298 0 1299 0 1300 0 1301 0 1302 0 1303 0 1304 0 1305 0 1306 0 1307 0 1308 0 1309 0 1310 0 1311 0 1312 0 1313 0 1314 0 1315 0 1316 0 1317 0 1318 0 1319 0 1320 0 1321 0 1322 0 1323 0 1324 0 1325 0 1326 0 1327 0 1328 0 1329 0 1330 0 1331 0 1332 0 1333 0 1334 0 1335 0 1336 0 1337 0 1338 0 1339 0 1340 0 1341 0 1342 0 1343 0 1344 0 1345 0 1346 1 1347 1 1348 1 1349 0 1350 0 1351 0 1352 0 1353 1 1354 0 1355 0 1356 0 1357 0 1358 0 1359 0 1360 0 1361 0 1362 0 1363 1 Strangle &amp; Burn 22/7/1643 07/22/43 00:00:00 1364 0 1365 0 1366 0 1367 0 1368 0 1369 0 1370 0 1371 0 1372 0 1373 0 1374 0 1375 0 1376 0 1377 0 1378 0 1379 1 Strangle &amp; Burn 1380 1 Strangle &amp; Burn 1381 1 Strangle &amp; Burn 1382 0 1383 0 1384 0 1385 1 1386 1 1387 1 1388 1 1389 1 1390 1 1391 1 1392 0 1393 0 1394 0 1395 1 Strangle &amp; Burn 23/4/1658 04/23/58 00:00:00 1396 1 Strangle &amp; Burn 1397 1 Strangle &amp; Burn 1398 1 Strangle &amp; Burn 5/1658 05/01/58 00:00:00 1399 1 Strangle &amp; Burn 5/1658 05/01/58 00:00:00 1400 0 1401 0 1402 0 1403 0 1404 0 1405 0 1406 0 1407 0 1408 0 1409 0 1410 0 1411 0 1412 0 1413 0 1414 0 1415 0 1416 0 1417 0 1418 0 1419 0 1420 0 1421 0 1422 0 1423 0 1424 0 1425 1 24/8/1698 08/24/98 00:00:00 1426 0 1427 0 1428 0 1429 0 1430 0 1431 0 1432 0 1433 0 1434 0 1435 0 1436 0 1437 0 1438 0 1439 0 1440 0 1441 0 1442 0 1443 0 1444 0 1445 1 Beheading 1446 0 1447 0 1448 0 1449 0 1450 0 1451 0 1452 0 1453 0 1454 0 1455 0 1456 0 1457 0 1458 0 1459 0 1460 0 1461 0 1462 0 1463 0 1464 0 1465 0 1466 0 1467 0 1468 0 1469 0 1470 0 1471 0 1472 0 1473 0 1474 0 1475 0 1476 0 1477 0 1478 0 1479 0 1480 0 1481 0 1482 0 1483 0 1484 0 1485 0 1486 0 1487 0 1488 0 1489 0 1490 0 1491 0 1492 0 1493 0 1494 1 Strangle &amp; Burn 1495 1 Strangle &amp; Burn 1496 0 1497 1 Strangle &amp; Burn 1498 1 Strangle &amp; Burn 1499 1 Strangle &amp; Burn 1500 1 Strangle &amp; Burn 1501 1 Strangle &amp; Burn 1502 0 1503 1 Strangle &amp; Burn 1504 0 1505 0 1506 0 1507 0 1508 0 1509 0 1510 0 1511 0 1512 0 1513 1 Strangle &amp; Burn 18/5/1671 05/18/71 00:00:00 1514 1 Strangle &amp; Burn 18/5/1671 05/18/71 00:00:00 1515 0 1516 0 1517 0 1518 0 1519 0 1520 0 1521 0 1522 0 1523 0 1524 0 1525 0 1526 0 1527 0 1528 0 1529 0 1530 0 1531 0 1532 0 1533 0 1534 0 1535 0 1536 0 1537 0 1538 0 ExecutionPlace Exec.settlement Exec.parish Exec.presbytery Exec.county 1 NA 2 NA 3 NA 4 NA 5 NA 6 NA 7 NA 8 NA 9 NA 10 NA 11 NA 12 NA 13 NA 14 NA 15 NA 16 NA 17 NA 18 NA 19 NA 20 NA 21 NA 22 NA 23 NA 24 NA 25 NA 26 NA 27 NA 28 NA 29 NA 30 NA 31 NA 32 NA 33 NA 34 NA 35 NA 36 NA 37 NA 38 NA 39 NA 40 NA 41 NA 42 NA 43 NA 44 NA 45 NA 46 NA 47 NA 48 NA 49 NA 50 NA 51 NA 52 NA 53 NA 54 NA 55 NA 56 NA 57 NA 58 NA 59 NA 60 NA 61 NA 62 NA 63 NA 64 NA 65 NA 66 NA 67 NA 68 NA 69 NA 70 NA 71 NA 72 NA 73 NA 74 NA 75 NA 76 NA 77 NA 78 NA 79 NA 80 NA 81 NA 82 NA 83 NA 84 NA 85 NA 86 NA 87 NA 88 NA 89 NA 90 Gallow Green P/ST/1328 NA Renfrew 91 NA 92 Gallow Green P/ST/1328 NA Renfrew 93 NA 94 NA 95 NA 96 NA 97 NA 98 NA 99 NA 100 NA 101 NA 102 NA 103 NA 104 NA 105 NA 106 NA 107 NA 108 NA 109 NA 110 NA 111 NA 112 NA 113 NA 114 NA 115 NA 116 NA 117 NA 118 NA 119 NA 120 NA 121 NA 122 NA 123 P/ST/1111 NA Fife 124 P/ST/1111 NA Fife 125 NA 126 NA 127 NA 128 NA 129 NA 130 NA 131 NA 132 NA 133 NA 134 NA 135 NA 136 NA 137 NA 138 NA 139 NA 140 NA 141 NA 142 NA 143 NA 144 NA 145 NA 146 NA 147 NA 148 NA 149 NA 150 NA 151 NA 152 NA 153 NA 154 NA 155 NA 156 NA 157 NA 158 NA 159 NA 160 NA 161 NA 162 NA 163 NA 164 NA 165 NA 166 NA 167 NA 168 NA 169 NA 170 NA 171 NA 172 NA 173 NA 174 NA 175 NA 176 NA 177 NA 178 NA 179 NA 180 NA 181 NA 182 NA 183 NA 184 NA 185 NA 186 NA 187 NA 188 NA 189 NA 190 NA 191 NA 192 NA 193 NA 194 NA 195 NA 196 NA 197 NA 198 NA 199 NA 200 NA 201 NA 202 NA 203 NA 204 NA 205 NA Aberdeen 206 NA 207 NA 208 NA 209 NA 210 NA 211 NA 212 NA 213 NA Aberdeen 214 NA 215 NA 216 NA 217 NA 218 NA 219 NA 220 NA 221 Gallow Hill NA Aberdeen 222 NA 223 NA 224 NA 225 NA 226 Hills NA Aberdeen 227 Hills NA Aberdeen 228 NA 229 Hills NA Aberdeen 230 NA 231 NA 232 NA Aberdeen 233 NA 234 NA 235 NA 236 NA 237 NA 238 NA Aberdeen 239 NA 240 Hills NA Aberdeen 241 NA 242 NA 243 NA 244 NA 245 NA 246 NA 247 NA 248 NA 249 NA 250 NA 251 NA 252 NA 253 NA 254 NA 255 NA 256 NA 257 NA 258 NA 259 NA 260 NA 261 NA 262 NA 263 NA 264 NA 265 NA 266 NA 267 NA 268 NA 269 NA 270 NA 271 NA 272 NA 273 NA 274 NA 275 NA 276 NA 277 Hill of Berrie NA Shetland 278 NA 279 NA Shetland 280 NA 281 NA 282 NA 283 NA 284 NA 285 NA 286 NA 287 NA 288 NA 289 NA 290 NA 291 NA 292 NA 293 NA 294 NA 295 NA 296 NA 297 NA 298 NA 299 NA 300 NA 301 NA 302 NA 303 NA 304 NA 305 NA 306 NA 307 NA 308 NA 309 NA 310 NA 311 NA 312 NA 313 NA 314 NA 315 NA 316 NA 317 NA 318 NA 319 NA 320 NA 321 NA 322 NA 323 NA 324 NA 325 NA 326 NA 327 NA 328 NA 329 NA 330 NA 331 NA 332 NA 333 NA 334 NA 335 NA 336 NA 337 NA 338 NA 339 NA Aberdeen 340 NA Aberdeen 341 NA 342 NA 343 NA 344 NA 345 NA 346 NA 347 NA 348 NA 349 NA 350 NA 351 NA 352 NA 353 NA 354 NA 355 NA Aberdeen 356 NA 357 NA 358 NA 359 NA 360 NA 361 NA 362 NA 363 NA 364 NA 365 NA 366 NA 367 NA 368 NA 369 P/ST/658 NA Edinburgh 370 NA 371 NA 372 NA 373 NA 374 NA 375 NA 376 NA 377 NA 378 NA 379 NA 380 NA 381 NA 382 NA 383 NA 384 NA 385 NA 386 NA 387 NA 388 NA 389 NA 390 NA 391 NA 392 NA 393 NA 394 NA 395 NA 396 NA 397 NA 398 NA 399 NA Aberdeen 400 NA 401 NA 402 NA Aberdeen 403 NA Aberdeen 404 NA Aberdeen 405 NA Aberdeen 406 NA 407 NA 408 NA 409 NA 410 NA 411 NA 412 NA 413 NA 414 NA 415 NA 416 NA 417 NA 418 NA 419 NA 420 NA 421 NA 422 NA 423 NA 424 NA 425 NA 426 NA 427 NA 428 NA 429 NA 430 NA 431 NA 432 NA 433 NA 434 NA 435 NA 436 NA 437 NA 438 NA 439 NA 440 NA 441 NA 442 NA 443 NA 444 NA 445 NA 446 NA 447 NA 448 NA 449 NA 450 NA 451 NA 452 NA 453 NA 454 NA 455 NA 456 NA 457 NA 458 NA 459 NA 460 NA 461 NA 462 NA 463 NA 464 NA 465 NA 466 NA 467 NA 468 NA 469 NA 470 NA 471 NA 472 NA 473 NA 474 NA 475 NA 476 NA 477 NA 478 NA 479 NA 480 NA 481 NA 482 NA 483 NA 484 NA 485 NA 486 NA 487 NA 488 NA 489 NA 490 NA 491 NA 492 NA 493 NA 494 NA 495 NA 496 NA 497 NA 498 NA 499 NA 500 NA 501 NA 502 NA 503 NA 504 NA 505 NA 506 NA 507 NA 508 NA 509 NA 510 NA 511 NA 512 NA 513 NA 514 NA 515 NA 516 NA 517 NA 518 NA 519 NA 520 NA 521 NA 522 NA 523 NA 524 NA 525 NA 526 NA 527 NA 528 NA 529 NA 530 NA 531 NA 532 NA 533 NA 534 NA 535 NA 536 P/ST/1039 NA Fife 537 NA 538 NA 539 NA 540 NA 541 NA 542 NA 543 NA 544 NA 545 NA 546 NA 547 NA 548 NA 549 NA 550 NA 551 NA 552 NA 553 NA 554 NA 555 NA 556 NA 557 NA 558 NA 559 NA 560 NA 561 NA 562 NA 563 NA 564 NA 565 NA 566 NA 567 NA 568 NA 569 NA 570 NA 571 NA 572 NA 573 NA 574 NA 575 NA 576 NA 577 NA 578 NA 579 NA 580 NA 581 NA 582 NA 583 NA 584 NA 585 NA 586 NA 587 NA 588 NA 589 NA 590 NA 591 NA 592 NA 593 NA 594 NA 595 NA 596 NA 597 NA 598 NA 599 NA 600 NA 601 NA 602 NA 603 NA 604 NA 605 NA 606 NA 607 NA 608 NA 609 NA 610 NA 611 NA 612 NA 613 NA 614 NA 615 NA 616 NA 617 NA 618 NA 619 NA 620 NA 621 NA 622 NA 623 NA 624 NA 625 NA 626 NA 627 NA 628 NA 629 NA 630 NA 631 NA 632 NA 633 NA 634 NA 635 NA 636 NA 637 NA 638 NA 639 NA 640 NA 641 NA 642 NA 643 NA 644 NA 645 NA 646 NA 647 NA 648 NA 649 NA 650 NA 651 NA 652 NA 653 NA Aberdeen 654 NA 655 NA Bute 656 NA 657 NA 658 NA 659 NA 660 NA 661 NA 662 NA 663 NA 664 NA 665 NA 666 NA 667 NA 668 NA 669 NA 670 NA 671 NA 672 NA 673 NA 674 NA 675 NA 676 NA 677 NA 678 NA 679 NA 680 NA 681 NA 682 NA 683 NA 684 NA 685 NA 686 NA 687 NA 688 NA 689 NA 690 NA 691 NA 692 NA 693 NA 694 NA 695 NA 696 NA 697 NA 698 NA 699 NA 700 NA 701 NA 702 NA 703 NA 704 NA 705 NA 706 NA 707 NA 708 NA 709 NA 710 NA 711 NA 712 NA 713 NA 714 NA 715 NA 716 NA 717 NA 718 NA 719 NA 720 NA 721 NA 722 NA 723 NA 724 NA 725 NA 726 NA 727 NA 728 NA 729 NA 730 NA 731 NA 732 NA 733 NA 734 NA 735 NA 736 NA 737 NA 738 NA 739 NA 740 NA 741 NA 742 NA 743 NA 744 NA 745 NA 746 NA 747 NA 748 NA 749 NA 750 NA 751 NA 752 NA 753 NA 754 NA 755 NA 756 NA 757 NA 758 NA 759 NA 760 NA 761 NA 762 NA 763 NA 764 NA 765 NA 766 NA 767 NA 768 NA 769 NA 770 NA 771 NA 772 NA 773 NA 774 NA 775 NA 776 NA 777 NA 778 NA 779 NA 780 NA 781 NA 782 NA 783 NA 784 NA 785 NA 786 NA 787 NA 788 NA 789 NA 790 NA 791 NA 792 NA 793 P/ST/1334 NA Edinburgh 794 P/ST/1334 NA Edinburgh 795 P/ST/1334 NA Edinburgh 796 NA 797 NA 798 NA 799 NA 800 NA 801 NA 802 NA 803 NA 804 P/JO/3540 NA Edinburgh 805 NA 806 NA 807 NA 808 NA 809 NA 810 NA 811 NA 812 NA 813 NA 814 NA 815 NA 816 NA 817 NA 818 NA 819 NA 820 NA 821 NA 822 NA 823 NA 824 NA 825 NA 826 NA 827 NA 828 NA 829 NA 830 NA 831 NA 832 NA 833 NA 834 NA 835 NA 836 NA 837 NA 838 NA 839 NA 840 NA 841 NA 842 NA 843 NA 844 NA 845 NA 846 NA 847 NA 848 NA 849 NA 850 NA 851 NA 852 NA 853 NA 854 NA 855 NA 856 NA 857 NA 858 NA 859 NA 860 NA 861 NA 862 NA 863 NA 864 NA 865 NA 866 NA 867 NA 868 NA 869 NA 870 NA 871 NA 872 NA 873 NA 874 NA 875 NA 876 NA 877 NA 878 NA 879 NA 880 NA 881 NA 882 NA 883 NA 884 NA 885 NA 886 NA 887 NA 888 NA 889 NA 890 NA 891 NA 892 NA 893 NA 894 NA 895 NA 896 NA 897 NA 898 NA 899 NA 900 NA 901 NA 902 NA 903 NA 904 NA Linlithgow 905 NA Linlithgow 906 NA 907 NA 908 NA 909 NA 910 NA 911 NA 912 NA 913 NA 914 NA 915 NA 916 NA 917 NA 918 NA 919 NA 920 NA 921 NA 922 NA 923 NA Linlithgow 924 NA 925 NA 926 NA 927 NA 928 NA 929 NA 930 NA 931 NA 932 NA 933 NA 934 NA 935 NA 936 NA 937 NA 938 NA 939 NA 940 NA 941 NA 942 NA 943 NA 944 NA 945 NA 946 NA 947 NA 948 NA 949 NA 950 NA 951 NA 952 NA 953 NA 954 NA 955 NA 956 NA 957 NA 958 NA 959 NA 960 NA 961 NA 962 NA 963 NA 964 NA 965 NA 966 NA 967 NA 968 NA 969 NA 970 P/ST/1526 NA Peebles 971 P/ST/1526 NA Peebles 972 NA 973 NA 974 NA 975 NA 976 NA 977 NA 978 NA 979 NA 980 NA 981 NA 982 NA 983 NA 984 NA 985 NA 986 NA 987 NA 988 NA 989 NA 990 NA 991 NA 992 NA 993 Gallow Green P/ST/1328 NA Renfrew 994 NA 995 Gallow Green P/ST/1328 NA Renfrew 996 Gallow Green P/ST/1328 NA Renfrew 997 Gallow Green P/ST/1328 NA 998 Gallow Green P/ST/1328 NA 999 NA 1000 NA 1001 NA 1002 NA 1003 NA 1004 NA 1005 NA 1006 NA 1007 NA 1008 NA 1009 NA 1010 NA 1011 NA 1012 NA 1013 NA 1014 NA 1015 NA 1016 NA 1017 NA 1018 NA 1019 NA 1020 NA 1021 NA 1022 NA 1023 NA 1024 NA 1025 NA 1026 NA 1027 NA 1028 NA 1029 NA 1030 NA 1031 NA 1032 NA 1033 NA 1034 NA 1035 NA 1036 NA 1037 NA 1038 NA 1039 NA 1040 NA 1041 NA 1042 NA 1043 NA 1044 NA 1045 NA 1046 NA 1047 NA 1048 NA 1049 Hailes NA Edinburgh 1050 NA Haddington 1051 P/ST/1541 NA Haddington 1052 NA 1053 NA 1054 P/ST/1159 NA Linlithgow 1055 P/ST/1159 NA Linlithgow 1056 NA 1057 NA 1058 NA 1059 NA 1060 NA 1061 NA 1062 NA 1063 NA 1064 NA 1065 NA 1066 NA 1067 NA 1068 NA 1069 NA 1070 NA 1071 NA 1072 NA 1073 NA 1074 NA 1075 NA 1076 NA 1077 NA 1078 NA 1079 NA 1080 NA 1081 NA 1082 NA 1083 NA 1084 NA 1085 NA 1086 NA 1087 NA 1088 NA 1089 NA 1090 NA 1091 NA 1092 NA 1093 NA 1094 NA 1095 NA 1096 NA 1097 NA 1098 NA 1099 NA 1100 NA 1101 NA 1102 NA 1103 NA 1104 NA 1105 NA 1106 NA 1107 NA 1108 NA 1109 NA 1110 NA 1111 NA 1112 NA 1113 NA 1114 NA 1115 NA 1116 NA 1117 NA 1118 NA 1119 NA 1120 NA 1121 NA 1122 NA 1123 NA 1124 NA 1125 NA 1126 NA 1127 NA 1128 NA 1129 NA 1130 NA 1131 NA 1132 NA 1133 NA 1134 NA 1135 NA 1136 NA 1137 NA 1138 NA 1139 NA 1140 NA 1141 NA 1142 NA 1143 NA 1144 NA 1145 NA 1146 NA 1147 NA 1148 NA 1149 NA 1150 NA 1151 NA 1152 NA 1153 NA 1154 NA 1155 NA 1156 NA 1157 NA 1158 NA 1159 NA 1160 NA 1161 NA 1162 NA 1163 NA 1164 NA 1165 Murebrall P/ST/1525 NA Haddington 1166 NA 1167 NA 1168 NA 1169 NA 1170 NA 1171 NA 1172 NA 1173 NA 1174 NA 1175 NA 1176 NA 1177 NA 1178 NA 1179 NA 1180 NA 1181 NA 1182 NA 1183 NA 1184 NA 1185 NA 1186 NA 1187 NA 1188 NA 1189 NA 1190 NA 1191 NA 1192 NA 1193 NA 1194 NA 1195 NA 1196 NA 1197 NA 1198 NA 1199 NA 1200 NA 1201 NA 1202 NA 1203 NA 1204 NA 1205 NA 1206 NA 1207 NA 1208 NA 1209 NA 1210 NA 1211 NA 1212 NA 1213 NA 1214 NA 1215 NA 1216 NA 1217 NA 1218 NA 1219 NA 1220 NA 1221 NA 1222 NA 1223 NA 1224 NA 1225 NA 1226 NA 1227 NA 1228 NA 1229 NA 1230 NA 1231 NA 1232 NA 1233 NA 1234 NA 1235 NA 1236 NA 1237 NA 1238 NA 1239 NA 1240 NA 1241 NA 1242 NA 1243 NA 1244 NA 1245 NA 1246 NA 1247 NA 1248 NA 1249 NA 1250 NA 1251 NA 1252 NA 1253 NA 1254 NA 1255 NA 1256 NA 1257 NA 1258 NA 1259 NA 1260 NA 1261 NA 1262 NA 1263 NA 1264 NA 1265 NA 1266 NA 1267 NA 1268 NA 1269 NA 1270 NA 1271 NA 1272 Castle Hill NA 1273 Castle Hill NA 1274 NA 1275 NA 1276 NA 1277 NA 1278 Gallow Hill NA Orkney 1279 NA 1280 NA 1281 NA 1282 NA 1283 NA 1284 NA 1285 NA 1286 NA 1287 NA 1288 NA 1289 NA 1290 NA 1291 NA 1292 NA 1293 NA 1294 NA 1295 NA 1296 NA 1297 NA 1298 NA 1299 NA 1300 NA 1301 NA 1302 NA 1303 NA 1304 NA 1305 NA 1306 NA 1307 NA 1308 NA 1309 NA 1310 NA 1311 NA 1312 NA 1313 NA 1314 NA 1315 NA 1316 NA 1317 NA 1318 NA 1319 NA 1320 NA 1321 NA 1322 NA 1323 NA 1324 NA 1325 NA 1326 NA 1327 NA 1328 NA 1329 NA 1330 NA 1331 NA 1332 NA 1333 NA 1334 NA 1335 NA 1336 NA 1337 NA 1338 NA 1339 NA 1340 NA 1341 NA 1342 NA 1343 NA 1344 NA 1345 NA 1346 NA 1347 NA 1348 NA 1349 NA 1350 NA 1351 NA 1352 NA 1353 NA 1354 NA 1355 NA 1356 NA 1357 NA 1358 NA 1359 NA 1360 NA 1361 NA 1362 NA 1363 NA 1364 NA 1365 NA 1366 NA 1367 NA 1368 NA 1369 NA 1370 NA 1371 NA 1372 NA 1373 NA 1374 NA 1375 NA 1376 NA 1377 NA 1378 NA 1379 Lonhead P/ST/1087 NA Orkney 1380 Lonhead NA Orkney 1381 NA 1382 NA 1383 NA 1384 NA 1385 NA Haddington 1386 NA Haddington 1387 NA Haddington 1388 NA Haddington 1389 NA Haddington 1390 NA Haddington 1391 NA 1392 NA 1393 NA 1394 NA 1395 NA Ayr 1396 NA Ayr 1397 NA Ayr 1398 NA Dumfries 1399 NA Dumfries 1400 NA 1401 NA 1402 NA 1403 NA 1404 NA 1405 NA 1406 NA 1407 NA 1408 NA 1409 NA 1410 NA 1411 NA 1412 NA 1413 NA 1414 NA 1415 NA 1416 NA 1417 NA 1418 NA 1419 NA 1420 NA 1421 NA 1422 NA 1423 NA 1424 NA 1425 NA 1426 NA 1427 NA 1428 NA 1429 NA 1430 NA 1431 NA 1432 NA 1433 NA 1434 NA 1435 NA 1436 NA 1437 NA 1438 NA 1439 NA 1440 NA 1441 NA 1442 NA 1443 NA 1444 NA 1445 Mercat Cross NA Edinburgh 1446 NA 1447 NA 1448 NA 1449 NA 1450 NA 1451 NA 1452 NA 1453 NA 1454 NA 1455 NA 1456 NA 1457 NA 1458 NA 1459 NA 1460 NA 1461 NA 1462 NA 1463 NA 1464 NA 1465 NA 1466 NA 1467 NA 1468 NA 1469 NA 1470 NA 1471 NA 1472 NA 1473 NA 1474 NA 1475 NA 1476 NA 1477 NA 1478 NA 1479 NA 1480 NA 1481 NA 1482 NA 1483 NA 1484 NA 1485 NA 1486 NA 1487 NA 1488 NA 1489 NA 1490 NA 1491 NA 1492 NA 1493 NA 1494 NA Dumfries 1495 NA Dumfries 1496 NA 1497 NA Dumfries 1498 NA Dumfries 1499 NA Dumfries 1500 NA Dumfries 1501 NA Dumfries 1502 NA 1503 NA Dumfries 1504 NA 1505 NA 1506 NA 1507 NA 1508 NA 1509 NA 1510 NA 1511 NA 1512 NA 1513 NA Dumfries 1514 NA Dumfries 1515 NA 1516 NA 1517 NA 1518 NA 1519 NA 1520 NA 1521 NA 1522 NA 1523 NA 1524 NA 1525 NA 1526 NA 1527 NA 1528 NA 1529 NA 1530 NA 1531 NA 1532 NA 1533 NA 1534 NA 1535 NA 1536 NA 1537 NA 1538 NA Exec.burgh Exec.NGR.Letters Exec.NGR.Easting Exec.NGR.Northing 1 Aberdeen NA NA NA 2 NA NA NA 3 NA NA NA 4 NA NA NA 5 NA NA NA 6 NA NA NA 7 NA NA NA 8 NA NA NA 9 NA NA NA 10 NA NA NA 11 NA NA NA 12 NA NA NA 13 NA NA NA 14 NA NA NA 15 NA NA NA 16 NA NA NA 17 NA NA NA 18 NA NA NA 19 NA NA NA 20 NA NA NA 21 NA NA NA 22 NA NA NA 23 NA NA NA 24 NA NA NA 25 NA NA NA 26 NA NA NA 27 NA NA NA 28 NA NA NA 29 NA NA NA 30 NA NA NA 31 NA NA NA 32 NA NA NA 33 NA NA NA 34 NA NA NA 35 NA NA NA 36 NA NA NA 37 NA NA NA 38 NA NA NA 39 NA NA NA 40 NA NA NA 41 NA NA NA 42 NA NA NA 43 NA NA NA 44 NA NA NA 45 NA NA NA 46 NA NA NA 47 NA NA NA 48 NA NA NA 49 NA NA NA 50 NA NA NA 51 NA NA NA 52 NA NA NA 53 NA NA NA 54 NA NA NA 55 NA NA NA 56 NA NA NA 57 NA NA NA 58 NA NA NA 59 NA NA NA 60 NA NA NA 61 NA NA NA 62 NA NA NA 63 NA NA NA 64 NA NA NA 65 NA NA NA 66 NA NA NA 67 NA NA NA 68 NA NA NA 69 NA NA NA 70 NA NA NA 71 NA NA NA 72 NA NA NA 73 NA NA NA 74 NA NA NA 75 NA NA NA 76 NA NA NA 77 NA NA NA 78 NA NA NA 79 NA NA NA 80 NA NA NA 81 NA NA NA 82 NA NA NA 83 NA NA NA 84 NA NA NA 85 NA NA NA 86 NA NA NA 87 NA NA NA 88 NA NA NA 89 NA NA NA 90 NA NA NA 91 NA NA NA 92 NA NA NA 93 NA NA NA 94 NA NA NA 95 NA NA NA 96 NA NA NA 97 NA NA NA 98 NA NA NA 99 NA NA NA 100 NA NA NA 101 NA NA NA 102 NA NA NA 103 NA NA NA 104 NA NA NA 105 NA NA NA 106 NA NA NA 107 NA NA NA 108 NA NA NA 109 NA NA NA 110 NA NA NA 111 NA NA NA 112 NA NA NA 113 NA NA NA 114 NA NA NA 115 NA NA NA 116 NA NA NA 117 NA NA NA 118 NA NA NA 119 NA NA NA 120 NA NA NA 121 NA NA NA 122 NA NA NA 123 Kirkcaldy NA NA NA 124 Kirkcaldy NA NA NA 125 NA NA NA 126 NA NA NA 127 NA NA NA 128 NA NA NA 129 NA NA NA 130 NA NA NA 131 NA NA NA 132 NA NA NA 133 NA NA NA 134 NA NA NA 135 NA NA NA 136 NA NA NA 137 NA NA NA 138 NA NA NA 139 NA NA NA 140 NA NA NA 141 NA NA NA 142 NA NA NA 143 NA NA NA 144 NA NA NA 145 NA NA NA 146 NA NA NA 147 NA NA NA 148 NA NA NA 149 NA NA NA 150 NA NA NA 151 NA NA NA 152 NA NA NA 153 NA NA NA 154 NA NA NA 155 NA NA NA 156 NA NA NA 157 NA NA NA 158 NA NA NA 159 NA NA NA 160 NA NA NA 161 NA NA NA 162 NA NA NA 163 NA NA NA 164 NA NA NA 165 NA NA NA 166 NA NA NA 167 NA NA NA 168 NA NA NA 169 NA NA NA 170 NA NA NA 171 NA NA NA 172 NA NA NA 173 NA NA NA 174 NA NA NA 175 NA NA NA 176 NA NA NA 177 NA NA NA 178 NA NA NA 179 NA NA NA 180 NA NA NA 181 NA NA NA 182 NA NA NA 183 NA NA NA 184 NA NA NA 185 NA NA NA 186 NA NA NA 187 NA NA NA 188 NA NA NA 189 NA NA NA 190 NA NA NA 191 NA NA NA 192 NA NA NA 193 NA NA NA 194 NA NA NA 195 NA NA NA 196 NA NA NA 197 NA NA NA 198 NA NA NA 199 NA NA NA 200 NA NA NA 201 NA NA NA 202 NA NA NA 203 NA NA NA 204 NA NA NA 205 Aberdeen NA NA NA 206 NA NA NA 207 NA NA NA 208 NA NA NA 209 NA NA NA 210 NA NA NA 211 NA NA NA 212 NA NA NA 213 Aberdeen NA NA NA 214 NA NA NA 215 NA NA NA 216 Aberdeen NA NA NA 217 NA NA NA 218 NA NA NA 219 NA NA NA 220 NA NA NA 221 Aberdeen NA NA NA 222 NA NA NA 223 NA NA NA 224 NA NA NA 225 NA NA NA 226 Aberdeen NA NA NA 227 Aberdeen NA NA NA 228 NA NA NA 229 Aberdeen NA NA NA 230 NA NA NA 231 NA NA NA 232 Aberdeen NA NA NA 233 NA NA NA 234 NA NA NA 235 NA NA NA 236 NA NA NA 237 NA NA NA 238 Aberdeen NA NA NA 239 NA NA NA 240 Aberdeen NA NA NA 241 NA NA NA 242 NA NA NA 243 NA NA NA 244 NA NA NA 245 NA NA NA 246 NA NA NA 247 NA NA NA 248 NA NA NA 249 NA NA NA 250 NA NA NA 251 NA NA NA 252 NA NA NA 253 NA NA NA 254 NA NA NA 255 NA NA NA 256 NA NA NA 257 NA NA NA 258 NA NA NA 259 NA NA NA 260 NA NA NA 261 NA NA NA 262 NA NA NA 263 NA NA NA 264 NA NA NA 265 NA NA NA 266 NA NA NA 267 NA NA NA 268 NA NA NA 269 NA NA NA 270 NA NA NA 271 NA NA NA 272 NA NA NA 273 NA NA NA 274 NA NA NA 275 NA NA NA 276 NA NA NA 277 NA NA NA 278 NA NA NA 279 NA NA NA 280 NA NA NA 281 NA NA NA 282 NA NA NA 283 NA NA NA 284 NA NA NA 285 NA NA NA 286 NA NA NA 287 NA NA NA 288 NA NA NA 289 NA NA NA 290 NA NA NA 291 NA NA NA 292 NA NA NA 293 NA NA NA 294 NA NA NA 295 NA NA NA 296 NA NA NA 297 NA NA NA 298 NA NA NA 299 NA NA NA 300 NA NA NA 301 NA NA NA 302 NA NA NA 303 NA NA NA 304 NA NA NA 305 NA NA NA 306 NA NA NA 307 NA NA NA 308 NA NA NA 309 NA NA NA 310 NA NA NA 311 NA NA NA 312 NA NA NA 313 NA NA NA 314 NA NA NA 315 NA NA NA 316 NA NA NA 317 NA NA NA 318 NA NA NA 319 NA NA NA 320 NA NA NA 321 NA NA NA 322 NA NA NA 323 NA NA NA 324 NA NA NA 325 NA NA NA 326 NA NA NA 327 NA NA NA 328 NA NA NA 329 NA NA NA 330 NA NA NA 331 NA NA NA 332 NA NA NA 333 NA NA NA 334 NA NA NA 335 NA NA NA 336 NA NA NA 337 NA NA NA 338 NA NA NA 339 Aberdeen NA NA NA 340 Aberdeen NA NA NA 341 NA NA NA 342 NA NA NA 343 NA NA NA 344 NA NA NA 345 NA NA NA 346 NA NA NA 347 NA NA NA 348 NA NA NA 349 NA NA NA 350 NA NA NA 351 NA NA NA 352 NA NA NA 353 NA NA NA 354 NA NA NA 355 Aberdeen NA NA NA 356 NA NA NA 357 NA NA NA 358 NA NA NA 359 NA NA NA 360 NA NA NA 361 NA NA NA 362 NA NA NA 363 NA NA NA 364 NA NA NA 365 NA NA NA 366 NA NA NA 367 NA NA NA 368 NA NA NA 369 NA NA NA 370 NA NA NA 371 NA NA NA 372 NA NA NA 373 NA NA NA 374 NA NA NA 375 NA NA NA 376 NA NA NA 377 NA NA NA 378 NA NA NA 379 NA NA NA 380 NA NA NA 381 NA NA NA 382 NA NA NA 383 NA NA NA 384 NA NA NA 385 NA NA NA 386 NA NA NA 387 NA NA NA 388 NA NA NA 389 NA NA NA 390 NA NA NA 391 NA NA NA 392 NA NA NA 393 NA NA NA 394 NA NA NA 395 NA NA NA 396 NA NA NA 397 NA NA NA 398 NA NA NA 399 Aberdeen NA NA NA 400 NA NA NA 401 NA NA NA 402 Aberdeen NA NA NA 403 Aberdeen NA NA NA 404 Aberdeen NA NA NA 405 Aberdeen NA NA NA 406 NA NA NA 407 NA NA NA 408 NA NA NA 409 NA NA NA 410 NA NA NA 411 NA NA NA 412 NA NA NA 413 NA NA NA 414 NA NA NA 415 NA NA NA 416 NA NA NA 417 NA NA NA 418 NA NA NA 419 NA NA NA 420 NA NA NA 421 NA NA NA 422 NA NA NA 423 NA NA NA 424 NA NA NA 425 NA NA NA 426 NA NA NA 427 NA NA NA 428 NA NA NA 429 NA NA NA 430 NA NA NA 431 NA NA NA 432 NA NA NA 433 NA NA NA 434 NA NA NA 435 NA NA NA 436 NA NA NA 437 NA NA NA 438 NA NA NA 439 NA NA NA 440 NA NA NA 441 NA NA NA 442 NA NA NA 443 NA NA NA 444 NA NA NA 445 NA NA NA 446 NA NA NA 447 NA NA NA 448 NA NA NA 449 NA NA NA 450 NA NA NA 451 NA NA NA 452 NA NA NA 453 NA NA NA 454 NA NA NA 455 NA NA NA 456 NA NA NA 457 NA NA NA 458 NA NA NA 459 NA NA NA 460 NA NA NA 461 NA NA NA 462 NA NA NA 463 NA NA NA 464 NA NA NA 465 NA NA NA 466 NA NA NA 467 NA NA NA 468 NA NA NA 469 NA NA NA 470 NA NA NA 471 NA NA NA 472 NA NA NA 473 NA NA NA 474 NA NA NA 475 NA NA NA 476 NA NA NA 477 NA NA NA 478 NA NA NA 479 NA NA NA 480 NA NA NA 481 NA NA NA 482 NA NA NA 483 NA NA NA 484 NA NA NA 485 NA NA NA 486 NA NA NA 487 NA NA NA 488 NA NA NA 489 NA NA NA 490 NA NA NA 491 NA NA NA 492 NA NA NA 493 NA NA NA 494 NA NA NA 495 NA NA NA 496 NA NA NA 497 NA NA NA 498 NA NA NA 499 NA NA NA 500 NA NA NA 501 NA NA NA 502 NA NA NA 503 NA NA NA 504 NA NA NA 505 NA NA NA 506 NA NA NA 507 NA NA NA 508 NA NA NA 509 NA NA NA 510 NA NA NA 511 NA NA NA 512 NA NA NA 513 NA NA NA 514 NA NA NA 515 NA NA NA 516 NA NA NA 517 NA NA NA 518 NA NA NA 519 NA NA NA 520 NA NA NA 521 NA NA NA 522 NA NA NA 523 NA NA NA 524 NA NA NA 525 NA NA NA 526 NA NA NA 527 NA NA NA 528 NA NA NA 529 NA NA NA 530 NA NA NA 531 NA NA NA 532 NA NA NA 533 NA NA NA 534 NA NA NA 535 NA NA NA 536 NA NA NA 537 NA NA NA 538 NA NA NA 539 NA NA NA 540 NA NA NA 541 NA NA NA 542 NA NA NA 543 NA NA NA 544 NA NA NA 545 NA NA NA 546 NA NA NA 547 NA NA NA 548 NA NA NA 549 NA NA NA 550 NA NA NA 551 NA NA NA 552 NA NA NA 553 NA NA NA 554 NA NA NA 555 NA NA NA 556 NA NA NA 557 NA NA NA 558 NA NA NA 559 NA NA NA 560 NA NA NA 561 NA NA NA 562 NA NA NA 563 NA NA NA 564 NA NA NA 565 NA NA NA 566 NA NA NA 567 NA NA NA 568 NA NA NA 569 NA NA NA 570 NA NA NA 571 NA NA NA 572 NA NA NA 573 NA NA NA 574 NA NA NA 575 NA NA NA 576 NA NA NA 577 NA NA NA 578 NA NA NA 579 NA NA NA 580 NA NA NA 581 NA NA NA 582 NA NA NA 583 NA NA NA 584 NA NA NA 585 NA NA NA 586 NA NA NA 587 NA NA NA 588 NA NA NA 589 NA NA NA 590 NA NA NA 591 NA NA NA 592 NA NA NA 593 NA NA NA 594 NA NA NA 595 NA NA NA 596 NA NA NA 597 NA NA NA 598 NA NA NA 599 NA NA NA 600 NA NA NA 601 NA NA NA 602 NA NA NA 603 NA NA NA 604 NA NA NA 605 NA NA NA 606 NA NA NA 607 NA NA NA 608 NA NA NA 609 NA NA NA 610 NA NA NA 611 NA NA NA 612 NA NA NA 613 NA NA NA 614 NA NA NA 615 NA NA NA 616 NA NA NA 617 NA NA NA 618 NA NA NA 619 NA NA NA 620 NA NA NA 621 NA NA NA 622 NA NA NA 623 NA NA NA 624 NA NA NA 625 NA NA NA 626 NA NA NA 627 NA NA NA 628 NA NA NA 629 NA NA NA 630 NA NA NA 631 NA NA NA 632 NA NA NA 633 NA NA NA 634 NA NA NA 635 NA NA NA 636 NA NA NA 637 NA NA NA 638 NA NA NA 639 NA NA NA 640 NA NA NA 641 NA NA NA 642 NA NA NA 643 NA NA NA 644 NA NA NA 645 NA NA NA 646 NA NA NA 647 NA NA NA 648 NA NA NA 649 NA NA NA 650 NA NA NA 651 NA NA NA 652 NA NA NA 653 Aberdeen NA NA NA 654 NA NA NA 655 Rothesay NA NA NA 656 NA NA NA 657 NA NA NA 658 NA NA NA 659 NA NA NA 660 NA NA NA 661 NA NA NA 662 NA NA NA 663 NA NA NA 664 NA NA NA 665 NA NA NA 666 NA NA NA 667 NA NA NA 668 NA NA NA 669 NA NA NA 670 NA NA NA 671 NA NA NA 672 NA NA NA 673 NA NA NA 674 NA NA NA 675 NA NA NA 676 NA NA NA 677 NA NA NA 678 NA NA NA 679 NA NA NA 680 NA NA NA 681 NA NA NA 682 NA NA NA 683 NA NA NA 684 NA NA NA 685 NA NA NA 686 NA NA NA 687 NA NA NA 688 NA NA NA 689 NA NA NA 690 NA NA NA 691 NA NA NA 692 NA NA NA 693 NA NA NA 694 NA NA NA 695 NA NA NA 696 NA NA NA 697 NA NA NA 698 NA NA NA 699 NA NA NA 700 NA NA NA 701 NA NA NA 702 NA NA NA 703 NA NA NA 704 NA NA NA 705 NA NA NA 706 NA NA NA 707 NA NA NA 708 NA NA NA 709 NA NA NA 710 NA NA NA 711 NA NA NA 712 NA NA NA 713 NA NA NA 714 NA NA NA 715 NA NA NA 716 NA NA NA 717 NA NA NA 718 NA NA NA 719 NA NA NA 720 NA NA NA 721 NA NA NA 722 NA NA NA 723 NA NA NA 724 NA NA NA 725 NA NA NA 726 NA NA NA 727 NA NA NA 728 NA NA NA 729 NA NA NA 730 NA NA NA 731 NA NA NA 732 NA NA NA 733 NA NA NA 734 NA NA NA 735 NA NA NA 736 NA NA NA 737 NA NA NA 738 NA NA NA 739 NA NA NA 740 NA NA NA 741 NA NA NA 742 NA NA NA 743 NA NA NA 744 NA NA NA 745 NA NA NA 746 NA NA NA 747 NA NA NA 748 NA NA NA 749 NA NA NA 750 NA NA NA 751 NA NA NA 752 NA NA NA 753 NA NA NA 754 NA NA NA 755 NA NA NA 756 NA NA NA 757 NA NA NA 758 NA NA NA 759 NA NA NA 760 NA NA NA 761 NA NA NA 762 NA NA NA 763 NA NA NA 764 NA NA NA 765 NA NA NA 766 NA NA NA 767 NA NA NA 768 NA NA NA 769 NA NA NA 770 NA NA NA 771 NA NA NA 772 NA NA NA 773 NA NA NA 774 NA NA NA 775 NA NA NA 776 NA NA NA 777 NA NA NA 778 NA NA NA 779 NA NA NA 780 NA NA NA 781 NA NA NA 782 NA NA NA 783 NA NA NA 784 NA NA NA 785 NA NA NA 786 NA NA NA 787 NA NA NA 788 NA NA NA 789 NA NA NA 790 NA NA NA 791 NA NA NA 792 NA NA NA 793 NA NA NA 794 NA NA NA 795 NA NA NA 796 NA NA NA 797 NA NA NA 798 NA NA NA 799 NA NA NA 800 NA NA NA 801 NA NA NA 802 NA NA NA 803 NA NA NA 804 NA NA NA 805 NA NA NA 806 NA NA NA 807 NA NA NA 808 NA NA NA 809 NA NA NA 810 NA NA NA 811 NA NA NA 812 NA NA NA 813 NA NA NA 814 NA NA NA 815 NA NA NA 816 NA NA NA 817 NA NA NA 818 NA NA NA 819 NA NA NA 820 NA NA NA 821 NA NA NA 822 NA NA NA 823 NA NA NA 824 NA NA NA 825 NA NA NA 826 NA NA NA 827 NA NA NA 828 NA NA NA 829 NA NA NA 830 NA NA NA 831 NA NA NA 832 NA NA NA 833 NA NA NA 834 NA NA NA 835 NA NA NA 836 NA NA NA 837 NA NA NA 838 NA NA NA 839 NA NA NA 840 NA NA NA 841 NA NA NA 842 NA NA NA 843 NA NA NA 844 NA NA NA 845 NA NA NA 846 NA NA NA 847 NA NA NA 848 NA NA NA 849 NA NA NA 850 NA NA NA 851 NA NA NA 852 NA NA NA 853 NA NA NA 854 NA NA NA 855 NA NA NA 856 NA NA NA 857 NA NA NA 858 NA NA NA 859 NA NA NA 860 NA NA NA 861 NA NA NA 862 NA NA NA 863 NA NA NA 864 NA NA NA 865 NA NA NA 866 NA NA NA 867 NA NA NA 868 NA NA NA 869 NA NA NA 870 NA NA NA 871 NA NA NA 872 NA NA NA 873 NA NA NA 874 NA NA NA 875 NA NA NA 876 NA NA NA 877 NA NA NA 878 NA NA NA 879 NA NA NA 880 NA NA NA 881 NA NA NA 882 NA NA NA 883 NA NA NA 884 NA NA NA 885 NA NA NA 886 NA NA NA 887 NA NA NA 888 NA NA NA 889 NA NA NA 890 NA NA NA 891 NA NA NA 892 NA NA NA 893 NA NA NA 894 NA NA NA 895 NA NA NA 896 NA NA NA 897 NA NA NA 898 NA NA NA 899 NA NA NA 900 NA NA NA 901 NA NA NA 902 NA NA NA 903 NA NA NA 904 NA NA NA 905 NA NA NA 906 NA NA NA 907 NA NA NA 908 NA NA NA 909 NA NA NA 910 NA NA NA 911 NA NA NA 912 NA NA NA 913 NA NA NA 914 NA NA NA 915 NA NA NA 916 NA NA NA 917 NA NA NA 918 NA NA NA 919 NA NA NA 920 NA NA NA 921 NA NA NA 922 NA NA NA 923 NA NA NA 924 NA NA NA 925 NA NA NA 926 NA NA NA 927 NA NA NA 928 NA NA NA 929 NA NA NA 930 NA NA NA 931 NA NA NA 932 NA NA NA 933 NA NA NA 934 NA NA NA 935 NA NA NA 936 NA NA NA 937 NA NA NA 938 NA NA NA 939 NA NA NA 940 NA NA NA 941 NA NA NA 942 NA NA NA 943 NA NA NA 944 NA NA NA 945 NA NA NA 946 NA NA NA 947 NA NA NA 948 NA NA NA 949 NA NA NA 950 NA NA NA 951 NA NA NA 952 NA NA NA 953 NA NA NA 954 NA NA NA 955 NA NA NA 956 NA NA NA 957 NA NA NA 958 NA NA NA 959 NA NA NA 960 NA NA NA 961 NA NA NA 962 NA NA NA 963 NA NA NA 964 NA NA NA 965 NA NA NA 966 NA NA NA 967 NA NA NA 968 NA NA NA 969 NA NA NA 970 NA NA NA 971 NA NA NA 972 NA NA NA 973 NA NA NA 974 NA NA NA 975 NA NA NA 976 NA NA NA 977 NA NA NA 978 NA NA NA 979 NA NA NA 980 NA NA NA 981 NA NA NA 982 NA NA NA 983 NA NA NA 984 NA NA NA 985 NA NA NA 986 NA NA NA 987 NA NA NA 988 NA NA NA 989 NA NA NA 990 NA NA NA 991 NA NA NA 992 NA NA NA 993 Paisley NA NA NA 994 NA NA NA 995 Paisley NA NA NA 996 Paisley NA NA NA 997 NA NA NA 998 NA NA NA 999 NA NA NA 1000 NA NA NA 1001 NA NA NA 1002 NA NA NA 1003 NA NA NA 1004 NA NA NA 1005 NA NA NA 1006 NA NA NA 1007 NA NA NA 1008 NA NA NA 1009 NA NA NA 1010 NA NA NA 1011 NA NA NA 1012 NA NA NA 1013 NA NA NA 1014 NA NA NA 1015 NA NA NA 1016 NA NA NA 1017 NA NA NA 1018 NA NA NA 1019 NA NA NA 1020 NA NA NA 1021 NA NA NA 1022 NA NA NA 1023 NA NA NA 1024 NA NA NA 1025 NA NA NA 1026 NA NA NA 1027 NA NA NA 1028 NA NA NA 1029 NA NA NA 1030 NA NA NA 1031 NA NA NA 1032 NA NA NA 1033 NA NA NA 1034 NA NA NA 1035 NA NA NA 1036 NA NA NA 1037 NA NA NA 1038 NA NA NA 1039 NA NA NA 1040 NA NA NA 1041 NA NA NA 1042 NA NA NA 1043 NA NA NA 1044 NA NA NA 1045 NA NA NA 1046 NA NA NA 1047 NA NA NA 1048 NA NA NA 1049 NA NA NA 1050 NA NA NA 1051 NA NA NA 1052 NA NA NA 1053 NA NA NA 1054 NA NA NA 1055 NA NA NA 1056 NA NA NA 1057 NA NA NA 1058 NA NA NA 1059 NA NA NA 1060 NA NA NA 1061 NA NA NA 1062 NA NA NA 1063 NA NA NA 1064 NA NA NA 1065 NA NA NA 1066 NA NA NA 1067 NA NA NA 1068 NA NA NA 1069 NA NA NA 1070 NA NA NA 1071 NA NA NA 1072 NA NA NA 1073 NA NA NA 1074 NA NA NA 1075 NA NA NA 1076 NA NA NA 1077 NA NA NA 1078 NA NA NA 1079 NA NA NA 1080 NA NA NA 1081 NA NA NA 1082 NA NA NA 1083 NA NA NA 1084 NA NA NA 1085 NA NA NA 1086 NA NA NA 1087 NA NA NA 1088 NA NA NA 1089 NA NA NA 1090 NA NA NA 1091 NA NA NA 1092 NA NA NA 1093 NA NA NA 1094 NA NA NA 1095 NA NA NA 1096 NA NA NA 1097 NA NA NA 1098 NA NA NA 1099 NA NA NA 1100 NA NA NA 1101 NA NA NA 1102 NA NA NA 1103 NA NA NA 1104 NA NA NA 1105 NA NA NA 1106 NA NA NA 1107 NA NA NA 1108 NA NA NA 1109 NA NA NA 1110 NA NA NA 1111 NA NA NA 1112 NA NA NA 1113 NA NA NA 1114 NA NA NA 1115 NA NA NA 1116 NA NA NA 1117 NA NA NA 1118 NA NA NA 1119 NA NA NA 1120 NA NA NA 1121 NA NA NA 1122 NA NA NA 1123 NA NA NA 1124 NA NA NA 1125 NA NA NA 1126 NA NA NA 1127 NA NA NA 1128 NA NA NA 1129 NA NA NA 1130 NA NA NA 1131 NA NA NA 1132 NA NA NA 1133 NA NA NA 1134 NA NA NA 1135 NA NA NA 1136 NA NA NA 1137 NA NA NA 1138 NA NA NA 1139 NA NA NA 1140 NA NA NA 1141 NA NA NA 1142 NA NA NA 1143 NA NA NA 1144 NA NA NA 1145 NA NA NA 1146 NA NA NA 1147 NA NA NA 1148 NA NA NA 1149 NA NA NA 1150 NA NA NA 1151 NA NA NA 1152 NA NA NA 1153 NA NA NA 1154 NA NA NA 1155 NA NA NA 1156 NA NA NA 1157 NA NA NA 1158 NA NA NA 1159 NA NA NA 1160 NA NA NA 1161 NA NA NA 1162 NA NA NA 1163 NA NA NA 1164 NA NA NA 1165 NA NA NA 1166 NA NA NA 1167 NA NA NA 1168 NA NA NA 1169 NA NA NA 1170 NA NA NA 1171 NA NA NA 1172 NA NA NA 1173 NA NA NA 1174 NA NA NA 1175 NA NA NA 1176 NA NA NA 1177 NA NA NA 1178 NA NA NA 1179 NA NA NA 1180 NA NA NA 1181 NA NA NA 1182 NA NA NA 1183 NA NA NA 1184 NA NA NA 1185 NA NA NA 1186 NA NA NA 1187 NA NA NA 1188 NA NA NA 1189 NA NA NA 1190 NA NA NA 1191 NA NA NA 1192 NA NA NA 1193 NA NA NA 1194 NA NA NA 1195 NA NA NA 1196 NA NA NA 1197 NA NA NA 1198 NA NA NA 1199 NA NA NA 1200 NA NA NA 1201 NA NA NA 1202 NA NA NA 1203 NA NA NA 1204 NA NA NA 1205 NA NA NA 1206 NA NA NA 1207 NA NA NA 1208 NA NA NA 1209 NA NA NA 1210 NA NA NA 1211 NA NA NA 1212 NA NA NA 1213 NA NA NA 1214 NA NA NA 1215 NA NA NA 1216 NA NA NA 1217 NA NA NA 1218 NA NA NA 1219 NA NA NA 1220 NA NA NA 1221 NA NA NA 1222 NA NA NA 1223 NA NA NA 1224 NA NA NA 1225 NA NA NA 1226 NA NA NA 1227 NA NA NA 1228 NA NA NA 1229 NA NA NA 1230 NA NA NA 1231 NA NA NA 1232 NA NA NA 1233 NA NA NA 1234 NA NA NA 1235 NA NA NA 1236 NA NA NA 1237 NA NA NA 1238 NA NA NA 1239 NA NA NA 1240 NA NA NA 1241 NA NA NA 1242 NA NA NA 1243 NA NA NA 1244 NA NA NA 1245 NA NA NA 1246 NA NA NA 1247 NA NA NA 1248 NA NA NA 1249 NA NA NA 1250 NA NA NA 1251 NA NA NA 1252 NA NA NA 1253 NA NA NA 1254 NA NA NA 1255 NA NA NA 1256 NA NA NA 1257 NA NA NA 1258 NA NA NA 1259 NA NA NA 1260 NA NA NA 1261 NA NA NA 1262 NA NA NA 1263 NA NA NA 1264 NA NA NA 1265 NA NA NA 1266 NA NA NA 1267 NA NA NA 1268 NA NA NA 1269 NA NA NA 1270 NA NA NA 1271 NA NA NA 1272 NA NA NA 1273 NA NA NA 1274 NA NA NA 1275 NA NA NA 1276 NA NA NA 1277 NA NA NA 1278 Kirkwall NA NA NA 1279 NA NA NA 1280 NA NA NA 1281 NA NA NA 1282 NA NA NA 1283 NA NA NA 1284 NA NA NA 1285 NA NA NA 1286 NA NA NA 1287 NA NA NA 1288 NA NA NA 1289 NA NA NA 1290 NA NA NA 1291 NA NA NA 1292 NA NA NA 1293 NA NA NA 1294 NA NA NA 1295 NA NA NA 1296 NA NA NA 1297 NA NA NA 1298 NA NA NA 1299 NA NA NA 1300 NA NA NA 1301 NA NA NA 1302 NA NA NA 1303 NA NA NA 1304 NA NA NA 1305 NA NA NA 1306 NA NA NA 1307 NA NA NA 1308 NA NA NA 1309 NA NA NA 1310 NA NA NA 1311 NA NA NA 1312 NA NA NA 1313 NA NA NA 1314 NA NA NA 1315 NA NA NA 1316 NA NA NA 1317 NA NA NA 1318 NA NA NA 1319 NA NA NA 1320 NA NA NA 1321 NA NA NA 1322 NA NA NA 1323 NA NA NA 1324 NA NA NA 1325 NA NA NA 1326 NA NA NA 1327 NA NA NA 1328 NA NA NA 1329 NA NA NA 1330 NA NA NA 1331 NA NA NA 1332 NA NA NA 1333 NA NA NA 1334 NA NA NA 1335 NA NA NA 1336 NA NA NA 1337 NA NA NA 1338 NA NA NA 1339 NA NA NA 1340 NA NA NA 1341 NA NA NA 1342 NA NA NA 1343 NA NA NA 1344 NA NA NA 1345 NA NA NA 1346 NA NA NA 1347 NA NA NA 1348 NA NA NA 1349 NA NA NA 1350 NA NA NA 1351 NA NA NA 1352 NA NA NA 1353 NA NA NA 1354 NA NA NA 1355 NA NA NA 1356 NA NA NA 1357 NA NA NA 1358 NA NA NA 1359 NA NA NA 1360 NA NA NA 1361 NA NA NA 1362 NA NA NA 1363 NA NA NA 1364 NA NA NA 1365 NA NA NA 1366 NA NA NA 1367 NA NA NA 1368 NA NA NA 1369 NA NA NA 1370 NA NA NA 1371 NA NA NA 1372 NA NA NA 1373 NA NA NA 1374 NA NA NA 1375 NA NA NA 1376 NA NA NA 1377 NA NA NA 1378 NA NA NA 1379 Kirkwall NA NA NA 1380 Kirkwall NA NA NA 1381 NA NA NA 1382 NA NA NA 1383 NA NA NA 1384 NA NA NA 1385 Haddington NA NA NA 1386 Haddington NA NA NA 1387 Haddington NA NA NA 1388 Haddington NA NA NA 1389 Haddington NA NA NA 1390 Haddington NA NA NA 1391 NA NA NA 1392 NA NA NA 1393 NA NA NA 1394 NA NA NA 1395 NA NA NA 1396 Ayr NA NA NA 1397 Ayr NA NA NA 1398 Dumfries NA NA NA 1399 Dumfries NA NA NA 1400 NA NA NA 1401 NA NA NA 1402 NA NA NA 1403 NA NA NA 1404 NA NA NA 1405 NA NA NA 1406 NA NA NA 1407 NA NA NA 1408 NA NA NA 1409 NA NA NA 1410 NA NA NA 1411 NA NA NA 1412 NA NA NA 1413 NA NA NA 1414 NA NA NA 1415 NA NA NA 1416 NA NA NA 1417 NA NA NA 1418 NA NA NA 1419 NA NA NA 1420 NA NA NA 1421 NA NA NA 1422 NA NA NA 1423 NA NA NA 1424 NA NA NA 1425 NA NA NA 1426 NA NA NA 1427 NA NA NA 1428 NA NA NA 1429 NA NA NA 1430 NA NA NA 1431 NA NA NA 1432 NA NA NA 1433 NA NA NA 1434 NA NA NA 1435 NA NA NA 1436 NA NA NA 1437 NA NA NA 1438 NA NA NA 1439 NA NA NA 1440 NA NA NA 1441 NA NA NA 1442 NA NA NA 1443 NA NA NA 1444 NA NA NA 1445 Edinburgh NA NA NA 1446 NA NA NA 1447 NA NA NA 1448 NA NA NA 1449 NA NA NA 1450 NA NA NA 1451 NA NA NA 1452 NA NA NA 1453 NA NA NA 1454 NA NA NA 1455 NA NA NA 1456 NA NA NA 1457 NA NA NA 1458 NA NA NA 1459 NA NA NA 1460 NA NA NA 1461 NA NA NA 1462 NA NA NA 1463 NA NA NA 1464 NA NA NA 1465 NA NA NA 1466 NA NA NA 1467 NA NA NA 1468 NA NA NA 1469 NA NA NA 1470 NA NA NA 1471 NA NA NA 1472 NA NA NA 1473 NA NA NA 1474 NA NA NA 1475 NA NA NA 1476 NA NA NA 1477 NA NA NA 1478 NA NA NA 1479 NA NA NA 1480 NA NA NA 1481 NA NA NA 1482 NA NA NA 1483 NA NA NA 1484 NA NA NA 1485 NA NA NA 1486 NA NA NA 1487 NA NA NA 1488 NA NA NA 1489 NA NA NA 1490 NA NA NA 1491 NA NA NA 1492 NA NA NA 1493 NA NA NA 1494 Dumfries NA NA NA 1495 Dumfries NA NA NA 1496 NA NA NA 1497 Dumfries NA NA NA 1498 Dumfries NA NA NA 1499 Dumfries NA NA NA 1500 Dumfries NA NA NA 1501 Dumfries NA NA NA 1502 NA NA NA 1503 Dumfries NA NA NA 1504 NA NA NA 1505 NA NA NA 1506 NA NA NA 1507 NA NA NA 1508 NA NA NA 1509 NA NA NA 1510 NA NA NA 1511 NA NA NA 1512 NA NA NA 1513 Dumfries NA NA NA 1514 Dumfries NA NA NA 1515 NA NA NA 1516 NA NA NA 1517 NA NA NA 1518 NA NA NA 1519 NA NA NA 1520 NA NA NA 1521 NA NA NA 1522 NA NA NA 1523 NA NA NA 1524 NA NA NA 1525 NA NA NA 1526 NA NA NA 1527 NA NA NA 1528 NA NA NA 1529 NA NA NA 1530 NA NA NA 1531 NA NA NA 1532 NA NA NA 1533 NA NA NA 1534 NA NA NA 1535 NA NA NA 1536 NA NA NA 1537 NA NA NA 1538 NA NA NA PostTrialNotes 1 2 3 4 5 No details 6 No details 7 No details 8 No details 9 No details 10 No details 11 No details 12 No details 13 14 No details 15 No details 16 No details 17 No details 18 No details 19 No details 20 No detaisl 21 No details 22 23 24 25 No details 26 No details 27 No details 28 No details 29 No details 30 No details 31 No details 32 No details 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 No details 62 Escaped prison and declared excommunicated. 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 between 2-4 91 92 between 2-4 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 Reported to have died ?before trial. 115 116 117 118 119 120 121 122 123 Kirkcaldy Old Kirk session records lists the expenses for the execution. 124 Entry in Kirk session records (Kirkcaldy Old) about cost of execution. 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 Costs for execution listed in Burgh Accounts 206 207 208 209 210 211 212 213 Burgh accounts record the expenses. 214 215 216 Expenses noted in burgh accounts 217 218 219 220 221 To be taken between the hills, in the afternoon, bound to the stake strangled and burnt to ashes. 222 223 224 225 226 227 228 229 230 231 financial accounts for her execution. 232 financial accounts for execution 233 234 235 236 237 238 financial accounts for execution. 239 financial accounts for execution 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 Noted that as she was hanging a black ball of foam formed around her mouth, which was taken as evidence that she as possessed. 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 Entry in presbytery that she was executed. 319 320 321 322 Note in presbytery records on 23/6/1658 that Margaret Duchill was dead. 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 Assize ordered her to be taken between the hills and to be strangled and burnt. 340 Noted that she was to be taken to between the hills and to be strangled and burnt. 341 342 343 344 345 346 347 348 Entry in burgh accounts for her execution. 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 Condemned to be burnt. 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 Financial accounts for her execution. No other details of trial. 400 401 402 403 financial accounts of her execution. 404 financial accounts for her execution. 405 burgh accounts for her execution 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 No details about where and when, only that she had been convicted, strangled and burned. 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 Mentioned as having been burnt. 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 She may have been strangled but it does not specify. Burgh accounts list costs of execution. 654 655 To be executed on the gallows at Rothesay. 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 Mentioned in a later trial that he had been burnt. 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 Note in presbytery that she had been burnt for witchcraft 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 There is no mention of Leyis&#39;s sentence in his trial details in Spalding but John Leyis&#39; assize mentions both Janet Wischet andThomas Leyis as having been burnt. 766 767 768 769 770 771 No details. 772 773 774 775 776 777 778 779 No specific details. There is a Margaret Hamiltoun &#39;burnt as a witch&#39; mentioned 1/8/1629 (RPC 2nd series, vol 3, p 155) but it is not clear if it is the same one. 780 No details. 781 No details. 782 No details. 783 No details. 784 785 No details. 786 No details. 787 No details. 788 no details. 789 No details about where exection took place. Witnessed by Mr Thomas Copland. 790 No details 791 No details. 792 No details. 793 note in presbytery minutes that ministers attended her execution. 794 execution witnessed. 795 note in presbytery that minister witnessed execution in Penicuik along with 2 others - Janet Bishop and Margaret Cutherbertson. 796 797 No details 798 No details 799 No details 800 no details 801 no details 802 no details 803 no details 804 Note in presbytery that accused had been burnt 805 806 807 808 no details 809 No details 810 No details 811 No details 812 No details 813 No details 814 No details 815 No details 816 No details 817 no details 818 no details 819 no details 820 No details 821 No details 822 no details 823 no details 824 No details 825 No details 826 No details 827 no details 828 No details 829 No details 830 831 No details 832 No details 833 no details 834 No details 835 No details 836 No details 837 no specific details but trial of Christiane Wilson in 1661 mentioned that he had been executed. 838 no details 839 no details 840 no details 841 no details 842 no details 843 no details 844 no details 845 no details 846 no details 847 no details 848 No details 849 no details 850 no details 851 no details 852 no details 853 no details 854 no details 855 no details 856 857 858 859 860 no details 861 no details 862 863 864 865 866 867 868 869 870 871 no details 872 She was ordered to be held in Stirling tolbooth untill arrangements could be made for her banishement. She was banished from the nations of England, Scotland, and Ireland - essentially she was ordered to be transported. She gave her mark (signature) stating that once transported she wouldn&#39;t return. 873 She was ordered to be held in Stirling tolbooth until arrangements could be made for her banishment. She was banished from the nations of England, Scotland, and Ireland - essentially she was ordered to be transported. She gave her mark (signature) stating that once transported she wouldn&#39;t return. She appears to have been held with 2 others till 1661 874 no details 875 She was ordered to be held in Stirling tolbooth until arrangements could be made for her banishment. She was banished from the nations of England, Scotland, and Ireland - essentially she was ordered to be transported. She gave her mark (signature) stating that once transported she wouldn&#39;t return. Held in prison till 1661. 876 no details 877 878 879 880 881 882 no details only that she had been burnt in another accused witch&#39;s confession. 883 no details only note in another confession that she had been burnt. 884 885 886 No details, only mention in another confession that she had been burnt 887 888 889 890 891 892 893 894 895 896 Mention in RPC that she was burnt. 897 898 Note that she was executed. 899 Note that she was executed. 900 Note in another trial that she had been burnt 901 Note in another witch&#39;s case that she had been burnt 902 903 904 no specific details but mention in another process that she had been &#39;laitlie brunt&#39;. 905 Note in RPC that she was lately burnt for witchcraft, 20/8/1644 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 No details apart from mention (20/8/1644) that she had been &#39;laitlie brunt&#39;. 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 No details 953 954 No details 955 No details of execution but referred to as a dead witch on 18/4/1650 956 957 958 959 No details 960 No details 961 962 963 964 No details 965 966 967 968 969 970 Reference in presbytery that he was to be taken to Traquair for execution but no details 971 no details but presbytery note that execution to be carried out at Traquair 972 No details but as she turned up in Edinburgh in 1708 it would seem she escaped capital punishment. 973 no information 974 no information 975 976 no details 977 978 no details 979 no details 980 no details 981 no details 982 Larner recorded her as being executed. 983 Larner recorded her as being executed. 984 Larner recorded her as being executed. 985 Larner recorded him as being executed. 986 Larner recorded her as being executed. 987 Larner recorded her as executed. 988 Execution took place at Pentson Muir not in Edinburgh. 989 execution took place at Penston Muir not in Edinburgh between 2 and 4 p.m. 990 execution took place at Penston Muir not in Edinburgh between 2 and 4 p.m. 991 Execution took place at Peaston Muir not in Edinburgh between 2 and 4 p.m.. Local community had to pay the costs. 992 Ordered to be released and banished 993 to be executed between 2-4 in the afternoon 994 her sentence was commuted and she was not executed. 995 due to be executed between 2-4 in the afternoon. 996 between 2-4 in the afternoon. 997 between 2-4 in the afternoon 998 between 2-4pm. 999 no details 1000 no details 1001 no details 1002 no details 1003 no details 1004 no details 1005 no details 1006 no details 1007 no details 1008 no details 1009 no details 1010 no details 1011 no details 1012 1013 no details 1014 no details 1015 no details 1016 no details 1017 1018 no details 1019 no details 1020 1021 no details 1022 no details 1023 no details 1024 no details 1025 no details 1026 No details, although there is a reference to her being burned in a local history (&#39;The History of Old Dundee by A. Maxwell). 1027 no details 1028 1029 It would appear that John and his daughters were banished but details are limited. There is a copy of a letter from a minister asking the town clerk of Aberdeen about his daughter Janet who wanted her marriage banns announced. No information about location. 1030 Father and daughters appear to have been banished and left the area although there are no details where they moved to. Jonet (sister) later appears to have wanted to get marriage banns announced and so the family may have managed to resettle elsewhere. 1031 1032 1033 1034 1035 no details 1036 no details 1037 no detials 1038 1039 no details 1040 no details 1041 no details 1042 1043 no details 1044 1045 1046 1047 1048 1049 1050 no location given 1051 no details of trial or how executed. 1052 1053 1054 According to kirk session records she appears to have been executed, but it is not clear if the church requested permission from Sir Walter Murray to burn or bury her as the writing is quite difficult. 1055 No exact description of execution but records note that she is to be buried or burnt(?) without a kist in Kirktounside mure. 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 Banished after trial but no specific details. Later a letter to the town clerk asked about Janet&#39;s character as she wanted her marriage banns read. The clerk outlined the details of the trial, said he knew no more about her but did not think that there was any reason to refuse her request. No information about location. 1090 1091 RPC has entry condemning those involved in imprisonment etc and it seems likely that accused was executed, although no details. 1092 Entry in RPC indicates that the accused was executed but no specific details. 1093 RPC entry about illegal torture etc, indicates that the accused was executed, but no specific details. 1094 Entry in RPC about illegal imprisonment etc. indicates that the accused was executed but no specific details. 1095 no details 1096 no details 1097 no details 1098 no details 1099 No details 1100 Father and daughters appear to have been banished and left the area although there are no details where they moved to. Jonet (sister) later appears to have wanted to get marriage banns announced and so the family may have managed to resettle elsewhere. 1101 No details 1102 No details 1103 No details 1104 No details 1105 No details 1106 No details 1107 No details 1108 No details 1109 No details 1110 No details 1111 1112 No details 1113 No details 1114 No details 1115 No details 1116 No details 1117 No details 1118 No details 1119 No details 1120 No details 1121 No details 1122 1123 No details 1124 No details 1125 No details 1126 No details 1127 No details 1128 No details 1129 No details 1130 no details 1131 No details 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 No details 1163 No details 1164 no details 1165 1166 No details 1167 No details 1168 1169 No details 1170 1171 1172 1173 1174 No details 1175 No details 1176 1177 No details 1178 No details 1179 No details 1180 No details 1181 No details 1182 No details 1183 No details 1184 No details 1185 No details 1186 No details 1187 1188 No details 1189 No details 1190 No details 1191 No details 1192 No details 1193 No details 1194 No details 1195 No details 1196 No details 1197 1198 No details 1199 No details 1200 No details 1201 1202 No details 1203 No details 1204 No details 1205 No detaisl 1206 No details 1207 1208 No details 1209 No details 1210 No details 1211 No details 1212 No details 1213 No details 1214 No details 1215 No details 1216 No details 1217 No details 1218 1219 no details 1220 No details 1221 No details 1222 No details 1223 No details 1224 No details 1225 No details 1226 No details 1227 No details 1228 No details 1229 1230 No details 1231 No detaisl 1232 No details 1233 No details 1234 No details 1235 No details 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 1265 1266 1267 1268 1269 1270 1271 1272 She was ordered to be executed, don&#39;t have a record of the execution 1273 She was ordered to be executed in this way. A note in the Edinburgh Town Treasurers account that the miller&#39;s wife in Niddrie was burnt on 6/11/1629. Probably a reference to Oswald. 1274 1275 1276 1277 1278 1279 She was branded on check and told that if she was ever caught using charms again she would be burnt. 1280 1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 1377 1378 1379 She was to be taken to the execution by the lockman. 1380 1381 1382 1383 1384 1385 mentioned in Calendar of State papers 1386 listed in Calandar of State Papers 1387 mentioned in Calendar of State Papers 1388 Mentioned in Calendar of State Papers 1389 listed in Calendar of State papers 1390 listed in Calendar of State Papers 1391 to be executed, recorded in Calendar of Scottish Papers 1392 1393 1394 1395 The day was a Friday. 1396 between 2-4 1397 She was ordered to be executed between 2-4 p.m. 1398 to be executed on the first Wednesday in May, between 2-4 in the ordinary place. 1399 to be executed on the first Wednesday in May, between 2-4 in the ordinary place. 1400 1401 1402 1403 1404 1405 1406 1407 1408 1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 1425 The privy council approved the verdict and set this date as her execution date. 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 1441 Death sentence was pronounced on 16/7/1606. A reprieve was granted by the Privy Council until 11/1706, another reprieve granted until the the last Friday in 1/1607. Sentence commuted to banishment on 28/12/1606. 1442 Execution pronounced on 16/1/1706, but an execution reprieve was granted by the Privy Council until 11/1706. Another reprieve was granted until the last Friday in 1/ 1707. Sentence commuted to banishment on 28/12/1706. 1443 1444 1445 His head was to be &#39;strucken&#39; from his body. 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 1489 1490 1491 1492 1493 1494 between 2-4 in the ordinary place, sentenced on 5/4/1649 to be executed the next Wednesday. 1495 between 2-4 in the ordinary place, sentenced on 5/4/1649 to be executed the next Wednesday. 1496 1497 between 2-4 in the ordinary place, sentenced on 5/4/1649 to be executed the next Wednesday. 1498 between 2-4 in the ordinary place, sentenced on 5/4/1649 to be executed the next Wednesday. 1499 between 2-4 in the ordinary place, sentenced on 5/4/1649 to be executed the next Wednesday. 1500 between 2-4 in the ordinary place, sentenced on 5/4/1649 to be executed the next Wednesday. 1501 between 2-4 in the ordinary place, sentenced on 5/4/1649 to be executed the next Wednesday. 1502 1503 between 2-4 in the ordinary place, sentenced on 5/4/1649 to be executed the next Wednesday. 1504 1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 1537 1538 Createdby Createdate Lastupdatedby Lastupdatedon 1 jhm 05/16/01 15:04:51 jhm 10/24/02 09:32:53 2 jhm 06/14/01 14:29:49 LEM 11/04/02 10:07:05 3 jhm 10/11/01 16:24:03 jhm 10/08/02 10:56:06 4 jhm 10/18/01 11:54:03 jhm 10/18/01 11:55:28 5 jhm 10/18/01 12:23:35 jhm 10/21/02 16:11:47 6 jhm 10/18/01 12:44:59 jhm 10/18/01 12:46:17 7 jhm 10/18/01 12:47:54 jhm 10/18/01 12:49:13 8 jhm 10/18/01 12:50:55 jhm 10/18/01 12:53:24 9 jhm 10/18/01 12:55:13 jhm 10/18/01 12:55:53 10 jhm 10/18/01 15:02:50 jhm 10/21/02 16:18:29 11 jhm 10/18/01 15:07:21 jhm 10/21/02 16:17:41 12 jhm 10/18/01 15:10:51 jhm 10/21/02 16:17:06 13 jhm 06/14/01 14:41:31 jhm 06/14/01 14:41:49 14 jhm 10/18/01 15:14:16 jhm 10/21/02 16:16:49 15 jhm 10/18/01 15:18:02 jhm 10/21/02 16:16:16 16 jhm 10/18/01 15:21:13 jhm 10/21/02 16:15:28 17 jhm 10/18/01 15:38:38 jhm 10/18/01 15:39:31 18 jhm 10/18/01 15:42:58 jhm 10/18/01 15:48:41 19 jhm 10/18/01 15:56:14 jhm 10/18/01 15:56:51 20 jhm 10/18/01 15:59:12 jhm 10/18/01 15:59:49 21 jhm 10/18/01 16:07:15 jhm 10/21/02 16:28:33 22 jhm 10/18/01 16:16:43 jhm 10/08/02 15:47:13 23 jhm 10/19/01 09:42:24 jhm 10/21/02 16:48:34 24 jhm 06/14/01 14:42:58 LEM 10/28/02 12:53:55 25 jhm 10/19/01 09:55:38 jhm 10/11/02 16:57:05 26 jhm 10/19/01 10:31:51 jhm 10/19/01 10:32:26 27 jhm 10/19/01 10:54:12 jhm 10/19/01 10:54:37 28 jhm 10/19/01 12:04:07 jhm 10/19/01 12:04:40 29 jhm 10/19/01 12:19:37 jhm 10/19/01 12:20:02 30 jhm 10/19/01 12:37:42 jhm 10/19/01 12:38:08 31 jhm 10/19/01 12:58:56 jhm 10/19/01 12:59:22 32 jhm 10/19/01 13:07:25 jhm 10/19/01 13:07:52 33 jhm 10/19/01 13:17:43 jhm 10/19/01 13:17:47 34 jhm 06/14/01 14:59:53 jhm 06/14/01 14:59:56 35 jhm 10/19/01 13:22:50 jhm 10/19/01 13:22:52 36 jhm 10/19/01 13:24:01 jhm 10/19/01 13:24:04 37 jhm 10/19/01 13:25:02 jhm 10/19/01 13:25:04 38 jhm 10/19/01 15:22:16 jhm 10/19/01 15:22:18 39 jhm 10/19/01 15:28:44 jhm 10/19/01 15:28:47 40 jhm 10/19/01 15:30:43 jhm 10/19/01 15:30:44 41 jhm 10/19/01 15:35:50 jhm 10/19/01 15:35:53 42 jhm 10/19/01 15:43:17 jhm 10/19/01 15:43:20 43 jhm 10/19/01 15:50:56 jhm 10/19/01 15:50:58 44 jhm 10/19/01 15:54:15 jhm 10/19/01 15:54:17 45 jhm 06/14/01 15:00:55 LEM 10/28/02 12:53:39 46 jhm 10/19/01 15:58:08 jhm 10/19/01 15:58:09 47 jhm 10/19/01 16:03:43 jhm 10/19/01 16:03:44 48 jhm 10/19/01 16:13:22 jhm 10/19/01 16:13:25 49 jhm 10/19/01 16:16:25 jhm 10/19/01 16:16:27 50 jhm 10/19/01 16:19:04 jhm 10/19/01 16:19:05 51 jhm 10/19/01 16:21:18 jhm 10/19/01 16:21:20 52 jhm 10/19/01 16:24:34 jhm 10/19/01 16:24:36 53 jhm 06/14/01 15:13:58 jhm 10/11/02 16:41:32 54 jhm 06/14/01 16:04:14 LEM 11/04/02 10:05:14 55 jhm 06/15/01 09:21:39 LEM 10/28/02 12:55:01 56 jhm 10/22/01 12:04:45 jhm 10/22/01 12:04:48 57 jhm 10/22/01 12:24:18 jhm 10/22/01 12:24:21 58 jhm 10/22/01 13:27:53 jhm 10/11/02 16:58:49 59 jhm 10/22/01 14:51:02 jhm 10/22/01 14:51:51 60 jhm 10/22/01 15:00:25 LEM 10/11/02 14:16:16 61 jhm 10/22/01 15:04:26 jhm 10/21/02 16:46:48 62 jhm 10/23/01 10:44:33 jhm 10/29/02 12:35:19 63 jhm 06/15/01 09:38:27 LEM 10/28/02 12:54:09 64 jhm 06/15/01 09:49:42 jhm 10/11/02 16:41:38 65 jhm 06/15/01 09:56:53 jhm 06/15/01 09:56:55 66 jhm 11/23/01 11:21:16 jhm 10/24/02 15:17:10 67 jhm 11/23/01 14:09:00 jhm 10/30/02 09:48:44 68 jhm 06/15/01 10:00:09 jhm 10/11/02 16:41:56 69 jhm 11/23/01 15:26:49 jhm 10/24/02 16:48:15 70 jhm 11/27/01 09:58:21 LEM 10/11/02 15:39:10 71 jhm 11/27/01 10:21:50 jhm 11/27/01 10:40:30 72 jhm 11/27/01 12:23:29 jhm 10/22/02 13:05:02 73 jhm 11/27/01 12:45:31 LEM 10/28/02 13:10:03 74 jhm 11/27/01 13:11:19 jhm 10/22/02 13:15:25 75 jhm 11/27/01 13:21:48 jhm 11/27/01 13:24:49 76 jhm 11/27/01 13:33:51 jhm 10/22/02 13:09:44 77 jhm 11/27/01 13:58:02 jhm 10/22/02 13:02:17 78 jhm 11/27/01 15:09:17 jhm 10/21/02 13:29:52 79 jhm 06/15/01 10:05:39 jhm 10/11/02 16:42:26 80 jhm 11/27/01 15:21:51 LEM 11/01/02 10:00:22 81 jhm 11/27/01 15:30:23 jhm 11/27/01 15:33:00 82 jhm 11/27/01 15:39:48 jhm 11/27/01 15:42:03 83 jhm 11/27/01 15:49:05 LEM 11/01/02 09:55:57 84 jhm 12/04/01 09:33:54 jhm 10/29/02 09:57:09 85 jhm 12/04/01 09:42:22 jhm 10/29/02 09:58:27 86 jhm 12/04/01 09:44:57 jhm 10/29/02 09:43:38 87 jhm 12/04/01 09:47:45 jhm 10/29/02 10:00:01 88 jhm 12/04/01 10:25:29 jhm 10/22/02 13:59:32 89 jhm 06/15/01 10:10:37 jhm 10/11/02 16:42:31 90 jhm 12/04/01 14:21:44 jhm 10/22/02 10:34:46 91 jhm 12/04/01 14:44:08 jhm 10/23/02 10:48:44 92 jhm 12/04/01 15:00:52 jhm 10/28/02 14:58:24 93 jhm 12/04/01 15:08:08 jhm 10/18/02 10:51:21 94 jhm 12/04/01 15:44:05 jhm 10/11/02 15:41:47 95 jhm 12/04/01 16:16:30 jhm 10/23/02 09:49:11 96 jhm 12/05/01 13:30:03 jhm 12/05/01 13:31:18 97 jhm 12/05/01 13:41:16 jhm 12/05/01 13:42:13 98 jhm 12/05/01 13:47:35 jhm 12/06/01 11:03:48 99 jhm 06/15/01 10:14:56 jhm 10/11/02 16:42:59 100 jhm 12/05/01 13:53:32 jhm 12/06/01 11:05:18 101 jhm 12/05/01 13:58:30 jhm 12/05/01 13:59:44 102 jhm 12/05/01 14:03:28 jhm 12/05/01 14:04:28 103 jhm 12/05/01 14:07:02 jhm 12/06/01 11:05:58 104 jhm 12/06/01 10:39:26 jhm 12/06/01 10:52:26 105 jhm 12/06/01 10:53:55 jhm 12/06/01 10:58:09 106 jhm 12/06/01 10:59:15 jhm 12/06/01 11:00:00 107 jhm 06/15/01 10:21:29 jhm 10/11/02 16:43:19 108 jhm 06/15/01 10:27:55 jhm 10/11/02 16:43:37 109 jhm 12/06/01 14:36:46 jhm 10/23/02 10:38:05 110 jhm 01/14/02 09:48:14 jhm 10/18/02 10:51:02 111 jhm 06/15/01 10:31:59 jhm 10/11/02 16:43:54 112 jhm 01/14/02 11:09:12 LEM 10/31/02 16:59:34 113 jhm 01/14/02 11:15:02 jhm 01/14/02 11:16:12 114 jhm 01/16/02 11:55:04 jhm 10/29/02 08:57:14 115 jhm 01/16/02 12:52:34 jhm 10/31/02 10:01:05 116 jhm 01/16/02 13:06:07 jhm 10/31/02 10:05:56 117 jhm 01/16/02 13:11:41 jhm 10/31/02 10:10:36 118 jhm 01/16/02 13:21:18 jhm 01/16/02 13:22:46 119 jhm 01/16/02 15:18:12 jhm 10/22/02 15:10:27 120 jhm 01/16/02 15:35:36 jhm 10/18/02 10:50:46 121 jhm 01/16/02 15:40:40 jhm 10/18/02 10:50:18 122 jhm 06/15/01 10:36:06 jhm 10/11/02 16:44:02 123 jhm 01/17/02 12:20:10 jhm 11/11/02 12:55:36 124 jhm 01/17/02 12:28:25 jhm 11/11/02 12:56:06 125 jhm 01/17/02 13:02:52 jhm 11/11/02 12:56:31 126 jhm 01/17/02 14:34:00 jhm 11/11/02 12:56:55 127 jhm 01/17/02 14:43:04 jhm 11/11/02 12:57:24 128 jhm 01/17/02 15:12:52 jhm 10/24/02 16:29:41 129 jhm 01/17/02 15:38:56 jhm 10/24/02 16:34:18 130 jhm 01/17/02 15:57:56 jhm 10/30/02 14:07:47 131 jhm 01/22/02 10:11:17 jhm 10/30/02 14:20:24 132 jhm 01/22/02 10:28:31 jhm 01/22/02 10:35:25 133 jhm 06/15/01 10:54:30 jhm 06/15/01 10:54:33 134 jhm 01/22/02 10:38:47 jhm 01/22/02 10:39:42 135 jhm 01/22/02 10:41:08 jhm 10/25/02 17:58:12 136 jhm 01/22/02 10:45:34 jhm 10/30/02 14:24:02 137 jhm 01/22/02 10:47:55 jhm 10/30/02 14:22:13 138 jhm 01/22/02 11:03:03 jhm 01/22/02 11:04:59 139 jhm 01/22/02 11:43:16 jhm 10/30/02 14:28:00 140 jhm 01/22/02 11:47:15 jhm 10/30/02 14:29:37 141 jhm 01/22/02 11:49:09 jhm 10/30/02 14:27:48 142 jhm 01/22/02 12:01:49 jhm 10/30/02 13:01:43 143 jhm 06/15/01 11:53:23 jhm 06/15/01 11:54:35 144 jhm 02/05/02 15:16:29 jhm 11/11/02 12:59:05 145 jhm 02/05/02 16:04:45 jhm 11/11/02 12:59:31 146 jhm 02/07/02 10:25:30 jhm 10/29/02 10:05:55 147 jhm 02/07/02 11:22:44 jhm 11/11/02 13:00:44 148 jhm 02/07/02 14:15:28 jhm 11/11/02 13:01:13 149 jhm 02/07/02 15:09:50 jhm 11/11/02 13:01:34 150 jhm 06/15/01 11:58:42 jhm 06/15/01 11:59:29 151 jhm 02/14/02 09:26:55 jhm 11/11/02 13:02:24 152 jhm 02/14/02 12:09:26 jhm 11/11/02 13:02:52 153 jhm 02/14/02 14:24:32 jhm 02/14/02 14:24:35 154 jhm 02/14/02 14:26:19 jhm 02/14/02 14:26:21 155 jhm 02/14/02 14:32:20 jhm 02/14/02 14:32:23 156 jhm 02/14/02 14:35:03 jhm 02/14/02 14:35:06 157 jhm 02/14/02 14:43:29 jhm 02/14/02 14:43:31 158 jhm 02/14/02 14:45:47 jhm 02/14/02 14:45:48 159 jhm 02/14/02 14:47:55 jhm 02/14/02 14:47:56 160 jhm 06/15/01 12:02:39 jhm 06/15/01 12:03:21 161 jhm 06/15/01 12:06:07 jhm 06/15/01 12:06:55 162 jhm 06/15/01 12:09:34 jhm 06/15/01 12:10:18 163 jhm 06/15/01 12:13:42 jhm 06/15/01 12:14:22 164 jhm 02/19/02 13:01:04 LEM 10/31/02 16:06:42 165 jhm 02/19/02 13:28:20 jhm 02/19/02 13:31:06 166 jhm 02/21/02 14:48:27 jhm 02/21/02 14:58:12 167 jhm 03/04/02 12:17:35 jhm 03/04/02 12:30:57 168 jhm 03/04/02 15:44:52 jhm 10/24/02 11:05:14 169 jhm 03/04/02 16:11:24 jhm 10/24/02 12:54:22 170 jhm 06/15/01 12:46:44 jhm 10/18/02 16:06:16 171 jhm 03/05/02 11:50:07 LEM 10/31/02 16:03:16 172 jhm 03/07/02 16:35:05 jhm 06/03/02 14:57:43 173 jhm 03/11/02 10:25:44 jhm 10/22/02 14:03:33 174 jhm 03/11/02 16:05:16 jhm 03/11/02 16:05:54 175 jhm 03/27/02 10:22:48 jhm 10/25/02 18:21:08 176 jhm 03/27/02 10:44:09 jhm 10/25/02 18:16:54 177 jhm 03/28/02 11:04:19 jhm 10/24/02 16:25:31 178 jhm 03/28/02 12:42:50 jhm 10/24/02 16:27:59 179 jhm 03/28/02 13:37:10 jhm 10/25/02 17:08:20 180 jhm 04/02/02 11:07:40 jhm 04/02/02 11:11:18 181 jhm 06/15/01 12:51:14 jhm 10/18/02 16:05:25 182 jhm 04/02/02 13:04:31 jhm 04/02/02 14:46:27 183 jhm 04/17/02 09:21:44 LEM 10/11/02 15:41:45 184 jhm 04/17/02 09:32:16 LEM 10/11/02 15:41:54 185 jhm 04/17/02 09:37:30 jhm 10/23/02 16:18:02 186 jhm 04/17/02 09:41:17 jhm 10/23/02 16:19:04 187 jhm 04/17/02 09:44:40 jhm 10/23/02 16:20:05 188 jhm 04/17/02 09:48:15 jhm 10/23/02 16:20:45 189 jhm 04/17/02 11:40:41 LEM 10/31/02 15:57:32 190 jhm 04/17/02 11:51:29 LEM 10/31/02 15:56:12 191 jhm 04/17/02 12:08:27 LEM 10/31/02 15:54:02 192 jhm 06/15/01 12:58:04 LEM 10/11/02 14:03:50 193 jhm 04/17/02 12:16:52 LEM 10/31/02 15:52:29 194 jhm 04/17/02 13:33:10 jhm 04/17/02 13:35:53 195 jhm 04/25/02 10:16:58 LEM 10/31/02 15:46:26 196 jhm 04/25/02 10:31:18 LEM 10/31/02 15:42:36 197 jhm 04/25/02 10:34:51 LEM 10/31/02 15:41:50 198 jhm 04/25/02 10:39:07 LEM 10/31/02 15:40:54 199 jhm 04/25/02 10:41:30 LEM 10/31/02 15:41:08 200 jhm 04/25/02 10:44:02 LEM 10/31/02 15:41:17 201 jhm 04/25/02 10:46:32 LEM 10/31/02 15:41:26 202 jhm 05/01/02 16:19:28 jhm 10/18/02 10:49:54 203 jhm 06/15/01 13:02:00 jhm 10/21/02 13:17:52 204 jhm 05/01/02 16:37:27 LEM 10/31/02 15:34:11 205 jhm 05/02/02 12:24:59 jhm 10/24/02 09:31:50 206 jhm 05/08/02 15:08:13 jhm 05/08/02 15:08:15 207 jhm 05/08/02 15:14:25 jhm 05/08/02 15:14:27 208 jhm 05/08/02 15:41:10 jhm 05/08/02 15:41:12 209 jhm 05/08/02 16:28:23 jhm 05/08/02 16:28:25 210 jhm 05/09/02 12:01:26 LEM 10/11/02 15:34:36 211 jhm 05/09/02 12:32:15 jhm 05/09/02 12:32:17 212 jhm 06/15/01 13:05:40 jhm 10/11/02 16:44:31 213 jhm 05/09/02 12:57:19 jhm 10/24/02 11:25:53 214 jhm 05/09/02 15:31:34 jhm 05/09/02 15:31:35 215 jhm 05/09/02 15:35:29 jhm 05/09/02 15:35:31 216 jhm 05/09/02 16:41:31 jhm 10/24/02 11:28:06 217 jhm 05/09/02 17:09:50 jhm 05/09/02 17:09:52 218 jhm 05/13/02 10:27:17 LEM 11/11/02 12:54:07 219 jhm 05/13/02 12:25:47 jhm 10/24/02 12:37:08 220 jhm 05/14/02 11:08:45 LEM 11/11/02 12:54:19 221 jhm 05/14/02 16:25:13 jhm 05/16/02 11:25:11 222 jhm 05/14/02 16:43:23 jhm 05/14/02 16:43:26 223 jhm 06/15/01 13:11:49 LEM 11/04/02 09:52:32 224 jhm 05/16/02 11:28:54 jhm 05/16/02 11:28:56 225 jhm 05/16/02 11:39:16 jhm 05/16/02 11:39:18 226 jhm 05/16/02 11:59:56 jhm 11/13/02 14:24:34 227 jhm 06/03/02 11:59:05 jhm 11/13/02 14:24:51 228 jhm 06/03/02 14:27:11 jhm 10/24/02 11:37:29 229 jhm 06/03/02 15:28:36 jhm 11/13/02 14:25:06 230 jhm 06/03/02 15:54:12 LEM 10/31/02 14:24:52 231 jhm 06/03/02 16:17:33 jhm 10/18/02 10:49:30 232 jhm 06/10/02 18:13:55 jhm 07/18/02 12:02:00 233 jhm 06/10/02 18:24:52 jhm 06/10/02 18:24:53 234 jhm 06/15/01 13:37:09 LEM 10/11/02 14:03:33 235 jhm 06/10/02 18:26:02 jhm 06/10/02 18:26:04 236 jhm 06/10/02 18:26:43 jhm 06/10/02 18:26:45 237 jhm 06/10/02 18:27:27 jhm 06/10/02 18:27:29 238 jhm 06/10/02 19:48:55 jhm 10/24/02 09:43:54 239 jhm 06/10/02 20:55:02 jhm 10/24/02 09:50:15 240 jhm 06/10/02 21:53:10 jhm 11/13/02 14:25:30 241 jhm 06/18/01 09:15:31 LEM 11/04/02 09:51:18 242 jhm 06/18/01 09:22:43 LEM 11/04/02 09:50:40 243 jhm 06/18/01 09:33:22 jhm 06/18/01 09:35:40 244 jhm 06/18/01 09:39:52 jhm 10/21/02 13:44:03 245 jhm 06/18/01 09:51:05 jhm 06/18/01 09:52:14 246 jhm 06/18/01 10:01:12 jhm 10/11/02 16:45:44 247 jhm 06/18/01 10:29:31 jhm 06/18/01 10:30:12 248 jhm 06/17/02 14:36:47 jhm 06/17/02 14:38:01 249 jhm 06/17/02 14:40:39 jhm 06/17/02 14:42:18 250 jhm 06/17/02 14:43:17 jhm 10/24/02 16:56:54 251 jhm 06/17/02 14:45:59 jhm 10/24/02 16:54:03 252 jhm 06/17/02 14:48:06 jhm 10/24/02 16:55:37 253 jhm 06/18/01 10:33:00 jhm 06/18/01 10:33:22 254 jhm 06/17/02 14:52:05 jhm 10/25/02 16:05:24 255 jhm 06/17/02 14:54:39 jhm 10/25/02 16:09:03 256 jhm 06/17/02 15:00:02 LEM 10/31/02 14:21:56 257 jhm 06/17/02 15:05:32 jhm 06/17/02 15:06:07 258 jhm 06/17/02 15:07:40 jhm 06/17/02 15:08:27 259 jhm 06/17/02 15:13:40 jhm 10/18/02 10:49:07 260 jhm 06/17/02 15:19:20 jhm 10/18/02 10:48:48 261 jhm 06/17/02 15:21:47 jhm 10/18/02 10:48:15 262 jhm 06/17/02 15:24:01 jhm 10/18/02 10:48:08 263 jhm 06/17/02 15:30:49 jhm 06/17/02 15:30:52 264 jhm 06/18/01 10:37:25 jhm 06/18/01 10:38:01 265 jhm 06/17/02 15:41:44 LEM 10/31/02 12:59:51 266 jhm 06/17/02 15:55:35 jhm 10/18/02 10:47:47 267 jhm 06/17/02 16:14:48 jhm 06/17/02 16:14:50 268 jhm 06/17/02 16:16:49 jhm 06/17/02 16:16:51 269 jhm 06/17/02 16:19:45 jhm 06/17/02 16:19:47 270 jhm 06/17/02 16:24:52 jhm 06/17/02 16:24:54 271 jhm 06/17/02 16:32:13 LEM 10/31/02 12:53:04 272 jhm 06/17/02 16:35:38 LEM 10/31/02 12:52:26 273 jhm 06/17/02 16:39:54 jhm 06/17/02 16:40:58 274 jhm 06/17/02 16:41:55 LEM 10/31/02 12:51:12 275 jhm 06/18/01 10:43:09 jhm 06/18/01 10:43:47 276 jhm 06/19/02 15:38:01 jhm 06/19/02 15:39:09 277 jhm 06/19/02 15:54:43 jhm 10/25/02 17:15:09 278 jhm 06/19/02 16:11:12 jhm 06/19/02 16:11:14 279 jhm 06/19/02 16:18:09 LEM 10/31/02 12:49:02 280 jhm 06/18/01 10:47:15 jhm 06/18/01 10:47:40 281 jhm 06/26/02 11:07:57 jhm 06/26/02 11:19:44 282 jhm 06/26/02 12:19:33 LEM 10/31/02 12:47:00 283 jhm 06/27/02 14:39:25 jhm 11/11/02 13:03:27 284 jhm 06/27/02 15:28:08 jhm 11/11/02 13:04:12 285 jhm 06/28/02 09:57:37 jhm 11/11/02 13:04:34 286 jhm 06/28/02 10:03:00 jhm 11/11/02 13:04:51 287 jhm 06/28/02 10:05:33 jhm 11/11/02 13:05:12 288 jhm 06/18/01 11:45:08 jhm 06/18/01 11:45:40 289 jhm 06/28/02 10:11:42 jhm 11/11/02 13:05:37 290 jhm 06/28/02 14:04:55 jhm 06/28/02 14:08:10 291 jhm 06/28/02 14:12:50 jhm 11/11/02 13:06:02 292 jhm 06/28/02 14:22:18 jhm 11/11/02 13:06:38 293 jhm 06/28/02 14:41:41 LEM 10/31/02 12:34:51 294 jhm 06/28/02 15:02:05 jhm 06/28/02 15:04:22 295 jhm 07/02/02 09:17:09 jhm 09/26/02 12:43:37 296 jhm 07/02/02 09:26:24 jhm 07/02/02 09:26:27 297 jhm 07/02/02 09:27:00 jhm 09/26/02 12:47:25 298 jhm 07/02/02 09:35:41 jhm 07/02/02 09:35:43 299 jhm 06/18/01 11:54:18 jhm 06/18/01 11:54:47 300 jhm 07/02/02 09:36:17 LEM 10/31/02 12:21:00 301 jhm 07/02/02 09:45:55 jhm 07/02/02 09:45:58 302 jhm 07/02/02 09:46:27 jhm 09/26/02 13:16:42 303 jhm 07/02/02 09:52:53 jhm 07/02/02 09:52:54 304 jhm 07/02/02 09:54:06 jhm 09/26/02 13:06:24 305 jhm 07/02/02 09:59:07 jhm 07/02/02 09:59:08 306 jhm 07/02/02 09:59:54 LEM 10/31/02 12:13:14 307 jhm 07/02/02 10:12:28 LEM 10/28/02 13:11:51 308 jhm 07/02/02 10:17:39 jhm 10/18/02 10:44:09 309 jhm 07/02/02 10:23:29 jhm 10/18/02 10:43:52 310 jhm 06/18/01 12:10:43 LEM 11/04/02 09:44:38 311 jhm 07/02/02 13:59:17 LEM 10/31/02 12:08:56 312 jhm 07/02/02 15:36:22 jhm 10/18/02 10:43:32 313 jhm 07/03/02 10:59:54 jhm 11/11/02 13:08:21 314 jhm 07/03/02 11:03:43 jhm 11/11/02 13:08:44 315 jhm 07/03/02 11:38:19 jhm 11/11/02 13:09:30 316 jhm 07/03/02 13:43:58 LEM 10/31/02 11:56:09 317 jhm 07/03/02 13:48:25 jhm 07/03/02 13:50:02 318 jhm 07/03/02 14:56:28 jhm 11/11/02 13:10:25 319 jhm 07/03/02 15:25:32 jhm 11/11/02 13:10:58 320 jhm 06/18/01 12:14:36 LEM 11/04/02 09:42:16 321 jhm 07/03/02 15:56:27 jhm 11/11/02 13:11:17 322 jhm 07/04/02 11:03:36 jhm 11/04/02 09:33:53 323 jhm 07/04/02 11:08:31 jhm 07/04/02 11:08:33 324 jhm 07/04/02 11:11:39 jhm 07/04/02 11:11:41 325 jhm 07/04/02 11:13:37 jhm 07/04/02 11:13:39 326 jhm 07/04/02 11:14:44 jhm 07/04/02 11:14:46 327 jhm 07/04/02 11:16:26 jhm 07/04/02 11:16:28 328 jhm 07/04/02 12:02:16 jhm 07/04/02 12:02:19 329 jhm 07/04/02 12:06:47 jhm 07/04/02 12:06:49 330 jhm 06/18/01 12:19:01 LEM 11/04/02 09:38:44 331 jhm 07/04/02 12:13:37 jhm 07/04/02 12:13:40 332 jhm 07/04/02 12:18:32 jhm 07/04/02 12:18:34 333 jhm 07/04/02 12:19:36 jhm 07/04/02 12:19:38 334 jhm 07/04/02 14:12:36 jhm 07/04/02 14:12:37 335 jhm 07/04/02 14:30:21 jhm 07/04/02 14:30:23 336 jhm 07/04/02 14:53:16 jhm 07/04/02 14:53:17 337 jhm 07/04/02 15:10:50 jhm 07/04/02 15:10:58 338 jhm 07/04/02 15:13:46 LEM 10/11/02 15:45:31 339 jhm 07/09/02 09:22:40 jhm 07/09/02 09:26:45 340 jhm 07/09/02 09:45:01 jhm 07/09/02 09:48:32 341 jhm 06/18/01 12:22:01 LEM 11/04/02 09:37:36 342 jhm 07/09/02 10:19:07 jhm 07/09/02 10:21:02 343 jhm 07/09/02 10:29:23 jhm 07/09/02 10:29:25 344 jhm 07/09/02 10:35:04 jhm 07/09/02 10:35:05 345 jhm 07/09/02 10:38:47 jhm 07/09/02 10:38:49 346 jhm 07/09/02 10:41:02 jhm 07/09/02 10:41:04 347 jhm 07/09/02 10:44:39 jhm 07/09/02 10:44:41 348 jhm 07/09/02 11:47:56 jhm 10/24/02 11:21:15 349 jhm 07/09/02 12:01:37 LEM 10/11/02 15:58:48 350 jhm 07/09/02 12:07:07 jhm 07/09/02 14:15:44 351 jhm 07/09/02 12:10:05 jhm 07/09/02 14:06:10 352 jhm 06/18/01 12:27:38 LEM 11/04/02 09:34:54 353 jhm 07/09/02 12:17:07 jhm 07/09/02 12:17:31 354 jhm 07/09/02 12:27:36 jhm 07/09/02 12:28:43 355 jhm 07/09/02 13:30:58 jhm 07/18/02 17:22:10 356 jhm 07/09/02 13:44:22 jhm 07/09/02 13:44:32 357 jhm 07/09/02 14:11:12 jhm 07/09/02 14:12:02 358 jhm 07/09/02 14:19:16 jhm 07/09/02 14:20:14 359 jhm 07/09/02 14:25:54 jhm 07/09/02 14:26:53 360 jhm 07/09/02 14:28:33 jhm 07/09/02 14:30:03 361 jhm 07/09/02 14:31:45 jhm 07/09/02 14:32:30 362 jhm 07/09/02 14:35:42 jhm 07/18/02 10:32:29 363 jhm 06/18/01 13:16:31 LEM 11/04/02 09:34:20 364 jhm 07/09/02 14:39:18 jhm 10/24/02 10:28:37 365 jhm 07/09/02 14:42:24 jhm 07/09/02 14:43:01 366 jhm 07/09/02 14:46:07 jhm 07/18/02 10:04:19 367 jhm 07/09/02 15:05:52 jhm 07/09/02 15:06:39 368 jhm 07/11/02 10:28:37 jhm 11/11/02 13:11:44 369 jhm 07/11/02 11:06:36 LEM 10/11/02 15:39:35 370 jhm 07/11/02 11:55:25 jhm 07/11/02 11:55:27 371 jhm 07/11/02 11:58:08 jhm 07/11/02 11:58:10 372 jhm 07/11/02 12:06:25 jhm 07/11/02 12:06:27 373 jhm 06/18/01 13:23:41 LEM 11/04/02 09:33:56 374 jhm 07/11/02 12:08:47 jhm 07/11/02 12:08:49 375 jhm 07/11/02 12:44:02 jhm 11/11/02 13:12:36 376 jhm 07/11/02 13:01:30 jhm 07/11/02 13:01:31 377 jhm 07/11/02 13:04:23 jhm 07/11/02 13:04:24 378 jhm 07/11/02 13:07:08 jhm 07/11/02 13:07:09 379 jhm 07/11/02 13:09:32 jhm 07/11/02 13:09:34 380 jhm 07/11/02 13:11:08 jhm 07/11/02 13:11:09 381 jhm 07/11/02 13:13:34 jhm 07/11/02 13:13:36 382 jhm 07/11/02 13:15:13 jhm 07/11/02 13:15:15 383 jhm 07/11/02 13:16:01 jhm 07/11/02 13:16:03 384 jhm 06/18/01 15:02:05 LEM 11/04/02 09:33:30 385 jhm 07/11/02 13:24:21 jhm 07/11/02 13:24:23 386 jhm 07/11/02 13:28:39 jhm 07/11/02 13:28:40 387 jhm 07/11/02 13:41:34 jhm 11/11/02 13:12:58 388 jhm 07/11/02 13:53:54 jhm 10/21/02 13:34:26 389 jhm 07/11/02 15:05:15 jhm 11/11/02 13:13:27 390 jhm 07/11/02 16:02:25 jhm 11/11/02 13:13:53 391 jhm 07/11/02 16:12:48 jhm 11/11/02 13:14:17 392 jhm 07/11/02 16:15:43 jhm 10/31/02 09:58:30 393 jhm 07/16/02 10:03:45 LEM 11/11/02 11:29:49 394 jhm 07/18/02 09:11:14 jhm 07/18/02 09:14:23 395 jhm 06/18/01 15:21:28 LEM 11/04/02 09:32:50 396 jhm 07/18/02 09:38:46 LEM 10/30/02 16:46:07 397 jhm 07/18/02 11:07:48 jhm 07/18/02 11:09:35 398 jhm 07/18/02 12:16:58 jhm 07/18/02 12:17:41 399 jhm 07/18/02 12:28:16 jhm 10/24/02 10:24:39 400 jhm 07/18/02 16:31:05 jhm 07/18/02 16:31:06 401 jhm 07/18/02 16:50:10 jhm 07/18/02 16:50:34 402 jhm 07/18/02 17:09:06 LEM 10/30/02 16:31:22 403 jhm 07/18/02 17:31:40 LEM 10/30/02 16:30:57 404 jhm 07/18/02 17:35:50 LEM 10/30/02 16:30:36 405 jhm 07/18/02 17:39:17 LEM 10/30/02 16:28:00 406 jhm 06/18/01 15:25:18 LEM 11/04/02 09:32:00 407 jhm 07/18/02 17:53:35 jhm 07/18/02 17:53:37 408 jhm 07/18/02 17:56:46 jhm 07/18/02 17:56:48 409 jhm 06/18/01 15:28:40 jhm 06/18/01 15:29:10 410 jhm 06/18/01 15:31:48 jhm 06/18/01 15:32:21 411 jhm 06/18/01 15:36:03 jhm 06/18/01 15:36:33 412 jhm 06/18/01 15:38:49 jhm 06/18/01 15:39:15 413 jhm 06/18/01 15:44:38 jhm 06/18/01 15:45:25 414 jhm 06/18/01 15:48:11 jhm 06/18/01 15:48:45 415 jhm 06/18/01 15:50:49 jhm 06/18/01 15:51:16 416 jhm 06/18/01 15:53:12 jhm 06/18/01 15:53:41 417 jhm 07/22/02 11:21:47 jhm 09/26/02 16:23:01 418 jhm 07/22/02 11:25:18 jhm 07/22/02 11:27:00 419 jhm 07/22/02 11:27:15 jhm 07/22/02 12:02:37 420 jhm 07/22/02 12:19:01 jhm 10/29/02 10:21:52 421 jhm 07/22/02 12:24:12 jhm 10/29/02 10:37:30 422 jhm 08/26/02 15:29:56 jhm 08/26/02 15:29:58 423 jhm 08/26/02 16:51:38 jhm 10/30/02 16:30:21 424 jhm 08/27/02 09:11:53 LEM 10/28/02 13:03:51 425 jhm 06/19/01 10:44:36 jhm 06/19/01 10:45:31 426 jhm 08/27/02 10:25:36 LEM 10/28/02 13:03:37 427 jhm 08/27/02 11:17:54 LEM 11/07/02 12:54:56 428 jhm 08/27/02 11:32:26 jhm 08/28/02 15:52:43 429 jhm 08/27/02 13:42:30 LEM 10/30/02 13:49:24 430 jhm 08/28/02 09:46:48 jhm 08/28/02 15:50:40 431 jhm 08/28/02 10:38:35 jhm 08/28/02 10:38:37 432 jhm 08/28/02 10:43:23 jhm 08/28/02 10:43:24 433 jhm 08/28/02 10:46:35 jhm 08/28/02 10:46:36 434 jhm 08/28/02 10:48:59 jhm 08/28/02 10:49:00 435 jhm 08/28/02 10:52:30 jhm 08/28/02 10:52:32 436 jhm 06/19/01 10:50:46 jhm 06/19/01 10:51:23 437 jhm 08/28/02 10:55:39 jhm 08/28/02 10:55:40 438 jhm 08/28/02 10:58:33 jhm 08/28/02 10:58:34 439 jhm 08/28/02 11:01:48 jhm 08/28/02 11:01:49 440 jhm 08/28/02 11:06:50 jhm 08/28/02 11:06:51 441 jhm 08/28/02 11:09:44 jhm 08/28/02 11:09:45 442 jhm 08/28/02 11:11:27 jhm 08/28/02 11:11:28 443 jhm 08/28/02 11:14:00 jhm 08/28/02 11:14:01 444 jhm 08/28/02 11:15:53 jhm 08/28/02 11:15:55 445 jhm 08/28/02 11:18:37 jhm 08/28/02 11:18:38 446 jhm 06/19/01 11:03:40 jhm 06/19/01 11:04:19 447 jhm 08/28/02 11:22:41 jhm 08/28/02 11:22:42 448 jhm 08/28/02 11:29:46 jhm 08/28/02 11:29:47 449 jhm 08/28/02 11:33:50 jhm 08/28/02 11:33:51 450 jhm 08/28/02 11:36:02 jhm 08/28/02 11:36:04 451 jhm 08/28/02 11:39:20 jhm 08/28/02 11:39:22 452 jhm 08/28/02 11:41:24 jhm 08/28/02 11:41:26 453 jhm 08/28/02 11:43:51 jhm 08/28/02 11:43:52 454 jhm 08/28/02 11:46:29 jhm 08/28/02 11:46:31 455 jhm 08/28/02 13:08:47 jhm 08/28/02 13:08:49 456 jhm 08/28/02 13:25:18 jhm 08/28/02 13:25:19 457 jhm 06/19/01 11:58:25 jhm 10/11/02 16:48:10 458 jhm 08/28/02 13:34:38 jhm 08/28/02 13:34:39 459 jhm 08/28/02 13:42:07 jhm 08/28/02 13:42:08 460 jhm 08/28/02 13:43:57 jhm 08/28/02 13:43:59 461 jhm 08/28/02 13:48:36 jhm 08/28/02 13:48:41 462 jhm 08/28/02 13:49:52 jhm 08/28/02 13:53:40 463 jhm 08/28/02 13:54:41 jhm 08/28/02 13:54:42 464 jhm 08/28/02 13:59:26 jhm 08/28/02 13:59:28 465 jhm 08/28/02 14:01:43 jhm 08/28/02 14:01:44 466 jhm 08/28/02 14:04:21 jhm 08/28/02 14:04:22 467 jhm 08/28/02 14:07:22 jhm 08/28/02 14:07:23 468 jhm 06/19/01 12:02:32 jhm 10/11/02 16:48:30 469 jhm 08/28/02 14:09:49 jhm 08/28/02 14:09:50 470 jhm 08/28/02 14:11:34 jhm 08/28/02 14:11:35 471 jhm 08/28/02 14:29:48 jhm 08/28/02 14:29:49 472 jhm 08/28/02 14:46:13 jhm 08/28/02 14:46:15 473 jhm 08/28/02 14:53:37 jhm 08/28/02 14:53:38 474 jhm 08/28/02 14:55:33 jhm 08/28/02 14:55:35 475 jhm 08/28/02 15:06:50 jhm 08/28/02 15:06:51 476 jhm 08/28/02 15:10:34 jhm 08/28/02 15:10:36 477 jhm 08/28/02 15:12:25 jhm 08/28/02 15:12:27 478 jhm 08/28/02 15:14:51 jhm 08/28/02 15:14:52 479 jhm 06/19/01 12:18:04 LEM 11/01/02 15:49:32 480 jhm 08/28/02 15:20:05 jhm 08/28/02 15:20:07 481 jhm 08/28/02 15:25:17 jhm 08/28/02 15:25:18 482 jhm 08/28/02 15:59:36 jhm 08/28/02 15:59:37 483 jhm 08/28/02 16:04:13 jhm 08/28/02 16:04:14 484 jhm 06/19/01 12:20:36 LEM 11/01/02 15:48:52 485 jhm 06/19/01 12:23:00 LEM 11/01/02 15:48:13 486 jhm 08/29/02 16:41:07 jhm 08/29/02 16:41:08 487 jhm 09/04/02 10:02:12 jhm 09/04/02 10:03:26 488 jhm 09/04/02 10:07:43 jhm 09/04/02 10:08:19 489 jhm 09/05/02 14:42:10 jhm 09/05/02 14:44:41 490 jhm 09/05/02 15:21:54 jhm 09/05/02 15:21:56 491 jhm 06/19/01 12:26:13 jhm 06/19/01 12:26:35 492 jhm 07/22/02 12:28:44 jhm 08/28/02 15:07:27 493 jhm 07/22/02 12:36:03 jhm 10/29/02 10:35:41 494 jhm 07/22/02 12:46:45 jhm 10/22/02 14:25:09 495 jhm 06/18/01 15:55:20 jhm 06/18/01 15:55:44 496 jhm 07/22/02 14:23:33 LEM 08/30/02 14:12:42 497 jhm 07/22/02 14:27:08 jhm 10/18/02 10:42:30 498 jhm 07/22/02 14:31:42 jhm 10/18/02 10:42:08 499 jhm 07/22/02 14:36:19 jhm 10/18/02 10:41:37 500 jhm 07/22/02 14:40:48 jhm 10/18/02 10:41:19 501 jhm 07/22/02 14:45:44 jhm 10/18/02 10:41:01 502 jhm 07/22/02 14:49:03 jhm 10/18/02 10:40:56 503 jhm 07/22/02 14:51:39 jhm 10/18/02 10:40:39 504 jhm 07/22/02 14:54:49 jhm 10/18/02 10:40:23 505 jhm 07/22/02 14:57:22 jhm 10/22/02 13:52:35 506 jhm 06/18/01 15:58:24 jhm 06/18/01 15:58:51 507 jhm 07/22/02 15:01:25 jhm 10/18/02 10:39:47 508 jhm 07/22/02 15:07:30 jhm 10/18/02 10:39:20 509 jhm 07/23/02 11:49:30 jhm 10/29/02 10:27:03 510 jhm 07/23/02 13:01:48 jhm 07/23/02 13:01:50 511 jhm 07/23/02 13:09:29 jhm 07/23/02 13:09:32 512 jhm 07/23/02 13:12:04 jhm 07/23/02 13:12:06 513 jhm 07/23/02 13:15:49 jhm 07/23/02 13:15:50 514 jhm 07/23/02 13:18:21 jhm 07/23/02 13:18:23 515 jhm 07/23/02 13:21:05 jhm 07/23/02 13:21:07 516 jhm 07/23/02 13:29:06 jhm 07/23/02 13:29:08 517 jhm 06/18/01 16:01:00 jhm 06/18/01 16:01:27 518 jhm 07/23/02 13:33:58 jhm 07/23/02 15:12:35 519 jhm 07/23/02 16:12:15 jhm 10/18/02 10:38:50 520 jhm 07/23/02 16:17:56 LEM 10/11/02 15:41:04 521 jhm 07/24/02 10:53:25 LEM 10/28/02 13:12:05 522 jhm 07/24/02 11:03:37 jhm 07/24/02 11:04:43 523 jhm 07/24/02 11:09:44 jhm 07/24/02 11:10:38 524 jhm 07/24/02 11:59:11 jhm 10/18/02 10:38:09 525 jhm 07/24/02 12:04:57 jhm 10/18/02 10:37:49 526 jhm 07/24/02 12:07:40 jhm 07/24/02 12:08:15 527 jhm 07/24/02 13:08:21 jhm 10/29/02 11:16:38 528 jhm 06/18/01 16:03:32 jhm 06/18/01 16:04:05 529 jhm 07/24/02 13:17:45 jhm 10/29/02 11:29:19 530 jhm 07/24/02 13:22:02 jhm 07/24/02 13:23:34 531 jhm 07/25/02 12:55:08 jhm 07/25/02 12:56:02 532 jhm 07/26/02 11:47:13 jhm 07/26/02 11:50:11 533 jhm 07/30/02 14:18:42 jhm 10/23/02 15:30:39 534 jhm 07/30/02 16:46:27 jhm 07/30/02 16:48:22 535 jhm 07/30/02 16:56:15 jhm 07/30/02 16:56:16 536 jhm 08/01/02 11:50:46 jhm 10/25/02 18:08:27 537 jhm 08/01/02 11:53:26 jhm 08/01/02 12:15:08 538 jhm 08/01/02 11:59:02 jhm 10/25/02 18:03:59 539 jhm 06/18/01 16:06:07 jhm 06/18/01 16:06:36 540 jhm 08/01/02 13:14:44 jhm 08/01/02 13:18:44 541 jhm 08/01/02 13:22:50 jhm 08/02/02 09:15:07 542 jhm 08/01/02 14:25:14 jhm 08/01/02 14:25:44 543 jhm 08/01/02 15:52:08 LEM 10/30/02 14:18:09 544 jhm 08/02/02 10:03:05 jhm 08/02/02 10:06:03 545 jhm 08/02/02 10:27:03 jhm 10/30/02 11:09:25 546 jhm 08/02/02 10:33:38 jhm 08/02/02 10:34:52 547 jhm 08/02/02 11:00:08 jhm 10/30/02 11:16:32 548 jhm 08/02/02 11:15:05 jhm 10/30/02 11:17:53 549 jhm 08/02/02 11:36:52 jhm 10/30/02 11:21:14 550 jhm 06/18/01 16:09:49 jhm 06/18/01 16:10:17 551 jhm 08/02/02 11:50:04 jhm 10/30/02 11:31:02 552 jhm 08/02/02 11:53:08 jhm 08/02/02 11:53:27 553 jhm 08/02/02 11:55:35 jhm 08/02/02 11:55:52 554 jhm 08/02/02 12:02:24 jhm 10/30/02 11:34:52 555 jhm 08/02/02 14:11:40 jhm 10/23/02 09:45:16 556 jhm 08/02/02 15:04:30 LEM 10/11/02 15:42:29 557 jhm 08/02/02 15:09:15 LEM 10/11/02 15:41:34 558 jhm 08/02/02 15:14:10 jhm 10/11/02 16:08:26 559 jhm 08/02/02 15:17:57 jhm 10/30/02 12:55:31 560 jhm 08/02/02 15:27:06 LEM 11/05/02 15:37:37 561 jhm 06/19/01 09:25:30 jhm 06/19/01 09:26:03 562 jhm 08/02/02 15:42:47 jhm 08/02/02 15:42:49 563 jhm 08/02/02 15:43:52 jhm 08/02/02 15:43:54 564 jhm 08/02/02 15:44:36 jhm 08/02/02 15:44:38 565 jhm 08/02/02 15:45:11 jhm 08/02/02 15:45:13 566 jhm 08/07/02 13:54:18 jhm 08/07/02 13:54:22 567 jhm 08/07/02 14:03:37 jhm 08/07/02 14:03:38 568 jhm 08/07/02 14:14:29 LEM 08/30/02 16:03:06 569 jhm 08/07/02 14:21:45 jhm 08/07/02 14:21:47 570 jhm 08/07/02 14:25:47 jhm 08/07/02 14:25:50 571 jhm 08/07/02 14:45:57 jhm 08/07/02 14:45:59 572 jhm 06/19/01 09:28:13 jhm 06/19/01 09:28:42 573 jhm 08/07/02 14:50:40 jhm 08/07/02 14:50:42 574 jhm 08/07/02 14:54:09 jhm 08/07/02 14:54:12 575 jhm 08/07/02 15:23:55 LEM 10/28/02 13:06:53 576 jhm 08/07/02 15:37:40 LEM 10/28/02 13:08:52 577 jhm 06/19/01 09:31:28 jhm 06/19/01 09:31:58 578 jhm 06/19/01 09:33:18 jhm 06/19/01 09:33:46 579 jhm 06/19/01 09:36:02 jhm 06/19/01 09:36:37 580 jhm 06/19/01 09:38:45 jhm 06/19/01 09:39:26 581 jhm 06/19/01 09:41:37 jhm 06/19/01 09:42:10 582 jhm 06/19/01 09:50:24 jhm 06/19/01 09:51:28 583 jhm 06/19/01 10:05:57 jhm 06/19/01 10:06:30 584 jhm 08/07/02 16:09:19 LEM 10/28/02 13:07:06 585 jhm 06/19/01 10:08:47 jhm 06/19/01 10:09:18 586 jhm 08/07/02 16:14:45 LEM 10/28/02 13:07:17 587 jhm 08/07/02 16:20:30 jhm 11/07/02 12:23:42 588 jhm 08/07/02 16:32:21 jhm 09/26/02 16:17:46 589 jhm 08/07/02 16:43:02 jhm 09/26/02 16:25:48 590 jhm 08/07/02 16:46:24 jhm 09/26/02 16:28:22 591 jhm 08/09/02 10:53:19 jhm 09/26/02 16:32:19 592 jhm 08/09/02 11:00:15 jhm 09/26/02 16:34:15 593 jhm 08/09/02 11:03:20 jhm 09/26/02 16:38:24 594 jhm 08/09/02 11:06:33 jhm 09/26/02 16:40:21 595 jhm 08/09/02 11:14:12 jhm 09/26/02 16:42:30 596 jhm 06/19/01 10:11:07 jhm 06/19/01 10:11:36 597 jhm 08/09/02 12:07:14 jhm 08/09/02 12:07:16 598 jhm 08/09/02 12:27:32 jhm 08/09/02 12:28:07 599 jhm 08/09/02 12:38:09 jhm 10/23/02 11:06:28 600 jhm 08/09/02 12:40:26 jhm 10/23/02 11:05:52 601 jhm 08/09/02 12:44:08 jhm 08/09/02 12:44:21 602 jhm 08/09/02 12:55:47 jhm 08/09/02 12:56:19 603 jhm 08/09/02 13:00:11 jhm 08/09/02 13:00:12 604 jhm 08/09/02 13:03:35 jhm 08/09/02 13:03:36 605 jhm 08/09/02 13:05:38 jhm 08/09/02 13:05:40 606 jhm 08/20/02 10:30:39 jhm 08/20/02 10:30:41 607 jhm 06/19/01 10:13:11 jhm 10/11/02 10:59:24 608 jhm 08/20/02 10:38:16 jhm 09/30/02 15:40:43 609 jhm 08/20/02 10:53:52 jhm 11/07/02 14:14:59 610 jhm 08/20/02 10:57:07 jhm 11/07/02 14:18:31 611 jhm 08/20/02 11:08:21 LEM 10/28/02 12:57:06 612 jhm 08/20/02 11:14:26 LEM 10/28/02 12:56:44 613 jhm 08/20/02 11:29:50 LEM 10/28/02 12:56:26 614 jhm 08/20/02 11:37:37 LEM 10/28/02 12:57:24 615 jhm 08/20/02 11:54:21 jhm 08/20/02 11:54:23 616 jhm 08/20/02 12:05:40 jhm 08/20/02 12:05:41 617 jhm 06/19/01 10:27:38 jhm 06/19/01 10:28:11 618 jhm 08/20/02 12:11:52 jhm 08/20/02 12:11:54 619 jhm 08/20/02 12:17:18 jhm 08/20/02 12:17:19 620 jhm 08/20/02 12:21:41 jhm 08/20/02 12:21:42 621 jhm 08/20/02 12:27:23 jhm 08/20/02 12:27:25 622 jhm 08/20/02 13:51:06 jhm 08/20/02 13:51:08 623 jhm 08/20/02 13:55:04 jhm 08/20/02 13:55:06 624 jhm 08/20/02 14:18:16 jhm 10/23/02 12:04:12 625 jhm 08/20/02 14:42:09 jhm 08/20/02 14:42:10 626 jhm 08/20/02 15:08:54 jhm 08/20/02 15:08:55 627 jhm 06/19/01 10:30:13 jhm 06/19/01 10:30:43 628 jhm 08/20/02 15:27:22 jhm 08/20/02 15:27:23 629 jhm 08/20/02 15:31:57 jhm 11/07/02 12:37:27 630 jhm 08/20/02 15:36:13 jhm 08/20/02 15:36:15 631 jhm 08/20/02 15:42:23 jhm 08/20/02 15:42:24 632 jhm 08/20/02 15:46:22 jhm 08/20/02 15:46:23 633 jhm 08/20/02 15:49:10 jhm 08/20/02 15:49:12 634 jhm 08/20/02 16:00:14 jhm 08/20/02 16:00:15 635 jhm 08/20/02 16:03:13 jhm 08/20/02 16:03:15 636 jhm 08/21/02 09:52:28 LEM 10/11/02 15:31:50 637 jhm 06/19/01 10:32:49 jhm 06/19/01 10:33:22 638 jhm 06/19/01 10:35:26 jhm 06/19/01 10:36:00 639 jhm 06/19/01 10:39:49 jhm 06/19/01 10:40:27 640 jhm 06/19/01 10:42:14 jhm 06/19/01 10:42:45 641 jhm 08/26/02 14:21:03 LEM 03/10/03 17:45:53 642 jhm 08/26/02 14:31:12 jhm 08/26/02 14:31:14 643 jhm 08/26/02 15:13:19 jhm 08/26/02 15:13:26 644 jhm 08/26/02 15:20:35 jhm 08/26/02 15:20:36 645 jhm 08/26/02 15:24:28 jhm 10/03/02 14:45:20 646 jhm 06/19/01 12:33:04 jhm 06/19/01 12:33:25 647 jhm 06/19/01 12:35:29 LEM 11/01/02 15:46:38 648 jhm 06/19/01 12:39:32 LEM 11/01/02 15:46:13 649 jhm 05/17/01 12:01:51 jhm 05/17/01 12:01:57 650 jhm 06/19/01 12:46:57 LEM 11/01/02 15:45:51 651 jhm 06/19/01 12:50:42 LEM 11/01/02 15:44:57 652 jhm 06/19/01 12:53:17 LEM 11/01/02 15:44:13 653 jhm 06/22/01 15:56:31 jhm 05/08/02 16:34:27 654 jhm 06/26/01 11:11:31 jhm 11/04/02 14:14:06 655 jhm 06/27/01 12:16:24 jhm 06/27/01 12:21:46 656 jhm 09/09/02 13:45:33 jhm 10/30/02 15:54:23 657 jhm 09/09/02 13:46:23 jhm 10/30/02 15:46:41 658 jhm 09/09/02 13:47:24 jhm 10/30/02 15:46:21 659 jhm 09/09/02 13:48:12 jhm 10/30/02 15:50:01 660 jhm 09/09/02 13:54:16 jhm 09/09/02 13:54:31 661 jhm 09/09/02 13:56:32 jhm 09/09/02 13:57:07 662 jhm 09/09/02 13:59:04 jhm 09/09/02 13:59:47 663 jhm 09/09/02 14:00:35 jhm 09/09/02 14:01:44 664 jhm 09/09/02 14:02:43 jhm 09/09/02 14:03:00 665 jhm 09/09/02 14:04:43 jhm 09/09/02 14:05:28 666 jhm 09/09/02 14:07:12 jhm 09/09/02 14:07:58 667 jhm 09/09/02 14:11:53 jhm 09/09/02 14:15:39 668 jhm 09/09/02 14:50:10 LEM 10/31/02 10:43:29 669 jhm 09/09/02 15:16:00 LEM 10/30/02 11:17:40 670 jhm 09/10/02 09:01:19 jhm 09/10/02 09:01:21 671 jhm 09/10/02 09:02:19 jhm 09/10/02 09:02:21 672 jhm 09/10/02 09:05:41 jhm 09/10/02 09:05:42 673 jhm 09/10/02 09:45:13 jhm 09/10/02 09:45:14 674 jhm 09/10/02 09:57:07 jhm 09/10/02 09:57:08 675 jhm 09/10/02 10:01:04 jhm 11/07/02 11:29:34 676 jhm 09/10/02 10:06:57 jhm 09/10/02 10:06:59 677 jhm 09/10/02 10:21:06 jhm 09/10/02 10:21:07 678 jhm 09/10/02 10:24:32 jhm 09/10/02 10:24:34 679 jhm 09/10/02 10:30:42 jhm 09/10/02 10:30:43 680 jhm 09/10/02 10:37:20 jhm 09/10/02 10:37:21 681 jhm 09/10/02 10:40:27 jhm 09/10/02 10:40:29 682 jhm 09/10/02 10:43:18 jhm 09/10/02 10:43:19 683 jhm 09/10/02 10:46:50 jhm 09/10/02 10:46:51 684 jhm 09/10/02 10:50:26 jhm 09/10/02 10:50:28 685 jhm 09/10/02 10:53:39 jhm 09/10/02 10:53:40 686 jhm 09/10/02 10:59:02 jhm 09/10/02 10:59:04 687 jhm 09/10/02 11:02:46 jhm 09/10/02 11:02:48 688 jhm 09/10/02 11:05:45 jhm 09/10/02 11:05:46 689 jhm 09/10/02 11:09:59 jhm 09/10/02 11:11:16 690 jhm 09/10/02 11:24:35 jhm 09/10/02 11:24:37 691 jhm 09/10/02 11:28:19 jhm 09/10/02 11:28:20 692 jhm 09/10/02 11:31:36 jhm 09/10/02 11:31:37 693 jhm 09/10/02 11:35:01 jhm 09/10/02 11:35:02 694 jhm 09/10/02 11:37:38 jhm 09/10/02 11:37:39 695 jhm 09/10/02 11:45:59 LEM 10/11/02 15:55:38 696 jhm 09/10/02 11:48:52 jhm 09/10/02 11:48:54 697 jhm 09/10/02 11:51:44 jhm 09/10/02 11:51:45 698 jhm 09/10/02 11:55:08 jhm 09/10/02 11:55:09 699 jhm 09/10/02 11:59:40 jhm 09/10/02 11:59:41 700 jhm 09/10/02 12:02:58 jhm 09/10/02 12:02:59 701 jhm 09/10/02 12:22:33 jhm 09/10/02 12:22:35 702 jhm 09/17/02 10:58:10 jhm 09/17/02 10:58:12 703 jhm 09/26/02 12:23:35 jhm 09/26/02 12:23:37 704 jhm 09/26/02 14:49:52 jhm 09/26/02 14:49:53 705 jhm 09/26/02 15:07:40 jhm 09/26/02 15:07:42 706 jhm 09/26/02 15:13:01 jhm 09/26/02 15:13:03 707 jhm 09/26/02 15:16:41 jhm 09/26/02 15:16:43 708 jhm 09/26/02 15:18:21 jhm 09/26/02 15:18:23 709 jhm 10/02/02 09:36:19 jhm 10/02/02 09:36:21 710 jhm 10/02/02 09:39:48 jhm 10/02/02 09:39:50 711 jhm 10/02/02 09:40:52 jhm 10/02/02 09:40:54 712 jhm 10/02/02 09:41:37 jhm 10/02/02 09:41:39 713 jhm 10/02/02 09:42:14 jhm 10/02/02 09:42:16 714 jhm 10/02/02 09:43:04 jhm 10/02/02 09:43:06 715 jhm 10/02/02 09:43:51 jhm 10/02/02 09:43:53 716 jhm 10/02/02 09:44:29 jhm 10/02/02 09:44:31 717 jhm 10/02/02 09:45:05 jhm 10/02/02 09:45:06 718 jhm 10/02/02 09:45:43 jhm 10/02/02 09:45:44 719 jhm 10/02/02 09:46:39 jhm 10/02/02 09:46:41 720 jhm 10/02/02 09:47:17 jhm 10/02/02 09:47:19 721 jhm 10/02/02 09:47:58 jhm 10/02/02 09:47:59 722 jhm 10/02/02 09:48:37 jhm 10/02/02 09:48:39 723 jhm 10/02/02 09:49:19 jhm 10/02/02 09:49:20 724 jhm 10/02/02 09:49:56 jhm 10/02/02 09:49:58 725 jhm 10/02/02 11:42:20 LEM 10/11/02 11:29:02 726 jhm 10/02/02 15:43:35 jhm 10/02/02 15:43:36 727 jhm 10/02/02 15:45:45 jhm 10/02/02 15:45:48 728 jhm 10/03/02 14:50:01 jhm 10/03/02 14:50:03 729 jhm 10/07/02 12:31:45 jhm 10/07/02 12:31:47 730 jhm 10/08/02 11:51:05 jhm 10/08/02 11:51:42 731 jhm 10/10/02 10:37:08 jhm 10/10/02 10:37:10 732 jhm 10/10/02 10:38:46 jhm 10/10/02 10:38:48 733 jhm 10/10/02 10:40:37 jhm 10/10/02 10:48:09 734 jhm 10/21/02 15:32:05 jhm 10/21/02 15:32:06 735 jhm 10/22/02 13:39:11 jhm 10/22/02 13:39:13 736 jhm 10/22/02 13:45:03 jhm 10/22/02 13:45:05 737 jhm 10/22/02 15:13:07 jhm 10/22/02 15:13:08 738 jhm 10/24/02 10:14:51 jhm 10/24/02 10:14:53 739 jhm 10/24/02 11:47:09 jhm 10/24/02 11:47:11 740 jhm 10/24/02 11:50:29 jhm 10/24/02 11:50:30 741 jhm 10/24/02 13:06:17 jhm 10/24/02 13:06:18 742 jhm 10/25/02 18:04:16 jhm 10/25/02 18:04:18 743 jhm 10/25/02 18:09:38 jhm 10/25/02 18:09:40 744 jhm 10/25/02 18:11:03 jhm 10/25/02 18:11:04 745 jhm 10/28/02 16:24:38 jhm 10/28/02 16:28:22 746 jhm 10/28/02 16:34:06 jhm 10/28/02 16:34:54 747 jhm 10/29/02 09:00:21 jhm 10/29/02 09:00:24 748 jhm 10/29/02 09:03:48 jhm 10/29/02 09:03:50 749 jhm 10/29/02 12:14:55 jhm 10/29/02 12:14:56 750 jhm 10/30/02 11:28:39 jhm 10/30/02 11:28:40 751 jhm 10/30/02 11:31:34 jhm 10/30/02 11:31:35 752 jhm 10/30/02 11:33:13 jhm 10/30/02 11:33:14 753 jhm 10/30/02 12:54:51 jhm 10/30/02 12:54:53 754 jhm 11/05/02 14:31:33 jhm 11/05/02 14:31:35 755 jhm 11/05/02 14:53:45 jhm 11/05/02 14:53:47 756 jhm 11/05/02 15:52:04 jhm 11/05/02 15:52:06 757 jhm 11/06/02 12:18:49 jhm 11/06/02 12:18:50 758 jhm 11/06/02 12:19:21 jhm 11/06/02 12:19:23 759 jhm 11/06/02 12:19:51 jhm 11/06/02 12:19:52 760 jhm 11/06/02 12:20:16 jhm 11/06/02 12:20:17 761 jhm 11/06/02 15:07:59 jhm 11/06/02 15:08:01 762 jhm 11/06/02 15:52:02 jhm 11/06/02 15:52:04 763 jhm 11/20/02 12:14:32 jhm 11/20/02 12:15:33 764 jhm 12/03/02 12:04:32 jhm 12/03/02 12:07:07 765 jhm 05/17/01 16:10:40 jhm 10/24/02 09:36:44 766 jhm 07/02/01 10:48:21 LEM 11/01/02 15:42:50 767 jhm 07/02/01 12:46:14 jhm 07/25/01 15:52:12 768 jhm 07/02/01 12:57:50 jhm 10/01/02 11:51:23 769 jhm 07/02/01 13:08:27 jhm 10/01/02 11:54:10 770 jhm 07/02/01 13:32:29 jhm 07/25/01 15:53:41 771 jhm 07/02/01 14:55:23 jhm 10/11/02 16:49:16 772 jhm 07/02/01 15:24:10 jhm 10/01/02 12:41:20 773 jhm 07/02/01 15:55:43 jhm 07/25/01 15:54:52 774 jhm 07/02/01 16:03:48 jhm 10/01/02 12:37:50 775 jhm 07/02/01 16:14:28 jhm 10/01/02 11:41:38 776 jhm 07/02/01 16:28:48 jhm 10/01/02 11:44:01 777 jhm 07/03/01 09:23:42 jhm 10/01/02 11:47:43 778 jhm 07/03/01 09:35:33 jhm 10/01/02 11:49:37 779 jhm 07/03/01 12:14:08 LEM 11/07/02 11:56:59 780 jhm 07/03/01 12:44:51 LEM 11/01/02 15:35:10 781 jhm 07/03/01 12:51:57 jhm 10/02/02 10:46:36 782 jhm 07/03/01 13:00:17 jhm 10/02/02 10:45:25 783 jhm 07/03/01 13:05:41 jhm 10/02/02 10:44:14 784 jhm 07/03/01 13:31:35 jhm 07/03/01 13:35:02 785 jhm 07/03/01 13:39:27 jhm 10/02/02 11:43:26 786 jhm 07/03/01 13:44:59 jhm 07/03/01 13:46:16 787 jhm 07/03/01 15:21:07 jhm 10/02/02 12:30:21 788 jhm 07/03/01 15:29:55 jhm 10/02/02 12:28:59 789 jhm 07/03/01 15:51:36 LEM 11/01/02 15:33:41 790 jhm 07/03/01 15:56:48 LEM 11/01/02 15:31:28 791 jhm 07/03/01 16:08:37 LEM 11/01/02 15:30:46 792 jhm 07/03/01 16:15:10 jhm 07/25/01 16:04:06 793 jhm 07/03/01 16:19:36 jhm 11/11/02 13:17:09 794 jhm 07/04/01 09:40:35 jhm 11/11/02 13:16:50 795 jhm 07/04/01 09:50:18 jhm 11/11/02 13:16:03 796 jhm 07/04/01 10:16:03 jhm 10/03/02 10:10:50 797 jhm 07/04/01 10:47:35 jhm 07/25/01 16:06:47 798 jhm 07/04/01 10:59:39 jhm 07/25/01 16:07:15 799 jhm 07/04/01 11:44:38 jhm 10/03/02 09:34:05 800 jhm 07/04/01 11:53:32 jhm 07/25/01 16:08:01 801 jhm 07/04/01 12:13:09 jhm 07/25/01 16:08:34 802 jhm 07/04/01 12:26:15 jhm 07/25/01 16:08:54 803 jhm 07/04/01 12:35:22 jhm 07/25/01 16:09:17 804 jhm 07/04/01 12:45:13 LEM 11/01/02 15:26:44 805 jhm 07/04/01 13:32:45 LEM 11/01/02 15:25:53 806 jhm 07/04/01 13:43:00 LEM 11/01/02 15:24:51 807 jhm 07/05/01 10:09:13 LEM 11/01/02 15:23:04 808 jhm 07/05/01 10:17:09 LEM 11/01/02 15:22:18 809 jhm 07/05/01 10:41:27 jhm 08/03/01 10:07:22 810 jhm 07/05/01 10:52:22 LEM 11/01/02 15:20:08 811 jhm 07/05/01 13:02:47 LEM 11/01/02 15:18:08 812 jhm 07/05/01 13:28:28 LEM 08/30/02 16:01:59 813 jhm 07/05/01 14:47:36 jhm 08/03/01 10:09:28 814 jhm 07/05/01 15:01:58 jhm 08/03/01 10:09:51 815 jhm 07/05/01 15:11:34 jhm 08/03/01 10:10:28 816 jhm 07/05/01 15:31:43 LEM 11/01/02 15:17:28 817 jhm 07/05/01 15:37:31 LEM 11/01/02 15:16:36 818 jhm 07/05/01 15:43:02 LEM 11/01/02 15:08:29 819 jhm 07/05/01 15:46:38 jhm 08/03/01 10:11:58 820 jhm 07/09/01 09:09:34 jhm 10/23/02 12:25:18 821 jhm 07/09/01 09:17:43 jhm 08/03/01 10:13:07 822 jhm 07/09/01 09:24:55 jhm 10/23/02 12:26:49 823 jhm 07/09/01 09:29:55 jhm 08/03/01 10:14:23 824 jhm 07/09/01 09:44:06 LEM 11/01/02 15:06:50 825 jhm 07/09/01 09:51:29 jhm 08/03/01 10:15:00 826 jhm 07/09/01 10:14:21 jhm 07/09/01 10:16:38 827 jhm 07/09/01 10:21:52 jhm 10/23/02 12:38:48 828 jhm 07/09/01 10:25:28 jhm 10/23/02 12:34:38 829 jhm 07/09/01 10:31:36 jhm 10/23/02 12:36:43 830 jhm 07/09/01 10:43:58 jhm 07/09/01 13:50:21 831 jhm 07/09/01 11:07:46 jhm 08/03/01 13:05:05 832 jhm 07/09/01 11:11:32 jhm 08/03/01 13:05:22 833 jhm 07/09/01 11:17:30 jhm 08/03/01 13:05:46 834 jhm 07/09/01 12:16:49 jhm 08/03/01 13:06:03 835 jhm 07/09/01 12:21:31 jhm 08/03/01 13:06:19 836 jhm 07/09/01 12:25:52 jhm 08/03/01 13:06:50 837 jhm 07/09/01 12:29:58 jhm 08/03/01 13:07:07 838 jhm 07/09/01 12:42:07 jhm 08/03/01 13:07:28 839 jhm 07/09/01 12:45:02 jhm 08/03/01 13:07:46 840 jhm 07/09/01 12:50:24 jhm 08/03/01 13:08:05 841 jhm 07/09/01 12:53:45 jhm 08/03/01 13:08:22 842 jhm 07/09/01 12:56:55 jhm 07/09/01 12:58:14 843 jhm 07/09/01 13:06:50 jhm 08/03/01 13:08:52 844 jhm 07/09/01 13:10:01 jhm 08/03/01 13:09:00 845 jhm 07/09/01 13:17:28 jhm 08/03/01 13:10:27 846 jhm 07/09/01 13:20:08 jhm 08/03/01 13:10:45 847 jhm 07/09/01 13:30:08 jhm 10/22/02 14:21:26 848 jhm 07/09/01 13:33:02 jhm 08/03/01 13:11:28 849 jhm 07/09/01 13:35:23 jhm 08/03/01 13:11:46 850 jhm 07/09/01 13:37:56 jhm 08/03/01 13:12:06 851 jhm 07/09/01 13:59:02 LEM 11/01/02 14:45:35 852 jhm 07/09/01 14:03:11 jhm 08/03/01 13:12:35 853 jhm 07/10/01 09:54:52 LEM 11/01/02 14:42:37 854 jhm 07/10/01 10:30:04 jhm 11/27/02 16:35:01 855 jhm 07/10/01 12:02:46 LEM 06/19/03 11:55:06 856 jhm 07/10/01 12:09:27 jhm 07/10/01 12:09:29 857 jhm 07/10/01 12:25:24 jhm 07/10/01 12:25:26 858 jhm 07/10/01 12:27:11 jhm 07/10/01 12:27:12 859 jhm 05/17/01 16:31:30 jhm 05/17/01 16:31:34 860 jhm 07/10/01 12:33:46 jhm 11/13/02 12:21:36 861 jhm 07/10/01 12:57:53 jhm 11/06/02 15:06:59 862 jhm 07/11/01 11:51:38 jhm 07/11/01 11:55:26 863 jhm 07/11/01 14:54:47 LEM 12/06/02 12:26:28 864 jhm 07/16/01 09:45:06 jhm 07/16/01 09:45:09 865 jhm 07/16/01 09:50:06 jhm 07/16/01 09:50:08 866 jhm 07/16/01 09:57:32 jhm 07/16/01 09:57:35 867 jhm 07/16/01 10:03:38 jhm 07/16/01 10:03:40 868 jhm 07/16/01 10:07:25 jhm 07/16/01 10:07:27 869 jhm 07/16/01 10:40:21 jhm 07/16/01 10:40:23 870 jhm 07/16/01 12:22:05 jhm 11/06/02 15:34:43 871 jhm 07/16/01 12:39:06 LEM 10/28/02 12:57:56 872 jhm 07/16/01 12:56:20 LEM 11/11/02 11:30:08 873 jhm 07/16/01 13:28:07 LEM 11/11/02 11:30:27 874 jhm 07/16/01 14:51:30 LEM 10/11/02 15:46:25 875 jhm 07/16/01 15:06:13 LEM 11/11/02 11:30:50 876 jhm 07/16/01 15:10:22 LEM 10/11/02 15:47:02 877 jhm 07/16/01 15:59:24 jhm 07/16/01 15:59:26 878 jhm 07/16/01 16:06:48 jhm 07/16/01 16:06:52 879 jhm 07/16/01 16:15:04 jhm 10/18/02 15:48:15 880 jhm 07/16/01 16:17:27 jhm 07/16/01 16:17:29 881 jhm 07/16/01 16:25:23 jhm 07/16/01 16:25:25 882 jhm 07/17/01 09:32:25 jhm 10/18/02 15:48:07 883 jhm 07/17/01 09:34:38 jhm 07/17/01 10:19:04 884 jhm 07/17/01 09:53:27 jhm 07/17/01 09:53:29 885 jhm 07/17/01 10:00:13 jhm 07/17/01 10:00:15 886 jhm 07/17/01 10:13:14 jhm 11/06/02 15:55:05 887 jhm 07/17/01 15:27:11 LEM 10/28/02 12:14:51 888 jhm 07/18/01 09:32:22 jhm 07/18/01 15:36:33 889 jhm 07/18/01 09:45:21 jhm 07/18/01 15:31:11 890 jhm 07/18/01 12:34:50 jhm 12/03/02 16:28:21 891 jhm 07/23/01 12:13:46 LEM 11/01/02 14:33:44 892 jhm 07/23/01 13:31:48 jhm 10/11/02 16:51:23 893 jhm 07/23/01 13:36:40 jhm 07/23/01 13:38:11 894 jhm 07/23/01 16:23:47 LEM 11/01/02 14:29:20 895 jhm 07/24/01 09:24:20 LEM 11/01/02 14:28:06 896 jhm 07/24/01 12:28:50 jhm 10/25/02 17:28:57 897 jhm 07/24/01 12:39:28 jhm 10/25/02 17:07:33 898 jhm 07/24/01 12:57:34 jhm 10/25/02 17:40:45 899 jhm 07/24/01 13:02:51 jhm 10/25/02 17:36:25 900 jhm 07/24/01 13:07:55 jhm 10/25/02 17:35:09 901 jhm 07/24/01 13:12:17 jhm 10/25/02 17:31:52 902 jhm 07/24/01 13:15:25 LEM 10/11/02 15:38:44 903 jhm 07/24/01 13:20:34 jhm 10/25/02 17:45:01 904 jhm 07/24/01 14:34:24 jhm 10/25/02 17:49:47 905 jhm 07/24/01 14:51:43 jhm 07/26/01 16:11:04 906 jhm 07/24/01 15:10:22 jhm 07/24/01 15:10:24 907 jhm 07/24/01 15:11:54 jhm 07/24/01 15:11:55 908 jhm 07/24/01 15:21:40 jhm 07/24/01 15:22:16 909 jhm 07/24/01 15:26:25 jhm 07/24/01 15:28:05 910 jhm 07/24/01 15:30:56 jhm 10/11/02 16:52:55 911 jhm 07/25/01 09:54:49 LEM 11/01/02 11:40:38 912 jhm 07/25/01 10:32:14 LEM 11/01/02 11:38:11 913 jhm 07/25/01 11:22:14 LEM 11/01/02 14:39:08 914 jhm 07/25/01 11:32:42 LEM 11/01/02 14:41:08 915 jhm 07/25/01 11:39:15 jhm 10/24/02 12:51:04 916 jhm 07/25/01 11:49:10 jhm 10/24/02 10:27:53 917 jhm 07/25/01 11:52:58 jhm 07/25/01 11:53:33 918 jhm 07/25/01 11:56:05 jhm 07/25/01 11:56:52 919 jhm 07/25/01 12:07:32 jhm 10/23/02 14:46:35 920 jhm 07/26/01 15:06:26 jhm 10/03/02 12:38:42 921 jhm 07/26/01 15:36:26 jhm 07/26/01 15:36:40 922 jhm 07/26/01 15:44:39 jhm 07/26/01 15:44:41 923 jhm 07/26/01 15:50:59 jhm 10/25/02 17:46:59 924 jhm 07/26/01 15:54:12 jhm 07/26/01 15:54:15 925 jhm 07/26/01 15:57:11 jhm 07/26/01 15:57:14 926 jhm 07/27/01 11:57:56 jhm 07/27/01 11:59:12 927 jhm 07/27/01 12:03:02 jhm 07/27/01 12:03:04 928 jhm 07/27/01 12:13:36 jhm 07/27/01 12:14:27 929 jhm 07/27/01 12:16:36 jhm 07/27/01 12:17:42 930 jhm 07/27/01 12:20:39 jhm 07/27/01 12:21:41 931 jhm 07/27/01 12:25:30 jhm 07/27/01 12:26:19 932 jhm 07/27/01 12:29:03 jhm 07/27/01 12:30:04 933 jhm 07/27/01 12:33:28 jhm 07/27/01 12:34:07 934 jhm 07/27/01 12:36:17 jhm 07/27/01 12:36:57 935 jhm 07/27/01 12:39:54 jhm 07/27/01 12:40:36 936 jhm 07/27/01 12:44:06 jhm 07/27/01 12:44:48 937 jhm 07/27/01 12:47:06 jhm 07/27/01 12:47:47 938 jhm 07/27/01 12:51:00 jhm 07/27/01 12:51:39 939 jhm 07/27/01 12:54:58 jhm 07/27/01 12:55:34 940 jhm 07/27/01 13:03:43 jhm 07/27/01 13:04:29 941 jhm 07/27/01 13:06:48 jhm 07/27/01 13:07:21 942 jhm 07/27/01 13:10:01 jhm 07/27/01 13:10:39 943 jhm 07/27/01 13:12:48 jhm 07/27/01 13:13:26 944 jhm 07/27/01 13:15:29 jhm 07/27/01 13:15:59 945 jhm 07/27/01 13:18:12 jhm 07/27/01 13:18:51 946 jhm 07/27/01 13:21:06 jhm 07/27/01 13:21:39 947 jhm 07/27/01 13:24:09 jhm 07/27/01 13:24:42 948 jhm 07/27/01 13:27:26 jhm 07/27/01 13:28:14 949 jhm 07/27/01 13:31:25 jhm 07/27/01 13:32:13 950 jhm 07/27/01 13:39:10 jhm 07/27/01 13:39:55 951 jhm 07/27/01 13:44:52 jhm 10/24/01 13:00:25 952 jhm 07/30/01 10:49:03 jhm 10/24/02 16:41:11 953 jhm 07/30/01 11:28:31 LEM 11/01/02 11:23:58 954 jhm 07/31/01 12:07:01 LEM 10/11/02 15:29:09 955 jhm 07/31/01 12:18:05 jhm 10/22/02 12:53:49 956 jhm 07/31/01 14:40:09 jhm 07/31/01 14:40:11 957 jhm 07/31/01 14:42:41 jhm 10/22/02 15:04:08 958 jhm 07/31/01 15:03:07 jhm 07/31/01 15:03:09 959 jhm 07/31/01 15:04:16 LEM 10/11/02 15:31:31 960 jhm 07/31/01 15:18:02 jhm 10/23/02 14:08:11 961 jhm 07/31/01 15:21:09 jhm 07/31/01 15:21:11 962 jhm 07/31/01 15:29:49 LEM 10/11/02 15:27:59 963 jhm 07/31/01 15:43:23 jhm 07/31/01 15:43:27 964 jhm 07/31/01 15:49:22 LEM 10/11/02 15:28:58 965 jhm 07/31/01 15:57:48 jhm 07/31/01 15:57:50 966 jhm 07/31/01 16:07:23 jhm 07/31/01 16:07:25 967 jhm 07/31/01 16:10:31 jhm 07/31/01 16:10:32 968 jhm 07/31/01 16:14:59 jhm 07/31/01 16:15:01 969 jhm 07/31/01 16:21:58 jhm 07/31/01 16:22:00 970 jhm 08/01/01 11:01:41 LEM 10/11/02 14:00:24 971 jhm 08/01/01 11:11:22 LEM 11/01/02 11:20:52 972 jhm 08/02/01 15:44:04 LEM 10/11/02 15:41:19 973 jhm 08/13/01 11:27:17 LEM 11/01/02 14:36:03 974 jhm 08/15/01 12:42:22 LEM 10/11/02 15:23:17 975 jhm 08/16/01 11:08:28 jhm 08/16/01 11:08:31 976 jhm 08/16/01 11:19:16 jhm 10/22/02 10:07:05 977 jhm 08/16/01 11:47:14 jhm 10/22/02 10:01:00 978 jhm 08/16/01 12:03:15 jhm 10/22/02 10:04:29 979 jhm 08/16/01 12:15:27 jhm 10/22/02 10:02:50 980 jhm 08/16/01 12:19:22 jhm 10/22/02 10:03:46 981 jhm 08/16/01 12:23:58 jhm 10/22/02 10:02:17 982 jhm 08/16/01 13:55:08 jhm 10/23/02 10:21:45 983 jhm 08/16/01 14:11:53 jhm 10/23/02 10:13:40 984 jhm 08/16/01 14:16:31 jhm 10/23/02 10:12:35 985 jhm 08/16/01 14:21:44 jhm 10/23/02 10:11:33 986 jhm 08/16/01 14:26:57 jhm 10/23/02 10:10:17 987 jhm 08/16/01 14:31:08 jhm 10/23/02 10:08:36 988 jhm 08/16/01 14:49:40 LEM 10/29/03 11:36:52 989 jhm 08/16/01 15:22:15 jhm 11/13/02 12:36:59 990 jhm 08/16/01 15:33:31 LEM 11/07/02 15:40:42 991 jhm 08/16/01 15:45:12 LEM 10/29/03 11:42:58 992 jhm 08/16/01 16:00:44 jhm 10/22/02 10:05:31 993 jhm 08/16/01 16:25:14 jhm 10/22/02 09:24:47 994 jhm 08/17/01 09:29:39 jhm 10/22/02 09:02:51 995 jhm 08/17/01 09:40:55 jhm 10/22/02 09:21:49 996 jhm 08/17/01 09:51:30 jhm 10/22/02 08:58:50 997 jhm 08/17/01 10:00:04 jhm 10/22/02 08:55:08 998 jhm 08/17/01 10:11:13 jhm 10/22/02 08:51:40 999 jhm 08/17/01 10:33:00 jhm 10/11/02 16:53:56 1000 jhm 08/17/01 11:31:14 jhm 10/22/02 09:39:43 1001 jhm 08/17/01 11:36:39 jhm 10/22/02 09:38:29 1002 jhm 08/17/01 11:39:50 jhm 10/22/02 09:36:49 1003 jhm 08/17/01 11:43:17 jhm 10/22/02 09:35:50 1004 jhm 08/17/01 11:46:09 jhm 10/22/02 09:33:41 1005 jhm 08/17/01 11:57:15 LEM 10/11/02 14:23:56 1006 jhm 08/17/01 12:23:49 jhm 10/22/02 09:50:03 1007 jhm 08/17/01 12:34:57 jhm 10/22/02 09:52:04 1008 jhm 08/17/01 12:41:48 jhm 10/22/02 09:41:54 1009 jhm 08/17/01 12:54:12 LEM 10/11/02 14:24:28 1010 jhm 08/17/01 13:13:08 LEM 10/11/02 14:24:43 1011 jhm 08/17/01 13:19:55 LEM 10/11/02 14:24:36 1012 jhm 08/17/01 15:00:02 LEM 10/11/02 14:20:53 1013 jhm 08/17/01 15:05:38 LEM 10/11/02 14:20:38 1014 jhm 08/22/01 14:11:18 LEM 11/01/02 11:16:27 1015 jhm 08/29/01 09:40:02 LEM 10/11/02 14:20:20 1016 jhm 08/29/01 10:00:03 LEM 10/11/02 14:20:29 1017 jhm 08/29/01 10:59:37 LEM 11/01/02 11:15:37 1018 jhm 08/29/01 15:00:46 LEM 10/11/02 14:18:27 1019 jhm 08/29/01 16:20:34 jhm 10/22/02 08:19:25 1020 jhm 08/29/01 16:25:45 jhm 10/22/02 08:22:18 1021 jhm 08/30/01 09:12:11 LEM 10/11/02 14:19:23 1022 jhm 08/30/01 09:20:30 LEM 10/11/02 14:18:50 1023 jhm 08/30/01 10:30:33 LEM 10/11/02 14:19:32 1024 jhm 08/30/01 10:41:35 LEM 10/11/02 14:19:41 1025 jhm 08/30/01 10:46:26 jhm 10/11/02 16:54:27 1026 jhm 08/30/01 10:50:12 jhm 10/22/02 08:37:51 1027 jhm 08/30/01 11:12:29 jhm 10/22/02 08:39:18 1028 jhm 06/05/01 15:19:09 jhm 06/05/01 15:20:39 1029 jhm 06/06/01 17:05:49 jhm 10/24/02 09:54:09 1030 jhm 06/06/01 17:34:30 jhm 10/24/02 09:59:59 1031 jhm 08/31/01 12:46:11 LEM 11/07/02 15:02:03 1032 jhm 06/07/01 14:42:45 jhm 10/18/02 11:14:19 1033 jhm 08/31/01 13:10:40 LEM 10/28/02 12:59:53 1034 jhm 08/31/01 14:35:22 jhm 10/21/02 16:50:40 1035 jhm 08/31/01 15:06:10 jhm 10/21/02 16:52:22 1036 jhm 08/31/01 15:15:32 jhm 10/22/02 08:16:30 1037 jhm 08/31/01 15:19:14 jhm 10/22/02 08:15:53 1038 jhm 08/31/01 15:22:31 jhm 10/21/02 16:57:59 1039 jhm 08/31/01 15:25:31 jhm 10/21/02 16:57:36 1040 jhm 08/31/01 15:35:09 jhm 10/21/02 16:56:58 1041 jhm 08/31/01 15:37:59 jhm 10/21/02 16:53:35 1042 jhm 06/07/01 16:20:17 LEM 10/28/02 12:45:53 1043 jhm 08/31/01 15:44:34 jhm 10/21/02 16:53:07 1044 jhm 09/03/01 11:02:36 jhm 10/11/02 16:18:14 1045 jhm 09/03/01 11:09:19 jhm 10/11/02 16:18:37 1046 jhm 09/03/01 11:13:14 jhm 10/11/02 16:19:14 1047 jhm 09/03/01 11:30:24 jhm 09/03/01 11:31:03 1048 jhm 09/03/01 15:20:54 jhm 09/03/01 15:23:08 1049 jhm 09/04/01 14:23:56 jhm 11/11/02 14:17:58 1050 jhm 09/04/01 14:51:27 jhm 10/22/02 13:25:33 1051 jhm 09/04/01 15:06:40 jhm 10/22/02 13:26:56 1052 jhm 06/08/01 09:19:47 LEM 10/09/02 17:17:50 1053 jhm 09/06/01 12:40:04 LEM 11/01/02 10:56:31 1054 jhm 09/07/01 11:41:23 LEM 11/01/02 10:46:58 1055 jhm 09/07/01 12:51:04 LEM 11/01/02 10:44:08 1056 jhm 09/10/01 09:20:58 jhm 09/10/01 09:31:00 1057 jhm 06/08/01 09:40:26 LEM 10/09/02 17:18:00 1058 jhm 09/10/01 10:58:44 jhm 10/07/02 14:57:50 1059 jhm 09/10/01 11:04:05 jhm 10/07/02 14:56:51 1060 jhm 09/10/01 12:03:48 jhm 10/08/02 08:42:59 1061 jhm 09/10/01 12:08:47 jhm 10/08/02 08:38:04 1062 jhm 09/10/01 12:26:45 jhm 10/07/02 12:53:55 1063 jhm 09/10/01 12:42:26 jhm 09/10/01 12:44:09 1064 jhm 09/10/01 12:47:46 jhm 09/10/01 12:49:27 1065 jhm 09/10/01 12:51:55 jhm 10/07/02 12:51:03 1066 jhm 09/10/01 12:56:23 jhm 10/07/02 12:48:00 1067 jhm 06/08/01 09:54:19 LEM 10/11/02 13:56:04 1068 jhm 09/10/01 13:03:25 jhm 09/10/01 13:04:52 1069 jhm 09/10/01 13:07:14 jhm 09/10/01 13:07:48 1070 jhm 09/10/01 13:24:07 LEM 10/28/02 12:59:01 1071 jhm 09/10/01 13:29:55 LEM 10/28/02 12:58:11 1072 jhm 09/10/01 13:34:49 LEM 10/11/02 14:00:11 1073 jhm 09/10/01 13:40:15 LEM 10/11/02 14:00:00 1074 jhm 09/10/01 13:43:49 LEM 10/11/02 13:59:48 1075 jhm 09/10/01 13:48:07 LEM 10/11/02 13:59:28 1076 jhm 09/10/01 13:51:33 LEM 10/11/02 13:59:20 1077 jhm 09/10/01 14:27:13 LEM 10/11/02 13:58:52 1078 jhm 06/08/01 14:20:09 LEM 10/28/02 12:46:41 1079 jhm 09/10/01 14:35:57 jhm 09/10/01 14:42:25 1080 jhm 09/10/01 14:39:50 jhm 09/10/01 14:40:59 1081 jhm 09/12/01 09:58:10 jhm 10/24/02 12:56:51 1082 jhm 09/12/01 14:57:16 jhm 09/12/01 14:58:23 1083 jhm 09/12/01 15:00:52 jhm 09/12/01 15:01:38 1084 jhm 09/12/01 15:05:09 jhm 09/12/01 15:05:33 1085 jhm 09/12/01 15:09:30 jhm 09/12/01 15:09:53 1086 jhm 09/12/01 15:41:35 jhm 09/12/01 15:42:29 1087 jhm 09/12/01 15:46:44 jhm 09/12/01 15:47:19 1088 jhm 09/12/01 15:54:48 jhm 10/07/02 14:54:59 1089 jhm 06/11/01 15:53:43 jhm 05/02/02 12:19:28 1090 jhm 09/12/01 16:06:18 LEM 10/28/02 12:59:27 1091 jhm 09/21/01 11:53:37 jhm 10/18/02 11:02:32 1092 jhm 09/21/01 12:03:56 LEM 10/11/02 10:57:53 1093 jhm 09/21/01 12:08:12 jhm 10/18/02 11:01:44 1094 jhm 09/21/01 12:11:40 jhm 10/18/02 11:01:26 1095 jhm 09/21/01 12:27:04 jhm 10/08/02 09:47:54 1096 jhm 09/21/01 12:49:42 jhm 10/08/02 09:23:21 1097 jhm 09/21/01 12:57:34 jhm 10/08/02 09:20:13 1098 jhm 09/21/01 13:02:21 jhm 10/08/02 09:21:06 1099 jhm 09/24/01 09:24:56 jhm 09/24/01 09:34:25 1100 jhm 06/11/01 16:36:24 jhm 10/24/02 09:58:19 1101 jhm 09/24/01 09:41:22 jhm 09/24/01 09:43:17 1102 jhm 09/24/01 09:46:20 jhm 09/24/01 09:50:02 1103 jhm 09/24/01 09:56:15 jhm 09/24/01 09:57:45 1104 jhm 09/24/01 10:00:48 jhm 09/24/01 10:02:17 1105 jhm 09/24/01 10:05:16 jhm 09/24/01 10:10:44 1106 jhm 09/24/01 10:13:44 jhm 09/24/01 10:16:19 1107 jhm 09/24/01 10:19:10 jhm 09/24/01 10:20:33 1108 jhm 09/24/01 10:23:05 jhm 09/24/01 10:24:43 1109 jhm 09/24/01 10:26:49 jhm 09/24/01 10:27:53 1110 jhm 09/24/01 10:30:00 jhm 09/24/01 10:31:14 1111 jhm 06/11/01 17:01:46 jhm 06/11/01 17:01:51 1112 jhm 09/24/01 10:33:34 jhm 09/24/01 10:34:22 1113 jhm 09/24/01 11:00:30 jhm 09/24/01 11:01:54 1114 jhm 09/24/01 11:37:33 jhm 09/24/01 11:39:36 1115 jhm 09/24/01 11:42:38 jhm 09/24/01 11:43:52 1116 jhm 09/24/01 11:48:33 jhm 09/24/01 11:51:19 1117 jhm 09/24/01 12:12:13 jhm 09/24/01 12:13:39 1118 jhm 09/24/01 12:16:15 jhm 09/24/01 12:20:37 1119 jhm 09/24/01 12:25:41 jhm 09/24/01 12:32:00 1120 jhm 09/24/01 12:41:05 jhm 09/24/01 12:41:50 1121 jhm 09/24/01 12:58:36 jhm 09/24/01 12:59:21 1122 jhm 06/12/01 09:42:31 LEM 10/11/02 13:56:10 1123 jhm 09/24/01 13:06:14 jhm 09/24/01 13:06:58 1124 jhm 09/24/01 13:18:17 jhm 09/24/01 13:19:01 1125 jhm 09/24/01 13:22:30 jhm 09/24/01 13:23:11 1126 jhm 09/24/01 13:26:57 jhm 09/24/01 13:27:48 1127 jhm 09/24/01 13:30:58 jhm 09/24/01 13:31:48 1128 jhm 09/24/01 13:35:02 jhm 09/24/01 13:35:44 1129 jhm 09/24/01 13:45:43 jhm 09/24/01 13:46:30 1130 jhm 09/24/01 14:10:04 jhm 10/11/02 16:54:35 1131 jhm 09/24/01 14:18:48 jhm 10/11/02 16:54:55 1132 jhm 09/25/01 10:12:52 jhm 09/25/01 10:41:51 1133 jhm 06/12/01 10:00:21 LEM 10/11/02 13:55:48 1134 jhm 09/25/01 12:16:43 jhm 11/11/02 14:24:45 1135 jhm 10/03/01 10:12:14 jhm 10/29/02 10:47:11 1136 jhm 10/03/01 10:26:19 LEM 11/01/02 10:32:20 1137 jhm 10/03/01 10:48:55 jhm 10/03/01 10:50:44 1138 jhm 10/03/01 12:13:20 jhm 10/03/01 12:14:47 1139 jhm 10/03/01 12:18:50 jhm 10/03/01 12:19:44 1140 jhm 10/03/01 12:22:09 jhm 10/03/01 12:22:31 1141 jhm 10/03/01 12:33:37 jhm 10/03/01 12:34:44 1142 jhm 10/03/01 12:47:24 jhm 10/03/01 12:47:55 1143 jhm 06/12/01 10:17:21 LEM 10/11/02 13:55:21 1144 jhm 10/03/01 12:59:52 jhm 10/11/02 16:55:12 1145 jhm 10/03/01 13:11:40 jhm 10/11/02 16:55:29 1146 jhm 10/03/01 13:18:53 LEM 11/11/02 12:53:54 1147 jhm 10/03/01 13:22:36 jhm 10/03/01 13:22:46 1148 jhm 10/03/01 14:51:15 jhm 10/08/02 10:50:17 1149 jhm 10/03/01 14:55:41 jhm 10/08/02 10:49:28 1150 jhm 10/03/01 14:59:43 jhm 10/03/01 15:01:00 1151 jhm 10/03/01 15:04:04 jhm 10/08/02 10:34:37 1152 jhm 10/03/01 15:07:46 jhm 10/08/02 10:33:52 1153 jhm 10/03/01 15:11:27 jhm 10/08/02 10:33:16 1154 jhm 06/12/01 10:36:59 jhm 10/02/02 11:59:53 1155 jhm 10/03/01 15:15:33 jhm 10/08/02 10:32:15 1156 jhm 10/03/01 15:19:14 jhm 10/08/02 10:31:33 1157 jhm 10/03/01 15:25:43 jhm 10/08/02 10:30:10 1158 jhm 10/03/01 15:29:13 jhm 10/08/02 10:28:30 1159 jhm 10/03/01 15:32:35 jhm 10/08/02 10:27:16 1160 jhm 10/03/01 15:52:05 jhm 10/03/01 15:52:28 1161 jhm 10/03/01 16:02:17 jhm 10/11/02 16:55:46 1162 jhm 10/04/01 09:49:57 LEM 10/28/02 13:01:17 1163 jhm 10/04/01 10:01:54 LEM 10/28/02 13:00:44 1164 jhm 10/04/01 10:08:45 LEM 10/28/02 13:00:28 1165 jhm 06/13/01 09:20:24 LEM 11/13/02 11:40:11 1166 jhm 10/04/01 10:15:58 LEM 10/28/02 13:01:01 1167 jhm 10/04/01 10:24:18 LEM 04/10/03 10:39:26 1168 jhm 10/04/01 10:42:45 jhm 10/04/01 10:44:07 1169 jhm 10/04/01 10:47:55 jhm 10/04/01 10:49:19 1170 jhm 10/04/01 10:51:36 jhm 10/04/01 10:51:54 1171 jhm 10/04/01 11:37:28 LEM 11/01/02 10:29:35 1172 jhm 10/04/01 12:00:20 jhm 10/04/01 12:02:04 1173 jhm 10/04/01 12:04:20 jhm 10/04/01 12:04:48 1174 jhm 10/04/01 12:19:49 jhm 10/04/01 12:20:39 1175 jhm 10/04/01 12:26:38 jhm 10/04/01 12:27:14 1176 jhm 06/13/01 10:21:57 LEM 10/28/02 12:54:45 1177 jhm 10/04/01 12:55:46 jhm 10/04/01 12:57:14 1178 jhm 10/08/01 09:09:16 jhm 10/08/01 09:11:16 1179 jhm 10/08/01 09:18:28 jhm 10/08/01 09:19:23 1180 jhm 10/08/01 09:39:24 jhm 10/08/01 09:43:18 1181 jhm 10/08/01 09:46:22 jhm 10/08/01 09:48:26 1182 jhm 10/08/01 09:56:28 jhm 10/08/01 09:57:13 1183 jhm 10/08/01 10:01:33 jhm 10/08/01 10:02:17 1184 jhm 10/08/01 10:22:10 jhm 10/08/01 10:23:25 1185 jhm 10/08/01 10:25:51 jhm 10/08/01 10:26:34 1186 jhm 10/08/01 11:16:05 jhm 10/08/01 11:17:41 1187 jhm 06/13/01 10:46:57 LEM 11/04/02 10:13:49 1188 jhm 10/08/01 11:21:10 jhm 10/08/01 11:22:11 1189 jhm 10/08/01 11:28:55 jhm 10/08/01 11:30:05 1190 jhm 10/08/01 11:32:00 jhm 10/08/01 11:33:04 1191 jhm 10/08/01 11:35:53 jhm 10/08/01 11:36:59 1192 jhm 10/08/01 11:39:06 jhm 10/08/01 11:40:13 1193 jhm 10/08/01 11:43:00 jhm 10/08/01 11:43:39 1194 jhm 10/08/01 11:53:33 jhm 10/08/02 14:17:25 1195 jhm 10/09/01 09:10:36 jhm 10/09/01 09:13:30 1196 jhm 10/09/01 09:16:45 jhm 10/09/01 09:18:37 1197 jhm 06/13/01 11:55:00 LEM 10/28/02 12:54:26 1198 jhm 10/09/01 09:41:31 jhm 10/09/01 09:43:46 1199 jhm 10/09/01 09:46:17 jhm 10/09/01 09:47:51 1200 jhm 10/09/01 10:04:35 jhm 10/09/01 10:08:13 1201 jhm 10/09/01 10:10:33 jhm 10/08/02 12:14:22 1202 jhm 10/09/01 10:16:23 jhm 10/09/01 10:17:56 1203 jhm 10/09/01 10:21:10 jhm 10/08/02 12:12:59 1204 jhm 10/09/01 10:25:14 jhm 10/08/02 12:12:19 1205 jhm 10/09/01 10:28:48 jhm 10/08/02 12:11:29 1206 jhm 10/09/01 10:41:16 LEM 10/28/02 13:03:25 1207 jhm 06/13/01 12:31:28 jhm 10/03/02 14:41:21 1208 jhm 10/09/01 10:45:44 LEM 10/28/02 13:03:13 1209 jhm 10/09/01 10:49:46 LEM 10/28/02 13:03:02 1210 jhm 10/09/01 10:53:31 LEM 10/28/02 13:02:37 1211 jhm 10/09/01 10:57:48 jhm 10/30/02 12:29:32 1212 jhm 10/09/01 11:50:05 LEM 10/28/02 13:01:35 1213 jhm 10/09/01 11:54:02 LEM 10/28/02 13:02:06 1214 jhm 10/09/01 11:59:27 LEM 10/28/02 13:01:49 1215 jhm 10/09/01 12:05:49 jhm 10/18/02 11:41:51 1216 jhm 10/09/01 12:20:29 jhm 10/08/02 12:24:46 1217 jhm 10/09/01 12:23:58 jhm 10/08/02 12:23:46 1218 jhm 06/13/01 13:09:17 jhm 06/13/01 13:14:11 1219 jhm 10/09/01 12:40:06 jhm 10/09/01 12:43:58 1220 jhm 10/09/01 13:02:31 LEM 10/28/02 13:04:27 1221 jhm 10/09/01 13:13:30 LEM 10/28/02 13:04:53 1222 jhm 10/09/01 13:27:26 LEM 10/28/02 13:04:39 1223 jhm 10/09/01 14:56:57 jhm 10/09/01 15:07:52 1224 jhm 10/09/01 15:15:53 jhm 10/09/01 15:18:12 1225 jhm 10/09/01 15:23:16 jhm 10/09/01 15:24:19 1226 jhm 10/09/01 15:30:58 LEM 04/10/03 09:58:35 1227 jhm 10/09/01 15:44:47 LEM 11/01/02 10:24:58 1228 jhm 10/09/01 16:08:57 jhm 10/09/01 16:12:26 1229 jhm 06/14/01 13:37:55 jhm 06/14/01 13:42:02 1230 jhm 10/09/01 16:14:18 jhm 10/09/01 16:17:26 1231 jhm 10/09/01 16:22:13 jhm 10/09/01 16:25:21 1232 jhm 10/09/01 16:28:21 jhm 10/18/02 12:44:27 1233 jhm 10/10/01 09:33:44 jhm 10/10/01 09:35:47 1234 jhm 10/10/01 09:39:24 jhm 10/10/01 09:40:21 1235 jhm 10/10/01 09:58:18 jhm 10/18/02 12:24:53 1236 jhm 10/10/01 15:08:11 LEM 11/11/02 11:31:05 1237 jhm 10/10/01 15:25:35 LEM 11/01/02 10:23:55 1238 jhm 10/11/01 09:11:39 jhm 10/18/02 12:40:16 1239 jhm 06/14/01 13:48:12 jhm 06/14/01 13:51:11 1240 jhm 10/11/01 09:25:09 jhm 10/18/02 12:40:03 1241 jhm 10/11/01 09:58:22 jhm 10/11/01 09:59:11 1242 jhm 10/11/01 10:14:00 jhm 10/11/01 10:15:00 1243 jhm 10/11/01 10:26:19 jhm 10/11/01 10:27:30 1244 jhm 10/11/01 10:30:50 jhm 10/11/01 10:32:19 1245 jhm 10/11/01 10:35:53 jhm 10/11/01 10:36:24 1246 jhm 10/11/01 10:44:55 jhm 10/11/01 10:45:27 1247 jhm 10/11/01 10:49:21 jhm 10/11/01 10:49:51 1248 jhm 10/11/01 11:22:45 jhm 10/11/01 11:23:48 1249 jhm 10/11/01 11:26:09 jhm 10/11/01 11:27:19 1250 jhm 06/14/01 14:13:47 LEM 11/04/02 10:09:43 1251 jhm 10/11/01 11:30:42 jhm 10/11/01 11:31:46 1252 jhm 10/11/01 11:35:51 jhm 10/11/01 11:36:51 1253 jhm 10/11/01 11:44:17 jhm 10/18/02 13:58:13 1254 jhm 10/11/01 11:58:51 jhm 10/18/02 12:46:56 1255 jhm 10/11/01 12:52:29 jhm 10/21/02 16:06:51 1256 jhm 10/11/01 13:06:29 jhm 10/11/01 15:14:38 1257 jhm 10/11/01 13:15:32 jhm 10/18/02 11:01:07 1258 jhm 10/11/01 13:32:09 jhm 10/21/02 15:51:54 1259 jhm 10/11/01 14:37:44 jhm 10/21/02 16:04:50 1260 jhm 10/11/01 14:45:12 jhm 10/21/02 15:39:17 1261 jhm 06/14/01 14:22:43 jhm 06/14/01 15:49:49 1262 jhm 10/11/01 14:52:45 jhm 10/21/02 15:38:17 1263 jhm 10/11/01 15:02:11 jhm 10/21/02 15:37:10 1264 jhm 10/11/01 15:09:51 jhm 10/21/02 15:35:27 1265 jhm 10/11/01 15:16:47 jhm 10/21/02 15:49:24 1266 jhm 10/11/01 15:24:24 jhm 10/21/02 15:44:30 1267 jhm 10/11/01 15:30:41 jhm 10/21/02 15:57:50 1268 jhm 10/11/01 15:36:37 jhm 10/21/02 15:42:30 1269 jhm 10/11/01 15:44:07 jhm 10/18/02 14:10:13 1270 jhm 10/11/01 15:51:10 jhm 10/18/02 10:56:40 1271 jhm 10/11/01 15:58:06 jhm 10/11/02 16:56:38 1272 LEM 05/17/01 10:10:35 jhm 01/03/04 13:47:39 1273 LEM 05/18/01 11:49:22 jhm 01/03/04 14:02:08 1274 LEM 06/14/01 15:07:18 LEM 11/18/02 16:28:25 1275 LEM 10/16/01 12:38:09 LEM 10/16/01 12:39:51 1276 LEM 10/16/01 12:41:34 jhm 10/07/02 12:25:16 1277 LEM 10/16/01 13:11:43 jhm 10/03/02 11:51:57 1278 LEM 10/16/01 15:22:51 jhm 10/03/02 11:30:19 1279 LEM 10/16/01 15:33:16 jhm 10/03/02 11:34:13 1280 LEM 10/16/01 16:00:17 LEM 10/16/01 16:03:10 1281 LEM 10/16/01 16:04:38 jhm 10/07/02 12:28:26 1282 LEM 10/16/01 16:18:48 jhm 10/03/02 12:12:02 1283 LEM 10/18/01 09:37:21 jhm 01/23/04 12:14:30 1284 LEM 10/18/01 10:35:50 LEM 10/18/01 10:36:01 1285 LEM 06/15/01 09:24:53 LEM 06/15/01 09:24:56 1286 LEM 10/18/01 10:40:13 jhm 11/04/02 13:14:24 1287 LEM 10/18/01 12:02:41 jhm 11/04/02 16:47:49 1288 LEM 10/18/01 12:33:01 jhm 10/03/02 11:58:16 1289 LEM 10/18/01 12:40:34 jhm 10/03/02 12:10:46 1290 LEM 10/18/01 13:38:49 LEM 06/17/02 11:49:40 1291 LEM 10/19/01 09:51:45 jhm 10/03/02 14:56:58 1292 LEM 10/19/01 10:06:20 jhm 10/03/02 15:09:50 1293 LEM 10/19/01 10:08:39 LEM 10/19/01 10:08:41 1294 LEM 10/19/01 10:13:21 LEM 10/19/01 10:13:23 1295 LEM 10/19/01 10:13:26 LEM 10/19/01 10:13:28 1296 LEM 06/15/01 09:30:00 LEM 06/15/01 09:30:02 1297 LEM 10/19/01 10:15:40 LEM 10/19/01 10:15:44 1298 LEM 10/19/01 10:19:28 LEM 10/19/01 10:19:30 1299 LEM 10/19/01 10:24:27 LEM 10/19/01 10:24:29 1300 LEM 10/19/01 10:27:42 jhm 10/03/02 15:22:46 1301 LEM 10/19/01 10:36:41 LEM 10/19/01 10:36:43 1302 LEM 10/19/01 10:45:12 LEM 10/19/01 10:45:30 1303 LEM 10/19/01 10:57:10 LEM 09/03/02 13:13:16 1304 LEM 10/19/01 10:59:24 LEM 09/03/02 13:14:26 1305 LEM 10/19/01 11:01:25 LEM 10/28/02 12:55:17 1306 LEM 10/19/01 12:42:43 LEM 10/19/01 12:42:44 1307 LEM 06/15/01 09:39:34 LEM 06/15/01 09:39:36 1308 LEM 10/19/01 12:44:28 LEM 10/19/01 12:44:29 1309 LEM 10/19/01 12:45:03 LEM 10/19/01 12:45:04 1310 LEM 10/19/01 12:46:22 LEM 10/19/01 12:46:24 1311 LEM 10/19/01 12:47:54 LEM 10/19/01 12:47:56 1312 LEM 10/19/01 12:50:42 LEM 10/19/01 12:50:45 1313 LEM 10/19/01 12:51:40 LEM 10/19/01 12:51:41 1314 LEM 10/19/01 12:54:11 LEM 10/19/01 12:54:13 1315 LEM 10/19/01 13:03:37 jhm 08/07/02 16:32:11 1316 LEM 10/19/01 13:06:31 jhm 10/03/02 15:51:33 1317 LEM 10/19/01 13:08:10 jhm 10/03/02 15:55:41 1318 LEM 06/15/01 10:38:47 LEM 03/10/03 10:39:21 1319 LEM 10/19/01 13:09:03 jhm 10/03/02 15:56:21 1320 LEM 10/19/01 13:10:10 jhm 10/03/02 15:57:04 1321 LEM 10/19/01 13:11:10 jhm 10/03/02 15:57:50 1322 LEM 10/19/01 13:19:08 jhm 09/26/02 16:28:46 1323 LEM 10/19/01 13:20:25 jhm 10/03/02 15:38:55 1324 LEM 10/19/01 13:23:21 jhm 10/03/02 15:34:31 1325 LEM 10/19/01 13:24:49 jhm 09/30/02 15:27:08 1326 LEM 10/19/01 13:26:27 jhm 11/07/02 12:06:13 1327 LEM 10/19/01 13:28:05 jhm 11/07/02 12:03:27 1328 LEM 10/19/01 13:29:43 jhm 11/07/02 12:08:27 1329 LEM 10/19/01 13:32:44 jhm 11/07/02 12:37:50 1330 LEM 10/19/01 13:33:57 jhm 11/07/02 14:24:14 1331 LEM 10/19/01 13:35:19 jhm 11/07/02 14:08:43 1332 LEM 10/19/01 13:36:57 jhm 11/07/02 12:09:54 1333 LEM 10/19/01 15:13:46 LEM 10/19/01 15:13:56 1334 LEM 10/19/01 15:22:52 jhm 10/03/02 14:08:10 1335 LEM 10/19/01 15:35:24 LEM 10/19/01 15:35:25 1336 LEM 10/19/01 15:54:58 LEM 10/19/01 15:55:00 1337 LEM 10/19/01 16:04:18 LEM 10/19/01 16:04:33 1338 LEM 10/19/01 16:13:46 LEM 10/19/01 16:13:48 1339 LEM 10/19/01 16:15:18 LEM 10/19/01 16:15:21 1340 LEM 10/19/01 16:16:52 LEM 10/19/01 16:16:54 1341 LEM 10/19/01 16:20:52 LEM 10/19/01 16:20:53 1342 LEM 10/19/01 16:22:12 LEM 10/19/01 16:22:14 1343 LEM 10/19/01 16:24:10 LEM 10/19/01 16:24:12 1344 LEM 10/19/01 16:25:38 LEM 10/19/01 16:25:39 1345 LEM 10/22/01 12:16:09 jhm 10/03/02 12:01:29 1346 LEM 10/22/01 12:20:44 LEM 10/28/02 12:50:06 1347 LEM 10/22/01 12:23:10 LEM 10/28/02 12:50:24 1348 LEM 10/22/01 12:25:27 LEM 10/28/02 12:49:35 1349 LEM 10/22/01 12:38:49 jhm 10/18/02 10:54:18 1350 LEM 10/22/01 12:44:44 LEM 10/28/02 12:50:42 1351 LEM 10/22/01 14:45:58 LEM 10/28/02 12:51:00 1352 LEM 10/22/01 15:05:41 LEM 10/28/02 12:51:22 1353 LEM 10/22/01 15:16:06 jhm 10/03/02 12:28:59 1354 LEM 10/22/01 15:21:01 jhm 10/03/02 13:54:31 1355 LEM 10/22/01 16:12:21 LEM 10/22/01 16:12:22 1356 LEM 10/22/01 16:15:16 LEM 10/22/01 16:15:25 1357 LEM 10/22/01 16:18:10 LEM 10/22/01 16:18:11 1358 LEM 10/22/01 16:20:43 LEM 10/22/01 16:20:44 1359 LEM 10/22/01 16:23:06 LEM 10/22/01 16:23:09 1360 LEM 10/23/01 09:42:13 LEM 10/23/01 09:42:16 1361 LEM 10/23/01 09:44:55 LEM 10/23/01 09:44:57 1362 LEM 10/23/01 09:48:04 LEM 10/23/01 09:48:07 1363 LEM 10/23/01 10:08:26 LEM 06/19/02 14:41:30 1364 LEM 10/23/01 10:25:20 LEM 10/28/02 12:53:18 1365 LEM 10/23/01 10:40:37 LEM 10/28/02 12:52:06 1366 LEM 10/23/01 10:55:55 jhm 04/25/02 10:01:38 1367 LEM 10/23/01 11:01:25 jhm 04/25/02 09:58:40 1368 LEM 10/23/01 11:02:38 jhm 04/25/02 10:02:19 1369 LEM 10/23/01 11:05:30 jhm 04/25/02 10:02:45 1370 LEM 10/23/01 11:06:44 jhm 04/25/02 10:01:29 1371 LEM 10/23/01 13:07:18 jhm 10/03/02 16:05:35 1372 LEM 10/23/01 13:18:34 LEM 10/23/01 13:18:38 1373 LEM 10/23/01 13:21:31 LEM 10/23/01 13:21:33 1374 LEM 10/23/01 13:23:01 LEM 10/23/01 13:23:03 1375 LEM 05/18/01 15:12:34 LEM 05/18/01 15:12:37 1376 LEM 10/23/01 13:24:50 LEM 10/23/01 13:24:52 1377 LEM 10/23/01 13:27:13 LEM 10/23/01 13:27:15 1378 LEM 10/23/01 14:54:36 LEM 11/05/02 10:00:10 1379 LEM 10/23/01 15:08:31 jhm 11/14/02 10:10:19 1380 LEM 10/23/01 15:47:08 LEM 11/04/02 11:14:07 1381 LEM 10/23/01 16:03:25 LEM 10/23/01 16:09:59 1382 LEM 10/23/01 16:20:17 jhm 10/18/02 10:34:23 1383 LEM 11/21/01 10:59:15 LEM 11/21/01 11:02:52 1384 LEM 11/21/01 13:54:40 jhm 11/12/02 09:09:35 1385 LEM 11/21/01 14:32:44 LEM 11/21/01 14:33:27 1386 LEM 11/21/01 14:35:16 LEM 11/21/01 14:35:53 1387 LEM 11/21/01 14:38:31 LEM 11/21/01 14:39:00 1388 LEM 11/21/01 14:40:22 jhm 10/08/02 09:51:11 1389 LEM 11/21/01 14:42:02 LEM 11/21/01 14:42:25 1390 LEM 11/21/01 14:43:20 LEM 11/21/01 14:44:01 1391 LEM 11/21/01 14:49:15 jhm 11/12/02 09:16:08 1392 LEM 11/26/01 12:09:26 LEM 11/26/01 12:10:10 1393 LEM 11/26/01 12:14:11 LEM 11/26/01 12:14:32 1394 LEM 11/26/01 12:17:05 LEM 11/26/01 12:17:30 1395 LEM 11/26/01 15:10:56 jhm 10/11/02 15:41:24 1396 LEM 11/26/01 15:17:43 LEM 11/06/02 10:08:09 1397 LEM 11/26/01 15:21:00 jhm 10/31/02 11:30:15 1398 LEM 11/26/01 15:52:07 LEM 11/06/02 09:53:57 1399 LEM 11/29/01 10:23:19 LEM 07/15/02 12:53:52 1400 LEM 11/29/01 10:31:03 LEM 11/06/02 09:50:40 1401 LEM 11/29/01 10:53:29 LEM 11/30/01 15:13:18 1402 LEM 11/29/01 11:14:36 LEM 08/08/02 11:13:47 1403 LEM 11/29/01 11:23:23 LEM 11/30/01 15:14:53 1404 LEM 11/29/01 11:25:56 jhm 10/31/02 11:50:13 1405 LEM 11/29/01 11:35:30 jhm 11/04/02 12:44:51 1406 LEM 11/29/01 12:15:09 LEM 10/11/02 15:53:13 1407 LEM 11/29/01 12:21:17 LEM 07/18/02 12:01:30 1408 LEM 11/29/01 12:32:23 LEM 07/18/02 12:56:58 1409 LEM 11/29/01 13:58:39 LEM 05/08/02 15:38:47 1410 LEM 11/29/01 14:04:02 LEM 07/18/02 13:03:59 1411 LEM 11/29/01 14:46:25 jhm 11/04/02 12:55:25 1412 LEM 11/29/01 14:49:23 jhm 11/04/02 12:51:12 1413 LEM 07/12/02 12:35:35 LEM 07/12/02 12:35:37 1414 LEM 07/12/02 12:49:39 LEM 07/12/02 12:49:41 1415 LEM 07/12/02 12:54:04 LEM 07/12/02 12:54:42 1416 LEM 07/12/02 12:59:07 LEM 07/12/02 12:59:08 1417 LEM 07/12/02 13:00:10 LEM 07/12/02 13:00:12 1418 LEM 07/12/02 13:00:55 LEM 07/12/02 13:00:56 1419 LEM 07/12/02 13:03:08 LEM 07/12/02 13:03:10 1420 LEM 06/18/01 15:19:35 jhm 10/03/02 11:40:12 1421 LEM 07/12/02 13:07:35 LEM 07/12/02 13:07:37 1422 LEM 07/12/02 13:18:59 jhm 10/31/02 11:01:21 1423 LEM 07/12/02 13:39:12 LEM 07/12/02 13:39:15 1424 LEM 05/21/01 12:08:08 LEM 05/21/01 12:08:11 1425 LEM 08/14/02 11:10:32 jhm 10/18/02 10:16:04 1426 LEM 08/14/02 11:56:37 LEM 08/14/02 12:28:20 1427 LEM 08/14/02 11:57:58 jhm 10/22/02 11:32:39 1428 LEM 08/14/02 12:01:02 jhm 10/22/02 11:31:04 1429 LEM 08/14/02 12:02:15 LEM 08/14/02 12:31:32 1430 LEM 08/14/02 12:05:27 LEM 10/11/02 15:26:23 1431 LEM 08/14/02 12:06:55 LEM 08/14/02 12:34:14 1432 LEM 08/14/02 12:08:57 LEM 08/14/02 12:34:38 1433 LEM 08/14/02 12:10:06 LEM 08/14/02 12:26:25 1434 LEM 08/14/02 12:12:08 LEM 08/14/02 12:35:17 1435 LEM 08/14/02 12:14:03 LEM 08/14/02 12:35:36 1436 LEM 08/14/02 12:24:57 LEM 08/14/02 12:25:55 1437 LEM 08/14/02 12:32:18 LEM 08/14/02 12:32:36 1438 LEM 08/14/02 14:59:58 LEM 08/14/02 15:00:33 1439 LEM 08/14/02 15:03:55 jhm 10/30/02 12:57:04 1440 LEM 08/14/02 15:05:52 LEM 08/14/02 15:06:19 1441 LEM 08/14/02 15:16:57 jhm 10/22/02 11:45:14 1442 LEM 08/14/02 15:21:51 jhm 10/22/02 11:40:56 1443 LEM 08/15/02 12:26:07 LEM 10/07/02 14:52:13 1444 LEM 08/20/02 13:37:34 LEM 11/11/02 11:32:28 1445 LEM 08/20/02 13:49:33 jhm 10/08/02 12:20:05 1446 LEM 08/20/02 14:32:18 LEM 08/20/02 14:32:20 1447 LEM 08/20/02 14:33:38 LEM 08/20/02 14:33:40 1448 LEM 08/20/02 14:35:17 LEM 08/20/02 14:35:19 1449 LEM 08/20/02 14:36:07 LEM 08/20/02 14:36:10 1450 LEM 08/20/02 15:18:21 LEM 08/20/02 15:18:22 1451 LEM 08/20/02 15:19:38 LEM 08/20/02 15:19:40 1452 LEM 08/20/02 15:22:02 LEM 08/20/02 15:22:04 1453 LEM 08/20/02 15:23:22 LEM 08/20/02 15:23:24 1454 LEM 08/20/02 15:25:19 LEM 08/20/02 15:25:21 1455 LEM 08/20/02 15:26:33 LEM 08/20/02 15:26:35 1456 LEM 08/20/02 15:28:23 LEM 08/20/02 15:28:24 1457 LEM 08/20/02 15:29:24 LEM 08/20/02 15:29:26 1458 LEM 08/20/02 15:30:41 LEM 08/20/02 15:30:43 1459 LEM 08/20/02 15:32:31 LEM 08/20/02 15:32:32 1460 LEM 08/20/02 15:35:03 LEM 08/20/02 15:35:05 1461 LEM 08/20/02 15:38:29 LEM 08/20/02 15:38:30 1462 LEM 08/20/02 15:40:02 LEM 08/20/02 15:40:04 1463 LEM 08/20/02 15:41:33 LEM 08/20/02 15:41:35 1464 LEM 08/20/02 15:42:41 LEM 08/20/02 15:42:42 1465 LEM 08/20/02 15:47:27 LEM 08/20/02 15:47:29 1466 LEM 08/20/02 15:48:33 LEM 08/20/02 15:48:35 1467 LEM 08/20/02 15:49:21 LEM 08/20/02 15:49:23 1468 LEM 08/20/02 15:50:57 LEM 08/20/02 15:51:00 1469 LEM 08/20/02 15:52:53 LEM 08/20/02 15:52:54 1470 LEM 08/20/02 15:57:46 LEM 08/20/02 15:57:47 1471 LEM 08/20/02 15:58:44 LEM 08/20/02 15:58:45 1472 LEM 08/20/02 16:00:02 LEM 08/20/02 16:00:03 1473 LEM 08/20/02 16:00:59 LEM 08/20/02 16:01:00 1474 LEM 08/20/02 16:02:48 LEM 08/20/02 16:02:49 1475 LEM 08/20/02 16:03:42 LEM 08/20/02 16:03:43 1476 LEM 08/20/02 16:05:10 LEM 08/20/02 16:05:12 1477 LEM 08/20/02 16:06:10 LEM 08/20/02 16:06:11 1478 LEM 08/20/02 16:07:59 LEM 08/20/02 16:08:00 1479 LEM 08/20/02 16:09:04 LEM 08/20/02 16:09:06 1480 LEM 08/20/02 16:10:51 LEM 08/20/02 16:10:53 1481 LEM 08/20/02 16:11:52 LEM 08/20/02 16:11:53 1482 LEM 08/20/02 16:13:13 LEM 08/20/02 16:13:15 1483 LEM 08/20/02 16:14:07 LEM 08/20/02 16:14:09 1484 LEM 08/20/02 16:15:24 LEM 08/20/02 16:15:26 1485 LEM 08/20/02 16:16:20 LEM 08/20/02 16:16:21 1486 LEM 08/20/02 16:19:27 LEM 08/20/02 16:19:28 1487 LEM 08/20/02 16:20:32 LEM 08/20/02 16:20:33 1488 LEM 08/20/02 16:23:17 LEM 08/20/02 16:23:18 1489 LEM 08/20/02 16:26:00 LEM 08/20/02 16:26:01 1490 LEM 08/20/02 16:29:40 LEM 08/20/02 16:29:41 1491 LEM 11/29/01 14:52:35 LEM 07/18/02 13:06:00 1492 LEM 11/29/01 14:56:02 LEM 07/18/02 09:52:42 1493 LEM 11/29/01 15:30:35 LEM 11/06/02 09:47:59 1494 LEM 11/30/01 10:07:48 jhm 10/11/02 16:04:35 1495 LEM 11/30/01 10:28:16 LEM 07/23/02 16:11:28 1496 LEM 11/30/01 10:38:45 LEM 11/30/01 10:38:47 1497 LEM 11/30/01 10:54:25 LEM 11/06/02 09:43:18 1498 LEM 11/30/01 11:45:51 LEM 07/23/02 15:40:44 1499 LEM 11/30/01 12:14:06 LEM 07/23/02 15:23:37 1500 LEM 11/30/01 12:38:18 LEM 11/30/01 15:30:31 1501 LEM 11/30/01 12:40:32 LEM 11/05/02 16:22:17 1502 LEM 11/30/01 12:41:15 LEM 11/30/01 12:41:17 1503 LEM 11/30/01 14:57:08 LEM 07/19/02 12:53:42 1504 LEM 11/30/01 15:06:47 LEM 07/23/02 15:53:33 1505 LEM 12/03/01 09:31:08 LEM 12/03/01 09:36:59 1506 LEM 12/03/01 09:45:32 LEM 12/03/01 09:45:34 1507 LEM 12/03/01 09:46:33 LEM 12/03/01 09:46:35 1508 LEM 12/03/01 10:15:02 LEM 11/05/02 16:11:13 1509 LEM 12/03/01 10:33:11 LEM 12/03/01 10:33:42 1510 LEM 12/03/01 10:47:21 LEM 12/03/01 10:48:39 1511 LEM 12/03/01 10:49:19 LEM 12/03/01 10:49:36 1512 LEM 12/03/01 10:56:24 LEM 12/03/01 10:56:37 1513 LEM 12/03/01 11:53:07 LEM 11/07/02 14:41:34 1514 LEM 12/03/01 11:59:28 LEM 11/07/02 14:37:56 1515 LEM 12/03/01 12:43:04 LEM 11/05/02 16:03:59 1516 LEM 12/03/01 12:45:44 LEM 11/05/02 16:08:00 1517 LEM 12/03/01 12:50:09 LEM 12/03/01 12:50:35 1518 LEM 12/03/01 12:52:00 LEM 12/03/01 12:52:12 1519 LEM 12/03/01 12:54:27 LEM 12/03/01 12:54:36 1520 LEM 12/12/01 12:24:39 LEM 12/12/01 12:24:44 1521 LEM 01/09/02 09:48:03 LEM 07/09/02 17:22:54 1522 LEM 01/09/02 09:54:33 LEM 07/09/02 17:26:49 1523 LEM 01/09/02 09:56:29 LEM 07/09/02 17:31:00 1524 LEM 01/09/02 10:00:10 LEM 07/09/02 17:27:31 1525 LEM 01/09/02 10:15:56 LEM 11/06/02 14:21:21 1526 LEM 01/09/02 10:18:14 LEM 11/06/02 14:20:43 1527 LEM 01/09/02 10:21:42 LEM 11/06/02 14:21:57 1528 LEM 01/09/02 10:23:20 LEM 11/06/02 14:25:18 1529 LEM 01/09/02 10:37:40 LEM 07/09/02 17:42:32 1530 LEM 01/09/02 11:44:45 LEM 07/09/02 17:52:21 1531 LEM 01/09/02 11:57:36 LEM 07/09/02 17:55:52 1532 LEM 01/09/02 12:00:55 LEM 07/09/02 17:57:03 1533 LEM 01/09/02 12:20:14 LEM 07/04/02 17:29:57 1534 LEM 01/09/02 12:21:30 LEM 11/05/02 15:47:30 1535 LEM 01/09/02 12:28:34 LEM 11/05/02 15:49:50 1536 LEM 01/09/02 12:53:18 LEM 01/09/02 13:19:25 1537 LEM 01/09/02 12:54:52 LEM 01/09/02 13:19:57 1538 LEM 01/09/02 12:56:39 LEM 01/09/02 13:20:14 [ reached &#39;max&#39; / getOption(&quot;max.print&quot;) -- omitted 1673 rows ] Many databases have multiple tables with keys that connect information in each table. We’ll spend more time on databases later in the semester - for now, it’s enough to be able to get data out of one. Unfortunately, it appears that SAS on Linux doesn’t allow you to read in Access files. So I can’t demonstrate that for you. But, since you know how to do it in R, worst case you can open up R and export all of the tables to separate CSV files, then read those into SAS. emo::ji(&quot;sad&quot;) 4.5.2 SQLite SQLite databases are contained in single files with the extension .SQLite. These files can still contain many different tables, though. Let’s try working with a sqlite file that has only one table: if (!&quot;RSQLite&quot; %in% installed.packages()) install.packages(&quot;RSQLite&quot;) if (!&quot;DBI&quot; %in% installed.packages()) install.packages(&quot;DBI&quot;) library(RSQLite) library(DBI) con &lt;- dbConnect(RSQLite::SQLite(), &quot;data/ssa-babynames-for-2015.sqlite&quot;) dbListTables(con) # List all the tables [1] &quot;babynames&quot; babyname &lt;- dbReadTable(con, &quot;babynames&quot;) head(babyname, 10) # show the first 10 obs state year name sex count rank_within_sex per_100k_within_sex 1 AK 2015 Olivia F 56 1 2367.9 2 AK 2015 Liam M 53 1 1590.6 3 AK 2015 Emma F 49 2 2071.9 4 AK 2015 Noah M 46 2 1380.6 5 AK 2015 Aurora F 46 3 1945.0 6 AK 2015 James M 45 3 1350.5 7 AK 2015 Amelia F 39 4 1649.0 8 AK 2015 Ava F 39 4 1649.0 9 AK 2015 William M 44 4 1320.5 10 AK 2015 Oliver M 41 5 1230.5 You can of course write formal queries using the DBI package, but for many databases, it’s easier to do the querying in R. We’ll cover both options later - the R version will be in the next module. In SAS, you can theoretically connect to SQLite databases, but there are very specific instructions for how to do that for each operating system. You’ll need to acquire the SQLite ODBC Driver for your operating system. You may also need to set up a DSN (Data Source Name) (Windows, Mac and Linux).18 Here is my .odbc.ini file as I’ve configured it for my Ubuntu 18.04 machine. A similar file should work for any Mac or Linux machine. In windows, you’ll need to use the ODBC Data Source Administrator to set this up. [babyname] Description = 2015 SSA baby names Driver = SQLite3 Database = data/ssa-babynames-for-2015.sqlite /* This code requires that I&#39;ve set up a DSN connecting the sqlite file to */ /* a specific driver on my computer. You&#39;ll have to set up your machine to */ /* have a configuration that is appropriate for your setup */ libname mydata odbc complete = &quot;dsn=babyname; Database=data/ssa-babynames-for-2015.sqlite&quot;; proc print data=mydata.babynames (obs=10); run; Obs state year name sex count rank_within_sex per_100k_within_sex 1 AK 2015 Olivia F 56 1 2367.9 2 AK 2015 Liam M 53 1 1590.6 3 AK 2015 Emma F 49 2 2071.9 4 AK 2015 Noah M 46 2 1380.6 5 AK 2015 Aurora F 46 3 1945.0 6 AK 2015 James M 45 3 1350.5 7 AK 2015 Amelia F 39 4 1649.0 8 AK 2015 Ava F 39 4 1649.0 9 AK 2015 William M 44 4 1320.5 10 AK 2015 Oliver M 41 5 1230.5 4.6 Exploratory Data Analysis tables summary statistics basic plots? unique values Once your data has been read in, we can do some basic exploratory data analysis. EDA is important because it helps us to know what challenges a particular data set might bring. Real data is often messy, with large amounts of cleaning that must be done before statistical analysis can commence. While in many classes you’ll be given cleaner data, you do need to know how to clean your own data up so that you can use more interesting datasets for projects (and for fun!). The EDA chapter in R for Data Science is very good at explaining what the goals of EDA are, and what types of questions you will typically need to answer in EDA. It is so good that I am not going to try to completely reproduce it here. Both R and SAS make it relatively easy to get summary statistics from a dataset, but the “flow” of EDA is somewhat different between the two programs, so this section will cover SAS first, and then R. 4.6.1 SAS Proc Freq generates frequency tables for variables or interactions of variables. This can help you to see whether there is missing information. Using those frequency tables, you can create frequency plots and set up chi squared tests. libname classdat &quot;sas/&quot;; ODS GRAPHICS ON; PROC FREQ DATA=classdat.poke ORDER=FORMATTED; TABLES generation / CHISQ PLOTS=freqplot(type=dotplot); RUN; PROC FREQ DATA=classdat.poke ORDER=FREQ; TABLES type_1 status / MAXLEVELS=10 PLOTS=freqplot(type=dotplot scale=percent); RUN; ODS GRAPHICS OFF; generation Frequency Percent Cumulative Frequency Cumulative Percent 1 192 18.68 192 18.68 2 107 10.41 299 29.09 3 165 16.05 464 45.14 4 121 11.77 585 56.91 5 171 16.63 756 73.54 6 85 8.27 841 81.81 7 99 9.63 940 91.44 8 88 8.56 1028 100.00 Chi-Square Testfor Equal Proportions Chi-Square 94.1012 DF 7 Pr &gt; ChiSq &lt;.0001 Sample Size = 1028 type_1 Frequency Percent Cumulative Frequency Cumulative Percent Water 134 13.04 134 13.04 Normal 115 11.19 249 24.22 Grass 91 8.85 340 33.07 Bug 81 7.88 421 40.95 Psychic 76 7.39 497 48.35 Fire 65 6.32 562 54.67 Electric 61 5.93 623 60.60 Rock 60 5.84 683 66.44 Dark 44 4.28 727 70.72 Ghost 41 3.99 768 74.71 The first 10 levels are displayed. status Frequency Percent Cumulative Frequency Cumulative Percent Normal 915 89.01 915 89.01 Sub Legendary 45 4.38 960 93.39 Legendary 39 3.79 999 97.18 Mythical 29 2.82 1028 100.00 Proc Means can be used to get more useful summary statistics for numeric variables. Note that the Class statement identifies a categorical variable; the summary statistics are computed for each level of this variable. libname classdat &quot;sas/&quot;; PROC MEANS DATA = classdat.poke; run; proc means data = classdat.poke; class status; run; Variable N Mean Std Dev Minimum Maximum pokedex_number generation type_number height_m weight_kg abilities_number total_points hp attack defense sp_attack sp_defense speed catch_rate base_friendship base_experience egg_type_number percentage_male egg_cycles against_normal against_fire against_water against_electric against_grass against_ice against_fight against_poison against_ground against_flying against_psychic against_bug against_rock against_ghost against_dragon against_dark against_steel against_fairy 1028 1028 1028 1028 1027 1028 1028 1028 1028 1028 1028 1028 1028 924 924 924 1028 792 1027 1028 1028 1028 1028 1028 1028 1028 1028 1028 1028 1028 1028 1028 1028 1028 1028 1028 1028 437.7110895 4.0340467 1.5272374 1.3680934 69.7537488 2.2840467 437.5719844 69.5778210 80.1196498 74.4756809 72.7324903 72.1322957 68.5340467 93.1720779 64.1396104 153.8149351 1.2714008 55.0031566 30.3164557 0.8684339 1.1254864 1.0535019 1.0342899 1.0041342 1.1964981 1.0787938 0.9523346 1.0846304 1.1663424 0.9793288 0.9924611 1.2397860 1.0107004 0.9756809 1.0656615 0.9803016 1.0848735 259.3664801 2.2349373 0.4995006 3.3801260 129.2212303 0.7949808 121.6649096 26.3858489 32.3723210 31.3033092 32.6776984 28.0836837 29.8021030 75.2406298 21.4554640 79.2706279 0.4514169 20.1826753 28.9429120 0.2862360 0.7177417 0.6134110 0.6451669 0.7485266 0.7594711 0.7549691 0.5429816 0.7849374 0.5930303 0.4991456 0.5983010 0.6991564 0.5585333 0.3775491 0.4510540 0.5034338 0.5277428 1.0000000 1.0000000 1.0000000 0.1000000 0.1000000 0 175.0000000 1.0000000 5.0000000 5.0000000 10.0000000 20.0000000 5.0000000 3.0000000 0 36.0000000 0 0 5.0000000 0 0 0 0 0 0 0 0 0 0.2500000 0 0 0.2500000 0 0 0.2500000 0 0 890.0000000 8.0000000 2.0000000 100.0000000 999.9000000 3.0000000 1125.00 255.0000000 190.0000000 250.0000000 194.0000000 250.0000000 180.0000000 255.0000000 140.0000000 608.0000000 2.0000000 100.0000000 120.0000000 1.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 2.0000000 4.0000000 4.0000000 4.0000000 status N Obs Variable N Mean Std Dev Minimum Maximum Legendary 39 pokedex_number generation type_number height_m weight_kg abilities_number total_points hp attack defense sp_attack sp_defense speed catch_rate base_friendship base_experience egg_type_number percentage_male egg_cycles against_normal against_fire against_water against_electric against_grass against_ice against_fight against_poison against_ground against_flying against_psychic against_bug against_rock against_ghost against_dragon against_dark against_steel against_fairy 39 39 39 39 38 39 39 39 39 39 39 39 39 33 33 33 39 0 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 607.5897436 5.1282051 1.7179487 6.8948718 381.3868421 1.1794872 679.5641026 111.4358974 125.7435897 108.2051282 122.5384615 110.6153846 101.0256410 19.6666667 0 296.0909091 1.0000000 . 120.0000000 0.8333333 0.8461538 0.8269231 0.8397436 0.7756410 1.4871795 0.8269231 0.7820513 1.0897436 0.9871795 0.8717949 0.9294872 1.1089744 1.3974359 1.2948718 1.3076923 0.9871795 1.3461538 233.4817380 2.2026239 0.4558808 15.6674814 278.4542528 0.4514185 127.1772064 37.7824764 34.7931617 32.4379403 39.1514241 32.9182523 24.7795408 45.6526743 0 60.2605611 0 . 0 0.3311331 0.4574507 0.3938418 0.5691845 0.4652209 1.0032000 0.5594695 0.4558808 0.6269369 0.2921603 0.4363115 0.5063697 0.6996119 0.6803587 0.6561245 0.7310355 0.4514185 0.5753014 150.0000000 1.0000000 1.0000000 0.1000000 0.1000000 0 200.0000000 43.0000000 29.0000000 31.0000000 29.0000000 31.0000000 37.0000000 3.0000000 0 40.0000000 1.0000000 . 120.0000000 0 0 0 0 0.2500000 0.5000000 0 0 0 0.5000000 0 0.2500000 0.2500000 0.5000000 0 0.5000000 0.5000000 0.5000000 890.0000000 8.0000000 2.0000000 100.0000000 999.9000000 2.0000000 1125.00 255.0000000 190.0000000 250.0000000 194.0000000 250.0000000 148.0000000 255.0000000 0 351.0000000 1.0000000 . 120.0000000 1.0000000 2.0000000 2.0000000 2.0000000 2.0000000 4.0000000 2.0000000 2.0000000 2.0000000 2.0000000 2.0000000 2.0000000 4.0000000 4.0000000 2.0000000 4.0000000 2.0000000 2.0000000 Mythical 29 pokedex_number generation type_number height_m weight_kg abilities_number total_points hp attack defense sp_attack sp_defense speed catch_rate base_friendship base_experience egg_type_number percentage_male egg_cycles against_normal against_fire against_water against_electric against_grass against_ice against_fight against_poison against_ground against_flying against_psychic against_bug against_rock against_ghost against_dragon against_dark against_steel against_fairy 29 29 29 29 29 29 29 29 29 29 29 29 29 27 27 27 29 0 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 573.6896552 4.7241379 1.5517241 1.2551724 86.8241379 1.0000000 594.4827586 82.8275862 108.1724138 93.2758621 113.7931034 95.1724138 101.2413793 10.2222222 53.7037037 272.3333333 1.0689655 . 104.1379310 0.8103448 1.1982759 0.9482759 1.1034483 1.0344828 0.9741379 0.9655172 0.8965517 1.2413793 1.1206897 0.8189655 1.2758621 0.9655172 1.2931034 0.8275862 1.2931034 1.0086207 1.0862069 180.2022878 1.6234124 0.5061202 1.2477369 173.2970626 0 69.4666522 23.2502979 28.8754332 29.3937512 30.1524452 30.2738324 33.7180062 15.6606644 45.6490078 18.7780559 0.2578807 . 34.0448487 0.3109258 0.7831350 0.4500958 0.4701692 0.5619010 0.7081945 0.5658596 0.5408213 0.5609413 0.5453566 0.5625855 0.9850327 0.4211174 0.8185052 0.3347670 0.7850983 0.8672688 0.5187376 151.0000000 1.0000000 1.0000000 0.2000000 1.1000000 1.0000000 300.0000000 46.0000000 65.0000000 20.0000000 55.0000000 20.0000000 34.0000000 3.0000000 0 216.0000000 1.0000000 . 10.0000000 0 0.2500000 0 0 0.2500000 0.2500000 0 0 0 0.5000000 0 0.2500000 0.5000000 0 0 0.5000000 0.2500000 0.5000000 809.0000000 7.0000000 2.0000000 6.5000000 800.0000000 1.0000000 720.0000000 135.0000000 180.0000000 160.0000000 180.0000000 160.0000000 180.0000000 45.0000000 100.0000000 324.0000000 2.0000000 . 120.0000000 1.0000000 4.0000000 2.0000000 2.0000000 2.0000000 4.0000000 2.0000000 2.0000000 2.0000000 2.0000000 2.0000000 4.0000000 2.0000000 4.0000000 1.0000000 4.0000000 4.0000000 2.0000000 Normal 915 pokedex_number generation type_number height_m weight_kg abilities_number total_points hp attack defense sp_attack sp_defense speed catch_rate base_friendship base_experience egg_type_number percentage_male egg_cycles against_normal against_fire against_water against_electric against_grass against_ice against_fight against_poison against_ground against_flying against_psychic against_bug against_rock against_ghost against_dragon against_dark against_steel against_fairy 915 915 915 915 915 915 915 915 915 915 915 915 915 819 819 819 915 780 914 915 915 915 915 915 915 915 915 915 915 915 915 915 915 915 915 915 915 419.2950820 3.9256831 1.5136612 1.1003279 51.7150820 2.4163934 415.2098361 66.5049180 76.1836066 71.3431694 67.7224044 68.5180328 64.9377049 103.2954823 67.8815629 138.4041514 1.3027322 54.7596154 20.9682713 0.8715847 1.1368852 1.0642077 1.0442623 1.0237705 1.1852459 1.0961749 0.9625683 1.0836066 1.1795082 0.9890710 0.9904372 1.2540984 0.9786885 0.9666667 1.0464481 0.9784153 1.0715847 258.7784896 2.2421627 0.5000867 1.0339266 86.0836478 0.7264570 104.5766798 23.8902654 30.1980544 29.6655361 28.8544505 25.3129310 28.0347832 73.3318186 12.4159527 69.0416340 0.4667772 19.5212658 6.2765825 0.2850893 0.7234866 0.6276282 0.6566295 0.7715152 0.7437106 0.7642960 0.5377240 0.7764160 0.5887608 0.4983734 0.5840034 0.7018046 0.5352298 0.3480696 0.4136629 0.4913210 0.5166126 1.0000000 1.0000000 1.0000000 0.1000000 0.1000000 1.0000000 175.0000000 1.0000000 5.0000000 5.0000000 10.0000000 20.0000000 5.0000000 3.0000000 0 36.0000000 0 0 5.0000000 0 0 0 0 0 0 0 0 0 0.2500000 0 0 0.2500000 0 0 0.2500000 0 0 887.0000000 8.0000000 2.0000000 14.5000000 942.9000000 3.0000000 700.0000000 255.0000000 185.0000000 230.0000000 175.0000000 230.0000000 160.0000000 255.0000000 140.0000000 608.0000000 2.0000000 100.0000000 40.0000000 1.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 2.0000000 2.0000000 2.0000000 4.0000000 4.0000000 Sub Legendary 45 pokedex_number generation type_number height_m weight_kg abilities_number total_points hp attack defense sp_attack sp_defense speed catch_rate base_friendship base_experience egg_type_number percentage_male egg_cycles against_normal against_fire against_water against_electric against_grass against_ice against_fight against_poison against_ground against_flying against_psychic against_bug against_rock against_ghost against_dragon against_dark against_steel against_fairy 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 12 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 577.3111111 4.8444444 1.6222222 2.0955556 162.3822222 1.3777778 581.4222222 87.2444444 102.5333333 96.8222222 104.9777778 97.4222222 92.4222222 12.6000000 49.3333333 258.8444444 1.0000000 70.8333333 94.8888889 0.8722222 1.0888889 1.1000000 0.9555556 0.7833333 1.3166667 1.0166667 0.9277778 1.0000000 1.0833333 0.9777778 0.9055556 1.2388889 1.1444444 0.9777778 1.1000000 0.9944444 1.1277778 215.8664173 1.9994949 0.4903101 1.5385878 226.9741698 0.4903101 39.8648221 25.1632448 27.2335021 34.2943733 28.8361270 31.4870023 25.6342180 17.3118457 43.8437308 29.0915136 0 45.0168319 34.3195030 0.2535107 0.7094243 0.5287206 0.5416958 0.4695259 0.8125437 0.7876894 0.6921274 1.1381804 0.8393721 0.5107432 0.6060511 0.7574545 0.5289593 0.5107432 0.4954337 0.4956885 0.6584724 144.0000000 1.0000000 1.0000000 0.3000000 0.1000000 1.0000000 420.0000000 53.0000000 50.0000000 37.0000000 50.0000000 31.0000000 13.0000000 3.0000000 0 107.0000000 1.0000000 0 10.0000000 0 0 0.5000000 0 0.2500000 0.2500000 0 0 0 0.2500000 0 0.2500000 0.2500000 0 0 0.5000000 0.2500000 0.2500000 806.0000000 7.0000000 2.0000000 9.2000000 999.9000000 2.0000000 700.0000000 223.0000000 181.0000000 211.0000000 173.0000000 200.0000000 151.0000000 45.0000000 140.0000000 315.0000000 1.0000000 100.0000000 120.0000000 1.0000000 4.0000000 2.0000000 2.0000000 2.0000000 4.0000000 4.0000000 4.0000000 4.0000000 4.0000000 2.0000000 2.0000000 4.0000000 2.0000000 2.0000000 2.0000000 2.0000000 4.0000000 For even higher levels of detail, Proc Univariate will provide variability, tests for location, quantiles, skewness, and will identify the extreme observations for you. You can also get histograms for variables, even specifying distributions you’d like to be fit to the data (if that’s something you want). libname classdat &quot;sas/&quot;; ODS GRAPHICS ON; PROC UNIVARIATE DATA = classdat.poke; VAR attack defense sp_attack sp_defense speed; HISTOGRAM attack defense sp_attack sp_defense speed; RUN; ODS GRAPHICS OFF; Variable: attack Moments N 1028 Sum Weights 1028 Mean 80.1196498 Sum Observations 82363 Std Deviation 32.372321 Variance 1047.96717 Skewness 0.4954672 Kurtosis 0.04128599 Uncorrected SS 7675157 Corrected SS 1076262.28 Coeff Variation 40.4049707 Std Error Mean 1.00966495 Basic Statistical Measures Location Variability Mean 80.1196 Std Deviation 32.37232 Median 76.0000 Variance 1048 Mode 100.0000 Range 185.00000 Interquartile Range 45.00000 Tests for Location: Mu0=0 Test Statistic p Value Student's t t 79.35271 Pr &gt; |t| &lt;.0001 Sign M 514 Pr &gt;= |M| &lt;.0001 Signed Rank S 264453 Pr &gt;= |S| &lt;.0001 Quantiles (Definition 5) Level Quantile 100% Max 190 99% 165 95% 137 90% 125 75% Q3 100 50% Median 76 25% Q1 55 10% 40 5% 30 1% 20 0% Min 5 Extreme Observations Lowest Highest Value Obs Value Obs 5 521 180 459 5 146 180 462 10 289 181 926 10 257 185 259 10 165 190 190 Variable: defense Moments N 1028 Sum Weights 1028 Mean 74.4756809 Sum Observations 76561 Std Deviation 31.3033092 Variance 979.897168 Skewness 1.18859927 Kurtosis 3.02873186 Uncorrected SS 6708287 Corrected SS 1006354.39 Coeff Variation 42.0315851 Std Error Mean 0.97632339 Basic Statistical Measures Location Variability Mean 74.47568 Std Deviation 31.30331 Median 70.00000 Variance 979.89717 Mode 70.00000 Range 245.00000 Interquartile Range 40.00000 Tests for Location: Mu0=0 Test Statistic p Value Student's t t 76.28177 Pr &gt; |t| &lt;.0001 Sign M 514 Pr &gt;= |M| &lt;.0001 Signed Rank S 264453 Pr &gt;= |S| &lt;.0001 Quantiles (Definition 5) Level Quantile 100% Max 250 99% 180 95% 130 90% 115 75% Q3 90 50% Median 70 25% Q1 50 10% 40 5% 35 1% 20 0% Min 5 Extreme Observations Lowest Highest Value Obs Value Obs 5 521 211 936 5 146 230 251 10 289 230 257 15 285 230 363 15 215 250 1028 Variable: sp_attack Moments N 1028 Sum Weights 1028 Mean 72.7324903 Sum Observations 74769 Std Deviation 32.6776984 Variance 1067.83197 Skewness 0.73105741 Kurtosis 0.23641395 Uncorrected SS 6534799 Corrected SS 1096663.43 Coeff Variation 44.928612 Std Error Mean 1.01918941 Basic Statistical Measures Location Variability Mean 72.73249 Std Deviation 32.67770 Median 65.00000 Variance 1068 Mode 40.00000 Range 184.00000 Interquartile Range 45.00000 Tests for Location: Mu0=0 Test Statistic p Value Student's t t 71.36307 Pr &gt; |t| &lt;.0001 Sign M 514 Pr &gt;= |M| &lt;.0001 Signed Rank S 264453 Pr &gt;= |S| &lt;.0001 Quantiles (Definition 5) Level Quantile 100% Max 194 99% 165 95% 135 90% 120 75% Q3 95 50% Median 65 25% Q1 50 10% 35 5% 30 1% 20 0% Min 10 Extreme Observations Lowest Highest Value Obs Value Obs 10 519 175 85 10 411 180 455 10 257 180 459 10 38 180 462 15 649 194 191 Variable: sp_defense Moments N 1028 Sum Weights 1028 Mean 72.1322957 Sum Observations 74152 Std Deviation 28.0836837 Variance 788.693289 Skewness 0.95486787 Kurtosis 2.48388443 Uncorrected SS 6158742 Corrected SS 809988.008 Coeff Variation 38.9335781 Std Error Mean 0.87590603 Basic Statistical Measures Location Variability Mean 72.13230 Std Deviation 28.08368 Median 70.00000 Variance 788.69329 Mode 50.00000 Range 230.00000 Interquartile Range 40.00000 Tests for Location: Mu0=0 Test Statistic p Value Student's t t 82.35164 Pr &gt; |t| &lt;.0001 Sign M 514 Pr &gt;= |M| &lt;.0001 Signed Rank S 264453 Pr &gt;= |S| &lt;.0001 Quantiles (Definition 5) Level Quantile 100% Max 250 99% 150 95% 120 90% 107 75% Q3 90 50% Median 70 25% Q1 50 10% 40 5% 33 1% 25 0% Min 20 Extreme Observations Lowest Highest Value Obs Value Obs 20 1006 160 455 20 462 160 463 20 377 200 448 20 215 230 257 20 165 250 1028 Variable: speed Moments N 1028 Sum Weights 1028 Mean 68.5340467 Sum Observations 70453 Std Deviation 29.802103 Variance 888.165344 Skewness 0.38189525 Kurtosis -0.2879875 Uncorrected SS 5740575 Corrected SS 912145.808 Coeff Variation 43.4851062 Std Error Mean 0.92950205 Basic Statistical Measures Location Variability Mean 68.53405 Std Deviation 29.80210 Median 65.00000 Variance 888.16534 Mode 50.00000 Range 175.00000 Interquartile Range 45.00000 Tests for Location: Mu0=0 Test Statistic p Value Student's t t 73.732 Pr &gt; |t| &lt;.0001 Sign M 514 Pr &gt;= |M| &lt;.0001 Signed Rank S 264453 Pr &gt;= |S| &lt;.0001 Quantiles (Definition 5) Level Quantile 100% Max 180 99% 145 95% 120 90% 109 75% Q3 90 50% Median 65 25% Q1 45 10% 30 5% 25 1% 15 0% Min 5 Extreme Observations Lowest Highest Value Obs Value Obs 5 898 150 461 5 528 150 462 5 257 151 923 10 960 160 345 10 696 180 464 Proc Corr allows you to examine the relationship between two quantitative variables. libname classdat &quot;sas/&quot;; ODS GRAPHICS ON; PROC CORR DATA = classdat.poke PLOTS( MAXPOINTS=200000)=MATRIX(HISTOGRAM); VAR attack defense sp_attack sp_defense speed ; RUN; ODS GRAPHICS OFF; 5 Variables: attack defense sp_attack sp_defense speed Simple Statistics Variable N Mean Std Dev Sum Minimum Maximum attack 1028 80.11965 32.37232 82363 5.00000 190.00000 defense 1028 74.47568 31.30331 76561 5.00000 250.00000 sp_attack 1028 72.73249 32.67770 74769 10.00000 194.00000 sp_defense 1028 72.13230 28.08368 74152 20.00000 250.00000 speed 1028 68.53405 29.80210 70453 5.00000 180.00000 Pearson Correlation Coefficients, N = 1028 Prob &gt; |r| under H0: Rho=0 attack defense sp_attack sp_defense speed attack 1.00000 0.45077 &lt;.0001 0.37621 &lt;.0001 0.26426 &lt;.0001 0.38104 &lt;.0001 defense 0.45077 &lt;.0001 1.00000 0.22606 &lt;.0001 0.54251 &lt;.0001 0.00934 0.7649 sp_attack 0.37621 &lt;.0001 0.22606 &lt;.0001 1.00000 0.51154 &lt;.0001 0.44297 &lt;.0001 sp_defense 0.26426 &lt;.0001 0.54251 &lt;.0001 0.51154 &lt;.0001 1.00000 0.23366 &lt;.0001 speed 0.38104 &lt;.0001 0.00934 0.7649 0.44297 &lt;.0001 0.23366 &lt;.0001 1.00000 The plot here is called a scatterplot matrix. It contains histograms on the diagonal, and pairwise scatterplots on off-diagonals. It can be useful for spotting strong correlations among multiple variables which may affect the way you build a model. Try it out One of the datasets we read in above records incidents of police violence around the country. Explore the variables present in this dataset (see code in the spreadsheets section to read it in). Note that some variables may be too messy to handle with the things that you have seen thus far - that is ok. As you find irregularities, document them - these are things you may need to clean up in the dataset before you conduct a formal analysis. It is useful to memorize the SAS PROC options you use most frequently, but it’s also a good idea to reference the SAS documentation - it provides a list of all viable options for each procedure, and generally has decent examples to show how those options are used. libname classdat &quot;sas/&quot;; ODS GRAPHICS ON; PROC CONTENTS DATA = classdat.police; /* see what&#39;s in the dataset */ RUN; PROC FREQ DATA = classdat.police ORDER=FREQ; /* Examine Freq of common vars */ TABLES Victim_s_gender Victim_s_race State Cause_of_death Unarmed Geography__via_Trulia_methodolog / MAXLEVELS = 10; RUN; PROC FREQ DATA = classdat.police ORDER=FREQ; /* Combinations of vars */ TABLES Unarmed * Criminal_Charges_ / NOCUM NOPERCENT NOCOL NOROW MAXLEVELS=10; RUN; PROC MEANS DATA = classdat.police; /* Numeric variable exploration */ VAR num_age; /* Only numeric variable in this set */ RUN; PROC UNIVARIATE DATA = classdat.police; /* Investigating age/date info */ HISTOGRAM num_age date; RUN; ODS GRAPHICS OFF; Data Set Name CLASSDAT.POLICE Observations 7663 Member Type DATA Variables 25 Engine V9 Indexes 0 Created 06/24/2020 17:51:56 Observation Length 896 Last Modified 06/24/2020 17:51:56 Deleted Observations 0 Protection Compressed NO Data Set Type Sorted NO Label Data Representation SOLARIS_X86_64, LINUX_X86_64, ALPHA_TRU64, LINUX_IA64 Encoding latin1 Western (ISO) Engine/Host Dependent Information Data Set Page Size 73728 Number of Data Set Pages 94 First Data Page 1 Max Obs per Page 82 Obs in First Data Page 75 Number of Data Set Repairs 0 Filename /home/susan/Projects/Class/unl-stat850/stat850-textbook/sas/police.sas7bdat Release Created 9.0401M6 Host Created Linux Inode Number 39067216 Access Permission rw-rw-r– Owner Name susan File Size 7MB File Size (bytes) 7004160 Alphabetic List of Variables and Attributes # Variable Type Len Format Informat Label 10 Agency_responsible_for_death Char 177 $177. $177. Agency responsible for death 17 Alleged_Threat_Level__Source__Wa Char 12 $12. $12. Alleged Threat Level (Source: WaPo) 11 Cause_of_death Char 39 $39. $39. Cause of death 6 City Char 29 $29. $29. City 9 County Char 80 $80. $80. County 13 Criminal_Charges_ Char 77 $77. $77. Criminal Charges? 22 Geography__via_Trulia_methodolog Char 8 $8. $8. Geography (via Trulia methodology based on zipcode population density: http://jedkolko.com/wp-content/uploads/2015/05/full-ZCTA-urban-suburban-rural-classification.xlsx ) 23 ID Num 8 BEST. ID 21 Off_Duty_Killing_ Char 8 $8. $8. Off-Duty Killing? 12 Official_disposition_of_death__j Char 176 $176. $176. Official disposition of death (justified or other) 7 State Char 2 $2. $2. State 5 Street_Address_of_Incident Char 73 $73. $73. Street Address of Incident 14 Symptoms_of_mental_illness_ Char 19 $19. $19. Symptoms of mental illness? 15 Unarmed Char 15 $15. $15. Unarmed 16 VAR20 Char 32 $32. $32. Alleged Weapon (Source: WaPo) 18 VAR22 Char 11 $11. $11. Fleeing (Source: WaPo) 19 VAR23 Char 18 $18. $18. Body Camera (Source: WaPo) 2 Victim_s_age Char 7 $7. $7. Victim's age 3 Victim_s_gender Char 11 $11. $11. Victim's gender 1 Victim_s_name Char 49 $49. $49. Victim's name 4 Victim_s_race Char 16 $16. $16. Victim's race 20 WaPo_ID__If_included_in_WaPo_dat Num 8 BEST. WaPo ID (If included in WaPo database) 8 Zipcode Char 5 $5. $5. Zipcode 24 date Num 8 MMDDYY10. 25 num_age Num 8 Victim's gender Victim_s_gender Frequency Percent Cumulative Frequency Cumulative Percent Male 7253 94.75 7253 94.75 Female 391 5.11 7644 99.86 Transgender 7 0.09 7651 99.95 Unknown 4 0.05 7655 100.00 Frequency Missing = 8 Victim's race Victim_s_race Frequency Percent Cumulative Frequency Cumulative Percent White 3378 44.08 3378 44.08 Black 1944 25.37 5322 69.45 Hispanic 1335 17.42 6657 86.87 Unknown race 670 8.74 7327 95.62 Asian 118 1.54 7445 97.16 Native American 112 1.46 7557 98.62 Unknown Race 64 0.84 7621 99.45 Pacific Islander 42 0.55 7663 100.00 State State Frequency Percent Cumulative Frequency Cumulative Percent CA 1186 15.48 1186 15.48 TX 719 9.38 1905 24.86 FL 540 7.05 2445 31.91 AZ 343 4.48 2788 36.38 GA 265 3.46 3053 39.84 CO 227 2.96 3280 42.80 WA 218 2.84 3498 45.65 OH 215 2.81 3713 48.45 OK 214 2.79 3927 51.25 NC 204 2.66 4131 53.91 The first 10 levels are displayed. Cause of death Cause_of_death Frequency Percent Cumulative Frequency Cumulative Percent Gunshot 7059 92.12 7059 92.12 Taser 246 3.21 7305 95.33 Gunshot, Taser 223 2.91 7528 98.24 Vehicle 33 0.43 7561 98.67 Beaten 30 0.39 7591 99.06 Asphyxiated 14 0.18 7605 99.24 Physical Restraint 11 0.14 7616 99.39 Physical restraint 9 0.12 7625 99.50 Gunshot, Police Dog 5 0.07 7630 99.57 Other 5 0.07 7635 99.63 The first 10 levels are displayed. Unarmed Unarmed Frequency Percent Cumulative Frequency Cumulative Percent Allegedly Armed 5428 70.83 5428 70.83 Unarmed 1073 14.00 6501 84.84 Unclear 649 8.47 7150 93.31 Vehicle 513 6.69 7663 100.00 Geography (via Trulia methodology based on zipcode population density: http://jedkolko.com/wp-content/uploads/2015/05/full-ZCTA-urban-suburban-rural-classification.xlsx ) Geography__via_Trulia_methodolog Frequency Percent Cumulative Frequency Cumulative Percent Suburban 3805 49.65 3805 49.65 Urban 2088 27.25 5893 76.90 Rural 1703 22.22 7596 99.13 #N/A 67 0.87 7663 100.00 Frequency Table of Unarmed by Criminal_Charges_ Unarmed(Unarmed) Criminal_Charges_(Criminal Charges?) No known charges Charged witha crime No Charged, Acquitted Charged, Mistrial Charged, Convicted Charged, ChargesTossed Charged, Convicted,Sentenced to30 years in prison Charged, Convicted,Sentenced to5 years probation. Charged, Convicted,Sentenced tolife in prison Charged withmanslaughter Charged, ChargesDropped Charged, Convicted,Sentenced to1 year in jail,3 years suspended Charged, Convicted,Sentenced to1 year in prison Charged, Convicted,Sentenced to16 years in prison Charged, Convicted,Sentenced to18 months Charged, Convicted,Sentenced to2.5 years inprison Charged, Convicted,Sentenced to20 years in prison Charged, Convicted,Sentenced to3 months in jail Charged, Convicted,Sentenced to3 years probation Charged, Convicted,Sentenced to4 years Charged, Convicted,Sentenced to40 years in prison Charged, Convicted,Sentenced to5 years in prison Charged, Convicted,Sentenced to50 years Charged, Convicted,Sentenced to6 years Charged, Convicted,Sentenced toLife in Prison Charged, Convicted,Sentenced tolife in prisonwithout parole,plus 16 years Charged, Mistrial,Plead Guiltyto Civil RightsCharges NO Total Allegedly Armed 5385 6 26 6 3 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 5428 Unarmed 998 35 4 5 2 4 2 2 2 2 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1073 Unclear 640 4 1 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 649 Vehicle 501 4 6 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 513 Total 7524 49 37 17 5 4 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7663 Analysis Variable : num_age N Mean Std Dev Minimum Maximum 7457 36.7964329 13.2086517 1.0000000 107.0000000 Variable: WaPo_ID__If_included_in_WaPo_dat (WaPo ID (If included in WaPo database)) Moments N 4878 Sum Weights 4878 Mean 2723.53465 Sum Observations 13285402 Std Deviation 1534.3303 Variance 2354169.46 Skewness 0.00194849 Kurtosis -1.1959645 Uncorrected SS 4.76645E10 Corrected SS 1.14813E10 Coeff Variation 56.3359934 Std Error Mean 21.9683765 Basic Statistical Measures Location Variability Mean 2723.535 Std Deviation 1534 Median 2722.000 Variance 2354169 Mode 3232.000 Range 5436 Interquartile Range 2649 Note: The mode displayed is the smallest of 2 modes with a count of 2. Tests for Location: Mu0=0 Test Statistic p Value Student's t t 123.9752 Pr &gt; |t| &lt;.0001 Sign M 2439 Pr &gt;= |M| &lt;.0001 Signed Rank S 5949941 Pr &gt;= |S| &lt;.0001 Quantiles (Definition 5) Level Quantile 100% Max 5439 99% 5320 95% 5112 90% 4847 75% Q3 4051 50% Median 2722 25% Q1 1402 10% 614 5% 336 1% 90 0% Min 3 Extreme Observations Lowest Highest Value Obs Value Obs 3 5505 5422 681 4 5506 5423 680 5 5504 5437 682 8 5501 5438 677 9 5503 5439 675 Missing Values MissingValue Count Percent Of All Obs Missing Obs . 2785 36.34 100.00 Variable: ID (ID) Moments N 7663 Sum Weights 7663 Mean 3832.89012 Sum Observations 29371437 Std Deviation 2213.3393 Variance 4898870.85 Skewness 0.0007161 Kurtosis -1.199928 Uncorrected SS 1.50113E11 Corrected SS 3.75351E10 Coeff Variation 57.7459626 Std Error Mean 25.284163 Basic Statistical Measures Location Variability Mean 3832.890 Std Deviation 2213 Median 3832.000 Variance 4898871 Mode . Range 7666 Interquartile Range 3834 Tests for Location: Mu0=0 Test Statistic p Value Student's t t 151.5925 Pr &gt; |t| &lt;.0001 Sign M 3831.5 Pr &gt;= |M| &lt;.0001 Signed Rank S 14682308 Pr &gt;= |S| &lt;.0001 Quantiles (Definition 5) Level Quantile 100% Max 7667 99% 7591 95% 7283 90% 6900 75% Q3 5750 50% Median 3832 25% Q1 1916 10% 767 5% 384 1% 77 0% Min 1 Extreme Observations Lowest Highest Value Obs Value Obs 1 7659 7663 6 2 7660 7664 1 3 7658 7665 2 4 7661 7666 7 5 7662 7667 5 Variable: date Moments N 7663 Sum Weights 7663 Mean 20641.9815 Sum Observations 158179504 Std Deviation 739.237367 Variance 546471.884 Skewness -0.0178679 Kurtosis -1.1972873 Uncorrected SS 3.26933E12 Corrected SS 4187067577 Coeff Variation 3.58123259 Std Error Mean 8.4447053 Basic Statistical Measures Location Variability Mean 20641.98 Std Deviation 739.23737 Median 20642.00 Variance 546472 Mode 19525.00 Range 2555 Interquartile Range 1275 Tests for Location: Mu0=0 Test Statistic p Value Student's t t 2444.37 Pr &gt; |t| &lt;.0001 Sign M 3831.5 Pr &gt;= |M| &lt;.0001 Signed Rank S 14682308 Pr &gt;= |S| &lt;.0001 Quantiles (Definition 5) Level Quantile 100% Max 21914 99% 21893 95% 21790 90% 21659 75% Q3 21278 50% Median 20642 25% Q1 20003 10% 19601 5% 19488 1% 19379 0% Min 19359 Extreme Observations Lowest Highest Value Obs Value Obs 19359 7663 21914 3 19359 7662 21914 4 19359 7661 21914 5 19359 7660 21914 6 19359 7659 21914 7 Variable: num_age Moments N 7457 Sum Weights 7457 Mean 36.7964329 Sum Observations 274391 Std Deviation 13.2086517 Variance 174.46848 Skewness 0.7439124 Kurtosis 0.3391187 Uncorrected SS 11397447 Corrected SS 1300836.99 Coeff Variation 35.8965548 Std Error Mean 0.15295949 Basic Statistical Measures Location Variability Mean 36.79643 Std Deviation 13.20865 Median 34.00000 Variance 174.46848 Mode 25.00000 Range 106.00000 Interquartile Range 18.00000 Tests for Location: Mu0=0 Test Statistic p Value Student's t t 240.5633 Pr &gt; |t| &lt;.0001 Sign M 3728.5 Pr &gt;= |M| &lt;.0001 Signed Rank S 13903577 Pr &gt;= |S| &lt;.0001 Quantiles (Definition 5) Level Quantile 100% Max 107 99% 73 95% 61 90% 55 75% Q3 45 50% Median 34 25% Q1 27 10% 22 5% 19 1% 16 0% Min 1 Extreme Observations Lowest Highest Value Obs Value Obs 1 7371 89 7525 1 4751 91 3109 1 1896 93 6214 5 7584 95 5969 5 6516 107 6865 Missing Values MissingValue Count Percent Of All Obs Missing Obs . 206 2.69 100.00 Oddities to note: - Gender - Unknown should be recoded as missing (’ ’) - Victim_s_race - Unknown race and Unknown Race should be recoded as missing - State - might need to check to make sure all states are valid (but top 10 are, at least) - Cause of death - sometimes, there are multiple causes. Also, varying capitalizations… - Geography - #N/A should be recoded as missing - Criminal_Charges_ - What does No/NO mean? (would need to look up in the codebook) - Age - the maximum age recorded is 107, which bears some investigation… other extreme observations between 89 and 95 are also fairly interesting and could be investigated further. There are also several infants/young children included, which is horribly sad, but believable. - Date - PROC UNIVARIATE doesn’t display date results with a meaningful format, even though format is specified. - Conclusions (ok, probably obvious before this analysis): - It’s much more likely for charges to be filed if the suspect was unarmed (but still very rare) - Data is relatively evenly distributed between 2013 and 2019. - It’s fairly rare for police to kill female or transgender individuals - around 5% of all victims - California, Texas, and Florida, while populous, seem to have a disproportionate number of killings, especially compared to e.g. NY, which is also a high population state. To really make the state numbers meaningful, though, we’d need to know population counts. There’s also an issue of accurate comparisons - some states may not report police killings with the same standards as other states. 4.6.2 R In SAS, EDA is fairly straightforward - you use specific procedures for each data type, and the plots which may be most useful come along with those procedures. It’s something like ordering off of a menu of pre-defined meals, and then slightly customizing your order. In R, you put your whole order together from the a la carte menu. That is, R will give you all of the same summary information (and possibly more), but you have to assemble a series of commands to get each portion. This can be more efficient (since you don’t have to wade through pages of output to get the piece you want) but may take a bit more coding as well. In this section, I will mostly be using the plot commands that come with base R and require no extra packages. The R for Data Science book shows plot commands which use the ggplot2 library. We will learn this library later in this class - it produces beautiful plots - and if you want to use it at this point, you may. It requires a bit more thought as to how to specify the plot, though, which may not be desireable. The first, and most basic EDA command in R is summary(). For numeric variables, summary provides 5-number summaries plus the mean. For categorical variables, summary provides the length of the variable and the Class and Mode. For factors, summary provides a table of the most common values, as well as a catch-all “other” category. library(readr) url &lt;- &quot;https://raw.githubusercontent.com/shahinrostami/pokemon_dataset/master/pokemon_gen_1_to_8.csv&quot; poke &lt;- read_csv(url) Warning: Missing column names filled in: &#39;X1&#39; [1] Parsed with column specification: cols( .default = col_double(), name = col_character(), german_name = col_character(), japanese_name = col_character(), status = col_character(), species = col_character(), type_1 = col_character(), type_2 = col_character(), ability_1 = col_character(), ability_2 = col_character(), ability_hidden = col_character(), growth_rate = col_character(), egg_type_1 = col_character(), egg_type_2 = col_character() ) See spec(...) for full column specifications. # Make types into factors to demonstrate the difference poke$type_1 &lt;- factor(poke$type_1) poke$type_2 &lt;- factor(poke$type_2) summary(poke) X1 pokedex_number name german_name Min. : 0.0 Min. : 1.0 Length:1028 Length:1028 1st Qu.: 256.8 1st Qu.:213.8 Class :character Class :character Median : 513.5 Median :433.5 Mode :character Mode :character Mean : 513.5 Mean :437.7 3rd Qu.: 770.2 3rd Qu.:663.2 Max. :1027.0 Max. :890.0 japanese_name generation status species Length:1028 Min. :1.000 Length:1028 Length:1028 Class :character 1st Qu.:2.000 Class :character Class :character Mode :character Median :4.000 Mode :character Mode :character Mean :4.034 3rd Qu.:6.000 Max. :8.000 type_number type_1 type_2 height_m weight_kg Min. :1.000 Water :134 Flying :109 Min. : 0.100 Min. : 0.10 1st Qu.:1.000 Normal :115 Fairy : 41 1st Qu.: 0.600 1st Qu.: 8.80 Median :2.000 Grass : 91 Ground : 39 Median : 1.000 Median : 28.50 Mean :1.527 Bug : 81 Poison : 38 Mean : 1.368 Mean : 69.75 3rd Qu.:2.000 Psychic: 76 Psychic: 38 3rd Qu.: 1.500 3rd Qu.: 69.10 Max. :2.000 Fire : 65 (Other):277 Max. :100.000 Max. :999.90 (Other):466 NA&#39;s :486 NA&#39;s :1 abilities_number ability_1 ability_2 ability_hidden Min. :0.000 Length:1028 Length:1028 Length:1028 1st Qu.:2.000 Class :character Class :character Class :character Median :2.000 Mode :character Mode :character Mode :character Mean :2.284 3rd Qu.:3.000 Max. :3.000 total_points hp attack defense Min. : 175.0 Min. : 1.00 Min. : 5.00 Min. : 5.00 1st Qu.: 330.0 1st Qu.: 50.00 1st Qu.: 55.00 1st Qu.: 50.00 Median : 455.0 Median : 66.50 Median : 76.00 Median : 70.00 Mean : 437.6 Mean : 69.58 Mean : 80.12 Mean : 74.48 3rd Qu.: 510.0 3rd Qu.: 80.00 3rd Qu.:100.00 3rd Qu.: 90.00 Max. :1125.0 Max. :255.00 Max. :190.00 Max. :250.00 sp_attack sp_defense speed catch_rate Min. : 10.00 Min. : 20.00 Min. : 5.00 Min. : 3.00 1st Qu.: 50.00 1st Qu.: 50.00 1st Qu.: 45.00 1st Qu.: 45.00 Median : 65.00 Median : 70.00 Median : 65.00 Median : 60.00 Mean : 72.73 Mean : 72.13 Mean : 68.53 Mean : 93.17 3rd Qu.: 95.00 3rd Qu.: 90.00 3rd Qu.: 90.00 3rd Qu.:127.00 Max. :194.00 Max. :250.00 Max. :180.00 Max. :255.00 NA&#39;s :104 base_friendship base_experience growth_rate egg_type_number Min. : 0.00 Min. : 36.0 Length:1028 Min. :0.000 1st Qu.: 70.00 1st Qu.: 67.0 Class :character 1st Qu.:1.000 Median : 70.00 Median :159.0 Mode :character Median :1.000 Mean : 64.14 Mean :153.8 Mean :1.271 3rd Qu.: 70.00 3rd Qu.:201.5 3rd Qu.:2.000 Max. :140.00 Max. :608.0 Max. :2.000 NA&#39;s :104 NA&#39;s :104 egg_type_1 egg_type_2 percentage_male egg_cycles Length:1028 Length:1028 Min. : 0 Min. : 5.00 Class :character Class :character 1st Qu.: 50 1st Qu.: 20.00 Mode :character Mode :character Median : 50 Median : 20.00 Mean : 55 Mean : 30.32 3rd Qu.: 50 3rd Qu.: 25.00 Max. :100 Max. :120.00 NA&#39;s :236 NA&#39;s :1 against_normal against_fire against_water against_electric Min. :0.0000 Min. :0.000 Min. :0.000 Min. :0.000 1st Qu.:1.0000 1st Qu.:0.500 1st Qu.:0.500 1st Qu.:0.500 Median :1.0000 Median :1.000 Median :1.000 Median :1.000 Mean :0.8684 Mean :1.125 Mean :1.054 Mean :1.034 3rd Qu.:1.0000 3rd Qu.:2.000 3rd Qu.:1.000 3rd Qu.:1.000 Max. :1.0000 Max. :4.000 Max. :4.000 Max. :4.000 against_grass against_ice against_fight against_poison Min. :0.000 Min. :0.000 Min. :0.000 Min. :0.0000 1st Qu.:0.500 1st Qu.:0.500 1st Qu.:0.500 1st Qu.:0.5000 Median :1.000 Median :1.000 Median :1.000 Median :1.0000 Mean :1.004 Mean :1.196 Mean :1.079 Mean :0.9523 3rd Qu.:1.000 3rd Qu.:2.000 3rd Qu.:2.000 3rd Qu.:1.0000 Max. :4.000 Max. :4.000 Max. :4.000 Max. :4.0000 against_ground against_flying against_psychic against_bug Min. :0.000 Min. :0.250 Min. :0.0000 Min. :0.0000 1st Qu.:0.500 1st Qu.:1.000 1st Qu.:1.0000 1st Qu.:0.5000 Median :1.000 Median :1.000 Median :1.0000 Median :1.0000 Mean :1.085 Mean :1.166 Mean :0.9793 Mean :0.9925 3rd Qu.:1.625 3rd Qu.:1.000 3rd Qu.:1.0000 3rd Qu.:1.0000 Max. :4.000 Max. :4.000 Max. :4.0000 Max. :4.0000 against_rock against_ghost against_dragon against_dark Min. :0.25 Min. :0.000 Min. :0.0000 Min. :0.250 1st Qu.:1.00 1st Qu.:1.000 1st Qu.:1.0000 1st Qu.:1.000 Median :1.00 Median :1.000 Median :1.0000 Median :1.000 Mean :1.24 Mean :1.011 Mean :0.9757 Mean :1.066 3rd Qu.:2.00 3rd Qu.:1.000 3rd Qu.:1.0000 3rd Qu.:1.000 Max. :4.00 Max. :4.000 Max. :2.0000 Max. :4.000 against_steel against_fairy Min. :0.0000 Min. :0.000 1st Qu.:0.5000 1st Qu.:1.000 Median :1.0000 Median :1.000 Mean :0.9803 Mean :1.085 3rd Qu.:1.0000 3rd Qu.:1.000 Max. :4.0000 Max. :4.000 One common question in EDA is whether there are missing values or other inconsistencies that need to be handled. summary() provides you with the NA count for each variable, making it easy to identify what variables are likely to cause problems in an analysis. There is one pokemon who appears to not have a weight specified. Let’s investigate further: poke[is.na(poke$weight_kg),] # Show any rows where weight.kg is NA # A tibble: 1 x 51 X1 pokedex_number name german_name japanese_name generation status species &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; 1 1027 890 Eter… &lt;NA&gt; &lt;NA&gt; 8 Legen… Gigant… # … with 43 more variables: type_number &lt;dbl&gt;, type_1 &lt;fct&gt;, type_2 &lt;fct&gt;, # height_m &lt;dbl&gt;, weight_kg &lt;dbl&gt;, abilities_number &lt;dbl&gt;, ability_1 &lt;chr&gt;, # ability_2 &lt;chr&gt;, ability_hidden &lt;chr&gt;, total_points &lt;dbl&gt;, hp &lt;dbl&gt;, # attack &lt;dbl&gt;, defense &lt;dbl&gt;, sp_attack &lt;dbl&gt;, sp_defense &lt;dbl&gt;, # speed &lt;dbl&gt;, catch_rate &lt;dbl&gt;, base_friendship &lt;dbl&gt;, # base_experience &lt;dbl&gt;, growth_rate &lt;chr&gt;, egg_type_number &lt;dbl&gt;, # egg_type_1 &lt;chr&gt;, egg_type_2 &lt;chr&gt;, percentage_male &lt;dbl&gt;, # egg_cycles &lt;dbl&gt;, against_normal &lt;dbl&gt;, against_fire &lt;dbl&gt;, # against_water &lt;dbl&gt;, against_electric &lt;dbl&gt;, against_grass &lt;dbl&gt;, # against_ice &lt;dbl&gt;, against_fight &lt;dbl&gt;, against_poison &lt;dbl&gt;, # against_ground &lt;dbl&gt;, against_flying &lt;dbl&gt;, against_psychic &lt;dbl&gt;, # against_bug &lt;dbl&gt;, against_rock &lt;dbl&gt;, against_ghost &lt;dbl&gt;, # against_dragon &lt;dbl&gt;, against_dark &lt;dbl&gt;, against_steel &lt;dbl&gt;, # against_fairy &lt;dbl&gt; This is the last row of our data frame, and this pokemon appears to have many missing values. We are often also interested in the distribution of values. We can generate cross-tabs for variables that we know are discrete (such as generation, which will always be a whole number). table(poke$generation) 1 2 3 4 5 6 7 8 192 107 165 121 171 85 99 88 plot(table(poke$generation)) # bar plot table(poke$type_1, poke$type_2) Bug Dark Dragon Electric Fairy Fighting Fire Flying Ghost Grass Bug 0 0 0 4 2 4 2 14 1 6 Dark 0 0 4 0 3 2 3 5 2 0 Dragon 0 0 0 1 1 2 1 6 3 0 Electric 0 2 2 0 2 0 1 6 1 1 Fairy 0 0 0 0 0 0 0 2 0 0 Fighting 0 1 0 0 0 0 0 1 1 0 Fire 2 1 2 0 0 7 0 7 2 0 Flying 0 0 2 0 0 0 0 0 0 0 Ghost 0 1 2 0 1 0 3 3 0 11 Grass 0 3 5 0 5 3 0 7 1 0 Ground 0 3 2 1 0 0 1 4 4 0 Ice 2 0 0 0 1 0 1 2 1 0 Normal 0 0 1 0 5 4 0 27 0 2 Poison 1 5 4 0 1 2 2 3 0 0 Psychic 0 1 1 0 9 3 1 7 3 1 Rock 2 2 2 3 3 1 2 6 0 2 Steel 0 0 2 0 4 1 0 2 4 0 Water 2 7 3 2 4 3 0 7 2 3 Ground Ice Normal Poison Psychic Rock Steel Water Bug 2 0 0 12 2 3 7 3 Dark 0 2 5 0 2 0 2 0 Dragon 7 3 0 0 4 0 0 0 Electric 0 2 2 3 1 0 4 1 Fairy 0 0 0 0 0 0 1 0 Fighting 0 1 0 0 3 0 3 0 Fire 3 0 2 0 2 1 1 1 Flying 0 0 0 0 0 0 1 1 Ghost 2 0 0 4 0 0 0 0 Grass 1 3 0 15 2 0 3 0 Ground 0 0 0 0 2 3 4 0 Ice 3 0 0 0 2 0 2 3 Normal 1 0 0 0 3 0 0 1 Poison 2 0 0 0 0 0 0 3 Psychic 0 2 2 0 0 0 2 0 Rock 6 2 0 1 2 0 4 6 Steel 2 0 0 0 7 3 0 0 Water 10 4 0 3 6 5 1 0 plot(table(poke$type_1, poke$type_2)) # mosaic plot - hard to read b/c too many categories There are better options for examining this data, but they are easier to get in ggplot2. library(ggplot2) ggplot(data = poke, aes(x = type_1, y = type_2)) + # define the x and y axis variables first geom_point(aes(size = ..count.., color = ..count..), stat = &quot;bin2d&quot;) # define what will be plotted (points) # and what aesthetics will be used (size, color) # and how those aesthetics will be mapped to values # (proportional to the count in a 2d bin) We can also generate histograms or bar charts19 By default, R uses ranges of \\((a, b]\\) in histograms, so we specify which breaks will give us a desireable result. If we do not specify breaks, R will pick them for us. hist(poke$generation) # This isn&#39;t really optimal... we only have whole numbers. hist(poke$generation, breaks = 0:8) # Much better. For continuous variables, we can use histograms, or we can examine kernel density plots. Remember that %&gt;% is the “pipe” and takes the left side of the pipe to pass as an argument to the right side. This makes code easier to read because it becomes a step-wise “recipe”. library(magrittr) # This provides the pipe command, %&gt;% hist(poke$weight_kg) poke$weight_kg %&gt;% log10() %&gt;% # Take the log - will transformation be useful w/ modeling? hist() # create a histogram poke$weight_kg %&gt;% density(na.rm = T) %&gt;% # First, we compute the kernel density # (na.rm = T says to ignore NA values) plot() # Then, we plot the result poke$weight_kg %&gt;% log10() %&gt;% # Transform the variable density(na.rm = T) %&gt;% # Compute the density ignoring missing values plot(main = &quot;Density of Log10 pokemon weight in Kg&quot;) # Plot the result, # changing the title of the plot to a meaningful value We may also want to look at correlations between variables. In R, most models are specified as y ~ x1 + x2 + x3, where the information on the left side of the tilde is the dependent variable, and the information on the right side are any explanatory variables. Interactions are specified using x1*x2 to get all combinations of x1 and x2 (x1, x2, x1*x2); single interaction terms are specified as e.g. x1:x2 and do not include any component terms. To examine the relationship between a categorical variable and a continuous variable, we might look at boxplots: boxplot(log10(height_m) ~ status, data = poke) boxplot(total_points ~ species, data = poke) In the second boxplot, there are far too many categories to be able to resolve the relationship clearly, but the plot is still effective in that we can identify that there are one or two species which have a much higher point range than other species. EDA isn’t usually about creating pretty plots (or we’d be using ggplot right now) but rather about identifying things which may come up in the analysis later. To look at the relationship between numeric variables, we could compute a numeric correlation, but a plot is more useful: plot(defense ~ attack, data = poke, type = &quot;p&quot;) cor(poke$defense, poke$attack) [1] 0.4507656 Sometimes, we discover that a variable which appears to be continuous is actually relatively quantized - there are only a few values of base_friendship in the whole dataset. plot(x = poke$base_experience, y = poke$base_friendship, type = &quot;p&quot;) A scatterplot matrix can also be a useful way to visualize relationships between several variables. pairs(poke[,19:23]) # hp - sp_defense columns There’s more information on how to customize these plots here. Try it out Explore the variables present in the police violence data (see code in the spreadsheets section to read it in). Note that some variables may be too messy to handle with the things that you have seen thus far - that is ok. As you find irregularities, document them - these are things you may need to clean up in the dataset before you conduct a formal analysis. How does your analysis in R differ from the way that you approached the data in SAS? if (!&quot;readxl&quot; %in% installed.packages()) install.packages(&quot;readxl&quot;) library(readxl) police_violence &lt;- read_xlsx(&quot;data/police_violence.xlsx&quot;, sheet = 1, guess_max = 7000) police_violence$`Victim&#39;s age` &lt;- as.numeric(police_violence$`Victim&#39;s age`) Warning: NAs introduced by coercion summary(police_violence) Victim&#39;s name Victim&#39;s age Victim&#39;s gender Victim&#39;s race Length:7663 Min. : 1.0 Length:7663 Length:7663 Class :character 1st Qu.: 27.0 Class :character Class :character Mode :character Median : 34.0 Mode :character Mode :character Mean : 36.8 3rd Qu.: 45.0 Max. :107.0 NA&#39;s :206 URL of image of victim Date of Incident (month/day/year) Length:7663 Min. :2013-01-01 00:00:00 Class :character 1st Qu.:2014-10-07 00:00:00 Mode :character Median :2016-07-07 00:00:00 Mean :2016-07-06 23:33:18 3rd Qu.:2018-04-04 00:00:00 Max. :2019-12-31 00:00:00 Street Address of Incident City State Length:7663 Length:7663 Length:7663 Class :character Class :character Class :character Mode :character Mode :character Mode :character Zipcode County Agency responsible for death Length:7663 Length:7663 Length:7663 Class :character Class :character Class :character Mode :character Mode :character Mode :character Cause of death Length:7663 Class :character Mode :character A brief description of the circumstances surrounding the death Length:7663 Class :character Mode :character Official disposition of death (justified or other) Criminal Charges? Length:7663 Length:7663 Class :character Class :character Mode :character Mode :character Link to news article or photo of official document Symptoms of mental illness? Length:7663 Length:7663 Class :character Class :character Mode :character Mode :character Unarmed Alleged Weapon (Source: WaPo) Length:7663 Length:7663 Class :character Class :character Mode :character Mode :character Alleged Threat Level (Source: WaPo) Fleeing (Source: WaPo) Length:7663 Length:7663 Class :character Class :character Mode :character Mode :character Body Camera (Source: WaPo) WaPo ID (If included in WaPo database) Length:7663 Min. : 3 Class :character 1st Qu.:1402 Mode :character Median :2722 Mean :2724 3rd Qu.:4051 Max. :5439 NA&#39;s :2785 Off-Duty Killing? Length:7663 Class :character Mode :character Geography (via Trulia methodology based on zipcode population density: http://jedkolko.com/wp-content/uploads/2015/05/full-ZCTA-urban-suburban-rural-classification.xlsx ) Length:7663 Class :character Mode :character ID Min. : 1 1st Qu.:1916 Median :3832 Mean :3833 3rd Qu.:5750 Max. :7667 Let’s examine the numeric and date variables first: hist(police_violence$`Victim&#39;s age`) # hist(police_violence$`Date of Incident (month/day/year)`) # This didn&#39;t work - it wants me to specify breaks # Instead, lets see if ggplot handles it better - from R4DS library(ggplot2) ggplot(police_violence, aes(x = `Date of Incident (month/day/year)`)) + geom_histogram() `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ggplot(police_violence, aes(x = `Date of Incident (month/day/year)`)) + geom_density() Let’s look at the victim’s gender and race: table(police_violence$`Victim&#39;s race`, useNA = &#39;ifany&#39;) Asian Black Hispanic Native American 118 1944 1335 112 Pacific Islander Unknown race Unknown Race White 42 670 64 3378 table(police_violence$`Victim&#39;s gender`) Female Male Transgender Unknown 391 7253 7 4 table(police_violence$`Victim&#39;s race`, police_violence$`Victim&#39;s gender`) Female Male Transgender Unknown Asian 6 111 0 1 Black 69 1871 2 1 Hispanic 49 1283 1 0 Native American 7 104 0 0 Pacific Islander 2 40 0 0 Unknown race 33 632 1 2 Unknown Race 2 62 0 0 White 223 3150 3 0 plot(table(police_violence$`Victim&#39;s race`, police_violence$`Victim&#39;s gender`), main = &quot;Police Killing by Race, Gender&quot;) We can also look at the age range for each race: police_violence %&gt;% # get groups with at least 100 observations that aren&#39;t unknown subset(`Victim&#39;s race` %in% c(&quot;Asian&quot;, &quot;Black&quot;, &quot;Native American&quot;, &quot;Hispanic&quot;, &quot;White&quot;)) %&gt;% boxplot(`Victim&#39;s age` ~ `Victim&#39;s race`, data = .) And examine the age range for each gender as well: police_violence %&gt;% boxplot(`Victim&#39;s age` ~ `Victim&#39;s gender`, data = .) The thing I’m honestly most surprised at with this plot is that there are so many elderly individuals (of both genders) shot. That’s not a realization I’d normally construct this plot for, but the visual emphasis on the outliers in a boxplot makes it much easier to focus on that aspect of the data. My analysis in R was a bit more free-form than in SAS - in SAS, I proceeded fairly directly through each procedure, while in R, I could investigate things that caught my eye along the way more easily. I didn’t focus as much on what we’d need to clean up in R (because the same problems exist that we identified when using SAS). 4.6.2.1 skimr package I discovered this package while looking over the material in this chapter a second time (so this is new as of 2020/09/07). if (!&quot;skimr&quot; %in% installed.packages()) install.packages(&quot;skimr&quot;) library(skimr) skim(police_violence) Table 4.1: Data summary Name police_violence Number of rows 7663 Number of columns 27 _______________________ Column type frequency: character 23 numeric 3 POSIXct 1 ________________________ Group variables None Variable type: character skim_variable n_missing complete_rate min max empty n_unique whitespace Victim’s name 0 1.00 7 49 0 7411 0 Victim’s gender 8 1.00 4 11 0 4 0 Victim’s race 0 1.00 5 16 0 8 0 URL of image of victim 3462 0.55 27 10527 0 4192 0 Street Address of Incident 83 0.99 3 73 0 7487 0 City 6 1.00 3 29 0 2884 0 State 0 1.00 2 2 0 51 0 Zipcode 39 0.99 4 5 0 4996 0 County 15 1.00 3 80 0 1110 0 Agency responsible for death 16 1.00 7 177 0 2853 0 Cause of death 0 1.00 4 39 0 30 0 A brief description of the circumstances surrounding the death 20 1.00 30 1631 0 7581 0 Official disposition of death (justified or other) 256 0.97 7 176 0 97 0 Criminal Charges? 0 1.00 2 77 0 29 0 Link to news article or photo of official document 12 1.00 21 312 0 7560 0 Symptoms of mental illness? 11 1.00 2 19 0 6 0 Unarmed 0 1.00 7 15 0 4 0 Alleged Weapon (Source: WaPo) 0 1.00 2 32 0 169 0 Alleged Threat Level (Source: WaPo) 2382 0.69 5 12 0 3 0 Fleeing (Source: WaPo) 2616 0.66 1 11 0 8 0 Body Camera (Source: WaPo) 2869 0.63 2 18 0 5 0 Off-Duty Killing? 7437 0.03 8 8 0 1 0 Geography (via Trulia methodology based on zipcode population density: http://jedkolko.com/wp-content/uploads/2015/05/full-ZCTA-urban-suburban-rural-classification.xlsx ) 67 0.99 5 8 0 3 0 Variable type: numeric skim_variable n_missing complete_rate mean sd p0 p25 p50 p75 p100 hist Victim’s age 206 0.97 36.80 13.21 1 27.00 34 45.00 107 ▂▇▃▁▁ WaPo ID (If included in WaPo database) 2785 0.64 2723.53 1534.33 3 1402.25 2722 4050.75 5439 ▇▇▇▇▇ ID 0 1.00 3832.89 2213.34 1 1916.50 3832 5749.50 7667 ▇▇▇▇▇ Variable type: POSIXct skim_variable n_missing complete_rate min max median n_unique Date of Incident (month/day/year) 0 1 2013-01-01 2019-12-31 2016-07-07 2404 You may find the summary tables given by the skimr package to be more appealing - it separates the variables out by type, provides histograms of numeric variables, and is compatible with rmarkdown/knitr. If you want summary statistics by group, you can get that using the dplyr package functions select and group_by, which we will learn more about in the next section. (I’m cheating a bit by mentioning it now, but it’s just so useful!) library(dplyr) police_violence %&gt;% # get variables which are important select(matches(&quot;age$|race|gender|Cause|Symptoms|Unarmed&quot;)) %&gt;% group_by(Unarmed) %&gt;% skim() Table 4.2: Data summary Name Piped data Number of rows 7663 Number of columns 6 _______________________ Column type frequency: character 4 numeric 1 ________________________ Group variables Unarmed Variable type: character skim_variable Unarmed n_missing complete_rate min max empty n_unique whitespace Victim’s gender Allegedly Armed 3 1.00 4 11 0 4 0 Victim’s gender Unarmed 0 1.00 4 11 0 4 0 Victim’s gender Unclear 2 1.00 4 7 0 3 0 Victim’s gender Vehicle 3 0.99 4 11 0 3 0 Victim’s race Allegedly Armed 0 1.00 5 16 0 8 0 Victim’s race Unarmed 0 1.00 5 16 0 8 0 Victim’s race Unclear 0 1.00 5 16 0 8 0 Victim’s race Vehicle 0 1.00 5 16 0 8 0 Cause of death Allegedly Armed 0 1.00 4 39 0 21 0 Cause of death Unarmed 0 1.00 5 39 0 17 0 Cause of death Unclear 0 1.00 5 25 0 8 0 Cause of death Vehicle 0 1.00 5 14 0 4 0 Symptoms of mental illness? Allegedly Armed 10 1.00 2 19 0 6 0 Symptoms of mental illness? Unarmed 0 1.00 2 19 0 4 0 Symptoms of mental illness? Unclear 1 1.00 2 19 0 4 0 Symptoms of mental illness? Vehicle 0 1.00 2 19 0 4 0 Variable type: numeric skim_variable Unarmed n_missing complete_rate mean sd p0 p25 p50 p75 p100 hist Victim’s age Allegedly Armed 139 0.97 37.82 13.64 14 27 35 47 107 ▇▇▃▁▁ Victim’s age Unarmed 16 0.99 34.36 12.18 1 25 33 41 89 ▁▇▅▁▁ Victim’s age Unclear 34 0.95 35.36 11.60 15 26 34 43 76 ▇▇▆▂▁ Victim’s age Vehicle 17 0.97 32.82 10.75 15 25 31 38 77 ▆▇▃▁▁ This summary allows us to see very quickly that there is a difference in the age distribution of unarmed individuals who died during an encounter with police - unarmed individuals are likely to be significantly older on average. If you are using skimr in knitr/rmarkdown, your data frame will automatically render as a custom-printed table if the last line in the code chunk is a skim_df object. There are many ways to customize the summary statistics detailed in the package that I’m not going to go into here, but you are free to investigate if you like the way these summaries look. I mention this package now because it is appropriate for EDA, but it may not be intuitive or easy to use in the way you might want to use it until after we cover the dplyr package in the manipulating data module and the tidyr package in the transforming data module. 4.6.3 Comparison You must realize that R is written by experts in statistics and statistical computing who, despite popular opinion, do not believe that everything in SAS and SPSS is worth copying. Some things done in such packages, which trace their roots back to the days of punched cards and magnetic tape when fitting a single linear model may take several days because your first 5 attempts failed due to syntax errors in the JCL or the SAS code, still reflect the approach of “give me every possible statistic that could be calculated from this model, whether or not it makes sense”. The approach taken in R is different. The underlying assumption is that the useR is thinking about the analysis while doing it. – Douglas Bates 4.7 References Reading JSON in SAS – You know SAS documentation is getting weird when they advertise a method as “the sexiest way to import JSON data into SAS”. Reading Rdata files in SAS Common problems with SAS data files U.S. Department of Transportation, Federal Highway Administration, 2009 National Household Travel Survey. URL: http://nhts.ornl.gov. Data acquired from data.world. RSQLite vignette Slides from Jenny Bryan’s talk on spreadsheets (sadly, no audio. It was a good talk.) The vroom package works like read_csv but allows you to read in and write to many files at incredible speeds. though there are a seemingly infinite number of actual formats, and they pop up at the most inconvenient times↩ I tried, and it crashed SAS on my machine.↩ A currently maintained version of the library is here and should work for UNIX platforms. It may be possible to install the library on Windows using the UNIX subsystem, per this thread↩ On one of my machines, I also had to make sure the file libodbc.so existed - it was named libodbc.so.1 on my laptop, so a symbolic link fixed the issue.↩ A histogram is a chart which breaks up a continuous variable into ranges, where the height of the bar is proportional to the number of items in the range. A bar chart is similar, but shows the number of occurrences of a discrete variable.↩ "],
["manipulating-data.html", "Module 5 Manipulating Data Module Objectives 5.1 Tidy Data 5.2 Filter: Pick cases (rows) based on their values 5.3 Select: Pick columns 5.4 Mutate: Add and transform variables 5.5 Summarize 5.6 Group By + (?) = Power! Try it out References", " Module 5 Manipulating Data Module Objectives Filter, subset, and clean data to prepare a dataset for analysis Describe and document operations performed on a data set transparently, and implement the operations using reproducible steps. Create summaries of data appropriate for additional analysis or display In this section, we’re going start learning how to work with data. Generally speaking, data doesn’t come in a form suitable for analysis20 - you have to clean it up, create the variables you care about, get rid of those you don’t care about, and so on. In R, we’ll be using the tidyverse for this. It’s a meta-package (a package that just loads other packages) that collects packages designed with the same philosophy21 and interface (basically, the commands will use predictable argument names and structure). You’ve already been introduced to the tidyverse - specifically, readr. In SAS, there is no tidyverse, but there is a relatively consistent structure for how to accomplish each task. Most data cleaning in SAS is accomplished in data steps. In the interests of not confusing terms too much between languages, I’m going to use the tidyverse “verbs” to describe operations in both SAS and R. dplyr (one of the packages in the tidyverse) creates a “grammar of data manipulation” to make it easier to describe different operations. I find the dplyr grammar to be extremely useful when talking about data operations, so I’m going to attempt to show you how to do the same operations in R with dplyr, and in SAS (without the underlying framework). Each verb describes a common task when doing both exploratory data analysis and more formal statistical modeling. In all tidyverse functions, data comes first – literally, as it’s the first argument to any function. In addition, you don’t use df$variable to access a variable - you refer to the variable by its name alone. This makes the syntax much cleaner and easier to read, which is another principle of the tidy philosophy. There is an excellent dplyr cheatsheet available from RStudio. You may want to print it out to have a copy to reference as you work through this chapter. 5.1 Tidy Data There are infinitely many ways to configure “messy” data, but data that is “tidy” has 3 attributes: Each variable has its own column Each observation has its own row Each value has its own cell These attributes aren’t sufficient to define “clean” data, but they work to define “tidy” data (in the same way that you can have a “tidy” room because all of your dirty clothes are folded, but they aren’t clean just because they’re folded). We’ll get more into how to work with different “messy” data configurations in the next module, but it’s worth keeping rules 1 and 3 in mind while working through this module. 5.2 Filter: Pick cases (rows) based on their values Filter allows us to work with a subset of a larger data frame, keeping only the rows we’re interested in. We provide one or more logical conditions, and only those rows which meet the logical conditions are returned from filter(). Note that unless we store the result from filter() in the original object, we don’t change the original. Let’s explore how it works, using the starwars dataset, which contains a comprehensive list of the characters in the Star Wars movies. Data set up This data set is included in the dplyr package, so we load that package and then use the data() function to load dataset into memory. The loading isn’t complete until we actually use the dataset though… so let’s print the first few rows. library(dplyr) data(starwars) starwars # A tibble: 87 x 14 name height mass hair_color skin_color eye_color birth_year sex gender &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; 1 Luke… 172 77 blond fair blue 19 male mascu… 2 C-3PO 167 75 &lt;NA&gt; gold yellow 112 none mascu… 3 R2-D2 96 32 &lt;NA&gt; white, bl… red 33 none mascu… 4 Dart… 202 136 none white yellow 41.9 male mascu… 5 Leia… 150 49 brown light brown 19 fema… femin… 6 Owen… 178 120 brown, gr… light blue 52 male mascu… 7 Beru… 165 75 brown light blue 47 fema… femin… 8 R5-D4 97 32 &lt;NA&gt; white, red red NA none mascu… 9 Bigg… 183 84 black light brown 24 male mascu… 10 Obi-… 182 77 auburn, w… fair blue-gray 57 male mascu… # … with 77 more rows, and 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, # films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt; In the interests of demonstrating the process on the same data, I’ve exported the starwars data to a CSV file using the readr package. I had to remove the list-columns (films, vehicles, starships) because that format isn’t supported by SAS. You can access the csv data here. Note that I exported the data using ‘.’ as the NA/missing character so that it will be easy to read into SAS. library(readr) ## write_csv(starwars[,1:11], &quot;data/starwars.csv&quot;, na = &#39;.&#39;) Let’s set that data up first: libname classdat &quot;sas/&quot;; filename swdat &quot;data/starwars.csv&quot;; PROC IMPORT DATAFILE = swdat OUT = classdat.starwars DBMS = CSV REPLACE; GETNAMES = YES; RUN; PROC PRINT DATA=classdat.starwars (obs=10); RUN; Obs name height mass hair_color skin_color eye_color birth_year sex gender homeworld species 1 Luke Skywalker 172 77 blond fair blue 19 male masculine Tatooine Human 2 C-3PO 167 75 gold yellow 112 none masculine Tatooine Droid 3 R2-D2 96 32 white, blue red 33 none masculine Naboo Droid 4 Darth Vader 202 136 none white yellow 41.9 male masculine Tatooine Human 5 Leia Organa 150 49 brown light brown 19 female feminine Alderaan Human 6 Owen Lars 178 120 brown, grey light blue 52 male masculine Tatooine Human 7 Beru Whitesun lars 165 75 brown light blue 47 female feminine Tatooine Human 8 R5-D4 97 32 white, red red . none masculine Tatooine Droid 9 Biggs Darklighter 183 84 black light brown 24 male masculine Tatooine Human 10 Obi-Wan Kenobi 182 77 auburn, white fair blue-gray 57 male masculine Stewjon Human If you want to directly load the SAS datafile, you can find it here Once the data is set up, using filter is actually very simple. Demonstration of filter() in R # Get only the people filter(starwars, species == &quot;Human&quot;) # A tibble: 35 x 14 name height mass hair_color skin_color eye_color birth_year sex gender &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; 1 Luke… 172 77 blond fair blue 19 male mascu… 2 Dart… 202 136 none white yellow 41.9 male mascu… 3 Leia… 150 49 brown light brown 19 fema… femin… 4 Owen… 178 120 brown, gr… light blue 52 male mascu… 5 Beru… 165 75 brown light blue 47 fema… femin… 6 Bigg… 183 84 black light brown 24 male mascu… 7 Obi-… 182 77 auburn, w… fair blue-gray 57 male mascu… 8 Anak… 188 84 blond fair blue 41.9 male mascu… 9 Wilh… 180 NA auburn, g… fair blue 64 male mascu… 10 Han … 180 80 brown fair brown 29 male mascu… # … with 25 more rows, and 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, # films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt; # Get only the people who come from Tatooine filter(starwars, species == &quot;Human&quot;, homeworld == &quot;Tatooine&quot;) # A tibble: 8 x 14 name height mass hair_color skin_color eye_color birth_year sex gender &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; 1 Luke… 172 77 blond fair blue 19 male mascu… 2 Dart… 202 136 none white yellow 41.9 male mascu… 3 Owen… 178 120 brown, gr… light blue 52 male mascu… 4 Beru… 165 75 brown light blue 47 fema… femin… 5 Bigg… 183 84 black light brown 24 male mascu… 6 Anak… 188 84 blond fair blue 41.9 male mascu… 7 Shmi… 163 NA black fair brown 72 fema… femin… 8 Clie… 183 NA brown fair blue 82 male mascu… # … with 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;, # vehicles &lt;list&gt;, starships &lt;list&gt; In SAS, as in SQL, the filter() operation is accomplished using a where clause. Multiple clauses can be connected using and, and compound statements can be grouped with parentheses. Demonstration of where in SAS Rather than output the whole data table (which would take up a lot of space), I’ve linked the log file from each chunk below the chunk. If you are running this code in SAS, you should NOT copy the proc printto line. libname classdat &quot;sas/&quot;; /* SAS limits dataset names to 8 characters, which is super annoying. */ /* Sorry the names aren&#39;t descriptive... */ proc printto log=&quot;other/05-filter-1.log&quot; new; /* shows output log in bookdown */ DATA tmp1; /* this is the out dataset */ /* By not having a library attached, SAS places this in WORK */ /* It&#39;s a temporary dataset */ set classdat.starwars; where (species = &#39;Human&#39;); run; See the log file here libname classdat &quot;sas/&quot;; proc printto log=&quot;other/05-filter-2.log&quot; new; /* shows output log in bookdown */ DATA tmp2; set classdat.starwars; where (species = &#39;Human&#39;) and (homeworld = &#39;Tatooine&#39;); run; See the log file here At this point, you’ve seen the traditional SAS Data step options, but there is another SAS PROC that may be more useful (and more similar to dplyr). dplyr was developed to provide SQL-like syntax while enabling the use of more advanced computations than are supported in SQL. While SAS doesn’t have anything quite the same as dplyr, it does have PROC SQL. SAS PROC SQL In SQL, as in the SAS DATA step, filter() operations are performed using the keyword WHERE. To limit the output I’m going to cheat a bit and use SELECT statements before I officially teach them to you - this is mostly so you don’t get a table with all 49 variables in it. Similarly, I’m limiting the dataset to the first 5 observations that meet the condition so that we don’t have to see all the water type pokemon. libname classdat &quot;sas/&quot;; PROC SQL; SELECT pokedex_number, name, type_1, type_number FROM classdat.poke (obs=5) WHERE type_1 = &quot;Water&quot;; pokedex_number name type_1 type_number 7 Squirtle Water 1 8 Wartortle Water 1 9 Blastoise Water 1 9 Mega Blastoise Water 1 54 Psyduck Water 1 If we want to store the output of our query to a new table, we can do that by starting our query with CREATE TABLE &lt;table name&gt; AS - this creates a table with our results. libname classdat &quot;sas/&quot;; PROC SQL; CREATE TABLE aquapoke AS SELECT pokedex_number, name, type_1, type_2, type_number FROM classdat.poke WHERE (type_1 = &quot;Water&quot; OR type_2 = &quot;Water&quot;); PROC PRINT DATA=aquapoke (obs=10); RUN; Obs pokedex_number name type_1 type_2 type_number 1 7 Squirtle Water 1 2 8 Wartortle Water 1 3 9 Blastoise Water 1 4 9 Mega Blastoise Water 1 5 54 Psyduck Water 1 6 55 Golduck Water 1 7 60 Poliwag Water 1 8 61 Poliwhirl Water 1 9 62 Poliwrath Water Fighting 2 10 72 Tentacool Water Poison 2 5.2.1 Common Filter() Tasks In dplyr, there are a few helper functions which may be useful when constructing filter statements. row_number() - this is only used inside of another dplyr function (e.g. filter). You might want to keep only even rows, or only the first 10 rows in a table. filter(poke, (row_number() %% 2 == 0)) # A tibble: 514 x 51 X1 pokedex_number name german_name japanese_name generation status &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; 1 1 2 Ivys… Bisaknosp フシギソウ (Fushi… 1 Normal 2 3 3 Mega… Bisaflor フシギバナ (Fushi… 1 Normal 3 5 5 Char… Glutexo リザード (Lizard… 1 Normal 4 7 6 Mega… Glurak リザードン (Lizar… 1 Normal 5 9 7 Squi… Schiggy ゼニガメ (Zeniga… 1 Normal 6 11 9 Blas… Turtok カメックス (Kamex… 1 Normal 7 13 10 Cate… Raupy キャタピー (Cater… 1 Normal 8 15 12 Butt… Smettbo バタフリー (Butte… 1 Normal 9 17 14 Kaku… Kokuna コクーン (Cocoon… 1 Normal 10 19 15 Mega… Bibor スピアー (Spear)… 1 Normal # … with 504 more rows, and 44 more variables: species &lt;chr&gt;, # type_number &lt;dbl&gt;, type_1 &lt;fct&gt;, type_2 &lt;fct&gt;, height_m &lt;dbl&gt;, # weight_kg &lt;dbl&gt;, abilities_number &lt;dbl&gt;, ability_1 &lt;chr&gt;, ability_2 &lt;chr&gt;, # ability_hidden &lt;chr&gt;, total_points &lt;dbl&gt;, hp &lt;dbl&gt;, attack &lt;dbl&gt;, # defense &lt;dbl&gt;, sp_attack &lt;dbl&gt;, sp_defense &lt;dbl&gt;, speed &lt;dbl&gt;, # catch_rate &lt;dbl&gt;, base_friendship &lt;dbl&gt;, base_experience &lt;dbl&gt;, # growth_rate &lt;chr&gt;, egg_type_number &lt;dbl&gt;, egg_type_1 &lt;chr&gt;, # egg_type_2 &lt;chr&gt;, percentage_male &lt;dbl&gt;, egg_cycles &lt;dbl&gt;, # against_normal &lt;dbl&gt;, against_fire &lt;dbl&gt;, against_water &lt;dbl&gt;, # against_electric &lt;dbl&gt;, against_grass &lt;dbl&gt;, against_ice &lt;dbl&gt;, # against_fight &lt;dbl&gt;, against_poison &lt;dbl&gt;, against_ground &lt;dbl&gt;, # against_flying &lt;dbl&gt;, against_psychic &lt;dbl&gt;, against_bug &lt;dbl&gt;, # against_rock &lt;dbl&gt;, against_ghost &lt;dbl&gt;, against_dragon &lt;dbl&gt;, # against_dark &lt;dbl&gt;, against_steel &lt;dbl&gt;, against_fairy &lt;dbl&gt; # There are several pokemon who have multiple entries in the table, # so the pokedex_number doesn&#39;t line up with the row number. arrange() - sort rows in the table by one or more variables arrange(poke, desc(total_points)) # A tibble: 1,028 x 51 X1 pokedex_number name german_name japanese_name generation status &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; 1 1027 890 Eter… &lt;NA&gt; &lt;NA&gt; 8 Legen… 2 189 150 Mega… Mewtu ミュウツー (Mewtw… 1 Legen… 3 190 150 Mega… Mewtu ミュウツー (Mewtw… 1 Legen… 4 458 384 Mega… Rayquaza レックウザ (Rayqu… 3 Legen… 5 454 382 Prim… Kyogre カイオーガ (Kyogr… 3 Legen… 6 456 383 Prim… Groudon グラードン (Groud… 3 Legen… 7 930 800 Ultr… Necrozma ネクロズマ (Necro… 7 Legen… 8 584 493 Arce… Arceus アルセウス (Arceu… 4 Mythi… 9 1022 888 Zaci… &lt;NA&gt; &lt;NA&gt; 8 Legen… 10 1024 889 Zama… &lt;NA&gt; &lt;NA&gt; 8 Legen… # … with 1,018 more rows, and 44 more variables: species &lt;chr&gt;, # type_number &lt;dbl&gt;, type_1 &lt;fct&gt;, type_2 &lt;fct&gt;, height_m &lt;dbl&gt;, # weight_kg &lt;dbl&gt;, abilities_number &lt;dbl&gt;, ability_1 &lt;chr&gt;, ability_2 &lt;chr&gt;, # ability_hidden &lt;chr&gt;, total_points &lt;dbl&gt;, hp &lt;dbl&gt;, attack &lt;dbl&gt;, # defense &lt;dbl&gt;, sp_attack &lt;dbl&gt;, sp_defense &lt;dbl&gt;, speed &lt;dbl&gt;, # catch_rate &lt;dbl&gt;, base_friendship &lt;dbl&gt;, base_experience &lt;dbl&gt;, # growth_rate &lt;chr&gt;, egg_type_number &lt;dbl&gt;, egg_type_1 &lt;chr&gt;, # egg_type_2 &lt;chr&gt;, percentage_male &lt;dbl&gt;, egg_cycles &lt;dbl&gt;, # against_normal &lt;dbl&gt;, against_fire &lt;dbl&gt;, against_water &lt;dbl&gt;, # against_electric &lt;dbl&gt;, against_grass &lt;dbl&gt;, against_ice &lt;dbl&gt;, # against_fight &lt;dbl&gt;, against_poison &lt;dbl&gt;, against_ground &lt;dbl&gt;, # against_flying &lt;dbl&gt;, against_psychic &lt;dbl&gt;, against_bug &lt;dbl&gt;, # against_rock &lt;dbl&gt;, against_ghost &lt;dbl&gt;, against_dragon &lt;dbl&gt;, # against_dark &lt;dbl&gt;, against_steel &lt;dbl&gt;, against_fairy &lt;dbl&gt; slice_max() - this will keep the top values of a specified variable. It’s like a filter statement, but it’s a shortcut built to handle a common task. You could write a filter statement that would do this, but it would take a lot more code. slice_max(poke, order_by = total_points, n = 5) %&gt;% arrange(desc(total_points)) # Sort decreasing # A tibble: 6 x 51 X1 pokedex_number name german_name japanese_name generation status species &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; 1 1027 890 Eter… &lt;NA&gt; &lt;NA&gt; 8 Legen… Gigant… 2 189 150 Mega… Mewtu ミュウツー (Mewtw… 1 Legen… Geneti… 3 190 150 Mega… Mewtu ミュウツー (Mewtw… 1 Legen… Geneti… 4 458 384 Mega… Rayquaza レックウザ (Rayqu… 3 Legen… Sky Hi… 5 454 382 Prim… Kyogre カイオーガ (Kyogr… 3 Legen… Sea Ba… 6 456 383 Prim… Groudon グラードン (Groud… 3 Legen… Contin… # … with 43 more variables: type_number &lt;dbl&gt;, type_1 &lt;fct&gt;, type_2 &lt;fct&gt;, # height_m &lt;dbl&gt;, weight_kg &lt;dbl&gt;, abilities_number &lt;dbl&gt;, ability_1 &lt;chr&gt;, # ability_2 &lt;chr&gt;, ability_hidden &lt;chr&gt;, total_points &lt;dbl&gt;, hp &lt;dbl&gt;, # attack &lt;dbl&gt;, defense &lt;dbl&gt;, sp_attack &lt;dbl&gt;, sp_defense &lt;dbl&gt;, # speed &lt;dbl&gt;, catch_rate &lt;dbl&gt;, base_friendship &lt;dbl&gt;, # base_experience &lt;dbl&gt;, growth_rate &lt;chr&gt;, egg_type_number &lt;dbl&gt;, # egg_type_1 &lt;chr&gt;, egg_type_2 &lt;chr&gt;, percentage_male &lt;dbl&gt;, # egg_cycles &lt;dbl&gt;, against_normal &lt;dbl&gt;, against_fire &lt;dbl&gt;, # against_water &lt;dbl&gt;, against_electric &lt;dbl&gt;, against_grass &lt;dbl&gt;, # against_ice &lt;dbl&gt;, against_fight &lt;dbl&gt;, against_poison &lt;dbl&gt;, # against_ground &lt;dbl&gt;, against_flying &lt;dbl&gt;, against_psychic &lt;dbl&gt;, # against_bug &lt;dbl&gt;, against_rock &lt;dbl&gt;, against_ghost &lt;dbl&gt;, # against_dragon &lt;dbl&gt;, against_dark &lt;dbl&gt;, against_steel &lt;dbl&gt;, # against_fairy &lt;dbl&gt; By default, slice_max() returns values tied with the nth value as well, which is why our result has 6 rows. slice_max(poke, order_by = total_points, n = 5, with_ties = F) %&gt;% arrange(desc(total_points)) # Sort decreasing # A tibble: 5 x 51 X1 pokedex_number name german_name japanese_name generation status species &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; 1 1027 890 Eter… &lt;NA&gt; &lt;NA&gt; 8 Legen… Gigant… 2 189 150 Mega… Mewtu ミュウツー (Mewtw… 1 Legen… Geneti… 3 190 150 Mega… Mewtu ミュウツー (Mewtw… 1 Legen… Geneti… 4 458 384 Mega… Rayquaza レックウザ (Rayqu… 3 Legen… Sky Hi… 5 454 382 Prim… Kyogre カイオーガ (Kyogr… 3 Legen… Sea Ba… # … with 43 more variables: type_number &lt;dbl&gt;, type_1 &lt;fct&gt;, type_2 &lt;fct&gt;, # height_m &lt;dbl&gt;, weight_kg &lt;dbl&gt;, abilities_number &lt;dbl&gt;, ability_1 &lt;chr&gt;, # ability_2 &lt;chr&gt;, ability_hidden &lt;chr&gt;, total_points &lt;dbl&gt;, hp &lt;dbl&gt;, # attack &lt;dbl&gt;, defense &lt;dbl&gt;, sp_attack &lt;dbl&gt;, sp_defense &lt;dbl&gt;, # speed &lt;dbl&gt;, catch_rate &lt;dbl&gt;, base_friendship &lt;dbl&gt;, # base_experience &lt;dbl&gt;, growth_rate &lt;chr&gt;, egg_type_number &lt;dbl&gt;, # egg_type_1 &lt;chr&gt;, egg_type_2 &lt;chr&gt;, percentage_male &lt;dbl&gt;, # egg_cycles &lt;dbl&gt;, against_normal &lt;dbl&gt;, against_fire &lt;dbl&gt;, # against_water &lt;dbl&gt;, against_electric &lt;dbl&gt;, against_grass &lt;dbl&gt;, # against_ice &lt;dbl&gt;, against_fight &lt;dbl&gt;, against_poison &lt;dbl&gt;, # against_ground &lt;dbl&gt;, against_flying &lt;dbl&gt;, against_psychic &lt;dbl&gt;, # against_bug &lt;dbl&gt;, against_rock &lt;dbl&gt;, against_ghost &lt;dbl&gt;, # against_dragon &lt;dbl&gt;, against_dark &lt;dbl&gt;, against_steel &lt;dbl&gt;, # against_fairy &lt;dbl&gt; In SAS, these same tasks can sometimes require a bit more code. Keeping only certain rows in SAS In SAS, to use a variable, you have to define it in one data step, then make another data step in order to use that variable. But, like dplyr, SAS has a row number counter that we can use for this purpose. libname classdat &quot;sas/&quot;; DATA tmp; SET classdat.poke; rownum=_n_; /* SAS shorthand for row number */ RUN; DATA evenrow; SET WORK.tmp; WHERE MOD(rownum, 2) = 0; DROP rownum; /* ditch temp variable */ RUN; Top N values We’re going to want to use PROC SORT to get the data arranged before we take the top N values. According to this, we can’t use _n_ in a where statement, and the proposed solution isn’t reliable. So we’ll do it the long way. libname classdat &quot;sas/&quot;; PROC SORT DATA = classdat.poke OUT = pokesort; BY descending total_points; RUN; DATA poken; SET WORK.pokesort; rownum = _n_; RUN; DATA poken; SET WORK.poken; WHERE rownum &lt;= 5; DROP rownum; RUN; PROC PRINT DATA = poken; VAR pokedex_number name status species type_1 total_points; RUN; Obs pokedex_number name status species type_1 total_points 1 890 Eternatus Eternamax Legendary Gigantic Pokemon Poison 1125 2 150 Mega Mewtwo X Legendary Genetic Pokemon Psychic 780 3 150 Mega Mewtwo Y Legendary Genetic Pokemon Psychic 780 4 384 Mega Rayquaza Legendary Sky High Pokemon Dragon 780 5 382 Primal Kyogre Legendary Sea Basin Pokemon Water 770 In both cases, the SAS statements required to perform the task require a WHERE clause, but also a few other statements to get things working. The equivalent base R code would be about the same (though tricky in different spots). The thing that makes the tidyverse philosophy so addictive is that it makes these common, everyday tasks both easy and concise (that is, few lines of code are required). PROC SQL filter statements SQL doesn’t have an intrinsic notion of ordered rows, so in order to select even rows, we need to create a temporary dataset with _n_ copied into a variable (just like last time). libname classdat &quot;sas/&quot;; DATA poke; SET classdat.poke; rownum=_n_; RUN; PROC SQL; SELECT * FROM poke(obs=5) WHERE mod(rownum, 2) = 0; pokedex_number name german_name generation status species type_number type_1 type_2 height_m weight_kg abilities_number ability_1 ability_2 ability_hidden total_points hp attack defense sp_attack sp_defense speed catch_rate base_friendship base_experience growth_rate egg_type_number egg_type_1 egg_type_2 percentage_male egg_cycles against_normal against_fire against_water against_electric against_grass against_ice against_fight against_poison against_ground against_flying against_psychic against_bug against_rock against_ghost against_dragon against_dark against_steel against_fairy rownum 2 Ivysaur Bisaknosp 1 Normal Seed Pokemon 2 Grass Poison 1 13 2 Overgrow Chlorophyll 405 60 62 63 80 80 60 45 70 142 Medium Slow 2 Grass Monster 87.5 20 1 2 0.5 0.5 0.25 2 0.5 1 1 2 2 1 1 1 1 1 1 0.5 2 3 Mega Venusaur Bisaflor 1 Normal Seed Pokemon 2 Grass Poison 2.4 155.5 1 Thick Fat 625 80 100 123 122 120 80 45 70 281 Medium Slow 2 Grass Monster 87.5 20 1 1 0.5 0.5 0.25 1 0.5 1 1 2 2 1 1 1 1 1 1 0.5 4 5 Charmeleon Glutexo 1 Normal Flame Pokemon 1 Fire 1.1 19 2 Blaze Solar Power 405 58 64 58 80 65 80 45 70 142 Medium Slow 2 Dragon Monster 87.5 20 1 0.5 2 1 0.5 0.5 1 1 2 1 1 0.5 2 1 1 1 0.5 0.5 6 6 Mega Charizard X Glurak 1 Normal Flame Pokemon 2 Fire Dragon 1.7 110.5 1 Tough Claws 634 78 130 111 130 85 100 45 70 285 Medium Slow 2 Dragon Monster 87.5 20 1 0.25 1 0.5 0.25 1 1 1 2 1 1 0.5 2 1 2 1 0.5 1 8 7 Squirtle Schiggy 1 Normal Tiny Turtle Pokemon 1 Water 0.5 9 2 Torrent Rain Dish 314 44 48 65 50 64 43 45 70 63 Medium Slow 2 Monster Water 1 87.5 20 1 0.5 0.5 2 2 0.5 1 1 1 1 1 1 1 1 1 1 0.5 1 10 SELECT * says to select all variables. We’ll talk about SELECT in the next section, but with SQL it’s not reqlly possible to avoid using SELECT. If we want the 5 pokemon with the highest total points, we can use ORDER BY to sort the table, and then specify that we only want 5 rows. libname classdat &quot;sas/&quot;; PROC SQL; SELECT pokedex_number, name, status, species, type_1, total_points FROM classdat.poke(obs=5) ORDER BY total_points DESC; pokedex_number name status species type_1 total_points 3 Mega Venusaur Normal Seed Pokemon Grass 625 3 Venusaur Normal Seed Pokemon Grass 525 2 Ivysaur Normal Seed Pokemon Grass 405 1 Bulbasaur Normal Seed Pokemon Grass 318 4 Charmander Normal Lizard Pokemon Fire 309 As a reminder, if we want to store this new data into a new dataset, we have to start our statement with CREATE TABLE AS, and then follow the statement with our query. libname classdat &quot;sas/&quot;; PROC SQL; CREATE TABLE poketmp AS SELECT pokedex_number, name, status, species, type_1, total_points FROM classdat.poke(obs=5) ORDER BY total_points DESC; PROC PRINT DATA=poketmp; RUN; Obs pokedex_number name status species type_1 total_points 1 3 Mega Venusaur Normal Seed Pokemon Grass 625 2 3 Venusaur Normal Seed Pokemon Grass 525 3 2 Ivysaur Normal Seed Pokemon Grass 405 4 1 Bulbasaur Normal Seed Pokemon Grass 318 5 4 Charmander Normal Lizard Pokemon Fire 309 Try it out Using the pokemon data, can you create a new data set or data frame (SAS and R, respectively) that has only water type pokemon? Can you write a filter statement that looks for any pokemon which has water type for either type1 or type2? R poke &lt;- read_csv(&quot;data/pokemon_ascii.csv&quot;) Warning: 1 parsing failure. row col expected actual file 1028 weight_kg a double . &#39;data/pokemon_ascii.csv&#39; filter(poke, type_1 == &quot;Water&quot;) # A tibble: 134 x 49 pokedex_number name german_name generation status species type_number type_1 &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; 1 7 Squi… Schiggy 1 Normal Tiny T… 1 Water 2 8 Wart… Schillok 1 Normal Turtle… 1 Water 3 9 Blas… Turtok 1 Normal Shellf… 1 Water 4 9 Mega… Turtok 1 Normal Shellf… 1 Water 5 54 Psyd… Enton 1 Normal Duck P… 1 Water 6 55 Gold… Entoron 1 Normal Duck P… 1 Water 7 60 Poli… Quapsel 1 Normal Tadpol… 1 Water 8 61 Poli… Quaputzi 1 Normal Tadpol… 1 Water 9 62 Poli… Quappo 1 Normal Tadpol… 2 Water 10 72 Tent… Tentacha 1 Normal Jellyf… 2 Water # … with 124 more rows, and 41 more variables: type_2 &lt;chr&gt;, height_m &lt;dbl&gt;, # weight_kg &lt;dbl&gt;, abilities_number &lt;dbl&gt;, ability_1 &lt;chr&gt;, ability_2 &lt;chr&gt;, # ability_hidden &lt;chr&gt;, total_points &lt;dbl&gt;, hp &lt;dbl&gt;, attack &lt;dbl&gt;, # defense &lt;dbl&gt;, sp_attack &lt;dbl&gt;, sp_defense &lt;dbl&gt;, speed &lt;dbl&gt;, # catch_rate &lt;chr&gt;, base_friendship &lt;chr&gt;, base_experience &lt;chr&gt;, # growth_rate &lt;chr&gt;, egg_type_number &lt;dbl&gt;, egg_type_1 &lt;chr&gt;, # egg_type_2 &lt;chr&gt;, percentage_male &lt;chr&gt;, egg_cycles &lt;chr&gt;, # against_normal &lt;dbl&gt;, against_fire &lt;dbl&gt;, against_water &lt;dbl&gt;, # against_electric &lt;dbl&gt;, against_grass &lt;dbl&gt;, against_ice &lt;dbl&gt;, # against_fight &lt;dbl&gt;, against_poison &lt;dbl&gt;, against_ground &lt;dbl&gt;, # against_flying &lt;dbl&gt;, against_psychic &lt;dbl&gt;, against_bug &lt;dbl&gt;, # against_rock &lt;dbl&gt;, against_ghost &lt;dbl&gt;, against_dragon &lt;dbl&gt;, # against_dark &lt;dbl&gt;, against_steel &lt;dbl&gt;, against_fairy &lt;dbl&gt; filter(poke, type_1 == &quot;Water&quot; | type_2 == &quot;Water&quot;) # A tibble: 153 x 49 pokedex_number name german_name generation status species type_number type_1 &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; 1 7 Squi… Schiggy 1 Normal Tiny T… 1 Water 2 8 Wart… Schillok 1 Normal Turtle… 1 Water 3 9 Blas… Turtok 1 Normal Shellf… 1 Water 4 9 Mega… Turtok 1 Normal Shellf… 1 Water 5 54 Psyd… Enton 1 Normal Duck P… 1 Water 6 55 Gold… Entoron 1 Normal Duck P… 1 Water 7 60 Poli… Quapsel 1 Normal Tadpol… 1 Water 8 61 Poli… Quaputzi 1 Normal Tadpol… 1 Water 9 62 Poli… Quappo 1 Normal Tadpol… 2 Water 10 72 Tent… Tentacha 1 Normal Jellyf… 2 Water # … with 143 more rows, and 41 more variables: type_2 &lt;chr&gt;, height_m &lt;dbl&gt;, # weight_kg &lt;dbl&gt;, abilities_number &lt;dbl&gt;, ability_1 &lt;chr&gt;, ability_2 &lt;chr&gt;, # ability_hidden &lt;chr&gt;, total_points &lt;dbl&gt;, hp &lt;dbl&gt;, attack &lt;dbl&gt;, # defense &lt;dbl&gt;, sp_attack &lt;dbl&gt;, sp_defense &lt;dbl&gt;, speed &lt;dbl&gt;, # catch_rate &lt;chr&gt;, base_friendship &lt;chr&gt;, base_experience &lt;chr&gt;, # growth_rate &lt;chr&gt;, egg_type_number &lt;dbl&gt;, egg_type_1 &lt;chr&gt;, # egg_type_2 &lt;chr&gt;, percentage_male &lt;chr&gt;, egg_cycles &lt;chr&gt;, # against_normal &lt;dbl&gt;, against_fire &lt;dbl&gt;, against_water &lt;dbl&gt;, # against_electric &lt;dbl&gt;, against_grass &lt;dbl&gt;, against_ice &lt;dbl&gt;, # against_fight &lt;dbl&gt;, against_poison &lt;dbl&gt;, against_ground &lt;dbl&gt;, # against_flying &lt;dbl&gt;, against_psychic &lt;dbl&gt;, against_bug &lt;dbl&gt;, # against_rock &lt;dbl&gt;, against_ghost &lt;dbl&gt;, against_dragon &lt;dbl&gt;, # against_dark &lt;dbl&gt;, against_steel &lt;dbl&gt;, against_fairy &lt;dbl&gt; # The conditions have to be separated by |, which means &quot;or&quot; SAS DATA Step libname classdat &quot;sas/&quot;; DATA water1; SET classdat.poke; WHERE type_1 = &quot;Water&quot;; RUN; DATA water2; SET classdat.poke; WHERE (type_1 = &quot;Water&quot; OR type_2 = &quot;Water&quot;); RUN; In the interests of only showing the parts of the log that are useful, I’ve just pasted them into this chunk. Not reproducible, but faster to read. NOTE: There were 134 observations read from the data set CLASSDAT.POKE. WHERE type_1=&#39;Water&#39;; NOTE: The data set WORK.WATER1 has 134 observations and 49 variables. NOTE: DATA statement used (Total process time): real time 0.00 seconds cpu time 0.00 seconds NOTE: There were 153 observations read from the data set CLASSDAT.POKE. WHERE (type_1=&#39;Water&#39;) or (type_2=&#39;Water&#39;); NOTE: The data set WORK.WATER2 has 153 observations and 49 variables. NOTE: DATA statement used (Total process time): real time 0.00 seconds cpu time 0.00 seconds 5.3 Select: Pick columns Sometimes, we don’t want to work with a set of 50 variables when we’re only interested in 5. When that happens, we might be able to pick the variables we want by index (e.g. df[, c(1, 3, 5)], or VAR statements, but that can get tedious). In dplyr, the function to pick a few columns is select(). The syntax from the help file (?select) looks deceptively simple. select(.data, …) So as with just about every other tidyverse function, the first argument in a select statement is the data. After that, though, you can put just about anything that R can interpret. ... means something along the lines of “put in any additional arguments that make sense in context or might be passed on to other functions”. So what can go in there? An exhaustive list of ways to select variables in dplyr First, dplyr aims to work with standard R syntax, making it intuitive (and also, making it work with variable names instead of just variable indices).22 Most dplyr commands work with “bare” variable names - you don’t need to put the variable name in quotes to reference it. There are a few exceptions to this rule, but they’re very explicitly exceptions. var3:var5: select(df, var3:var5) will give you a data frame with columns var3, anything between var3 and var 5, and var5 !(&lt;set of variables&gt;) will give you any columns that aren’t in the set of variables in parentheses (&lt;set of vars 1&gt;) &amp; (&lt;set of vars 2&gt;) will give you any variables that are in both set 1 and set 2. (&lt;set of vars 1&gt;) | (&lt;set of vars 2&gt;) will give you any variables that are in either set 1 or set 2. c() combines sets of variables. dplyr also defines a lot of variable selection “helpers” that can be used inside select() statements. These statements work with bare column names (so you don’t have to put quotes around the column names when you use them). everything() matches all variables last_col() matches the last variable. last_col(offset = n) selects the n-th to last variable. starts_with(&quot;xyz&quot;) will match any columns with names that start with xyz. Similarly, ends_with() does exactly what you’d expect as well. contains(&quot;xyz&quot;) will match any columns with names containing the literal string “xyz”. Note, contains does not work with regular expressions (you don’t need to know what that means right now). matches(regex) takes a regular expression as an argument and returns all columns matching that expression. num_range(prefix, range) selects any columns that start with prefix and have numbers matching the provided numerical range. There are also selectors that deal with character vectors. These can be useful if you have a list of important variables and want to just keep those variables. all_of(char) matches all variable names in the character vector char. If one of the variables doesn’t exist, this will return an error. any_of(char) matches the contents of the character vector char, but does not throw an error if the variable doesn’t exist in the data set. There’s one final selector - where() applies a function to each variable and selects those for which the function returns TRUE. This provides a lot of flexibility and opportunity to be creative (but I’ve never actually needed to use it). Let’s try these selector functions out and see what we can accomplish! if (!&quot;nycflights13&quot; %in% installed.packages()) install.packages(&quot;nycflights13&quot;) library(nycflights13) data(flights) str(flights) tibble [336,776 × 19] (S3: tbl_df/tbl/data.frame) $ year : int [1:336776] 2013 2013 2013 2013 2013 2013 2013 2013 2013 2013 ... $ month : int [1:336776] 1 1 1 1 1 1 1 1 1 1 ... $ day : int [1:336776] 1 1 1 1 1 1 1 1 1 1 ... $ dep_time : int [1:336776] 517 533 542 544 554 554 555 557 557 558 ... $ sched_dep_time: int [1:336776] 515 529 540 545 600 558 600 600 600 600 ... $ dep_delay : num [1:336776] 2 4 2 -1 -6 -4 -5 -3 -3 -2 ... $ arr_time : int [1:336776] 830 850 923 1004 812 740 913 709 838 753 ... $ sched_arr_time: int [1:336776] 819 830 850 1022 837 728 854 723 846 745 ... $ arr_delay : num [1:336776] 11 20 33 -18 -25 12 19 -14 -8 8 ... $ carrier : chr [1:336776] &quot;UA&quot; &quot;UA&quot; &quot;AA&quot; &quot;B6&quot; ... $ flight : int [1:336776] 1545 1714 1141 725 461 1696 507 5708 79 301 ... $ tailnum : chr [1:336776] &quot;N14228&quot; &quot;N24211&quot; &quot;N619AA&quot; &quot;N804JB&quot; ... $ origin : chr [1:336776] &quot;EWR&quot; &quot;LGA&quot; &quot;JFK&quot; &quot;JFK&quot; ... $ dest : chr [1:336776] &quot;IAH&quot; &quot;IAH&quot; &quot;MIA&quot; &quot;BQN&quot; ... $ air_time : num [1:336776] 227 227 160 183 116 150 158 53 140 138 ... $ distance : num [1:336776] 1400 1416 1089 1576 762 ... $ hour : num [1:336776] 5 5 5 5 6 5 6 6 6 6 ... $ minute : num [1:336776] 15 29 40 45 0 58 0 0 0 0 ... $ time_hour : POSIXct[1:336776], format: &quot;2013-01-01 05:00:00&quot; &quot;2013-01-01 05:00:00&quot; ... We’ll start out with the nycflights13 package, which contains information on all flights that left a NYC airport to destinations in the US, Puerto Rico, and the US Virgin Islands. You might want to try out your EDA skills from the previous module to see what you can find out about the dataset, before seeing how select() works. We could get a data frame of departure information for each flight: select(flights, flight, year:day, tailnum, origin, matches(&quot;dep&quot;)) # A tibble: 336,776 x 9 flight year month day tailnum origin dep_time sched_dep_time dep_delay &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; 1 1545 2013 1 1 N14228 EWR 517 515 2 2 1714 2013 1 1 N24211 LGA 533 529 4 3 1141 2013 1 1 N619AA JFK 542 540 2 4 725 2013 1 1 N804JB JFK 544 545 -1 5 461 2013 1 1 N668DN LGA 554 600 -6 6 1696 2013 1 1 N39463 EWR 554 558 -4 7 507 2013 1 1 N516JB EWR 555 600 -5 8 5708 2013 1 1 N829AS LGA 557 600 -3 9 79 2013 1 1 N593JB JFK 557 600 -3 10 301 2013 1 1 N3ALAA LGA 558 600 -2 # … with 336,766 more rows Perhaps we want the plane and flight ID information to be the first columns: flights %&gt;% select(carrier:dest, everything()) # A tibble: 336,776 x 19 carrier flight tailnum origin dest year month day dep_time sched_dep_time &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; 1 UA 1545 N14228 EWR IAH 2013 1 1 517 515 2 UA 1714 N24211 LGA IAH 2013 1 1 533 529 3 AA 1141 N619AA JFK MIA 2013 1 1 542 540 4 B6 725 N804JB JFK BQN 2013 1 1 544 545 5 DL 461 N668DN LGA ATL 2013 1 1 554 600 6 UA 1696 N39463 EWR ORD 2013 1 1 554 558 7 B6 507 N516JB EWR FLL 2013 1 1 555 600 8 EV 5708 N829AS LGA IAD 2013 1 1 557 600 9 B6 79 N593JB JFK MCO 2013 1 1 557 600 10 AA 301 N3ALAA LGA ORD 2013 1 1 558 600 # … with 336,766 more rows, and 9 more variables: dep_delay &lt;dbl&gt;, # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, air_time &lt;dbl&gt;, # distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt; Note that everything() won’t duplicate columns you’ve already added. Exploring the difference between bare name selection and all_of()/any_of() flights %&gt;% select(carrier, flight, tailnum, matches(&quot;time&quot;)) # A tibble: 336,776 x 9 carrier flight tailnum dep_time sched_dep_time arr_time sched_arr_time &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; 1 UA 1545 N14228 517 515 830 819 2 UA 1714 N24211 533 529 850 830 3 AA 1141 N619AA 542 540 923 850 4 B6 725 N804JB 544 545 1004 1022 5 DL 461 N668DN 554 600 812 837 6 UA 1696 N39463 554 558 740 728 7 B6 507 N516JB 555 600 913 854 8 EV 5708 N829AS 557 600 709 723 9 B6 79 N593JB 557 600 838 846 10 AA 301 N3ALAA 558 600 753 745 # … with 336,766 more rows, and 2 more variables: air_time &lt;dbl&gt;, # time_hour &lt;dttm&gt; varlist &lt;- c(&quot;carrier&quot;, &quot;flight&quot;, &quot;tailnum&quot;, &quot;dep_time&quot;, &quot;sched_dep_time&quot;, &quot;arr_time&quot;, &quot;sched_arr_time&quot;, &quot;air_time&quot;) flights %&gt;% select(all_of(varlist)) # A tibble: 336,776 x 8 carrier flight tailnum dep_time sched_dep_time arr_time sched_arr_time &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; 1 UA 1545 N14228 517 515 830 819 2 UA 1714 N24211 533 529 850 830 3 AA 1141 N619AA 542 540 923 850 4 B6 725 N804JB 544 545 1004 1022 5 DL 461 N668DN 554 600 812 837 6 UA 1696 N39463 554 558 740 728 7 B6 507 N516JB 555 600 913 854 8 EV 5708 N829AS 557 600 709 723 9 B6 79 N593JB 557 600 838 846 10 AA 301 N3ALAA 558 600 753 745 # … with 336,766 more rows, and 1 more variable: air_time &lt;dbl&gt; varlist &lt;- c(varlist, &quot;whoops&quot;) flights %&gt;% select(all_of(varlist)) # this errors out b/c whoops doesn&#39;t exist Error: Can&#39;t subset columns that don&#39;t exist. [31mx[39m Column `whoops` doesn&#39;t exist. flights %&gt;% select(any_of(varlist)) # this runs just fine # A tibble: 336,776 x 8 carrier flight tailnum dep_time sched_dep_time arr_time sched_arr_time &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; 1 UA 1545 N14228 517 515 830 819 2 UA 1714 N24211 533 529 850 830 3 AA 1141 N619AA 542 540 923 850 4 B6 725 N804JB 544 545 1004 1022 5 DL 461 N668DN 554 600 812 837 6 UA 1696 N39463 554 558 740 728 7 B6 507 N516JB 555 600 913 854 8 EV 5708 N829AS 557 600 709 723 9 B6 79 N593JB 557 600 838 846 10 AA 301 N3ALAA 558 600 753 745 # … with 336,766 more rows, and 1 more variable: air_time &lt;dbl&gt; So for now, at least in R, you know how to cut your data down to size rowwise (with filter) and column-wise (with select). Unfortunately, SAS doesn’t make column selection quite as easy. It’s still not hard, but it can be tedious. In SAS, there are two primary methods to select variables: KEEP selects variables, DROP removes variables. # Export flights data for SAS flights %&gt;% sample_frac(size = .25) %&gt;% # Keep file from being too big write_csv(&quot;data/flights.csv&quot;, na = &quot;.&quot;) /* Read in data */ libname classdat &quot;sas/&quot;; filename fileloc &#39;~/Projects/Class/unl-stat850/2020-stat850/data/flights.csv&#39;; PROC IMPORT datafile = fileloc out=classdat.flights DBMS = csv; /* comma delimited file */ GETNAMES = YES; RUN; In SAS, a partial variable name either preceded or followed by : serves as a wildcard. Ranges of variables can be specified with two dashes, e.g. var3 -- var5. SAS KEEP statement Unfortunately, the wildcard doesn’t work on both ends, so to get the equivalent of matches(&quot;dep&quot;), we have to use two different options in our KEEP statement (plus the extra variables that don’t have dep in them). libname classdat &quot;sas/&quot;; DATA tmpfly; KEEP flight year--day tailnum origin dep: sched_dep:; SET classdat.flights; RUN; PROC PRINT DATA = tmpfly (obs=10); RUN; Obs year month day dep_time sched_dep_time dep_delay flight tailnum origin 1 2013 5 9 1855 1730 85 419 N203FR LGA 2 2013 9 11 1349 1355 -6 686 N667AW EWR 3 2013 5 23 2109 1745 204 785 N3DSAA LGA 4 2013 3 30 1251 1300 -9 315 N3752 JFK 5 2013 10 11 1555 1529 26 1246 N78524 EWR 6 2013 11 20 659 705 -6 1107 N3FUAA LGA 7 2013 1 4 837 830 7 313 N4WWAA LGA 8 2013 2 12 1900 1855 5 4649 N513MQ LGA 9 2013 5 20 1137 1140 -3 1191 N355JB JFK 10 2013 9 22 2136 1930 126 3497 N904XJ JFK Note also that SAS doesn’t reorder the columns for us like select() does. If we’d prefer to carve out columns (rather than assembling a new dataset with the columns we want to keep), we can use a DROP statement, which works exactly the same way. Let’s see what columns we removed implicitly last time by dropping everything we’d previously kept: SAS DROP statement libname classdat &quot;sas/&quot;; DATA tmpfly; DROP flight year--day tailnum origin dep: sched_dep:; SET classdat.flights; RUN; PROC PRINT DATA = tmpfly (obs=10); RUN; Obs arr_time sched_arr_time arr_delay carrier dest air_time distance hour minute time_hour 1 2116 1956 80 F9 DEN 224 1620 17 30 20130509T210000+0000 2 1544 1602 -18 US PHX 272 2133 13 55 20130911T170000+0000 3 2350 2050 180 AA DFW 204 1389 17 45 20130523T210000+0000 4 1630 1649 -19 DL SJU 200 1598 13 0 20130330T170000+0000 5 1851 1847 4 UA SFO 332 2565 15 29 20131011T190000+0000 6 958 955 3 AA DFW 201 1389 7 5 20131120T120000+0000 7 1044 1015 29 AA ORD 115 733 8 30 20130104T130000+0000 8 2042 2100 -18 MQ MSP 143 1020 18 55 20130212T230000+0000 9 1239 1247 -8 B6 ACK 45 199 11 40 20130520T150000+0000 10 2334 2125 129 9E RDU 68 427 19 30 20130922T230000+0000 As with the filter statements, we can also use PROC SQL instead of a SAS DATA step. There are even ways to (sort-of) use elements of both. SAS PROC SQL SELECT statement libname classdat &quot;sas/&quot;; PROC SQL; CREATE TABLE tmpfly AS SELECT flight, year, month, day, tailnum, origin FROM classdat.flights; PROC PRINT DATA = tmpfly(obs=10); RUN; Obs flight year month day tailnum origin 1 419 2013 5 9 N203FR LGA 2 686 2013 9 11 N667AW EWR 3 785 2013 5 23 N3DSAA LGA 4 315 2013 3 30 N3752 JFK 5 1246 2013 10 11 N78524 EWR 6 1107 2013 11 20 N3FUAA LGA 7 313 2013 1 4 N4WWAA LGA 8 4649 2013 2 12 N513MQ LGA 9 1191 2013 5 20 N355JB JFK 10 3497 2013 9 22 N904XJ JFK Note that PROC SQL doesn’t have a RUN statement - it is executed immediately. But, using the PROC SQL syntax, we still have to list out all of the variables, and that’s a drag. Luckily, PROC SQL will also let us use some of the DATA step options, if we’re careful about it: libname classdat &quot;sas/&quot;; PROC SQL; CREATE TABLE tmpfly AS SELECT * FROM classdat.flights(drop=year--day flight tailnum origin dep: sched_dep:); PROC PRINT DATA = tmpfly(obs=10); RUN; Obs arr_time sched_arr_time arr_delay carrier dest air_time distance hour minute time_hour 1 2116 1956 80 F9 DEN 224 1620 17 30 20130509T210000+0000 2 1544 1602 -18 US PHX 272 2133 13 55 20130911T170000+0000 3 2350 2050 180 AA DFW 204 1389 17 45 20130523T210000+0000 4 1630 1649 -19 DL SJU 200 1598 13 0 20130330T170000+0000 5 1851 1847 4 UA SFO 332 2565 15 29 20131011T190000+0000 6 958 955 3 AA DFW 201 1389 7 5 20131120T120000+0000 7 1044 1015 29 AA ORD 115 733 8 30 20130104T130000+0000 8 2042 2100 -18 MQ MSP 143 1020 18 55 20130212T230000+0000 9 1239 1247 -8 B6 ACK 45 199 11 40 20130520T150000+0000 10 2334 2125 129 9E RDU 68 427 19 30 20130922T230000+0000 Note the difference - we’re selecting everything (in SQL) but dropping columns when we tell SQL where to look for the data. For the most part, that is what you need to functionally replicate select() syntax. It may be a bit more work because there aren’t the same convenience functions, but it’ll do and you don’t have to remember as many keywords, so that’s a plus. 5.4 Mutate: Add and transform variables Up to this point, we’ve been primarily focusing on how to decrease the dimensionality of our dataset in various ways. But frequently, we also need to add columns for derived measures (e.g. BMI from weight and height information), change units, and replace missing or erroneous observations. The tidyverse verb for this is mutate. However, it’s probably best to start this section out with a very short demonstration of how this process worked in R before the tidyverse came around. Pre-tidyverse base R “mutating” a data frame Lets use the police violence data to demonstrate. Remember the issues you identified with the data during EDA in Module 4 (in SAS)(in R)? The gsub function is basically R’s version of “find and replace”. library(readxl) police_violence &lt;- read_xlsx(&quot;data/police_violence.xlsx&quot;, guess_max = 7000) # There are two categories for &quot;unknown race&quot; table(police_violence$`Victim&#39;s race`, useNA = &#39;ifany&#39;) Asian Black Hispanic Native American 118 1944 1335 112 Pacific Islander Unknown race Unknown Race White 42 670 64 3378 # This line substitutes &quot;race&quot; for &quot;Race&quot; so that there&#39;s consistent capitalization police_violence$race &lt;- gsub(&quot;Race&quot;, &quot;race&quot;, police_violence$`Victim&#39;s race`) # Fixed! table(police_violence$race) Asian Black Hispanic Native American 118 1944 1335 112 Pacific Islander Unknown race White 42 734 3378 You could do a simple operation like that in a single line, but you had to use the name of the data multiple times, and it very quickly becomes a complicated operation. The process in SAS is very similar. It’s recommended that you use one data step to read in your data, and then a separate data step to clean the data, so that you are separating the two operations. SAS DATA STEP - create a new variable We can create our variable a couple of different ways in SAS: - Use the TRANWRD function for find and replace. - Use an if statement and define the replacement ourselves Both are demonstrated below: libname classdat &quot;sas/&quot;; DATA pvtmp; SET classdat.police; race = tranwrd(victim_s_race, &quot;Race&quot;, &quot;race&quot;); race2 = victim_s_race; /* initialize it to current value */ IF victim_s_race=&#39;Unknown Race&#39; THEN race2 = &#39;Unknown race&#39;; RUN; PROC FREQ DATA = pvtmp ORDER=FREQ; /* Combinations of vars */ TABLES victim_s_race * race victim_s_race * race2 / NOCUM NOPERCENT NOCOL NOROW MAXLEVELS=10; RUN; The FREQ Procedure Table of Victim_s_race by race Victim_s_race(Victim&#39;s race) race Frequency |White |Black |Hispanic|Unknown | Total | | | |race | -----------------+--------+--------+--------+--------+ White | 3378 | 0 | 0 | 0 | 3378 -----------------+--------+--------+--------+--------+ Black | 0 | 1944 | 0 | 0 | 1944 -----------------+--------+--------+--------+--------+ Hispanic | 0 | 0 | 1335 | 0 | 1335 -----------------+--------+--------+--------+--------+ Unknown race | 0 | 0 | 0 | 670 | 670 -----------------+--------+--------+--------+--------+ Asian | 0 | 0 | 0 | 0 | 118 -----------------+--------+--------+--------+--------+ Native American | 0 | 0 | 0 | 0 | 112 -----------------+--------+--------+--------+--------+ Unknown Race | 0 | 0 | 0 | 64 | 64 -----------------+--------+--------+--------+--------+ Pacific Islander | 0 | 0 | 0 | 0 | 42 -----------------+--------+--------+--------+--------+ Total 3378 1944 1335 734 7663 (Continued) Table of Victim_s_race by race Victim_s_race(Victim&#39;s race) race Frequency |Asian |Native A|Pacific | Total | |merican |Islander| -----------------+--------+--------+--------+ White | 0 | 0 | 0 | 3378 -----------------+--------+--------+--------+ Black | 0 | 0 | 0 | 1944 -----------------+--------+--------+--------+ Hispanic | 0 | 0 | 0 | 1335 -----------------+--------+--------+--------+ Unknown race | 0 | 0 | 0 | 670 -----------------+--------+--------+--------+ Asian | 118 | 0 | 0 | 118 -----------------+--------+--------+--------+ Native American | 0 | 112 | 0 | 112 -----------------+--------+--------+--------+ Unknown Race | 0 | 0 | 0 | 64 -----------------+--------+--------+--------+ Pacific Islander | 0 | 0 | 42 | 42 -----------------+--------+--------+--------+ Total 118 112 42 7663 Table of Victim_s_race by race2 Victim_s_race(Victim&#39;s race) race2 Frequency |White |Black |Hispanic|Unknown | Total | | | |race | -----------------+--------+--------+--------+--------+ White | 3378 | 0 | 0 | 0 | 3378 -----------------+--------+--------+--------+--------+ Black | 0 | 1944 | 0 | 0 | 1944 -----------------+--------+--------+--------+--------+ Hispanic | 0 | 0 | 1335 | 0 | 1335 -----------------+--------+--------+--------+--------+ Unknown race | 0 | 0 | 0 | 670 | 670 -----------------+--------+--------+--------+--------+ Asian | 0 | 0 | 0 | 0 | 118 -----------------+--------+--------+--------+--------+ Native American | 0 | 0 | 0 | 0 | 112 -----------------+--------+--------+--------+--------+ Unknown Race | 0 | 0 | 0 | 64 | 64 -----------------+--------+--------+--------+--------+ Pacific Islander | 0 | 0 | 0 | 0 | 42 -----------------+--------+--------+--------+--------+ Total 3378 1944 1335 734 7663 (Continued) Table of Victim_s_race by race2 Victim_s_race(Victim&#39;s race) race2 Frequency |Asian |Native A|Pacific | Total | |merican |Islander| -----------------+--------+--------+--------+ White | 0 | 0 | 0 | 3378 -----------------+--------+--------+--------+ Black | 0 | 0 | 0 | 1944 -----------------+--------+--------+--------+ Hispanic | 0 | 0 | 0 | 1335 -----------------+--------+--------+--------+ Unknown race | 0 | 0 | 0 | 670 -----------------+--------+--------+--------+ Asian | 118 | 0 | 0 | 118 -----------------+--------+--------+--------+ Native American | 0 | 112 | 0 | 112 -----------------+--------+--------+--------+ Unknown Race | 0 | 0 | 0 | 64 -----------------+--------+--------+--------+ Pacific Islander | 0 | 0 | 42 | 42 -----------------+--------+--------+--------+ Total 118 112 42 7663 In both cases we can see that the recode worked the way we wanted and we’ve now gotten rid of the extra “unknown” category&quot;. We can also use PROC SQL to create new variables using relatively complex logic if necessary. SAS PROC SQL - create a new variable In SQL, you define new variables using AS. In SELECT statements, this definition has the computation on the left and the variable on the right23. CASE WHEN is the if-else statement in SQL. When (victim_s_race = ‘Unknown Race’), our variable value will be “Unknown race”, otherwise it will be what ever value is in victim_s_race. libname classdat &quot;sas/&quot;; PROC SQL; CREATE TABLE WORK.pvtmp AS SELECT * , CASE WHEN victim_s_race=&#39;Unknown Race&#39; THEN &#39;Unknown race&#39; ELSE victim_s_race END AS race FROM classdat.police; PROC FREQ DATA = pvtmp ORDER=FREQ; /* Combinations of vars */ TABLES victim_s_race * race / NOCUM NOPERCENT NOCOL NOROW MAXLEVELS=10; RUN; Frequency Table of Victim_s_race by race Victim_s_race(Victim'srace) race White Black Hispanic Unknown race Asian Native American Pacific Islander Total White 3378 0 0 0 0 0 0 3378 Black 0 1944 0 0 0 0 0 1944 Hispanic 0 0 1335 0 0 0 0 1335 Unknown race 0 0 0 670 0 0 0 670 Asian 0 0 0 0 118 0 0 118 Native American 0 0 0 0 0 112 0 112 Unknown Race 0 0 0 64 0 0 0 64 Pacific Islander 0 0 0 0 0 0 42 42 Total 3378 1944 1335 734 118 112 42 7663 The choice of which method to use (DATA step or PROC SQL) involves weighing these competing factors: - computational time - code readability - programmer time Personally, I find PROC SQL easier to work with, but I think the code is ugly. There are similar sql-syntax packages in R, but I don’t feel the need to use them, because (for me) dplyr code is much easier to read (and thus, easier to maintain). dplyr code is not as efficient as SQL (or other packages, like data.table) on big datasets, but there are variants such as dbplyr to handle some of those cases, and I find that they don’t come up very often in my work or research. If I were working at Google or Amazon, my opinion might be very different The fundamentals of mutate are very similar to the approaches above; the power of the dplyr approach is only really evident when you are doing multiple operations in the same step. Once you’re working at that level, the dplyr approach produces much more readable code. mutate() a new variable # The data was read in above... library(dplyr) police_violence %&gt;% mutate(race = gsub(&quot;Race&quot;, &quot;race&quot;, `Victim&#39;s race`)) %&gt;% select(`Victim&#39;s race`, race) %&gt;% table() race Victim&#39;s race Asian Black Hispanic Native American Pacific Islander Asian 118 0 0 0 0 Black 0 1944 0 0 0 Hispanic 0 0 1335 0 0 Native American 0 0 0 112 0 Pacific Islander 0 0 0 0 42 Unknown race 0 0 0 0 0 Unknown Race 0 0 0 0 0 White 0 0 0 0 0 race Victim&#39;s race Unknown race White Asian 0 0 Black 0 0 Hispanic 0 0 Native American 0 0 Pacific Islander 0 0 Unknown race 670 0 Unknown Race 64 0 White 0 3378 The last 2 rows are just to organize the output - we keep only the two variables we’re working with, and get a crosstab like PROC FREQ gave us in SAS. The learning curve here isn’t actually knowing how to use mutate (though that’s important). The challenge comes when you want to do something new and have to figure out how to e.g. use find and replace, or work with dates and times, or recode variables. I’m not going to be able to teach you how to handle every task you’ll come across (people invent new ways to screw up data all the time!) but my goal is instead to teach you how to read documentation and google things intelligently, and to understand what you’re reading enough to actually implement it. This is something that comes with practice (and lots of googling, stack overflow searches, etc.). It’s actually something of a common meme… I’m going to do my best to expose you to some of the solutions to common problems and even point you in the right direction, but I’m intentionally not formally teaching you some of these things, because part of learning how to program is learning how to read documentation and other resources to figure things out. It would be relatively easy to teach you how to do a set list of tasks, but you’ll be better statisticians and programmers if you learn the skills to solve any niche problem on your own. Figure 5.1: Apologies for the noninclusive language, but the sentiment is real, even if not stated in an inclusive way. What I will do is provide you with a quick list of packages in R which will solve some of the more common problems. Between that and the R cheatsheet, you should be set. In SAS, there are fewer options, so it’s less bewildering to google solutions (but I’ll link you to relevant pieces for the common SAS stuff too). Dates and times: lubridate package in R (esp. ymd_hms() and variants, decimal_date(), and other convenience functions). SAS Dates and Times. String manipulation: stringr package in R (str_replace(), str_remove(), str_detect(), str_split()) Regular Expression Cheatsheet (R) Common String operations in SAS Regular Expressions in SAS We’ll talk more about strings in the next module… 5.5 Summarize The next verb is one that we’ve already implicitly seen in action: summarize takes a data frame with potentially many rows of data and reduces it down to one row of data using some function. You have used it to get single-row summaries of vectorized data in R, and in SAS, PROC MEANS is essentially the same thing. Here (in a trivial example), I compute the overall average age of a victim of police violence, and then also compute the average number of characters in their name. Admittedly, that last computation is a bit silly, but it’s mostly for demonstration purposes. police_violence &lt;- read_xlsx(&quot;data/police_violence.xlsx&quot;, guess_max = 7000) police_violence %&gt;% mutate(age = as.numeric(`Victim&#39;s age`), name_length = nchar(`Victim&#39;s name`)) %&gt;% summarize(age = mean(age, na.rm = T), name_length = mean(name_length)) Warning: Problem with `mutate()` input `age`. ℹ NAs introduced by coercion ℹ Input `age` is `as.numeric(`Victim&#39;s age`)`. Warning in mask$eval_all_mutate(dots[[i]]): NAs introduced by coercion # A tibble: 1 x 2 age name_length &lt;dbl&gt; &lt;dbl&gt; 1 36.8 16.6 In SAS, we can do something similar: libname classdat &quot;sas/&quot;; DATA pv; SET classdat.police; age = INPUT(victim_s_age, 3.); name_len = LENGTH(victim_s_name); RUN; PROC MEANS DATA=pv; VAR age name_len; RUN; Variable N Mean Std Dev Minimum Maximum age name_len 7457 7663 36.7964329 16.6188177 13.2086517 4.4855341 1.0000000 7.0000000 107.0000000 49.0000000 By default, with SAS, we get a bit more than we bargained for; we can turn the extra output off with options. Another option is to use PROC SQL in SAS, which will have a logical flow similar to dplyr. libname classdat &quot;sas/&quot;; DATA pv; SET classdat.police; age = INPUT(victim_s_age, 3.); name_len = LENGTH(victim_s_name); RUN; PROC SQL; SELECT AVG(age) as age, AVG(name_len) as name_len FROM pv; age name_len 36.79643 16.61882 The real power of summarize, though, is in combination with Group By. We’ll see more summarize examples, but it’s easier to make good examples when you have all the tools - it’s hard to demonstrate how to use a hammer if you don’t also have a nail. 5.6 Group By + (?) = Power! Frequently, we have data that is more specific than the data we need - for instance, I may have observations of the temperature at 15-minute intervals, but I might want to record the daily high and low value. To do this, I need to split my dataset into smaller datasets - one for each day compute summary values for each smaller dataset put my summarized data back together into a single dataset group_by is the verb that accomplishes the first task. summarize accomplishes the second task and implicitly accomplishes the third as well. Replicating frequency tables using dplyr Let’s start with a trivial example: Suppose we want to count up every occurrence of a variable in a dataset. We can already do this with e.g. table(), but work with me for a moment. pv &lt;- read_xlsx(&quot;data/police_violence.xlsx&quot;, guess_max = 7000) %&gt;% mutate(race = gsub(&quot;Race&quot;, &quot;race&quot;, `Victim&#39;s race`), age = as.numeric(`Victim&#39;s age`)) %&gt;% select(name = `Victim&#39;s name`, age, gender = `Victim&#39;s gender`, race) Warning: Problem with `mutate()` input `age`. ℹ NAs introduced by coercion ℹ Input `age` is `as.numeric(`Victim&#39;s age`)`. Warning in mask$eval_all_mutate(dots[[i]]): NAs introduced by coercion # You can rename variables with a select statement # I&#39;m doing this b/c I don&#39;t like to use backticks if I can help it. # Lazy coding = best coding. grouped_pv &lt;- pv %&gt;% group_by(race) grouped_pv # A tibble: 7,663 x 4 # Groups: race [7] name age gender race &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; 1 Eric M. Tellez 28 Male White 2 Name withheld by police NA Male Unknown race 3 Terry Hudson 57 Male Black 4 Malik Williams 23 Male Black 5 Frederick Perkins 37 Male Black 6 Michael Vincent Davis 49 Male White 7 Brian Elkins 47 Male Unknown race 8 Debra D. Arbuckle 51 Female White 9 Name withheld by police NA Male Unknown race 10 Cody McCaulou 27 Male White # … with 7,653 more rows So we can see that the object has been somehow grouped by the categorical variable race, in that the grouping is attached to the stored object (strictly speaking, group_by adds an attribute to the table). What matters for our purposes, though, is that each sub-table is treated as a separate entity for calculation purposes. pv_race_sum &lt;- grouped_pv %&gt;% summarize(n = n()) # This counts the number of rows in each group `summarise()` ungrouping output (override with `.groups` argument) pv_race_sum # A tibble: 7 x 2 race n &lt;chr&gt; &lt;int&gt; 1 Asian 118 2 Black 1944 3 Hispanic 1335 4 Native American 112 5 Pacific Islander 42 6 Unknown race 734 7 White 3378 When we run summarize, we get back a data frame that is not grouped, with one line for each of the previously existing groups. summarize removes one “layer” of grouping with each run. One layer of grouping? What does that mean? tmp &lt;- pv %&gt;% group_by(gender, race) tmp # A tibble: 7,663 x 4 # Groups: gender, race [26] name age gender race &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; 1 Eric M. Tellez 28 Male White 2 Name withheld by police NA Male Unknown race 3 Terry Hudson 57 Male Black 4 Malik Williams 23 Male Black 5 Frederick Perkins 37 Male Black 6 Michael Vincent Davis 49 Male White 7 Brian Elkins 47 Male Unknown race 8 Debra D. Arbuckle 51 Female White 9 Name withheld by police NA Male Unknown race 10 Cody McCaulou 27 Male White # … with 7,653 more rows tmp %&gt;% summarize(min_age = min(age, na.rm = T), max_age = max(age, na.rm = T)) Warning in min(age, na.rm = T): no non-missing arguments to min; returning Inf Warning in min(age, na.rm = T): no non-missing arguments to min; returning Inf Warning in min(age, na.rm = T): no non-missing arguments to min; returning Inf Warning in min(age, na.rm = T): no non-missing arguments to min; returning Inf Warning in min(age, na.rm = T): no non-missing arguments to min; returning Inf Warning in min(age, na.rm = T): no non-missing arguments to min; returning Inf Warning in max(age, na.rm = T): no non-missing arguments to max; returning -Inf Warning in max(age, na.rm = T): no non-missing arguments to max; returning -Inf Warning in max(age, na.rm = T): no non-missing arguments to max; returning -Inf Warning in max(age, na.rm = T): no non-missing arguments to max; returning -Inf Warning in max(age, na.rm = T): no non-missing arguments to max; returning -Inf Warning in max(age, na.rm = T): no non-missing arguments to max; returning -Inf `summarise()` regrouping output by &#39;gender&#39; (override with `.groups` argument) # A tibble: 26 x 4 # Groups: gender [5] gender race min_age max_age &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Female Asian 27 49 2 Female Black 20 93 3 Female Hispanic 16 57 4 Female Native American 23 52 5 Female Pacific Islander 26 50 6 Female Unknown race 23 74 7 Female White 5 89 8 Male Asian 16 76 9 Male Black 1 107 10 Male Hispanic 1 80 # … with 16 more rows Apart from some warnings about how it’s hard to take the minimum or maximum of a bunch of missing data (which is fair), we can see a message: summarise() regrouping output by ‘gender’ (override with ‘.groups’ argument) What this message is saying is that it is essentially dropping one layer of grouping (race) and grouping only by gender – but it’s also nice enough to tell you that you can override the default option if you want to do so by using the .groups argument. ?summarize24 gives you several options for how to handle the grouping of the result. We grouped pv by gender and race, then ran summarize, which created one row for each combination of gender and race and “glued” them together. The resulting data frame is still grouped by gender, but because there’s only one row for each race (for each level/group of gender), there’s no reason to have that level of grouping anymore. So it’s dropped by default. Replicating PROC FREQ using PROC SQL libname classdat &quot;sas/&quot;; DATA pv; SET classdat.police; age = INPUT(victim_s_age, 3.); IF victim_s_gender=&#39; &#39; THEN victim_s_gender=&#39;Unknown&#39;; race = victim_s_race; /* initialize it to current value */ IF victim_s_race=&#39;Unknown Race&#39; THEN race = &#39;Unknown race&#39;; RUN; PROC SQL; SELECT victim_s_gender AS gender, race, count(*) AS n FROM pv GROUP BY race; PROC SQL; SELECT victim_s_gender AS gender, race, count(*) AS n, min(age) AS min_age, max(age) AS max_age FROM pv GROUP BY gender, race; Victim's gender race n Male Asian 118 Male Asian 118 Female Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Female Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Unknown Asian 118 Male Asian 118 Male Asian 118 Female Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Female Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Female Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Female Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Asian 118 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Transgender Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Unknown Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Unknown Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Transgender Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Female Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Black 1944 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Unknown Hispanic 1335 Unknown Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Transgender Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Female Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Male Hispanic 1335 Unknown Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Female Native American 112 Female Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Female Native American 112 Female Native American 112 Male Native American 112 Male Native American 112 Female Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Female Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Male Native American 112 Female Native American 112 Male Native American 112 Male Native American 112 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Female Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Female Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Pacific Islander 42 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Unknown Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Unknown Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Unknown Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Transgender Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Unknown Unknown race 734 Female Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male Unknown race 734 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Unknown White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Female White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Transgender White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Female White 3378 Female White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Unknown White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Female White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Transgender White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Transgender White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Female White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Male White 3378 Victim's gender race n min_age max_age Female Asian 6 27 49 Female Black 69 20 93 Female Hispanic 49 16 57 Female Native American 7 23 52 Female Pacific Islander 2 26 50 Female Unknown race 35 23 74 Female White 223 5 89 Male Asian 111 16 76 Male Black 1871 1 107 Male Hispanic 1283 1 80 Male Native American 104 14 61 Male Pacific Islander 40 15 60 Male Unknown race 694 15 89 Male White 3150 1 95 Transgender Black 2 27 30 Transgender Hispanic 1 28 28 Transgender Unknown race 1 32 32 Transgender White 3 21 24 Unknown Asian 1 25 25 Unknown Black 2 29 29 Unknown Hispanic 2 . . Unknown Native American 1 . . Unknown Unknown race 4 . . Unknown White 2 . . Let’s try a non-trivial example, using the storms dataset that is part of the dplyr package: Reading in the data (R and SAS) library(dplyr) library(lubridate) # for the make_datetime() function data(storms) storms # A tibble: 10,010 x 13 name year month day hour lat long status category wind pressure &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;ord&gt; &lt;int&gt; &lt;int&gt; 1 Amy 1975 6 27 0 27.5 -79 tropi… -1 25 1013 2 Amy 1975 6 27 6 28.5 -79 tropi… -1 25 1013 3 Amy 1975 6 27 12 29.5 -79 tropi… -1 25 1013 4 Amy 1975 6 27 18 30.5 -79 tropi… -1 25 1013 5 Amy 1975 6 28 0 31.5 -78.8 tropi… -1 25 1012 6 Amy 1975 6 28 6 32.4 -78.7 tropi… -1 25 1012 7 Amy 1975 6 28 12 33.3 -78 tropi… -1 25 1011 8 Amy 1975 6 28 18 34 -77 tropi… -1 30 1006 9 Amy 1975 6 29 0 34.4 -75.8 tropi… 0 35 1004 10 Amy 1975 6 29 6 34 -74.8 tropi… 0 40 1002 # … with 10,000 more rows, and 2 more variables: ts_diameter &lt;dbl&gt;, # hu_diameter &lt;dbl&gt; storms &lt;- storms %&gt;% # Construct a time variable that behaves like a number but is formatted as a date mutate(time = make_datetime(year, month, day, hour)) libname classdat &quot;sas/&quot;; filename fileloc &#39;~/Projects/Class/unl-stat850/2020-stat850/data/storms.csv&#39;; PROC IMPORT datafile = fileloc out=classdat.storms REPLACE DBMS = csv; /* comma delimited file */ GUESSINGROWS=500; GETNAMES = YES; RUN; DATA classdat.storms; SET classdat.storms; date = MDY(month, day, year); time = DHMS(date, hour, 0, 0); FORMAT time DATETIME.; RUN; We have named storms, observation time, storm location, status, wind, pressure, and diameter (for tropical storms and hurricanes). One thing we might want to know is at what point each storm was the strongest. Let’s define strongest in the following way: The points where the storm is at its lowest atmospheric pressure (generally, the lower the atmospheric pressure, the more trouble a tropical disturbance will cause). If there’s a tie, we might want to know when the maximum wind speed occurred. If that still doesn’t get us a single row for each observation, lets just pick out the status and category (these are determined by wind speed, so they should be the same if maximum wind speed is the same) and compute the average time where this occurred. group_by + filter + summary in R max_power_storm &lt;- storms %&gt;% # Storm names can be reused, so we need to have year to be sure it&#39;s the same instance group_by(name, year) %&gt;% filter(pressure == min(pressure, na.rm = T)) %&gt;% filter(wind == max(wind, na.rm = T)) %&gt;% summarize(pressure = mean(pressure), wind = mean(wind), category = unique(category), status = unique(status), time = mean(time)) %&gt;% arrange(time) %&gt;% ungroup() `summarise()` regrouping output by &#39;name&#39; (override with `.groups` argument) max_power_storm # A tibble: 426 x 7 name year pressure wind category status time &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;ord&gt; &lt;chr&gt; &lt;dttm&gt; 1 Amy 1975 981 60 0 tropical storm 1975-07-02 12:00:00 2 Caroline 1975 963 100 3 hurricane 1975-08-31 06:00:00 3 Doris 1975 965 95 2 hurricane 1975-09-02 21:00:00 4 Belle 1976 957 105 3 hurricane 1976-08-09 00:00:00 5 Gloria 1976 970 80 1 hurricane 1976-09-30 00:00:00 6 Anita 1977 926 150 5 hurricane 1977-09-02 06:00:00 7 Clara 1977 993 65 1 hurricane 1977-09-08 12:00:00 8 Evelyn 1977 994 65 1 hurricane 1977-10-15 00:00:00 9 Amelia 1978 1005 45 0 tropical storm 1978-07-31 00:00:00 10 Bess 1978 1005 40 0 tropical storm 1978-08-07 12:00:00 # … with 416 more rows If we want to see a visual summary, we could plot a histogram of the minimum pressure of each storm. library(ggplot2) ggplot(max_power_storm, aes(x = pressure)) + geom_histogram() `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. We could also look to see whether there has been any change over time in pressure. ggplot(max_power_storm, aes(x = time, y = pressure)) + geom_point() It seems to me that there are fewer high-pressure storms before 1990 or so, which may be due to the fact that some weak storms may not have been observed or recorded prior to widespread radar coverage in the Atlantic (see this coverage map from 1995). Proc SQL in SAS In SAS, this is going to require some work. Specifically, while dplyr commands are stated in recipe order (do this, then this), SQL statements… aren’t. WHERE comes after SELECT xxx FROM yyy, and GROUP BY comes after that again. There are a couple of ways to handle that: sub-queries, and creating temporary tables. I think the temporary tables approach will be easier to demonstrate, read, and understand, so lets go with that. Another challenge will be the fact that SAS PROC SQL doesn’t handle missing data quite as easily as dplyr does (na.rm is a very nice function, all things considered). We can think through the steps we need to take: 1. Create a table where wind and pressure observations aren’t missing. We’ll call that tmp1. 2. Filter tmp1, keeping only rows with minimum pressure and maximum wind for each storm/year combination (HAVING is like WHERE, but after the GROUP BY clause has been applied). We’ll call that tmp2. We can also select the variables we care about in this step. 3. Summarize tmp2, keeping columns name, year, pressure, wind, category, status, and time, where time is the mean of all maximum-power observations. The other variables should have only one value each. We can accomplish this task using the combination of SELECT and DISTINCT. DISTINCT says “keep only rows with new combinations of these values”. (Note also that we can format values inline in proc SQL Select statements. That forces SAS to treat time as a date-time variable, which will force it to format correctly in e.g. plots.) libname classdat &quot;sas/&quot;; PROC SQL; CREATE TABLE tmp1 AS SELECT * FROM classdat.storms WHERE (NOT missing(pressure)) AND (NOT missing(wind)); CREATE TABLE tmp2 AS SELECT name, year, pressure, wind, category, status, time, min(pressure) AS minpressure, max(wind) AS maxwind FROM tmp1 GROUP BY year, name HAVING pressure = minpressure AND wind = maxwind; CREATE TABLE maxpwr AS SELECT DISTINCT name, year, pressure, wind, category, status, mean(time) AS time format=DATETIME. FROM tmp2 GROUP BY year, name; QUIT; PROC PRINT DATA=maxpwr (obs=5); RUN; ODS GRAPHICS ON; ODS TRACE ON; /* this allows us to select only the plot and not tables */ ODS SELECT HISTOGRAM; PROC UNIVARIATE DATA=maxpwr; VAR pressure; HISTOGRAM; RUN; ODS TRACE OFF; PROC SGPLOT DATA=maxpwr; scatter X = time Y = pressure; RUN; ODS GRAPHICS OFF; Obs name year pressure wind category status time 1 AL011993 1993 999 30 -1 tropical depression 01JUN93:21:00:00 2 AL012000 2000 1008 25 -1 tropical depression 07JUN00:18:00:00 3 AL021992 1992 1007 30 -1 tropical depression 26JUN92:03:00:00 4 AL021994 1994 1015 30 -1 tropical depression 20JUL94:13:00:00 5 AL021999 1999 1004 30 -1 tropical depression 03JUL99:02:00:00 Another interesting way to look at this data would be to examine the duration of time a storm existed, as a function of its maximum category. Do stronger storms exist for a longer period of time? storm_strength_duration &lt;- storms %&gt;% group_by(name, year) %&gt;% summarize(duration = difftime(max(time), min(time), units = &quot;days&quot;), max_strength = max(category)) %&gt;% ungroup() %&gt;% arrange(desc(max_strength)) `summarise()` regrouping output by &#39;name&#39; (override with `.groups` argument) storm_strength_duration %&gt;% ggplot(aes(x = max_strength, y = duration)) + geom_boxplot() Don&#39;t know how to automatically pick scale for object of type difftime. Defaulting to continuous. You don’t need to know how to create these plots yet, but I find it much easier to look at the chart and answer the question I started out with. In SAS, we have to know that datetimes are stored in seconds. So if we subtract two date time values, and we want our answer in days, then we need to divide by the number of seconds in a day: 24*60*60 = 86400. R has helper functions to do this for us, but it’s not that much harder to just do the computuation ourselves. libname classdat &quot;sas/&quot;; PROC SQL; CREATE TABLE stormlencat AS SELECT name, year, (max(time) - min(time))/86400 AS duration, max(category) AS max_strength FROM classdat.storms GROUP BY year, name ORDER BY max_strength; PROC BOXPLOT DATA=stormlencat; PLOT duration * max_strength; RUN; We could also look to see how a storm’s diameter evolves over time, from when the storm is first identified (group_by + mutate) Diameter measurements don’t exist for all storms, and they appear to measure the diameter of the wind field - that is, the region where the winds are hurricane or tropical storm force. (?storms documents the dataset and its variables). Note the use of as.numeric(as.character(max(category))) to get the maximum (ordinal categorial) strength and convert that into something numeric that can be plotted. storm_evolution &lt;- storms %&gt;% filter(!is.na(hu_diameter)) %&gt;% group_by(name, year) %&gt;% mutate(time_since_start = difftime(time, min(time), units = &quot;days&quot;)) %&gt;% ungroup() ggplot(storm_evolution, aes(x = time_since_start, y = hu_diameter, group = name)) + geom_line(alpha = .2) + facet_wrap(~year, scales = &quot;free_y&quot;) Don&#39;t know how to automatically pick scale for object of type difftime. Defaulting to continuous. For this plot, I’ve added facet_wrap(~year) to produce sub-plots for each year. This helps us to be able to see some individuality, because otherwise there are far too many storms. We can do something similar in SAS; this time, I decided to get rid of any storm which never had hurricane-force winds - that will get rid of a lot of lines that never leave the x-axis. libname classdat &quot;sas/&quot;; PROC SQL; CREATE TABLE stormevo AS SELECT name, year, (time - min(time))/86400 AS time_since_start, category, status, hu_diameter, ts_diameter, max(hu_diameter) AS max_hu_diameter FROM classdat.storms WHERE NOT MISSING(hu_diameter) GROUP BY year, name HAVING max_hu_diameter &gt; 0 ORDER BY year, name, time_since_start; PROC SGPANEL DATA=stormevo; PANELBY year / COLUMNS = 4 ROWS = 3; SERIES X = time_since_start Y = hu_diameter / GROUP = name; RUN; PROC SGPANEL in SAS does essentially the same thing as facet_wrap() in R - it allows you to select one or more variables to create sub-plots for. We do have to manually specify how many rows and columns (or SAS will give us 3 separate plots with 4 panels each). The essential components of the graph specification are the same - instead of specifying the use of a line, we specify “series” (which means plot a line). We specify the same x, y, and group variables, though the syntax differs a bit. It seems that the vast majority of storms have a single bout of hurricane force winds (which either decreases or just terminates near the peak, presumably when the storm hits land and rapidly disintegrates). However, there are a few interesting exceptions - my favorite is in 2008 - the longest-lasting storm seems to have several local peaks in wind field diameter. If we want, we can examine that further by plotting it separately. storm_evolution %&gt;% filter(year == 2008) %&gt;% arrange(desc(time_since_start)) # A tibble: 327 x 15 name year month day hour lat long status category wind pressure &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;ord&gt; &lt;int&gt; &lt;int&gt; 1 Ike 2008 9 14 6 35.5 -93.7 tropi… 0 35 985 2 Ike 2008 9 14 0 33.5 -94.9 tropi… 0 35 980 3 Ike 2008 9 13 18 31.7 -95.3 tropi… 0 50 974 4 Ike 2008 9 13 12 30.3 -95.2 hurri… 2 85 959 5 Ike 2008 9 13 7 29.3 -94.7 hurri… 2 95 950 6 Ike 2008 9 13 6 29.1 -94.6 hurri… 2 95 951 7 Ike 2008 9 13 0 28.3 -94 hurri… 2 95 952 8 Fay 2008 8 27 0 35 -85.8 tropi… -1 15 1005 9 Ike 2008 9 12 18 27.5 -93.2 hurri… 2 95 954 10 Fay 2008 8 26 18 34.6 -86.5 tropi… -1 20 1004 # … with 317 more rows, and 4 more variables: ts_diameter &lt;dbl&gt;, # hu_diameter &lt;dbl&gt;, time &lt;dttm&gt;, time_since_start &lt;drtn&gt; storm_evolution %&gt;% filter(name == &quot;Ike&quot;) %&gt;% ggplot(aes(x = time, y = hu_diameter, color = category)) + geom_point() The SAS code for this is fairly similar (though I’ll admit to not having the finesse with SAS to get a truly nice looking plot). At this point, we’re going for quick-and-dirty graphics that show us what we want to know - we can figure out how to customize things later. libname classdat &quot;sas/&quot;; PROC SQL; CREATE TABLE ike AS SELECT * FROM classdat.storms WHERE name = &quot;Ike&quot; ORDER BY time; PROC SGPLOT DATA=ike; SCATTER X = time Y = hu_diameter / COLORRESPONSE=category /* color by another variable */ MARKERATTRS=(symbol=CircleFilled) /* use circles for points */ DATALABEL=category; /* label the circles with the value */ RUN; While I’m tempted to plot out the diameter and location on a map, it’s a bit excessive for this particular problem. Luckily, Wikipedia has us covered: It looks like Ike went long-ways across Cuba, which weakened it. When hurricanes weaken, often their wind fields expand (as they no longer have the angular momentum to maintain a tight structure). Ike crossed into the Gulf of Mexico, restrengthened, and then hit Houston just about dead-on. (I was living just northwest of Houston when it hit (in College Station), and I can verify that it was not a fun time). Try it out Data Setup if (!&quot;gapminder&quot; %in% installed.packages()) install.packages(&quot;gapminder&quot;) library(gapminder) gapminder_unfiltered # A tibble: 3,313 x 6 country continent year lifeExp pop gdpPercap &lt;fct&gt; &lt;fct&gt; &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; 1 Afghanistan Asia 1952 28.8 8425333 779. 2 Afghanistan Asia 1957 30.3 9240934 821. 3 Afghanistan Asia 1962 32.0 10267083 853. 4 Afghanistan Asia 1967 34.0 11537966 836. 5 Afghanistan Asia 1972 36.1 13079460 740. 6 Afghanistan Asia 1977 38.4 14880372 786. 7 Afghanistan Asia 1982 39.9 12881816 978. 8 Afghanistan Asia 1987 40.8 13867957 852. 9 Afghanistan Asia 1992 41.7 16317921 649. 10 Afghanistan Asia 1997 41.8 22227415 635. # … with 3,303 more rows libname classdat &quot;sas/&quot;; filename fileloc &#39;~/Projects/Class/unl-stat850/2020-stat850/data/gapminder.csv&#39;; PROC IMPORT datafile = fileloc out=classdat.gapminder REPLACE DBMS = csv; /* comma delimited file */ GUESSINGROWS=500; GETNAMES = YES; RUN; You can read about the gapminder project here. The gapminder data used for this set of problems contains data from 142 countries on 5 continents. The filtered data in gapminder (in R) contain data about every 5 year period between 1952 and 2007, the country’s life expectancy at birth, population, and per capita GDP (in US $, inflation adjusted). In the gapminder_unfiltered table, however, things are a bit different. Some countries have yearly data, observations are missing, and some countries don’t have complete data. I’ve exported the gapminder_unfiltered table to CSV for import into SAS as well - try to do these tasks in both languages. Task 1: How bad is it? Using your EDA skills, determine how bad the unfiltered data are. You may want to look for missing values, number of records, etc. Use WHERE or filter to show any countries which have incomplete data. Describe, in words, what operations were necessary to get this information. R gapminder_unfiltered %&gt;% group_by(country) %&gt;% summarize(n = n(), missinglifeExp = sum(is.na(lifeExp)), missingpop = sum(is.na(pop)), missingGDP = sum(is.na(gdpPercap))) %&gt;% filter(n != length(seq(1952, 2007, by = 5))) `summarise()` ungrouping output (override with `.groups` argument) # A tibble: 83 x 5 country n missinglifeExp missingpop missingGDP &lt;fct&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; 1 Armenia 4 0 0 0 2 Aruba 8 0 0 0 3 Australia 56 0 0 0 4 Austria 57 0 0 0 5 Azerbaijan 4 0 0 0 6 Bahamas 10 0 0 0 7 Barbados 10 0 0 0 8 Belarus 18 0 0 0 9 Belgium 57 0 0 0 10 Belize 11 0 0 0 # … with 73 more rows SAS libname classdat &quot;sas/&quot;; PROC SQL; CREATE TABLE gapsummary AS SELECT DISTINCT country, COUNT(*) AS n, SUM(MISSING(lifeExp)) AS missinglifeExp, SUM(MISSING(pop)) AS missingpop, SUM(MISSING(gdpPercap)) AS missingGDP FROM classdat.gapminder GROUP BY country; /* Print the problem countries only */ PROC PRINT DATA = gapsummary; WHERE n ^= 12; RUN; Obs country n missinglifeExp missingpop missingGDP 6 Armenia 4 0 0 0 7 Aruba 8 0 0 0 8 Australia 56 0 0 0 9 Austria 57 0 0 0 10 Azerbaijan 4 0 0 0 11 Bahamas 10 0 0 0 14 Barbados 10 0 0 0 15 Belarus 18 0 0 0 16 Belgium 57 0 0 0 17 Belize 11 0 0 0 19 Bhutan 8 0 0 0 24 Brunei 8 0 0 0 25 Bulgaria 57 0 0 0 30 Canada 57 0 0 0 31 Cape Verde 11 0 0 0 35 China 36 0 0 0 40 Costa Rica 13 0 0 0 43 Cuba 13 0 0 0 44 Cyprus 8 0 0 0 45 Czech Republic 58 0 0 0 46 Denmark 58 0 0 0 54 Estonia 18 0 0 0 56 Fiji 10 0 0 0 57 Finland 58 0 0 0 58 France 57 0 0 0 59 French Guiana 1 0 0 0 60 French Polynesia 9 0 0 0 63 Georgia 9 0 0 0 64 Germany 26 0 0 0 66 Greece 13 0 0 0 67 Grenada 8 0 0 0 68 Guadeloupe 1 0 0 0 72 Guyana 10 0 0 0 76 Hungary 57 0 0 0 77 Iceland 58 0 0 0 82 Ireland 13 0 0 0 84 Italy 56 0 0 0 86 Japan 58 0 0 0 88 Kazakhstan 4 0 0 0 93 Latvia 42 0 0 0 97 Libya 13 0 0 0 98 Lithuania 18 0 0 0 99 Luxembourg 49 0 0 0 100 Macao, China 8 0 0 0 104 Maldives 8 0 0 0 106 Malta 10 0 0 0 107 Martinique 1 0 0 0 110 Mexico 13 0 0 0 111 Micronesia, Fed. Sts. 8 0 0 0 112 Moldova 5 0 0 0 120 Netherlands 58 0 0 0 121 Netherlands Antilles 8 0 0 0 122 New Caledonia 9 0 0 0 123 New Zealand 55 0 0 0 127 Norway 58 0 0 0 131 Papua New Guinea 10 0 0 0 135 Poland 52 0 0 0 136 Portugal 58 0 0 0 137 Puerto Rico 13 0 0 0 138 Qatar 8 0 0 0 141 Russia 20 0 0 0 143 Samoa 7 0 0 0 150 Slovak Republic 58 0 0 0 151 Slovenia 32 0 0 0 152 Solomon Islands 9 0 0 0 155 Spain 58 0 0 0 156 Sri Lanka 13 0 0 0 158 Suriname 8 0 0 0 160 Sweden 58 0 0 0 161 Switzerland 58 0 0 0 163 Taiwan 58 0 0 0 164 Tajikistan 4 0 0 0 166 Thailand 13 0 0 0 167 Timor-Leste 4 0 0 0 169 Tonga 7 0 0 0 173 Turkmenistan 4 0 0 0 174 Uganda 13 0 0 0 175 Ukraine 20 0 0 0 176 United Arab Emirates 8 0 0 0 177 United Kingdom 13 0 0 0 178 United States 57 0 0 0 180 Uzbekistan 4 0 0 0 181 Vanuatu 7 0 0 0 In order to determine what gaps were present in the gapminder dataset, I determined how many years of data were available for each country by grouping the dataset and counting the rows. There should be 12 years worth of data between 1952 and 2007; as a result, I displayed the countries which did not have exactly 12 years of data. Task 2: Exclude any data which isn’t at 5-year increments, starting in 1952 (so 1952, 1957, 1962, …, 2007). R gapminder_unfiltered %&gt;% filter(year %in% seq(1952, 2007, by = 5)) # A tibble: 2,013 x 6 country continent year lifeExp pop gdpPercap &lt;fct&gt; &lt;fct&gt; &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; 1 Afghanistan Asia 1952 28.8 8425333 779. 2 Afghanistan Asia 1957 30.3 9240934 821. 3 Afghanistan Asia 1962 32.0 10267083 853. 4 Afghanistan Asia 1967 34.0 11537966 836. 5 Afghanistan Asia 1972 36.1 13079460 740. 6 Afghanistan Asia 1977 38.4 14880372 786. 7 Afghanistan Asia 1982 39.9 12881816 978. 8 Afghanistan Asia 1987 40.8 13867957 852. 9 Afghanistan Asia 1992 41.7 16317921 649. 10 Afghanistan Asia 1997 41.8 22227415 635. # … with 2,003 more rows SAS libname classdat &quot;sas/&quot;; PROC SQL; CREATE TABLE gap5 AS SELECT * FROM classdat.gapminder WHERE MOD(year, 5) = 2; /* Aus had too much data, so use it to see if the command worked */ PROC PRINT DATA = gap5; WHERE country = &quot;Australia&quot;; RUN; Obs country continent year lifeExp pop gdpPercap 73 Australia Oceania 1952 69.12 8691212 10039.59564 74 Australia Oceania 1957 70.33 9712569 10949.64959 75 Australia Oceania 1962 70.93 10794968 12217.22686 76 Australia Oceania 1967 71.1 11872264 14526.12465 77 Australia Oceania 1972 71.93 13177000 16788.62948 78 Australia Oceania 1977 73.49 14074100 18334.19751 79 Australia Oceania 1982 74.74 15184200 19477.00928 80 Australia Oceania 1987 76.32 16257249 21888.88903 81 Australia Oceania 1992 77.56 17481977 23424.76683 82 Australia Oceania 1997 78.83 18565243 26997.93657 83 Australia Oceania 2002 80.37 19546792 30687.75473 84 Australia Oceania 2007 81.235 20434176 34435.36744 Task 3: Exclude any countries that don’t have a full set of observations from 1952 - 2007 in 5-year increments. R gapminder_unfiltered %&gt;% filter(year %in% seq(1952, 2007, by = 5)) %&gt;% group_by(country) %&gt;% mutate(nobs = n()) %&gt;% # Use mutate instead of summarize so that all rows stay filter(nobs == 12) %&gt;% select(-nobs) # A tibble: 1,704 x 6 # Groups: country [142] country continent year lifeExp pop gdpPercap &lt;fct&gt; &lt;fct&gt; &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; 1 Afghanistan Asia 1952 28.8 8425333 779. 2 Afghanistan Asia 1957 30.3 9240934 821. 3 Afghanistan Asia 1962 32.0 10267083 853. 4 Afghanistan Asia 1967 34.0 11537966 836. 5 Afghanistan Asia 1972 36.1 13079460 740. 6 Afghanistan Asia 1977 38.4 14880372 786. 7 Afghanistan Asia 1982 39.9 12881816 978. 8 Afghanistan Asia 1987 40.8 13867957 852. 9 Afghanistan Asia 1992 41.7 16317921 649. 10 Afghanistan Asia 1997 41.8 22227415 635. # … with 1,694 more rows SAS libname classdat &quot;sas/&quot;; PROC SQL; CREATE TABLE gap5 AS SELECT * FROM classdat.gapminder WHERE MOD(year, 5) = 2; CREATE TABLE gap_clean AS SELECT *, COUNT(*) as n FROM gap5 GROUP BY country HAVING n = 12; /* Clean up extra column */ ALTER TABLE gap_clean DROP n; PROC PRINT DATA = gap_clean; RUN; Obs country continent year lifeExp pop gdpPercap 1 Afghanistan Asia 1977 38.438 14880372 786.11336 2 Afghanistan Asia 2002 42.129 25268405 726.7340548 3 Afghanistan Asia 1972 36.088 13079460 739.9811058 4 Afghanistan Asia 1982 39.854 12881816 978.0114388 5 Afghanistan Asia 1987 40.822 13867957 852.3959448 6 Afghanistan Asia 1967 34.02 11537966 836.1971382 7 Afghanistan Asia 1957 30.332 9240934 820.8530296 8 Afghanistan Asia 1952 28.801 8425333 779.4453145 9 Afghanistan Asia 1962 31.997 10267083 853.10071 10 Afghanistan Asia 2007 43.828 31889923 974.5803384 11 Afghanistan Asia 1997 41.763 22227415 635.341351 12 Afghanistan Asia 1992 41.674 16317921 649.3413952 13 Albania Europe 1977 68.93 2509048 3533.00391 14 Albania Europe 1962 64.82 1728137 2312.888958 15 Albania Europe 2002 75.651 3508512 4604.211737 16 Albania Europe 1967 66.22 1984060 2760.196931 17 Albania Europe 1957 59.28 1476505 1942.284244 18 Albania Europe 1987 72 3075321 3738.932735 19 Albania Europe 1997 72.95 3428038 3193.054604 20 Albania Europe 1952 55.23 1282697 1601.056136 21 Albania Europe 2007 76.423 3600523 5937.029526 22 Albania Europe 1972 67.69 2263554 3313.422188 23 Albania Europe 1982 70.42 2780097 3630.880722 24 Albania Europe 1992 71.581 3326498 2497.437901 25 Algeria Africa 1982 61.368 20033753 5745.160213 26 Algeria Africa 1962 48.303 11000948 2550.81688 27 Algeria Africa 1952 43.077 9279525 2449.008185 28 Algeria Africa 1967 51.407 12760499 3246.991771 29 Algeria Africa 1972 54.518 14760787 4182.663766 30 Algeria Africa 1977 58.014 17152804 4910.416756 31 Algeria Africa 1957 45.685 10270856 3013.976023 32 Algeria Africa 1997 69.152 29072015 4797.295051 33 Algeria Africa 2002 70.994 31287142 5288.040382 34 Algeria Africa 2007 72.301 33333216 6223.367465 35 Algeria Africa 1987 65.799 23254956 5681.358539 36 Algeria Africa 1992 67.744 26298373 5023.216647 37 Angola Africa 1957 31.999 4561361 3827.940465 38 Angola Africa 1992 40.647 8735988 2627.845685 39 Angola Africa 2002 41.003 10866106 2773.287312 40 Angola Africa 1987 39.906 7874230 2430.208311 41 Angola Africa 2007 42.731 12420476 4797.231267 42 Angola Africa 1997 40.963 9875024 2277.140884 43 Angola Africa 1982 39.942 7016384 2756.953672 44 Angola Africa 1952 30.015 4232095 3520.610273 45 Angola Africa 1967 35.985 5247469 5522.776375 46 Angola Africa 1972 37.928 5894858 5473.288005 47 Angola Africa 1977 39.483 6162675 3008.647355 48 Angola Africa 1962 34 4826015 4269.276742 49 Argentina Americas 2002 74.34 38331121 8797.640716 50 Argentina Americas 1997 73.275 36203463 10967.28195 51 Argentina Americas 1992 71.868 33958947 9308.41871 52 Argentina Americas 1987 70.774 31620918 9139.671389 53 Argentina Americas 1967 65.634 22934225 8052.953021 54 Argentina Americas 1977 68.481 26983828 10079.02674 55 Argentina Americas 2007 75.32 40301927 12779.37964 56 Argentina Americas 1972 67.065 24779799 9443.038526 57 Argentina Americas 1962 65.142 21283783 7133.166023 58 Argentina Americas 1952 62.485 17876956 5911.315053 59 Argentina Americas 1982 69.942 29341374 8997.897412 60 Argentina Americas 1957 64.399 19610538 6856.856212 61 Australia Oceania 1987 76.32 16257249 21888.88903 62 Australia Oceania 2002 80.37 19546792 30687.75473 63 Australia Oceania 1972 71.93 13177000 16788.62948 64 Australia Oceania 1992 77.56 17481977 23424.76683 65 Australia Oceania 1982 74.74 15184200 19477.00928 66 Australia Oceania 1952 69.12 8691212 10039.59564 67 Australia Oceania 2007 81.235 20434176 34435.36744 68 Australia Oceania 1962 70.93 10794968 12217.22686 69 Australia Oceania 1997 78.83 18565243 26997.93657 70 Australia Oceania 1977 73.49 14074100 18334.19751 71 Australia Oceania 1967 71.1 11872264 14526.12465 72 Australia Oceania 1957 70.33 9712569 10949.64959 73 Austria Europe 2002 78.98 8148312 32417.60769 74 Austria Europe 1962 69.54 7129864 10750.72111 75 Austria Europe 2007 79.829 8199783 36126.4927 76 Austria Europe 1957 67.48 6965860 8842.59803 77 Austria Europe 1977 72.17 7568430 19749.4223 78 Austria Europe 1982 73.18 7574613 21597.08362 79 Austria Europe 1992 76.04 7914969 27042.01868 80 Austria Europe 1997 77.51 8069876 29095.92066 81 Austria Europe 1967 70.14 7376998 12834.6024 82 Austria Europe 1952 66.8 6927772 6137.076492 83 Austria Europe 1987 74.94 7578903 23687.82607 84 Austria Europe 1972 70.63 7544201 16661.6256 85 Bahrain Asia 1957 53.832 138655 11635.79945 86 Bahrain Asia 2007 75.635 708573 29796.04834 87 Bahrain Asia 2002 74.795 656397 23403.55927 88 Bahrain Asia 1997 73.925 598561 20292.01679 89 Bahrain Asia 1992 72.601 529491 19035.57917 90 Bahrain Asia 1977 65.593 297410 19340.10196 91 Bahrain Asia 1967 59.923 202182 14804.6727 92 Bahrain Asia 1972 63.3 230800 18268.65839 93 Bahrain Asia 1982 69.052 377967 19211.14731 94 Bahrain Asia 1952 50.939 120447 9867.084765 95 Bahrain Asia 1962 56.923 171863 12753.27514 96 Bahrain Asia 1987 70.75 454612 18524.02406 97 Bangladesh Asia 1962 41.216 56839289 686.3415538 98 Bangladesh Asia 1972 45.252 70759295 630.2336265 99 Bangladesh Asia 1967 43.453 62821884 721.1860862 100 Bangladesh Asia 1952 37.484 46886859 684.2441716 101 Bangladesh Asia 1957 39.348 51365468 661.6374577 102 Bangladesh Asia 1992 56.018 113704579 837.8101643 103 Bangladesh Asia 1977 46.923 80428306 659.8772322 104 Bangladesh Asia 2002 62.013 135656790 1136.39043 105 Bangladesh Asia 1997 59.412 123315288 972.7700352 106 Bangladesh Asia 1987 52.819 103764241 751.9794035 107 Bangladesh Asia 1982 50.009 93074406 676.9818656 108 Bangladesh Asia 2007 64.062 150448339 1391.253792 109 Belgium Europe 2002 78.32 10311970 30485.88375 110 Belgium Europe 1972 71.44 9709100 16672.14356 111 Belgium Europe 1992 76.46 10045622 25575.57069 112 Belgium Europe 1987 75.35 9870200 22525.56308 113 Belgium Europe 2007 79.441 10392226 33692.60508 114 Belgium Europe 1982 73.93 9856303 20979.84589 115 Belgium Europe 1977 72.8 9821800 19117.97448 116 Belgium Europe 1957 69.24 8989111 9714.960623 117 Belgium Europe 1997 77.53 10199787 27561.19663 118 Belgium Europe 1962 70.25 9218400 10991.20676 119 Belgium Europe 1967 70.94 9556500 13149.04119 120 Belgium Europe 1952 68 8730405 8343.105127 121 Benin Africa 1992 53.919 4981671 1191.207681 122 Benin Africa 1997 54.777 6066080 1232.975292 123 Benin Africa 1987 52.337 4243788 1225.85601 124 Benin Africa 2002 54.406 7026113 1372.877931 125 Benin Africa 1982 50.904 3641603 1277.897616 126 Benin Africa 1977 49.19 3168267 1029.161251 127 Benin Africa 2007 56.728 8078314 1441.284873 128 Benin Africa 1967 44.885 2427334 1035.831411 129 Benin Africa 1957 40.358 1925173 959.6010805 130 Benin Africa 1952 38.223 1738315 1062.7522 131 Benin Africa 1972 47.014 2761407 1085.796879 132 Benin Africa 1962 42.618 2151895 949.4990641 133 Bolivia Americas 2002 63.883 8445134 3413.26269 134 Bolivia Americas 1997 62.05 7693188 3326.143191 135 Bolivia Americas 1987 57.251 6156369 2753.69149 136 Bolivia Americas 1982 53.859 5642224 3156.510452 137 Bolivia Americas 1992 59.957 6893451 2961.699694 138 Bolivia Americas 1972 46.714 4565872 2980.331339 139 Bolivia Americas 1967 45.032 4040665 2586.886053 140 Bolivia Americas 1962 43.428 3593918 2180.972546 141 Bolivia Americas 1957 41.89 3211738 2127.686326 142 Bolivia Americas 1952 40.414 2883315 2677.326347 143 Bolivia Americas 1977 50.023 5079716 3548.097832 144 Bolivia Americas 2007 65.554 9119152 3822.137084 145 Bosnia and Herzegovina Europe 2002 74.09 4165416 6018.975239 146 Bosnia and Herzegovina Europe 1987 71.14 4338977 4314.114757 147 Bosnia and Herzegovina Europe 1997 73.244 3607000 4766.355904 148 Bosnia and Herzegovina Europe 1992 72.178 4256013 2546.781445 149 Bosnia and Herzegovina Europe 1982 70.69 4172693 4126.613157 150 Bosnia and Herzegovina Europe 1977 69.86 4086000 3528.481305 151 Bosnia and Herzegovina Europe 1972 67.45 3819000 2860.16975 152 Bosnia and Herzegovina Europe 2007 74.852 4552198 7446.298803 153 Bosnia and Herzegovina Europe 1967 64.79 3585000 2172.352423 154 Bosnia and Herzegovina Europe 1957 58.45 3076000 1353.989176 155 Bosnia and Herzegovina Europe 1952 53.82 2791000 973.5331948 156 Bosnia and Herzegovina Europe 1962 61.93 3349000 1709.683679 157 Botswana Africa 1997 52.556 1536536 8647.142313 158 Botswana Africa 2002 46.634 1630347 11003.60508 159 Botswana Africa 1987 63.622 1151184 6205.88385 160 Botswana Africa 1982 61.484 970347 4551.14215 161 Botswana Africa 1992 62.745 1342614 7954.111645 162 Botswana Africa 2007 50.728 1639131 12569.85177 163 Botswana Africa 1972 56.024 619351 2263.611114 164 Botswana Africa 1957 49.618 474639 918.2325349 165 Botswana Africa 1977 59.319 781472 3214.857818 166 Botswana Africa 1952 47.622 442308 851.2411407 167 Botswana Africa 1967 53.298 553541 1214.709294 168 Botswana Africa 1962 51.52 512764 983.6539764 169 Brazil Americas 1997 69.388 168546719 7957.980824 170 Brazil Americas 1987 65.205 142938076 7807.095818 171 Brazil Americas 1982 63.336 128962939 7030.835878 172 Brazil Americas 2002 71.006 179914212 8131.212843 173 Brazil Americas 1992 67.057 155975974 6950.283021 174 Brazil Americas 2007 72.39 190010647 9065.800825 175 Brazil Americas 1972 59.504 100840058 4985.711467 176 Brazil Americas 1967 57.632 88049823 3429.864357 177 Brazil Americas 1957 53.285 65551171 2487.365989 178 Brazil Americas 1952 50.917 56602560 2108.944355 179 Brazil Americas 1977 61.489 114313951 6660.118654 180 Brazil Americas 1962 55.665 76039390 3336.585802 181 Bulgaria Europe 1987 71.34 8971958 8239.854824 182 Bulgaria Europe 1992 71.19 8658506 6302.623438 183 Bulgaria Europe 1982 71.08 8892098 8224.191647 184 Bulgaria Europe 1977 70.81 8797022 7612.240438 185 Bulgaria Europe 1967 70.42 8310226 5577.0028 186 Bulgaria Europe 1962 69.51 8012946 4254.337839 187 Bulgaria Europe 1972 70.9 8576200 6597.494398 188 Bulgaria Europe 1957 66.61 7651254 3008.670727 189 Bulgaria Europe 1952 59.6 7274900 2444.286648 190 Bulgaria Europe 2007 73.005 7322858 10680.79282 191 Bulgaria Europe 2002 72.14 7661799 7696.777725 192 Bulgaria Europe 1997 70.32 8066057 5970.38876 193 Burkina Faso Africa 2007 52.295 14326203 1217.032994 194 Burkina Faso Africa 1997 50.324 10352843 946.2949618 195 Burkina Faso Africa 1982 48.122 6634596 807.1985855 196 Burkina Faso Africa 1992 50.26 8878303 931.7527731 197 Burkina Faso Africa 1987 49.557 7586551 912.0631417 198 Burkina Faso Africa 1977 46.137 5889574 743.3870368 199 Burkina Faso Africa 2002 50.65 12251209 1037.645221 200 Burkina Faso Africa 1972 43.591 5433886 854.7359763 201 Burkina Faso Africa 1962 37.814 4919632 722.5120206 202 Burkina Faso Africa 1967 40.697 5127935 794.8265597 203 Burkina Faso Africa 1957 34.906 4713416 617.1834648 204 Burkina Faso Africa 1952 31.975 4469979 543.2552413 205 Burundi Africa 1997 45.326 6121610 463.1151478 206 Burundi Africa 2002 47.36 7021078 446.4035126 207 Burundi Africa 2007 49.58 8390505 430.0706916 208 Burundi Africa 1992 44.736 5809236 631.6998778 209 Burundi Africa 1987 48.211 5126023 621.8188189 210 Burundi Africa 1977 45.91 3834415 556.1032651 211 Burundi Africa 1972 44.057 3529983 464.0995039 212 Burundi Africa 1962 42.045 2961915 355.2032273 213 Burundi Africa 1967 43.548 3330989 412.9775136 214 Burundi Africa 1982 47.471 4580410 559.603231 215 Burundi Africa 1957 40.533 2667518 379.5646281 216 Burundi Africa 1952 39.031 2445618 339.2964587 217 Cambodia Asia 2007 59.723 14131858 1713.778686 218 Cambodia Asia 2002 56.752 12926707 896.2260153 219 Cambodia Asia 1997 56.534 11782962 734.28517 220 Cambodia Asia 1992 55.803 10150094 682.3031755 221 Cambodia Asia 1987 53.914 8371791 683.8955732 222 Cambodia Asia 1982 50.957 7272485 624.4754784 223 Cambodia Asia 1977 31.22 6978607 524.9721832 224 Cambodia Asia 1972 40.317 7450606 421.6240257 225 Cambodia Asia 1967 45.415 6960067 523.4323142 226 Cambodia Asia 1957 41.366 5322536 434.0383364 227 Cambodia Asia 1952 39.417 4693836 368.4692856 228 Cambodia Asia 1962 43.415 6083619 496.9136476 229 Cameroon Africa 2007 50.43 17696293 2042.09524 230 Cameroon Africa 2002 49.856 15929988 1934.011449 231 Cameroon Africa 1997 52.199 14195809 1694.337469 232 Cameroon Africa 1992 54.314 12467171 1793.163278 233 Cameroon Africa 1987 54.985 10780667 2602.664206 234 Cameroon Africa 1982 52.961 9250831 2367.983282 235 Cameroon Africa 1977 49.355 7959865 1783.432873 236 Cameroon Africa 1972 47.049 7021028 1684.146528 237 Cameroon Africa 1967 44.799 6335506 1508.453148 238 Cameroon Africa 1957 40.428 5359923 1313.048099 239 Cameroon Africa 1952 38.523 5009067 1172.667655 240 Cameroon Africa 1962 42.643 5793633 1399.607441 241 Canada Americas 2007 80.653 33390141 36319.23501 242 Canada Americas 2002 79.77 31902268 33328.96507 243 Canada Americas 1997 78.61 30305843 28954.92589 244 Canada Americas 1992 77.95 28523502 26342.88426 245 Canada Americas 1987 76.86 26549700 26626.51503 246 Canada Americas 1977 74.21 23796400 22090.88306 247 Canada Americas 1972 72.88 22284500 18970.57086 248 Canada Americas 1967 72.13 20819767 16076.58803 249 Canada Americas 1982 75.76 25201900 22898.79214 250 Canada Americas 1957 69.96 17010154 12489.95006 251 Canada Americas 1952 68.75 14785584 11367.16112 252 Canada Americas 1962 71.3 18985849 13462.48555 253 Central African Republ Africa 1992 49.396 3265124 747.9055252 254 Central African Republ Africa 1997 46.066 3696513 740.5063317 255 Central African Republ Africa 2002 43.308 4048013 738.6906068 256 Central African Republ Africa 2007 44.741 4369038 706.016537 257 Central African Republ Africa 1982 48.295 2476971 956.7529907 258 Central African Republ Africa 1977 46.775 2167533 1109.374338 259 Central African Republ Africa 1967 41.478 1733638 1136.056615 260 Central African Republ Africa 1972 43.457 1927260 1070.013275 261 Central African Republ Africa 1987 50.485 2840009 844.8763504 262 Central African Republ Africa 1962 39.475 1523478 1193.068753 263 Central African Republ Africa 1952 35.463 1291695 1071.310713 264 Central African Republ Africa 1957 37.464 1392284 1190.844328 265 Chad Africa 2007 50.651 10238807 1704.063724 266 Chad Africa 2002 50.525 8835739 1156.18186 267 Chad Africa 1997 51.573 7562011 1004.961353 268 Chad Africa 1992 51.724 6429417 1058.0643 269 Chad Africa 1982 49.517 4875118 797.9081006 270 Chad Africa 1967 43.601 3495967 1196.810565 271 Chad Africa 1972 45.569 3899068 1104.103987 272 Chad Africa 1987 51.051 5498955 952.386129 273 Chad Africa 1962 41.716 3150417 1389.817618 274 Chad Africa 1952 38.092 2682462 1178.665927 275 Chad Africa 1957 39.881 2894855 1308.495577 276 Chad Africa 1977 47.383 4388260 1133.98495 277 Chile Americas 2007 78.553 16284741 13171.63885 278 Chile Americas 2002 77.86 15497046 10778.78385 279 Chile Americas 1997 75.816 14599929 10118.05318 280 Chile Americas 1992 74.126 13572994 7596.125964 281 Chile Americas 1987 72.492 12463354 5547.063754 282 Chile Americas 1977 67.052 10599793 4756.763836 283 Chile Americas 1972 63.441 9717524 5494.024437 284 Chile Americas 1967 60.523 8858908 5106.654313 285 Chile Americas 1962 57.924 7961258 4519.094331 286 Chile Americas 1957 56.074 7048426 4315.622723 287 Chile Americas 1952 54.745 6377619 3939.978789 288 Chile Americas 1982 70.565 11487112 5095.665738 289 China Asia 2007 72.961 1318683096 4959.114854 290 China Asia 2002 72.028 1280400000 3119.280896 291 China Asia 1992 68.69 1164970000 1655.784158 292 China Asia 1987 67.274 1084035000 1378.904018 293 China Asia 1997 70.426 1230075000 2289.234136 294 China Asia 1982 65.525 1000281000 962.4213805 295 China Asia 1977 63.96736 943455000 741.2374699 296 China Asia 1972 63.11888 862030000 676.9000921 297 China Asia 1967 58.38112 754550000 612.7056934 298 China Asia 1962 44.50136 665770000 487.6740183 299 China Asia 1957 50.54896 637408000 575.9870009 300 China Asia 1952 44 556263527 400.448611 301 Colombia Americas 2007 72.889 44227550 7006.580419 302 Colombia Americas 2002 71.682 41008227 5755.259962 303 Colombia Americas 1997 70.313 37657830 6117.361746 304 Colombia Americas 1992 68.421 34202721 5444.648617 305 Colombia Americas 1987 67.768 30964245 4903.2191 306 Colombia Americas 1982 66.653 27764644 4397.575659 307 Colombia Americas 1977 63.837 25094412 3815.80787 308 Colombia Americas 1972 61.623 22542890 3264.660041 309 Colombia Americas 1962 57.863 17009885 2492.351109 310 Colombia Americas 1957 55.118 14485993 2323.805581 311 Colombia Americas 1967 59.963 19764027 2678.729839 312 Colombia Americas 1952 50.643 12350771 2144.115096 313 Comoros Africa 2007 65.152 710960 986.1478792 314 Comoros Africa 2002 62.974 614382 1075.811558 315 Comoros Africa 1997 60.66 527982 1173.618235 316 Comoros Africa 1992 57.939 454429 1246.90737 317 Comoros Africa 1987 54.926 395114 1315.980812 318 Comoros Africa 1982 52.933 348643 1267.100083 319 Comoros Africa 1977 50.939 304739 1172.603047 320 Comoros Africa 1972 48.944 250027 1937.577675 321 Comoros Africa 1967 46.472 217378 1876.029643 322 Comoros Africa 1962 44.467 191689 1406.648278 323 Comoros Africa 1957 42.46 170928 1211.148548 324 Comoros Africa 1952 40.715 153936 1102.990936 325 Congo, Dem. Rep. Africa 2007 46.462 64606759 277.5518587 326 Congo, Dem. Rep. Africa 2002 44.966 55379852 241.1658765 327 Congo, Dem. Rep. Africa 1997 42.587 47798986 312.188423 328 Congo, Dem. Rep. Africa 1992 45.548 41672143 457.7191807 329 Congo, Dem. Rep. Africa 1987 47.412 35481645 672.774812 330 Congo, Dem. Rep. Africa 1982 47.784 30646495 673.7478181 331 Congo, Dem. Rep. Africa 1977 47.804 26480870 795.757282 332 Congo, Dem. Rep. Africa 1972 45.989 23007669 904.8960685 333 Congo, Dem. Rep. Africa 1967 44.056 19941073 861.5932424 334 Congo, Dem. Rep. Africa 1962 42.122 17486434 896.3146335 335 Congo, Dem. Rep. Africa 1957 40.652 15577932 905.8602303 336 Congo, Dem. Rep. Africa 1952 39.143 14100005 780.5423257 337 Congo, Rep. Africa 2007 55.322 3800610 3632.557798 338 Congo, Rep. Africa 2002 52.97 3328795 3484.06197 339 Congo, Rep. Africa 1997 52.962 2800947 3484.164376 340 Congo, Rep. Africa 1992 56.433 2409073 4016.239529 341 Congo, Rep. Africa 1987 57.47 2064095 4201.194937 342 Congo, Rep. Africa 1982 56.695 1774735 4879.507522 343 Congo, Rep. Africa 1977 55.625 1536769 3259.178978 344 Congo, Rep. Africa 1972 54.907 1340458 3213.152683 345 Congo, Rep. Africa 1967 52.04 1179760 2677.939642 346 Congo, Rep. Africa 1962 48.435 1047924 2464.783157 347 Congo, Rep. Africa 1957 45.053 940458 2315.056572 348 Congo, Rep. Africa 1952 42.111 854885 2125.621418 349 Costa Rica Americas 2007 78.782 4133884 9645.06142 350 Costa Rica Americas 2002 78.123 3834934 7723.447195 351 Costa Rica Americas 1997 77.26 3518107 6677.045314 352 Costa Rica Americas 1987 74.752 2799811 5629.915318 353 Costa Rica Americas 1982 73.45 2424367 5262.734751 354 Costa Rica Americas 1977 70.75 2108457 5926.876967 355 Costa Rica Americas 1972 67.849 1834796 5118.146939 356 Costa Rica Americas 1967 65.424 1588717 4161.727834 357 Costa Rica Americas 1962 62.842 1345187 3460.937025 358 Costa Rica Americas 1957 60.026 1112300 2990.010802 359 Costa Rica Americas 1952 57.206 926317 2627.009471 360 Costa Rica Americas 1992 75.713 3173216 6160.416317 361 Cote d'Ivoire Africa 2007 48.328 18013409 1544.750112 362 Cote d'Ivoire Africa 2002 46.832 16252726 1648.800823 363 Cote d'Ivoire Africa 1997 47.991 14625967 1786.265407 364 Cote d'Ivoire Africa 1992 52.044 12772596 1648.073791 365 Cote d'Ivoire Africa 1987 54.655 10761098 2156.956069 366 Cote d'Ivoire Africa 1982 53.983 9025951 2602.710169 367 Cote d'Ivoire Africa 1977 52.374 7459574 2517.736547 368 Cote d'Ivoire Africa 1972 49.801 6071696 2378.201111 369 Cote d'Ivoire Africa 1967 47.35 4744870 2052.050473 370 Cote d'Ivoire Africa 1962 44.93 3832408 1728.869428 371 Cote d'Ivoire Africa 1957 42.469 3300000 1500.895925 372 Cote d'Ivoire Africa 1952 40.477 2977019 1388.594732 373 Croatia Europe 2007 75.748 4493312 14619.22272 374 Croatia Europe 2002 74.876 4481020 11628.38895 375 Croatia Europe 1997 73.68 4444595 9875.604515 376 Croatia Europe 1992 72.527 4494013 8447.794873 377 Croatia Europe 1987 71.52 4484310 13822.58394 378 Croatia Europe 1982 70.46 4413368 13221.82184 379 Croatia Europe 1977 70.64 4318673 11305.38517 380 Croatia Europe 1972 69.61 4225310 9164.090127 381 Croatia Europe 1967 68.5 4174366 6960.297861 382 Croatia Europe 1962 67.13 4076557 5477.890018 383 Croatia Europe 1957 64.77 3991242 4338.231617 384 Croatia Europe 1952 61.21 3882229 3119.23652 385 Cuba Americas 2007 78.273 11416987 8948.102923 386 Cuba Americas 2002 77.158 11226999 6340.646683 387 Cuba Americas 1997 76.151 10983007 5431.990415 388 Cuba Americas 1992 74.414 10723260 5592.843963 389 Cuba Americas 1987 74.174 10239839 7532.924763 390 Cuba Americas 1982 73.717 9789224 7316.918107 391 Cuba Americas 1977 72.649 9537988 6380.494966 392 Cuba Americas 1972 70.723 8831348 5305.445256 393 Cuba Americas 1967 68.29 8139332 5690.268015 394 Cuba Americas 1962 65.246 7254373 5180.75591 395 Cuba Americas 1957 62.325 6640752 6092.174359 396 Cuba Americas 1952 59.421 6007797 5586.53878 397 Czech Republic Europe 2007 76.486 10228744 22833.30851 398 Czech Republic Europe 2002 75.51 10256295 17596.21022 399 Czech Republic Europe 1997 74.01 10300707 16048.51424 400 Czech Republic Europe 1992 72.4 10315702 14297.02122 401 Czech Republic Europe 1987 71.58 10311597 16310.4434 402 Czech Republic Europe 1982 70.96 10303704 15377.22855 403 Czech Republic Europe 1977 70.71 10161915 14800.16062 404 Czech Republic Europe 1972 70.29 9862158 13108.4536 405 Czech Republic Europe 1967 70.38 9835109 11399.44489 406 Czech Republic Europe 1962 69.9 9620282 10136.86713 407 Czech Republic Europe 1957 69.03 9513758 8256.343918 408 Czech Republic Europe 1952 66.87 9125183 6876.14025 409 Denmark Europe 2007 78.332 5468120 35278.41874 410 Denmark Europe 2002 77.18 5374693 32166.50006 411 Denmark Europe 1997 76.11 5283663 29804.34567 412 Denmark Europe 1992 75.33 5171393 26406.73985 413 Denmark Europe 1987 74.8 5127024 25116.17581 414 Denmark Europe 1982 74.63 5117810 21688.04048 415 Denmark Europe 1977 74.69 5088419 20422.9015 416 Denmark Europe 1972 73.47 4991596 18866.20721 417 Denmark Europe 1967 72.96 4838800 15937.21123 418 Denmark Europe 1962 72.35 4646899 13583.31351 419 Denmark Europe 1957 71.81 4487831 11099.65935 420 Denmark Europe 1952 70.78 4334000 9692.385245 421 Djibouti Africa 1977 46.519 228694 3081.761022 422 Djibouti Africa 1972 44.366 178848 3694.212352 423 Djibouti Africa 1967 42.074 127617 3020.050513 424 Djibouti Africa 1962 39.693 89898 3020.989263 425 Djibouti Africa 1957 37.328 71851 2864.969076 426 Djibouti Africa 1952 34.812 63149 2669.529475 427 Djibouti Africa 2007 54.791 496374 2082.481567 428 Djibouti Africa 2002 53.373 447416 1908.260867 429 Djibouti Africa 1997 53.157 417908 1895.016984 430 Djibouti Africa 1992 51.604 384156 2377.156192 431 Djibouti Africa 1987 50.04 311025 2880.102568 432 Djibouti Africa 1982 48.812 305991 2879.468067 433 Dominican Republic Americas 2007 72.235 9319622 6025.374752 434 Dominican Republic Americas 2002 70.847 8650322 4563.808154 435 Dominican Republic Americas 1997 69.957 7992357 3614.101285 436 Dominican Republic Americas 1992 68.457 7351181 3044.214214 437 Dominican Republic Americas 1987 66.046 6655297 2899.842175 438 Dominican Republic Americas 1982 63.727 5968349 2861.092386 439 Dominican Republic Americas 1977 61.788 5302800 2681.9889 440 Dominican Republic Americas 1972 59.631 4671329 2189.874499 441 Dominican Republic Americas 1967 56.751 4049146 1653.723003 442 Dominican Republic Americas 1962 53.459 3453434 1662.137359 443 Dominican Republic Americas 1952 45.928 2491346 1397.717137 444 Dominican Republic Americas 1957 49.828 2923186 1544.402995 445 Ecuador Americas 2007 74.994 13755680 6873.262326 446 Ecuador Americas 2002 74.173 12921234 5773.044512 447 Ecuador Americas 1997 72.312 11911819 7429.455877 448 Ecuador Americas 1992 69.613 10748394 7103.702595 449 Ecuador Americas 1987 67.231 9545158 6481.776993 450 Ecuador Americas 1982 64.342 8365850 7213.791267 451 Ecuador Americas 1977 61.31 7278866 6679.62326 452 Ecuador Americas 1972 58.796 6298651 5280.99471 453 Ecuador Americas 1967 56.678 5432424 4579.074215 454 Ecuador Americas 1962 54.64 4681707 4086.114078 455 Ecuador Americas 1952 48.357 3548753 3522.110717 456 Ecuador Americas 1957 51.356 4058385 3780.546651 457 Egypt Africa 2007 71.338 80264543 5581.180998 458 Egypt Africa 2002 69.806 73312559 4754.604414 459 Egypt Africa 1997 67.217 66134291 4173.181797 460 Egypt Africa 1992 63.674 59402198 3794.755195 461 Egypt Africa 1987 59.797 52799062 3885.46071 462 Egypt Africa 1982 56.006 45681811 3503.729636 463 Egypt Africa 1977 53.319 38783863 2785.493582 464 Egypt Africa 1972 51.137 34807417 2024.008147 465 Egypt Africa 1967 49.293 31681188 1814.880728 466 Egypt Africa 1962 46.992 28173309 1693.335853 467 Egypt Africa 1957 44.444 25009741 1458.915272 468 Egypt Africa 1952 41.893 22223309 1418.822445 469 El Salvador Americas 2007 71.878 6939688 5728.353514 470 El Salvador Americas 2002 70.734 6353681 5351.568666 471 El Salvador Americas 1997 69.535 5783439 5154.825496 472 El Salvador Americas 1992 66.798 5274649 4444.2317 473 El Salvador Americas 1987 63.154 4842194 4140.442097 474 El Salvador Americas 1982 56.604 4474873 4098.344175 475 El Salvador Americas 1977 56.696 4282586 5138.922374 476 El Salvador Americas 1972 58.207 3790903 4520.246008 477 El Salvador Americas 1967 55.855 3232927 4358.595393 478 El Salvador Americas 1962 52.307 2747687 3776.803627 479 El Salvador Americas 1957 48.57 2355805 3421.523218 480 El Salvador Americas 1952 45.262 2042865 3048.3029 481 Equatorial Guinea Africa 2007 51.579 551201 12154.08975 482 Equatorial Guinea Africa 2002 49.348 495627 7703.4959 483 Equatorial Guinea Africa 1997 48.245 439971 2814.480755 484 Equatorial Guinea Africa 1992 47.545 387838 1132.055034 485 Equatorial Guinea Africa 1987 45.664 341244 966.8968149 486 Equatorial Guinea Africa 1982 43.662 285483 927.8253427 487 Equatorial Guinea Africa 1977 42.024 192675 958.5668124 488 Equatorial Guinea Africa 1967 38.987 259864 915.5960025 489 Equatorial Guinea Africa 1972 40.516 277603 672.4122571 490 Equatorial Guinea Africa 1962 37.485 249220 582.8419714 491 Equatorial Guinea Africa 1957 35.983 232922 426.0964081 492 Equatorial Guinea Africa 1952 34.482 216964 375.6431231 493 Eritrea Africa 2007 58.04 4906585 641.3695236 494 Eritrea Africa 2002 55.24 4414865 765.3500015 495 Eritrea Africa 1997 53.378 4058319 913.47079 496 Eritrea Africa 1992 49.991 3668440 582.8585102 497 Eritrea Africa 1987 46.453 2915959 521.1341333 498 Eritrea Africa 1982 43.89 2637297 524.8758493 499 Eritrea Africa 1977 44.535 2512642 505.7538077 500 Eritrea Africa 1972 44.142 2260187 514.3242082 501 Eritrea Africa 1967 42.189 1820319 468.7949699 502 Eritrea Africa 1962 40.158 1666618 380.9958433 503 Eritrea Africa 1957 38.047 1542611 344.1618859 504 Eritrea Africa 1952 35.928 1438760 328.9405571 505 Ethiopia Africa 2007 52.947 76511887 690.8055759 506 Ethiopia Africa 2002 50.725 67946797 530.0535319 507 Ethiopia Africa 1997 49.402 59861301 515.8894013 508 Ethiopia Africa 1992 48.091 52088559 421.3534653 509 Ethiopia Africa 1987 46.684 42999530 573.7413142 510 Ethiopia Africa 1982 44.916 38111756 577.8607471 511 Ethiopia Africa 1977 44.51 34617799 556.8083834 512 Ethiopia Africa 1972 43.515 30770372 566.2439442 513 Ethiopia Africa 1967 42.115 27860297 516.1186438 514 Ethiopia Africa 1962 40.059 25145372 419.4564161 515 Ethiopia Africa 1957 36.667 22815614 378.9041632 516 Ethiopia Africa 1952 34.078 20860941 362.1462796 517 Finland Europe 2007 79.313 5238460 33207.0844 518 Finland Europe 2002 78.37 5193039 28204.59057 519 Finland Europe 1997 77.13 5134406 23723.9502 520 Finland Europe 1992 75.7 5041039 20647.16499 521 Finland Europe 1987 74.83 4931729 21141.01223 522 Finland Europe 1982 74.55 4826933 18533.15761 523 Finland Europe 1977 72.52 4738902 15605.42283 524 Finland Europe 1972 70.87 4639657 14358.8759 525 Finland Europe 1967 69.83 4605744 10921.63626 526 Finland Europe 1962 68.75 4491443 9371.842561 527 Finland Europe 1957 67.49 4324000 7545.415386 528 Finland Europe 1952 66.55 4090500 6424.519071 529 France Europe 2002 79.59 59925035 28926.03234 530 France Europe 1997 78.64 58623428 25889.78487 531 France Europe 1992 77.46 57374179 24703.79615 532 France Europe 2007 80.657 61083916 30470.0167 533 France Europe 1987 76.34 55630100 22066.44214 534 France Europe 1982 74.89 54433565 20293.89746 535 France Europe 1977 73.83 53165019 18292.63514 536 France Europe 1972 72.38 51732000 16107.19171 537 France Europe 1967 71.55 49569000 12999.91766 538 France Europe 1962 70.51 47124000 10560.48553 539 France Europe 1957 68.93 44310863 8662.834898 540 France Europe 1952 67.41 42459667 7029.809327 541 Gabon Africa 2007 56.735 1454867 13206.48452 542 Gabon Africa 2002 56.761 1299304 12521.71392 543 Gabon Africa 1997 60.461 1126189 14722.84188 544 Gabon Africa 1992 61.366 985739 13522.15752 545 Gabon Africa 1987 60.19 880397 11864.40844 546 Gabon Africa 1982 56.564 753874 15113.36194 547 Gabon Africa 1977 52.79 706367 21745.57328 548 Gabon Africa 1972 48.69 537977 11401.94841 549 Gabon Africa 1967 44.598 489004 8358.761987 550 Gabon Africa 1962 40.489 455661 6631.459222 551 Gabon Africa 1957 38.999 434904 4976.198099 552 Gabon Africa 1952 37.003 420702 4293.476475 553 Gambia Africa 2007 59.448 1688359 752.7497265 554 Gambia Africa 2002 58.041 1457766 660.5855997 555 Gambia Africa 1997 55.861 1235767 653.7301704 556 Gambia Africa 1992 52.644 1025384 665.6244126 557 Gambia Africa 1987 49.265 848406 611.6588611 558 Gambia Africa 1982 45.58 715523 835.8096108 559 Gambia Africa 1977 41.842 608274 884.7552507 560 Gambia Africa 1972 38.308 517101 756.0868363 561 Gambia Africa 1967 35.857 439593 734.7829124 562 Gambia Africa 1962 33.896 374020 599.650276 563 Gambia Africa 1957 32.065 323150 520.9267111 564 Gambia Africa 1952 30 284320 485.2306591 565 Germany Europe 2007 79.406 82400996 32170.37442 566 Germany Europe 2002 78.67 82350671 30035.80198 567 Germany Europe 1997 77.34 82011073 27788.88416 568 Germany Europe 1992 76.07 80597764 26505.30317 569 Germany Europe 1987 74.847 77718298 24639.18566 570 Germany Europe 1982 73.8 78335266 22031.53274 571 Germany Europe 1977 72.5 78160773 20512.92123 572 Germany Europe 1972 71 78717088 18016.18027 573 Germany Europe 1962 70.3 73739117 12902.46291 574 Germany Europe 1967 70.8 76368453 14745.62561 575 Germany Europe 1957 69.1 71019069 10187.82665 576 Germany Europe 1952 67.5 69145952 7144.114393 577 Ghana Africa 2007 60.022 22873338 1327.60891 578 Ghana Africa 2002 58.453 20550751 1111.984578 579 Ghana Africa 1997 58.556 18418288 1005.245812 580 Ghana Africa 1992 57.501 16278738 925.060154 581 Ghana Africa 1987 55.729 14168101 847.0061135 582 Ghana Africa 1982 53.744 11400338 876.032569 583 Ghana Africa 1977 51.756 10538093 993.2239571 584 Ghana Africa 1972 49.875 9354120 1178.223708 585 Ghana Africa 1962 46.452 7355248 1190.041118 586 Ghana Africa 1967 48.072 8490213 1125.69716 587 Ghana Africa 1957 44.779 6391288 1043.561537 588 Ghana Africa 1952 43.149 5581001 911.2989371 589 Greece Europe 2007 79.483 10706290 27538.41188 590 Greece Europe 2002 78.256 10603863 22514.2548 591 Greece Europe 1997 77.869 10502372 18747.69814 592 Greece Europe 1992 77.03 10325429 17541.49634 593 Greece Europe 1987 76.67 9974490 16120.52839 594 Greece Europe 1982 75.24 9786480 15268.42089 595 Greece Europe 1977 73.68 9308479 14195.52428 596 Greece Europe 1972 72.34 8888628 12724.82957 597 Greece Europe 1967 71 8716441 8513.097016 598 Greece Europe 1962 69.51 8448233 6017.190733 599 Greece Europe 1957 67.86 8096218 4916.299889 600 Greece Europe 1952 65.86 7733250 3530.690067 601 Guatemala Americas 2007 70.259 12572928 5186.050003 602 Guatemala Americas 2002 68.978 11178650 4858.347495 603 Guatemala Americas 1997 66.322 9803875 4684.313807 604 Guatemala Americas 1992 63.373 8486949 4439.45084 605 Guatemala Americas 1987 60.782 7326406 4246.485974 606 Guatemala Americas 1982 58.137 6395630 4820.49479 607 Guatemala Americas 1972 53.738 5149581 4031.408271 608 Guatemala Americas 1967 50.016 4690773 3242.531147 609 Guatemala Americas 1962 46.954 4208858 2750.364446 610 Guatemala Americas 1977 56.029 5703430 4879.992748 611 Guatemala Americas 1957 44.142 3640876 2617.155967 612 Guatemala Americas 1952 42.023 3146381 2428.237769 613 Guinea Africa 2002 53.676 8807818 945.5835837 614 Guinea Africa 1997 51.455 8048834 869.4497668 615 Guinea Africa 1992 48.576 6990574 794.3484384 616 Guinea Africa 2007 56.007 9947814 942.6542111 617 Guinea Africa 1987 45.552 5650262 805.5724718 618 Guinea Africa 1982 42.891 4710497 857.2503577 619 Guinea Africa 1977 40.762 4227026 874.6858643 620 Guinea Africa 1972 38.842 3811387 741.6662307 621 Guinea Africa 1967 37.197 3451418 708.7595409 622 Guinea Africa 1962 35.753 3140003 686.3736739 623 Guinea Africa 1957 34.558 2876726 576.2670245 624 Guinea Africa 1952 33.609 2664249 510.1964923 625 Guinea-Bissau Africa 2002 45.504 1332459 575.7047176 626 Guinea-Bissau Africa 1997 44.873 1193708 796.6644681 627 Guinea-Bissau Africa 1992 43.266 1050938 745.5398706 628 Guinea-Bissau Africa 2007 46.388 1472041 579.231743 629 Guinea-Bissau Africa 1987 41.245 927524 736.4153921 630 Guinea-Bissau Africa 1982 39.327 825987 838.1239671 631 Guinea-Bissau Africa 1977 37.465 745228 764.7259628 632 Guinea-Bissau Africa 1972 36.486 625361 820.2245876 633 Guinea-Bissau Africa 1967 35.492 601287 715.5806402 634 Guinea-Bissau Africa 1962 34.488 627820 522.0343725 635 Guinea-Bissau Africa 1957 33.489 601095 431.7904566 636 Guinea-Bissau Africa 1952 32.5 580653 299.850319 637 Haiti Americas 2007 60.916 8502814 1201.637154 638 Haiti Americas 2002 58.137 7607651 1270.364932 639 Haiti Americas 1997 56.671 6913545 1341.726931 640 Haiti Americas 1992 55.089 6326682 1456.309517 641 Haiti Americas 1987 53.636 5756203 1823.015995 642 Haiti Americas 1982 51.461 5198399 2011.159549 643 Haiti Americas 1977 49.923 4908554 1874.298931 644 Haiti Americas 1972 48.042 4698301 1654.456946 645 Haiti Americas 1967 46.243 4318137 1452.057666 646 Haiti Americas 1962 43.59 3880130 1796.589032 647 Haiti Americas 1957 40.696 3507701 1726.887882 648 Haiti Americas 1952 37.579 3201488 1840.366939 649 Honduras Americas 2007 70.198 7483763 3548.330846 650 Honduras Americas 2002 68.565 6677328 3099.72866 651 Honduras Americas 1997 67.659 5867957 3160.454906 652 Honduras Americas 1992 66.399 5077347 3081.694603 653 Honduras Americas 1987 64.492 4372203 3023.096699 654 Honduras Americas 1982 60.909 3669448 3121.760794 655 Honduras Americas 1977 57.402 3055235 3203.208066 656 Honduras Americas 1972 53.884 2965146 2529.842345 657 Honduras Americas 1967 50.924 2500689 2538.269358 658 Honduras Americas 1962 48.041 2090162 2291.156835 659 Honduras Americas 1957 44.665 1770390 2220.487682 660 Honduras Americas 1952 41.912 1517453 2194.926204 661 Hong Kong, China Asia 2007 82.208 6980412 39724.97867 662 Hong Kong, China Asia 2002 81.495 6762476 30209.01516 663 Hong Kong, China Asia 1997 80 6495918 28377.63219 664 Hong Kong, China Asia 1992 77.601 5829696 24757.60301 665 Hong Kong, China Asia 1987 76.2 5584510 20038.47269 666 Hong Kong, China Asia 1982 75.45 5264500 14560.53051 667 Hong Kong, China Asia 1977 73.6 4583700 11186.14125 668 Hong Kong, China Asia 1972 72 4115700 8315.928145 669 Hong Kong, China Asia 1967 70 3722800 6197.962814 670 Hong Kong, China Asia 1962 67.65 3305200 4692.648272 671 Hong Kong, China Asia 1957 64.75 2736300 3629.076457 672 Hong Kong, China Asia 1952 60.96 2125900 3054.421209 673 Hungary Europe 2007 73.338 9956108 18008.94444 674 Hungary Europe 2002 72.59 10083313 14843.93556 675 Hungary Europe 1997 71.04 10244684 11712.7768 676 Hungary Europe 1992 69.17 10348684 10535.62855 677 Hungary Europe 1987 69.58 10612740 12986.47998 678 Hungary Europe 1982 69.39 10705535 12545.99066 679 Hungary Europe 1977 69.95 10637171 11674.83737 680 Hungary Europe 1972 69.76 10394091 10168.65611 681 Hungary Europe 1967 69.5 10223422 9326.64467 682 Hungary Europe 1962 67.96 10063000 7550.359877 683 Hungary Europe 1957 66.41 9839000 6040.180011 684 Hungary Europe 1952 64.03 9504000 5263.673816 685 Iceland Europe 2007 81.757 301931 36180.78919 686 Iceland Europe 2002 80.5 288030 31163.20196 687 Iceland Europe 1997 78.95 271192 28061.09966 688 Iceland Europe 1992 78.77 259012 25144.39201 689 Iceland Europe 1987 77.23 244676 26923.20628 690 Iceland Europe 1982 76.99 233997 23269.6075 691 Iceland Europe 1977 76.11 221823 19654.96247 692 Iceland Europe 1972 74.46 209275 15798.06362 693 Iceland Europe 1967 73.73 198676 13319.89568 694 Iceland Europe 1962 73.68 182053 10350.15906 695 Iceland Europe 1957 73.47 165110 9244.001412 696 Iceland Europe 1952 72.49 147962 7267.688428 697 India Asia 2007 64.698 1110396331 2452.210407 698 India Asia 2002 62.879 1034172547 1746.769454 699 India Asia 1997 61.765 959000000 1458.817442 700 India Asia 1992 60.223 872000000 1164.406809 701 India Asia 1987 58.553 788000000 976.5126756 702 India Asia 1982 56.596 708000000 855.7235377 703 India Asia 1977 54.208 634000000 813.337323 704 India Asia 1972 50.651 567000000 724.032527 705 India Asia 1967 47.193 506000000 700.7706107 706 India Asia 1962 43.605 454000000 658.3471509 707 India Asia 1957 40.249 409000000 590.061996 708 India Asia 1952 37.373 372000000 546.5657493 709 Indonesia Asia 2007 70.65 223547000 3540.651564 710 Indonesia Asia 2002 68.588 211060000 2873.91287 711 Indonesia Asia 1997 66.041 199278000 3119.335603 712 Indonesia Asia 1992 62.681 184816000 2383.140898 713 Indonesia Asia 1987 60.137 169276000 1748.356961 714 Indonesia Asia 1982 56.159 153343000 1516.872988 715 Indonesia Asia 1977 52.702 136725000 1382.702056 716 Indonesia Asia 1972 49.203 121282000 1111.107907 717 Indonesia Asia 1967 45.964 109343000 762.4317721 718 Indonesia Asia 1962 42.518 99028000 849.2897701 719 Indonesia Asia 1957 39.918 90124000 858.9002707 720 Indonesia Asia 1952 37.468 82052000 749.6816546 721 Iran Asia 2007 70.964 69453570 11605.71449 722 Iran Asia 2002 69.451 66907826 9240.761975 723 Iran Asia 1997 68.042 63327987 8263.590301 724 Iran Asia 1992 65.742 60397973 7235.653188 725 Iran Asia 1987 63.04 51889696 6642.881371 726 Iran Asia 1982 59.62 43072751 7608.334602 727 Iran Asia 1977 57.702 35480679 11888.59508 728 Iran Asia 1972 55.234 30614000 9613.818607 729 Iran Asia 1967 52.469 26538000 5906.731805 730 Iran Asia 1962 49.325 22874000 4187.329802 731 Iran Asia 1957 47.181 19792000 3290.257643 732 Iran Asia 1952 44.869 17272000 3035.326002 733 Iraq Asia 2007 59.545 27499638 4471.061906 734 Iraq Asia 2002 57.046 24001816 4390.717312 735 Iraq Asia 1997 58.811 20775703 3076.239795 736 Iraq Asia 1992 59.461 17861905 3745.640687 737 Iraq Asia 1987 65.044 16543189 11643.57268 738 Iraq Asia 1982 62.038 14173318 14517.90711 739 Iraq Asia 1977 60.413 11882916 14688.23507 740 Iraq Asia 1972 56.95 10061506 9576.037596 741 Iraq Asia 1967 54.459 8519282 8931.459811 742 Iraq Asia 1962 51.457 7240260 8341.737815 743 Iraq Asia 1957 48.437 6248643 6229.333562 744 Iraq Asia 1952 45.32 5441766 4129.766056 745 Ireland Europe 2007 78.885 4109086 40675.99635 746 Ireland Europe 2002 77.783 3879155 34077.04939 747 Ireland Europe 1997 76.122 3667233 24521.94713 748 Ireland Europe 1992 75.467 3557761 17558.81555 749 Ireland Europe 1987 74.36 3539900 13872.86652 750 Ireland Europe 1982 73.1 3480000 12618.32141 751 Ireland Europe 1977 72.03 3271900 11150.98113 752 Ireland Europe 1972 71.28 3024400 9530.772896 753 Ireland Europe 1967 71.08 2900100 7655.568963 754 Ireland Europe 1962 70.29 2830000 6631.597314 755 Ireland Europe 1957 68.9 2878220 5599.077872 756 Ireland Europe 1952 66.91 2952156 5210.280328 757 Israel Asia 2007 80.745 6426679 25523.2771 758 Israel Asia 2002 79.696 6029529 21905.59514 759 Israel Asia 1997 78.269 5531387 20896.60924 760 Israel Asia 1992 76.93 4936550 18051.52254 761 Israel Asia 1987 75.6 4203148 17122.47986 762 Israel Asia 1982 74.45 3858421 15367.0292 763 Israel Asia 1977 73.06 3495918 13306.61921 764 Israel Asia 1972 71.63 3095893 12786.93223 765 Israel Asia 1967 70.75 2693585 8393.741404 766 Israel Asia 1962 69.39 2310904 7105.630706 767 Israel Asia 1957 67.84 1944401 5385.278451 768 Israel Asia 1952 65.39 1620914 4086.522128 769 Italy Europe 2007 80.546 58147733 28569.7197 770 Italy Europe 2002 80.24 57926999 27968.09817 771 Italy Europe 1997 78.82 57479469 24675.02446 772 Italy Europe 1992 77.44 56840847 22013.64486 773 Italy Europe 1987 76.42 56729703 19207.23482 774 Italy Europe 1982 74.98 56535636 16537.4835 775 Italy Europe 1977 73.48 56059245 14255.98475 776 Italy Europe 1972 72.19 54365564 12269.27378 777 Italy Europe 1967 71.06 52667100 10022.40131 778 Italy Europe 1962 69.24 50843200 8243.58234 779 Italy Europe 1957 67.81 49182000 6248.656232 780 Italy Europe 1952 65.94 47666000 4931.404155 781 Jamaica Americas 2007 72.567 2780132 7320.880262 782 Jamaica Americas 2002 72.047 2664659 6994.774861 783 Jamaica Americas 1997 72.262 2531311 7121.924704 784 Jamaica Americas 1992 71.766 2378618 7404.923685 785 Jamaica Americas 1987 71.77 2326606 6351.237495 786 Jamaica Americas 1982 71.21 2298309 6068.05135 787 Jamaica Americas 1977 70.11 2156814 6650.195573 788 Jamaica Americas 1972 69 1997616 7433.889293 789 Jamaica Americas 1967 67.51 1861096 6124.703451 790 Jamaica Americas 1962 65.61 1665128 5246.107524 791 Jamaica Americas 1957 62.61 1535090 4756.525781 792 Jamaica Americas 1952 58.53 1426095 2898.530881 793 Japan Asia 2007 82.603 127467972 31656.06806 794 Japan Asia 2002 82 127065841 28604.5919 795 Japan Asia 1997 80.69 125956499 28816.58499 796 Japan Asia 1992 79.36 124329269 26824.89511 797 Japan Asia 1987 78.67 122091325 22375.94189 798 Japan Asia 1982 77.11 118454974 19384.10571 799 Japan Asia 1977 75.38 113872473 16610.37701 800 Japan Asia 1972 73.42 107188273 14778.78636 801 Japan Asia 1967 71.43 100825279 9847.788607 802 Japan Asia 1962 68.73 95831757 6576.649461 803 Japan Asia 1957 65.5 91563009 4317.694365 804 Japan Asia 1952 63.03 86459025 3216.956347 805 Jordan Asia 2007 72.535 6053193 4519.461171 806 Jordan Asia 2002 71.263 5307470 3844.917194 807 Jordan Asia 1997 69.772 4526235 3645.379572 808 Jordan Asia 1992 68.015 3867409 3431.593647 809 Jordan Asia 1987 65.869 2820042 4448.679912 810 Jordan Asia 1982 63.739 2347031 4161.415959 811 Jordan Asia 1977 61.134 1937652 2852.351568 812 Jordan Asia 1972 56.528 1613551 2110.856309 813 Jordan Asia 1967 51.629 1255058 2741.796252 814 Jordan Asia 1962 48.126 933559 2348.009158 815 Jordan Asia 1957 45.669 746559 1886.080591 816 Jordan Asia 1952 43.158 607914 1546.907807 817 Kenya Africa 2007 54.11 35610177 1463.249282 818 Kenya Africa 2002 50.992 31386842 1287.514732 819 Kenya Africa 1997 54.407 28263827 1360.485021 820 Kenya Africa 1992 59.285 25020539 1341.921721 821 Kenya Africa 1987 59.339 21198082 1361.936856 822 Kenya Africa 1982 58.766 17661452 1348.225791 823 Kenya Africa 1977 56.155 14500404 1267.613204 824 Kenya Africa 1972 53.559 12044785 1222.359968 825 Kenya Africa 1967 50.654 10191512 1056.736457 826 Kenya Africa 1962 47.949 8678557 896.9663732 827 Kenya Africa 1957 44.686 7454779 944.4383152 828 Kenya Africa 1952 42.27 6464046 853.540919 829 Korea, Dem. Rep. Asia 2007 67.297 23301725 1593.06548 830 Korea, Dem. Rep. Asia 2002 66.662 22215365 1646.758151 831 Korea, Dem. Rep. Asia 1997 67.727 21585105 1690.756814 832 Korea, Dem. Rep. Asia 1992 69.978 20711375 3726.063507 833 Korea, Dem. Rep. Asia 1987 70.647 19067554 4106.492315 834 Korea, Dem. Rep. Asia 1982 69.1 17647518 4106.525293 835 Korea, Dem. Rep. Asia 1977 67.159 16325320 4106.301249 836 Korea, Dem. Rep. Asia 1972 63.983 14781241 3701.621503 837 Korea, Dem. Rep. Asia 1967 59.942 12617009 2143.540609 838 Korea, Dem. Rep. Asia 1962 56.656 10917494 1621.693598 839 Korea, Dem. Rep. Asia 1957 54.081 9411381 1571.134655 840 Korea, Dem. Rep. Asia 1952 50.056 8865488 1088.277758 841 Korea, Rep. Asia 2007 78.623 49044790 23348.13973 842 Korea, Rep. Asia 2002 77.045 47969150 19233.98818 843 Korea, Rep. Asia 1997 74.647 46173816 15993.52796 844 Korea, Rep. Asia 1992 72.244 43805450 12104.27872 845 Korea, Rep. Asia 1987 69.81 41622000 8533.088805 846 Korea, Rep. Asia 1982 67.123 39326000 5622.942464 847 Korea, Rep. Asia 1977 64.766 36436000 4657.22102 848 Korea, Rep. Asia 1972 62.612 33505000 3030.87665 849 Korea, Rep. Asia 1967 57.716 30131000 2029.228142 850 Korea, Rep. Asia 1962 55.292 26420307 1536.344387 851 Korea, Rep. Asia 1957 52.681 22611552 1487.593537 852 Korea, Rep. Asia 1952 47.453 20947571 1030.592226 853 Kuwait Asia 2007 77.588 2505559 47306.98978 854 Kuwait Asia 2002 76.904 2111561 35110.10566 855 Kuwait Asia 1997 76.156 1765345 40300.61996 856 Kuwait Asia 1992 75.19 1418095 34932.91959 857 Kuwait Asia 1987 74.174 1891487 28118.42998 858 Kuwait Asia 1982 71.309 1497494 31354.03573 859 Kuwait Asia 1977 69.343 1140357 59265.47714 860 Kuwait Asia 1972 67.712 841934 109347.867 861 Kuwait Asia 1967 64.624 575003 80894.88326 862 Kuwait Asia 1962 60.47 358266 95458.11176 863 Kuwait Asia 1957 58.033 212846 113523.1329 864 Kuwait Asia 1952 55.565 160000 108382.3529 865 Lebanon Asia 1992 69.292 3219994 6890.806854 866 Lebanon Asia 1987 67.926 3089353 5377.091329 867 Lebanon Asia 1982 66.983 3086876 7640.519521 868 Lebanon Asia 1977 66.099 3115787 8659.696836 869 Lebanon Asia 1972 65.421 2680018 7486.384341 870 Lebanon Asia 1967 63.87 2186894 6006.983042 871 Lebanon Asia 1962 62.094 1886848 5714.560611 872 Lebanon Asia 1957 59.489 1647412 6089.786934 873 Lebanon Asia 1952 55.928 1439529 4834.804067 874 Lebanon Asia 2007 71.993 3921278 10461.05868 875 Lebanon Asia 2002 71.028 3677780 9313.93883 876 Lebanon Asia 1997 70.265 3430388 8754.96385 877 Lesotho Africa 2007 42.592 2012649 1569.331442 878 Lesotho Africa 2002 44.593 2046772 1275.184575 879 Lesotho Africa 1997 55.558 1982823 1186.147994 880 Lesotho Africa 1992 59.685 1803195 977.4862725 881 Lesotho Africa 1987 57.18 1599200 773.9932141 882 Lesotho Africa 1982 55.078 1411807 797.2631074 883 Lesotho Africa 1977 52.208 1251524 745.3695408 884 Lesotho Africa 1972 49.767 1116779 496.5815922 885 Lesotho Africa 1967 48.492 996380 498.6390265 886 Lesotho Africa 1962 47.747 893143 411.8006266 887 Lesotho Africa 1957 45.047 813338 335.9971151 888 Lesotho Africa 1952 42.138 748747 298.8462121 889 Liberia Africa 2007 45.678 3193942 414.5073415 890 Liberia Africa 2002 43.753 2814651 531.4823679 891 Liberia Africa 1997 42.221 2200725 609.1739508 892 Liberia Africa 1992 40.802 1912974 636.6229191 893 Liberia Africa 1987 46.027 2269414 506.1138573 894 Liberia Africa 1982 44.852 1956875 572.1995694 895 Liberia Africa 1977 43.764 1703617 640.3224383 896 Liberia Africa 1972 42.614 1482628 803.0054535 897 Liberia Africa 1967 41.536 1279406 713.6036483 898 Liberia Africa 1962 40.502 1112796 634.1951625 899 Liberia Africa 1957 39.486 975950 620.9699901 900 Liberia Africa 1952 38.48 863308 575.5729961 901 Libya Africa 2007 73.952 6036914 12057.49928 902 Libya Africa 2002 72.737 5368585 9534.677467 903 Libya Africa 1997 71.555 4759670 9467.446056 904 Libya Africa 1992 68.755 4364501 9640.138501 905 Libya Africa 1987 66.234 3799845 11770.5898 906 Libya Africa 1982 62.155 3344074 17364.27538 907 Libya Africa 1977 57.442 2721783 21951.21176 908 Libya Africa 1972 52.773 2183877 21011.49721 909 Libya Africa 1967 50.227 1759224 18772.75169 910 Libya Africa 1962 47.808 1441863 6757.030816 911 Libya Africa 1957 45.289 1201578 3448.284395 912 Libya Africa 1952 42.723 1019729 2387.54806 913 Madagascar Africa 2007 59.443 19167654 1044.770126 914 Madagascar Africa 2002 57.286 16473477 894.6370822 915 Madagascar Africa 1997 54.978 14165114 986.2958956 916 Madagascar Africa 1992 52.214 12210395 1040.67619 917 Madagascar Africa 1987 49.35 10568642 1155.441948 918 Madagascar Africa 1982 48.969 9171477 1302.878658 919 Madagascar Africa 1977 46.881 8007166 1544.228586 920 Madagascar Africa 1972 44.851 7082430 1748.562982 921 Madagascar Africa 1967 42.881 6334556 1634.047282 922 Madagascar Africa 1962 40.848 5703324 1643.38711 923 Madagascar Africa 1957 38.865 5181679 1589.20275 924 Madagascar Africa 1952 36.681 4762912 1443.011715 925 Malawi Africa 2007 48.303 13327079 759.3499101 926 Malawi Africa 2002 45.009 11824495 665.4231186 927 Malawi Africa 1997 47.495 10419991 692.2758103 928 Malawi Africa 1992 49.42 10014249 563.2000145 929 Malawi Africa 1987 47.457 7824747 635.5173634 930 Malawi Africa 1982 45.642 6502825 632.8039209 931 Malawi Africa 1977 43.767 5637246 663.2236766 932 Malawi Africa 1972 41.766 4730997 584.6219709 933 Malawi Africa 1967 39.487 4147252 495.5147806 934 Malawi Africa 1962 38.41 3628608 427.9010856 935 Malawi Africa 1957 37.207 3221238 416.3698064 936 Malawi Africa 1952 36.256 2917802 369.1650802 937 Malaysia Asia 2007 74.241 24821286 12451.6558 938 Malaysia Asia 2002 73.044 22662365 10206.97794 939 Malaysia Asia 1997 71.938 20476091 10132.90964 940 Malaysia Asia 1992 70.693 18319502 7277.912802 941 Malaysia Asia 1987 69.5 16331785 5249.802653 942 Malaysia Asia 1982 68 14441916 4920.355951 943 Malaysia Asia 1977 65.256 12845381 3827.921571 944 Malaysia Asia 1972 63.01 11441462 2849.09478 945 Malaysia Asia 1967 59.371 10154878 2277.742396 946 Malaysia Asia 1962 55.737 8906385 2036.884944 947 Malaysia Asia 1957 52.102 7739235 1810.066992 948 Malaysia Asia 1952 48.463 6748378 1831.132894 949 Mali Africa 2007 54.467 12031795 1042.581557 950 Mali Africa 2002 51.818 10580176 951.4097518 951 Mali Africa 1997 49.903 9384984 790.2579846 952 Mali Africa 1992 48.388 8416215 739.014375 953 Mali Africa 1987 46.364 7634008 684.1715576 954 Mali Africa 1982 43.916 6998256 618.0140641 955 Mali Africa 1977 41.714 6491649 686.3952693 956 Mali Africa 1972 39.977 5828158 581.3688761 957 Mali Africa 1967 38.487 5212416 545.0098873 958 Mali Africa 1962 36.936 4690372 496.1743428 959 Mali Africa 1957 35.307 4241884 490.3821867 960 Mali Africa 1952 33.685 3838168 452.3369807 961 Mauritania Africa 2007 64.164 3270065 1803.151496 962 Mauritania Africa 2002 62.247 2828858 1579.019543 963 Mauritania Africa 1997 60.43 2444741 1483.136136 964 Mauritania Africa 1992 58.333 2119465 1361.369784 965 Mauritania Africa 1987 56.145 1841240 1421.603576 966 Mauritania Africa 1982 53.599 1622136 1481.150189 967 Mauritania Africa 1977 50.852 1456688 1497.492223 968 Mauritania Africa 1972 48.437 1332786 1586.851781 969 Mauritania Africa 1967 46.289 1230542 1421.145193 970 Mauritania Africa 1962 44.248 1146757 1055.896036 971 Mauritania Africa 1957 42.338 1076852 846.1202613 972 Mauritania Africa 1952 40.543 1022556 743.1159097 973 Mauritius Africa 2007 72.801 1250882 10956.99112 974 Mauritius Africa 2002 71.954 1200206 9021.815894 975 Mauritius Africa 1997 70.736 1149818 7425.705295 976 Mauritius Africa 1992 69.745 1096202 6058.253846 977 Mauritius Africa 1987 68.74 1042663 4783.586903 978 Mauritius Africa 1982 66.711 992040 3688.037739 979 Mauritius Africa 1977 64.93 913025 3710.982963 980 Mauritius Africa 1972 62.944 851334 2575.484158 981 Mauritius Africa 1967 61.557 789309 2475.387562 982 Mauritius Africa 1962 60.246 701016 2529.067487 983 Mauritius Africa 1957 58.089 609816 2034.037981 984 Mauritius Africa 1952 50.986 516556 1967.955707 985 Mexico Americas 2007 76.195 108700891 11977.57496 986 Mexico Americas 2002 74.902 102479927 10742.44053 987 Mexico Americas 1997 73.67 95895146 9767.29753 988 Mexico Americas 1992 71.455 88111030 9472.384295 989 Mexico Americas 1987 69.498 80122492 8688.156003 990 Mexico Americas 1982 67.405 71640904 9611.147541 991 Mexico Americas 1977 65.032 63759976 7674.929108 992 Mexico Americas 1972 62.361 55984294 6809.40669 993 Mexico Americas 1967 60.11 47995559 5754.733883 994 Mexico Americas 1962 58.299 41121485 4581.609385 995 Mexico Americas 1957 55.19 35015548 4131.546641 996 Mexico Americas 1952 50.789 30144317 3478.125529 997 Mongolia Asia 2007 66.803 2874127 3095.772271 998 Mongolia Asia 2002 65.033 2674234 2140.739323 999 Mongolia Asia 1997 63.625 2494803 1902.2521 1000 Mongolia Asia 1992 61.271 2312802 1785.402016 1001 Mongolia Asia 1987 60.222 2015133 2338.008304 1002 Mongolia Asia 1982 57.489 1756032 2000.603139 1003 Mongolia Asia 1977 55.491 1528000 1647.511665 1004 Mongolia Asia 1972 53.754 1320500 1421.741975 1005 Mongolia Asia 1967 51.253 1149500 1226.04113 1006 Mongolia Asia 1962 48.251 1010280 1056.353958 1007 Mongolia Asia 1957 45.248 882134 912.6626085 1008 Mongolia Asia 1952 42.244 800663 786.5668575 1009 Montenegro Europe 2007 74.543 684736 9253.896111 1010 Montenegro Europe 2002 73.981 720230 6557.194282 1011 Montenegro Europe 1997 75.445 692651 6465.613349 1012 Montenegro Europe 1992 75.435 621621 7003.339037 1013 Montenegro Europe 1987 74.865 569473 11732.51017 1014 Montenegro Europe 1982 74.101 562548 11222.58762 1015 Montenegro Europe 1977 73.066 560073 9595.929905 1016 Montenegro Europe 1972 70.636 527678 7778.414017 1017 Montenegro Europe 1967 67.178 501035 5907.850937 1018 Montenegro Europe 1962 63.728 474528 4649.593785 1019 Montenegro Europe 1957 61.448 442829 3682.259903 1020 Montenegro Europe 1952 59.164 413834 2647.585601 1021 Morocco Africa 2007 71.164 33757175 3820.17523 1022 Morocco Africa 2002 69.615 31167783 3258.495584 1023 Morocco Africa 1997 67.66 28529501 2982.101858 1024 Morocco Africa 1992 65.393 25798239 2948.047252 1025 Morocco Africa 1987 62.677 22987397 2755.046991 1026 Morocco Africa 1982 59.65 20198730 2702.620356 1027 Morocco Africa 1977 55.73 18396941 2370.619976 1028 Morocco Africa 1972 52.862 16660670 1930.194975 1029 Morocco Africa 1967 50.335 14770296 1711.04477 1030 Morocco Africa 1962 47.924 13056604 1566.353493 1031 Morocco Africa 1957 45.423 11406350 1642.002314 1032 Morocco Africa 1952 42.873 9939217 1688.20357 1033 Mozambique Africa 2007 42.082 19951656 823.6856205 1034 Mozambique Africa 2002 44.026 18473780 633.6179466 1035 Mozambique Africa 1997 46.344 16603334 472.3460771 1036 Mozambique Africa 1992 44.284 13160731 410.8968239 1037 Mozambique Africa 1987 42.861 12891952 389.8761846 1038 Mozambique Africa 1982 42.795 12587223 462.2114149 1039 Mozambique Africa 1977 42.495 11127868 502.3197334 1040 Mozambique Africa 1972 40.328 9809596 724.9178037 1041 Mozambique Africa 1967 38.113 8680909 566.6691539 1042 Mozambique Africa 1962 36.161 7788944 556.6863539 1043 Mozambique Africa 1957 33.779 7038035 495.5868333 1044 Mozambique Africa 1952 31.286 6446316 468.5260381 1045 Myanmar Asia 2007 62.069 47761980 944 1046 Myanmar Asia 2002 59.908 45598081 611 1047 Myanmar Asia 1997 60.328 43247867 415 1048 Myanmar Asia 1992 59.32 40546538 347 1049 Myanmar Asia 1987 58.339 38028578 385 1050 Myanmar Asia 1982 58.056 34680442 424 1051 Myanmar Asia 1977 56.059 31528087 371 1052 Myanmar Asia 1972 53.07 28466390 357 1053 Myanmar Asia 1967 49.379 25870271 349 1054 Myanmar Asia 1962 45.108 23634436 388 1055 Myanmar Asia 1957 41.905 21731844 350 1056 Myanmar Asia 1952 36.319 20092996 331 1057 Namibia Africa 2007 52.906 2055080 4811.060429 1058 Namibia Africa 2002 51.479 1972153 4072.324751 1059 Namibia Africa 1997 58.909 1774766 3899.52426 1060 Namibia Africa 1992 61.999 1554253 3804.537999 1061 Namibia Africa 1987 60.835 1278184 3693.731337 1062 Namibia Africa 1982 58.968 1099010 4191.100511 1063 Namibia Africa 1977 56.437 977026 3876.485958 1064 Namibia Africa 1972 53.867 821782 3746.080948 1065 Namibia Africa 1967 51.159 706640 3793.694753 1066 Namibia Africa 1962 48.386 621392 3173.215595 1067 Namibia Africa 1957 45.226 548080 2621.448058 1068 Namibia Africa 1952 41.725 485831 2423.780443 1069 Nepal Asia 2007 63.785 28901790 1091.359778 1070 Nepal Asia 2002 61.34 25873917 1057.206311 1071 Nepal Asia 1997 59.426 23001113 1010.892138 1072 Nepal Asia 1992 55.727 20326209 897.7403604 1073 Nepal Asia 1987 52.537 17917180 775.6324501 1074 Nepal Asia 1982 49.594 15796314 718.3730947 1075 Nepal Asia 1977 46.748 13933198 694.1124398 1076 Nepal Asia 1972 43.971 12412593 674.7881296 1077 Nepal Asia 1967 41.472 11261690 676.4422254 1078 Nepal Asia 1962 39.393 10332057 652.3968593 1079 Nepal Asia 1957 37.686 9682338 597.9363558 1080 Nepal Asia 1952 36.157 9182536 545.8657229 1081 Netherlands Europe 2007 79.762 16570613 36797.93332 1082 Netherlands Europe 2002 78.53 16122830 33724.75778 1083 Netherlands Europe 1997 78.03 15604464 30246.13063 1084 Netherlands Europe 1992 77.42 15174244 26790.94961 1085 Netherlands Europe 1987 76.83 14665278 23651.32361 1086 Netherlands Europe 1982 76.05 14310401 21399.46046 1087 Netherlands Europe 1977 75.24 13852989 21209.0592 1088 Netherlands Europe 1972 73.75 13329874 18794.74567 1089 Netherlands Europe 1967 73.82 12596822 15363.25136 1090 Netherlands Europe 1962 73.23 11805689 12790.84956 1091 Netherlands Europe 1957 72.99 11026383 11276.19344 1092 Netherlands Europe 1952 72.13 10381988 8941.571858 1093 New Zealand Oceania 2007 80.204 4115771 25185.00911 1094 New Zealand Oceania 2002 79.11 3908037 23189.80135 1095 New Zealand Oceania 1997 77.55 3676187 21050.41377 1096 New Zealand Oceania 1992 76.33 3437674 18363.32494 1097 New Zealand Oceania 1987 74.32 3317166 19007.19129 1098 New Zealand Oceania 1982 73.84 3210650 17632.4104 1099 New Zealand Oceania 1977 72.22 3164900 16233.7177 1100 New Zealand Oceania 1972 71.89 2929100 16046.03728 1101 New Zealand Oceania 1967 71.52 2728150 14463.91893 1102 New Zealand Oceania 1962 71.24 2488550 13175.678 1103 New Zealand Oceania 1957 70.26 2229407 12247.39532 1104 New Zealand Oceania 1952 69.39 1994794 10556.57566 1105 Nicaragua Americas 2007 72.899 5675356 2749.320965 1106 Nicaragua Americas 2002 70.836 5146848 2474.548819 1107 Nicaragua Americas 1997 68.426 4609572 2253.023004 1108 Nicaragua Americas 1992 65.843 4017939 2170.151724 1109 Nicaragua Americas 1987 62.008 3344353 2955.984375 1110 Nicaragua Americas 1982 59.298 2979423 3470.338156 1111 Nicaragua Americas 1977 57.47 2554598 5486.371089 1112 Nicaragua Americas 1972 55.151 2182908 4688.593267 1113 Nicaragua Americas 1967 51.884 1865490 4643.393534 1114 Nicaragua Americas 1962 48.632 1590597 3634.364406 1115 Nicaragua Americas 1957 45.432 1358828 3457.415947 1116 Nicaragua Americas 1952 42.314 1165790 3112.363948 1117 Niger Africa 2007 56.867 12894865 619.6768924 1118 Niger Africa 2002 54.496 11140655 601.0745012 1119 Niger Africa 1997 51.313 9666252 580.3052092 1120 Niger Africa 1992 47.391 8392818 581.182725 1121 Niger Africa 1987 44.555 7332638 668.3000228 1122 Niger Africa 1982 42.598 6437188 909.7221354 1123 Niger Africa 1977 41.291 5682086 808.8970728 1124 Niger Africa 1972 40.546 5060262 954.2092363 1125 Niger Africa 1967 40.118 4534062 1054.384891 1126 Niger Africa 1962 39.487 4076008 997.7661127 1127 Niger Africa 1957 38.598 3692184 835.5234025 1128 Niger Africa 1952 37.444 3379468 761.879376 1129 Nigeria Africa 2007 46.859 135031164 2013.977305 1130 Nigeria Africa 2002 46.608 119901274 1615.286395 1131 Nigeria Africa 1997 47.464 106207839 1624.941275 1132 Nigeria Africa 1992 47.472 93364244 1619.848217 1133 Nigeria Africa 1987 46.886 81551520 1385.029563 1134 Nigeria Africa 1982 45.826 73039376 1576.97375 1135 Nigeria Africa 1977 44.514 62209173 1981.951806 1136 Nigeria Africa 1972 42.821 53740085 1698.388838 1137 Nigeria Africa 1967 41.04 47287752 1014.514104 1138 Nigeria Africa 1962 39.36 41871351 1150.927478 1139 Nigeria Africa 1957 37.802 37173340 1100.592563 1140 Nigeria Africa 1952 36.324 33119096 1077.281856 1141 Norway Europe 2007 80.196 4627926 49357.19017 1142 Norway Europe 2002 79.05 4535591 44683.97525 1143 Norway Europe 1997 78.32 4405672 41283.16433 1144 Norway Europe 1992 77.32 4286357 33965.66115 1145 Norway Europe 1987 75.89 4186147 31540.9748 1146 Norway Europe 1982 75.97 4114787 26298.63531 1147 Norway Europe 1977 75.37 4043205 23311.34939 1148 Norway Europe 1972 74.34 3933004 18965.05551 1149 Norway Europe 1967 74.08 3786019 16361.87647 1150 Norway Europe 1962 73.47 3638919 13450.40151 1151 Norway Europe 1957 73.44 3491938 11653.97304 1152 Norway Europe 1952 72.67 3327728 10095.42172 1153 Oman Asia 2007 75.64 3204897 22316.19287 1154 Oman Asia 2002 74.193 2713462 19774.83687 1155 Oman Asia 1997 72.499 2283635 19702.05581 1156 Oman Asia 1992 71.197 1915208 18616.70691 1157 Oman Asia 1987 67.734 1593882 18115.22313 1158 Oman Asia 1982 62.728 1301048 12954.79101 1159 Oman Asia 1977 57.367 1004533 11848.34392 1160 Oman Asia 1972 52.143 829050 10618.03855 1161 Oman Asia 1967 46.988 714775 4720.942687 1162 Oman Asia 1962 43.165 628164 2924.638113 1163 Oman Asia 1957 40.08 561977 2242.746551 1164 Oman Asia 1952 37.578 507833 1828.230307 1165 Pakistan Asia 2007 65.483 169270617 2605.94758 1166 Pakistan Asia 2002 63.61 153403524 2092.712441 1167 Pakistan Asia 1997 61.818 135564834 2049.350521 1168 Pakistan Asia 1992 60.838 120065004 1971.829464 1169 Pakistan Asia 1987 58.245 105186881 1704.686583 1170 Pakistan Asia 1982 56.158 91462088 1443.429832 1171 Pakistan Asia 1977 54.043 78152686 1175.921193 1172 Pakistan Asia 1972 51.929 69325921 1049.938981 1173 Pakistan Asia 1967 49.8 60641899 942.4082588 1174 Pakistan Asia 1962 47.67 53100671 803.3427418 1175 Pakistan Asia 1957 45.557 46679944 747.0835292 1176 Pakistan Asia 1952 43.436 41346560 684.5971438 1177 Panama Americas 2007 75.537 3242173 9809.185636 1178 Panama Americas 2002 74.712 2990875 7356.031934 1179 Panama Americas 1997 73.738 2734531 7113.692252 1180 Panama Americas 1992 72.462 2484997 6618.74305 1181 Panama Americas 1987 71.523 2253639 7034.779161 1182 Panama Americas 1982 70.472 2036305 7009.601598 1183 Panama Americas 1977 68.681 1839782 5351.912144 1184 Panama Americas 1972 66.216 1616384 5364.249663 1185 Panama Americas 1967 64.071 1405486 4421.009084 1186 Panama Americas 1962 61.817 1215725 3536.540301 1187 Panama Americas 1957 59.201 1063506 2961.800905 1188 Panama Americas 1952 55.191 940080 2480.380334 1189 Paraguay Americas 2002 70.755 5884491 3783.674243 1190 Paraguay Americas 2007 71.752 6667147 4172.838464 1191 Paraguay Americas 1997 69.4 5154123 4247.400261 1192 Paraguay Americas 1992 68.225 4483945 4196.411078 1193 Paraguay Americas 1987 67.378 3886512 3998.875695 1194 Paraguay Americas 1982 66.874 3366439 4258.503604 1195 Paraguay Americas 1977 66.353 2984494 3248.373311 1196 Paraguay Americas 1972 65.815 2614104 2523.337977 1197 Paraguay Americas 1967 64.951 2287985 2299.376311 1198 Paraguay Americas 1962 64.361 2009813 2148.027146 1199 Paraguay Americas 1957 63.196 1770902 2046.154706 1200 Paraguay Americas 1952 62.649 1555876 1952.308701 1201 Peru Americas 2007 71.421 28674757 7408.905561 1202 Peru Americas 2002 69.906 26769436 5909.020073 1203 Peru Americas 1997 68.386 24748122 5838.347657 1204 Peru Americas 1992 66.458 22430449 4446.380924 1205 Peru Americas 1987 64.134 20195924 6360.943444 1206 Peru Americas 1982 61.406 18125129 6434.501797 1207 Peru Americas 1977 58.447 15990099 6281.290855 1208 Peru Americas 1972 55.448 13954700 5937.827283 1209 Peru Americas 1967 51.445 12132200 5788.09333 1210 Peru Americas 1962 49.096 10516500 4957.037982 1211 Peru Americas 1957 46.263 9146100 4245.256698 1212 Peru Americas 1952 43.902 8025700 3758.523437 1213 Philippines Asia 2002 70.303 82995088 2650.921068 1214 Philippines Asia 2007 71.688 91077287 3190.481016 1215 Philippines Asia 1997 68.564 75012988 2536.534925 1216 Philippines Asia 1992 66.458 67185766 2279.324017 1217 Philippines Asia 1987 64.151 60017788 2189.634995 1218 Philippines Asia 1982 62.082 53456774 2603.273765 1219 Philippines Asia 1977 60.06 46850962 2373.204287 1220 Philippines Asia 1972 58.065 40850141 1989.37407 1221 Philippines Asia 1967 56.393 35356600 1814.12743 1222 Philippines Asia 1962 54.757 30325264 1649.552153 1223 Philippines Asia 1957 51.334 26072194 1547.944844 1224 Philippines Asia 1952 47.752 22438691 1272.880995 1225 Poland Europe 2002 74.67 38625976 12002.23908 1226 Poland Europe 1997 72.75 38654957 10159.58368 1227 Poland Europe 1992 70.99 38370697 7738.881247 1228 Poland Europe 2007 75.563 38518241 15389.92468 1229 Poland Europe 1987 70.98 37740710 9082.351172 1230 Poland Europe 1982 71.32 36227381 8451.531004 1231 Poland Europe 1977 70.67 34621254 9508.141454 1232 Poland Europe 1972 70.85 33039545 8006.506993 1233 Poland Europe 1967 69.61 31785378 6557.152776 1234 Poland Europe 1962 67.64 30329617 5338.752143 1235 Poland Europe 1957 65.77 28235346 4734.253019 1236 Poland Europe 1952 61.31 25730551 4029.329699 1237 Portugal Europe 2002 77.29 10433867 19970.90787 1238 Portugal Europe 2007 78.098 10642836 20509.64777 1239 Portugal Europe 1997 75.97 10156415 17641.03156 1240 Portugal Europe 1992 74.86 9927680 16207.26663 1241 Portugal Europe 1987 74.06 9915289 13039.30876 1242 Portugal Europe 1982 72.77 9859650 11753.84291 1243 Portugal Europe 1977 70.41 9662600 10172.48572 1244 Portugal Europe 1972 69.26 8970450 9022.247417 1245 Portugal Europe 1967 66.6 9103000 6361.517993 1246 Portugal Europe 1962 64.39 9019800 4727.954889 1247 Portugal Europe 1957 61.51 8817650 3774.571743 1248 Portugal Europe 1952 59.82 8526050 3068.319867 1249 Puerto Rico Americas 1997 74.917 3759430 16999.4333 1250 Puerto Rico Americas 1992 73.911 3585176 14641.58711 1251 Puerto Rico Americas 1987 74.63 3444468 12281.34191 1252 Puerto Rico Americas 1982 73.75 3279001 10330.98915 1253 Puerto Rico Americas 1977 73.44 3080828 9770.524921 1254 Puerto Rico Americas 1972 72.16 2847132 9123.041742 1255 Puerto Rico Americas 1967 71.1 2648961 6929.277714 1256 Puerto Rico Americas 1962 69.62 2448046 5108.34463 1257 Puerto Rico Americas 1957 68.54 2260000 3907.156189 1258 Puerto Rico Americas 1952 64.28 2227000 3081.959785 1259 Puerto Rico Americas 2007 78.746 3942491 19328.70901 1260 Puerto Rico Americas 2002 77.778 3859606 18855.60618 1261 Reunion Africa 1972 64.274 461633 5047.658563 1262 Reunion Africa 1982 69.885 517810 5267.219353 1263 Reunion Africa 2007 76.442 798094 7670.122558 1264 Reunion Africa 1977 67.064 492095 4319.804067 1265 Reunion Africa 1997 74.772 684810 6071.941411 1266 Reunion Africa 1992 73.615 622191 6101.255823 1267 Reunion Africa 1957 55.09 308700 2769.451844 1268 Reunion Africa 1962 57.666 358900 3173.72334 1269 Reunion Africa 1987 71.913 562035 5303.377488 1270 Reunion Africa 2002 75.744 743981 6316.1652 1271 Reunion Africa 1952 52.724 257700 2718.885295 1272 Reunion Africa 1967 60.542 414024 4021.175739 1273 Romania Europe 1982 69.66 22356726 9605.314053 1274 Romania Europe 1972 69.21 20662648 8011.414402 1275 Romania Europe 1962 66.8 18680721 4734.997586 1276 Romania Europe 1987 69.53 22686371 9696.273295 1277 Romania Europe 1952 61.05 16630000 3144.613186 1278 Romania Europe 1957 64.1 17829327 3943.370225 1279 Romania Europe 1992 69.36 22797027 6598.409903 1280 Romania Europe 2002 71.322 22404337 7885.360081 1281 Romania Europe 1997 69.72 22562458 7346.547557 1282 Romania Europe 1967 66.8 19284814 6470.866545 1283 Romania Europe 1977 69.46 21658597 9356.39724 1284 Romania Europe 2007 72.476 22276056 10808.47561 1285 Rwanda Africa 1957 41.5 2822082 540.2893983 1286 Rwanda Africa 1997 36.087 7212583 589.9445051 1287 Rwanda Africa 2007 46.242 8860588 863.0884639 1288 Rwanda Africa 1992 23.599 7290203 737.0685949 1289 Rwanda Africa 2002 43.413 7852401 785.6537648 1290 Rwanda Africa 1972 44.6 3992121 590.5806638 1291 Rwanda Africa 1977 45 4657072 670.0806011 1292 Rwanda Africa 1967 44.1 3451079 510.9637142 1293 Rwanda Africa 1962 43 3051242 597.4730727 1294 Rwanda Africa 1987 44.02 6349365 847.991217 1295 Rwanda Africa 1982 46.218 5507565 881.5706467 1296 Rwanda Africa 1952 40 2534927 493.3238752 1297 Sao Tome and Principe Africa 1962 51.893 65345 1071.551119 1298 Sao Tome and Principe Africa 1967 54.425 70787 1384.840593 1299 Sao Tome and Principe Africa 1952 46.471 60011 879.5835855 1300 Sao Tome and Principe Africa 1957 48.945 61325 860.7369026 1301 Sao Tome and Principe Africa 1972 56.48 76595 1532.985254 1302 Sao Tome and Principe Africa 1977 58.55 86796 1737.561657 1303 Sao Tome and Principe Africa 2007 65.528 199579 1598.435089 1304 Sao Tome and Principe Africa 2002 64.337 170372 1353.09239 1305 Sao Tome and Principe Africa 1997 63.306 145608 1339.076036 1306 Sao Tome and Principe Africa 1987 61.728 110812 1516.525457 1307 Sao Tome and Principe Africa 1992 62.742 125911 1428.777814 1308 Sao Tome and Principe Africa 1982 60.351 98593 1890.218117 1309 Saudi Arabia Asia 2002 71.626 24501530 19014.54118 1310 Saudi Arabia Asia 2007 72.777 27601038 21654.83194 1311 Saudi Arabia Asia 1997 70.533 21229759 20586.69019 1312 Saudi Arabia Asia 1992 68.768 16945857 24841.61777 1313 Saudi Arabia Asia 1987 66.295 14619745 21198.26136 1314 Saudi Arabia Asia 1977 58.69 8128505 34167.7626 1315 Saudi Arabia Asia 1982 63.012 11254672 33693.17525 1316 Saudi Arabia Asia 1972 53.886 6472756 24837.42865 1317 Saudi Arabia Asia 1967 49.901 5618198 16903.04886 1318 Saudi Arabia Asia 1957 42.868 4419650 8157.591248 1319 Saudi Arabia Asia 1952 39.875 4005677 6459.554823 1320 Saudi Arabia Asia 1962 45.914 4943029 11626.41975 1321 Senegal Africa 2007 63.062 12267493 1712.472136 1322 Senegal Africa 1987 55.769 7171347 1441.72072 1323 Senegal Africa 2002 61.6 10870037 1519.635262 1324 Senegal Africa 1982 52.379 6147783 1518.479984 1325 Senegal Africa 1997 60.187 9535314 1392.368347 1326 Senegal Africa 1992 58.196 8307920 1367.899369 1327 Senegal Africa 1972 45.815 4588696 1597.712056 1328 Senegal Africa 1962 41.454 3430243 1654.988723 1329 Senegal Africa 1952 37.278 2755589 1450.356983 1330 Senegal Africa 1957 39.329 3054547 1567.653006 1331 Senegal Africa 1967 43.563 3965841 1612.404632 1332 Senegal Africa 1977 48.879 5260855 1561.769116 1333 Serbia Europe 1957 61.685 7271135 4981.090891 1334 Serbia Europe 1992 71.659 9826397 9325.068238 1335 Serbia Europe 2007 74.002 10150265 9786.534714 1336 Serbia Europe 1997 72.232 10336594 7914.320304 1337 Serbia Europe 1987 71.218 9230783 15870.87851 1338 Serbia Europe 1982 70.162 9032824 15181.0927 1339 Serbia Europe 1972 68.7 8313288 10522.06749 1340 Serbia Europe 1967 66.914 7971222 7991.707066 1341 Serbia Europe 1962 64.531 7616060 6289.629157 1342 Serbia Europe 1977 70.3 8686367 12980.66956 1343 Serbia Europe 1952 57.996 6860147 3581.459448 1344 Serbia Europe 2002 73.213 10111559 7236.075251 1345 Sierra Leone Africa 2007 42.568 6144562 862.5407561 1346 Sierra Leone Africa 2002 41.012 5359092 699.489713 1347 Sierra Leone Africa 1992 38.333 4260884 1068.696278 1348 Sierra Leone Africa 1987 40.006 3868905 1294.447788 1349 Sierra Leone Africa 1997 39.897 4578212 574.6481576 1350 Sierra Leone Africa 1982 38.445 3464522 1465.010784 1351 Sierra Leone Africa 1967 34.113 2662190 1206.043465 1352 Sierra Leone Africa 1972 35.4 2879013 1353.759762 1353 Sierra Leone Africa 1962 32.767 2467895 1116.639877 1354 Sierra Leone Africa 1977 36.788 3140897 1348.285159 1355 Sierra Leone Africa 1952 30.331 2143249 879.7877358 1356 Sierra Leone Africa 1957 31.57 2295678 1004.484437 1357 Singapore Asia 1992 75.788 3235865 24769.8912 1358 Singapore Asia 1982 71.76 2651869 15169.16112 1359 Singapore Asia 1977 70.795 2325300 11210.08948 1360 Singapore Asia 1972 69.521 2152400 8597.756202 1361 Singapore Asia 1967 67.946 1977600 4977.41854 1362 Singapore Asia 1962 65.798 1750200 3674.735572 1363 Singapore Asia 1987 73.56 2794552 18861.53081 1364 Singapore Asia 1952 60.396 1127000 2315.138227 1365 Singapore Asia 1997 77.158 3802309 33519.4766 1366 Singapore Asia 1957 63.179 1445929 2843.104409 1367 Singapore Asia 2007 79.972 4553009 47143.17964 1368 Singapore Asia 2002 78.77 4197776 36023.1054 1369 Slovak Republic Europe 2007 74.663 5447502 18678.31435 1370 Slovak Republic Europe 2002 73.8 5410052 13638.77837 1371 Slovak Republic Europe 1987 71.08 5199318 12037.26758 1372 Slovak Republic Europe 1992 71.38 5302888 9498.467723 1373 Slovak Republic Europe 1982 70.8 5048043 11348.54585 1374 Slovak Republic Europe 1977 70.45 4827803 10922.66404 1375 Slovak Republic Europe 1972 70.35 4593433 9674.167626 1376 Slovak Republic Europe 1962 70.33 4237384 7481.107598 1377 Slovak Republic Europe 1967 70.98 4442238 8412.902397 1378 Slovak Republic Europe 1952 64.36 3558137 5074.659104 1379 Slovak Republic Europe 1997 72.71 5383010 12126.23065 1380 Slovak Republic Europe 1957 67.45 3844277 6093.26298 1381 Slovenia Europe 2007 77.926 2009245 25768.25759 1382 Slovenia Europe 1997 75.13 2011612 17161.10735 1383 Slovenia Europe 2002 76.66 2011497 20660.01936 1384 Slovenia Europe 1992 73.64 1999210 14214.71681 1385 Slovenia Europe 1987 72.25 1945870 18678.53492 1386 Slovenia Europe 1982 71.063 1861252 17866.72175 1387 Slovenia Europe 1977 70.97 1746919 15277.03017 1388 Slovenia Europe 1972 69.82 1694510 12383.4862 1389 Slovenia Europe 1967 69.18 1646912 9405.489397 1390 Slovenia Europe 1962 69.15 1582962 7402.303395 1391 Slovenia Europe 1957 67.85 1533070 5862.276629 1392 Slovenia Europe 1952 65.57 1489518 4215.041741 1393 Somalia Africa 2007 48.159 9118773 926.1410683 1394 Somalia Africa 2002 45.936 7753310 882.0818218 1395 Somalia Africa 1997 43.795 6633514 930.5964284 1396 Somalia Africa 1992 39.658 6099799 926.9602964 1397 Somalia Africa 1987 44.501 6921858 1093.244963 1398 Somalia Africa 1982 42.955 5828892 1176.807031 1399 Somalia Africa 1977 41.974 4353666 1450.992513 1400 Somalia Africa 1962 36.981 3080153 1369.488336 1401 Somalia Africa 1967 38.977 3428839 1284.73318 1402 Somalia Africa 1957 34.977 2780415 1258.147413 1403 Somalia Africa 1952 32.978 2526994 1135.749842 1404 Somalia Africa 1972 40.973 3840161 1254.576127 1405 South Africa Africa 2007 49.339 43997828 9269.657808 1406 South Africa Africa 2002 53.365 44433622 7710.946444 1407 South Africa Africa 1997 60.236 42835005 7479.188244 1408 South Africa Africa 1992 61.888 39964159 7225.069258 1409 South Africa Africa 1982 58.161 31140029 8568.266228 1410 South Africa Africa 1987 60.834 35933379 7825.823398 1411 South Africa Africa 1977 55.527 27129932 8028.651439 1412 South Africa Africa 1972 53.696 23935810 7765.962636 1413 South Africa Africa 1967 51.927 20997321 7114.477971 1414 South Africa Africa 1962 49.951 18356657 5768.729717 1415 South Africa Africa 1957 47.985 16151549 5487.104219 1416 South Africa Africa 1952 45.009 14264935 4725.295531 1417 Spain Europe 2007 80.941 40448191 28821.0637 1418 Spain Europe 2002 79.78 40152517 24835.47166 1419 Spain Europe 1997 78.77 39855442 20445.29896 1420 Spain Europe 1992 77.57 39549438 18603.06452 1421 Spain Europe 1987 76.9 38880702 15764.98313 1422 Spain Europe 1982 76.3 37983310 13926.16997 1423 Spain Europe 1977 74.39 36439000 13236.92117 1424 Spain Europe 1972 73.06 34513161 10638.75131 1425 Spain Europe 1967 71.44 32850275 7993.512294 1426 Spain Europe 1962 69.69 31158061 5693.843879 1427 Spain Europe 1957 66.66 29841614 4564.80241 1428 Spain Europe 1952 64.94 28549870 3834.034742 1429 Sri Lanka Asia 2007 72.396 20378239 3970.095407 1430 Sri Lanka Asia 2002 70.815 19576783 3015.378833 1431 Sri Lanka Asia 1997 70.457 18698655 2664.477257 1432 Sri Lanka Asia 1992 70.379 17587060 2153.739222 1433 Sri Lanka Asia 1987 69.011 16495304 1876.766827 1434 Sri Lanka Asia 1982 68.757 15410151 1648.079789 1435 Sri Lanka Asia 1977 65.949 14116836 1348.775651 1436 Sri Lanka Asia 1972 65.042 13016733 1213.39553 1437 Sri Lanka Asia 1967 64.266 11737396 1135.514326 1438 Sri Lanka Asia 1962 62.192 10421936 1074.47196 1439 Sri Lanka Asia 1957 61.456 9128546 1072.546602 1440 Sri Lanka Asia 1952 57.593 7982342 1083.53203 1441 Sudan Africa 2007 58.556 42292929 2602.394995 1442 Sudan Africa 2002 56.369 37090298 1993.398314 1443 Sudan Africa 1997 55.373 32160729 1632.210764 1444 Sudan Africa 1992 53.556 28227588 1492.197043 1445 Sudan Africa 1987 51.744 24725960 1507.819159 1446 Sudan Africa 1982 50.338 20367053 1895.544073 1447 Sudan Africa 1977 47.8 17104986 2202.988423 1448 Sudan Africa 1972 45.083 14597019 1659.652775 1449 Sudan Africa 1962 40.87 11183227 1959.593767 1450 Sudan Africa 1967 42.858 12716129 1687.997641 1451 Sudan Africa 1957 39.624 9753392 1770.337074 1452 Sudan Africa 1952 38.635 8504667 1615.991129 1453 Swaziland Africa 2007 39.613 1133066 4513.480643 1454 Swaziland Africa 2002 43.869 1130269 4128.116943 1455 Swaziland Africa 1997 54.289 1054486 3876.76846 1456 Swaziland Africa 1992 58.474 962344 3553.0224 1457 Swaziland Africa 1987 57.678 779348 3984.839812 1458 Swaziland Africa 1977 52.537 551425 3781.410618 1459 Swaziland Africa 1972 49.552 480105 3364.836625 1460 Swaziland Africa 1967 46.633 420690 2613.101665 1461 Swaziland Africa 1962 44.992 370006 1856.182125 1462 Swaziland Africa 1982 55.561 649901 3895.384018 1463 Swaziland Africa 1957 43.424 326741 1244.708364 1464 Swaziland Africa 1952 41.407 290243 1148.376626 1465 Sweden Europe 2007 80.884 9031088 33859.74835 1466 Sweden Europe 2002 80.04 8954175 29341.63093 1467 Sweden Europe 1997 79.39 8897619 25266.59499 1468 Sweden Europe 1992 78.16 8718867 23880.01683 1469 Sweden Europe 1987 77.19 8421403 23586.92927 1470 Sweden Europe 1977 75.44 8251648 18855.72521 1471 Sweden Europe 1972 74.72 8122293 17832.02464 1472 Sweden Europe 1967 74.16 7867931 15258.29697 1473 Sweden Europe 1962 73.37 7561588 12329.44192 1474 Sweden Europe 1957 72.49 7363802 9911.878226 1475 Sweden Europe 1952 71.86 7124673 8527.844662 1476 Sweden Europe 1982 76.42 8325260 20667.38125 1477 Switzerland Europe 1952 69.62 4815000 14734.23275 1478 Switzerland Europe 2007 81.701 7554661 37506.41907 1479 Switzerland Europe 2002 80.62 7361757 34480.95771 1480 Switzerland Europe 1997 79.37 7193761 32135.32301 1481 Switzerland Europe 1992 78.03 6995447 31871.5303 1482 Switzerland Europe 1987 77.41 6649942 30281.70459 1483 Switzerland Europe 1982 76.21 6468126 28397.71512 1484 Switzerland Europe 1977 75.39 6316424 26982.29052 1485 Switzerland Europe 1972 73.78 6401400 27195.11304 1486 Switzerland Europe 1967 72.77 6063000 22966.14432 1487 Switzerland Europe 1962 71.32 5666000 20431.0927 1488 Switzerland Europe 1957 70.56 5126000 17909.48973 1489 Syria Asia 2007 74.143 19314747 4184.548089 1490 Syria Asia 2002 73.053 17155814 4090.925331 1491 Syria Asia 1997 71.527 15081016 4014.238972 1492 Syria Asia 1992 69.249 13219062 3340.542768 1493 Syria Asia 1987 66.974 11242847 3116.774285 1494 Syria Asia 1982 64.59 9410494 3761.837715 1495 Syria Asia 1977 61.195 7932503 3195.484582 1496 Syria Asia 1972 57.296 6701172 2571.423014 1497 Syria Asia 1967 53.655 5680812 1881.923632 1498 Syria Asia 1962 50.305 4834621 2193.037133 1499 Syria Asia 1957 48.284 4149908 2117.234893 1500 Syria Asia 1952 45.883 3661549 1643.485354 1501 Taiwan Asia 2007 78.4 23174294 28718.27684 1502 Taiwan Asia 2002 76.99 22454239 23235.42329 1503 Taiwan Asia 1997 75.25 21628605 20206.82098 1504 Taiwan Asia 1992 74.26 20686918 15215.6579 1505 Taiwan Asia 1987 73.4 19757799 11054.56175 1506 Taiwan Asia 1982 72.16 18501390 7426.354774 1507 Taiwan Asia 1977 70.59 16785196 5596.519826 1508 Taiwan Asia 1972 69.39 15226039 4062.523897 1509 Taiwan Asia 1967 67.5 13648692 2643.858681 1510 Taiwan Asia 1962 65.2 11918938 1822.879028 1511 Taiwan Asia 1957 62.4 10164215 1507.86129 1512 Taiwan Asia 1952 58.5 8550362 1206.947913 1513 Tanzania Africa 2007 52.517 38139640 1107.482182 1514 Tanzania Africa 2002 49.651 34593779 899.0742111 1515 Tanzania Africa 1997 48.466 30686889 789.1862231 1516 Tanzania Africa 1992 50.44 26605473 825.682454 1517 Tanzania Africa 1987 51.535 23040630 831.8220794 1518 Tanzania Africa 1982 50.608 19844382 874.2426069 1519 Tanzania Africa 1977 49.919 17129565 962.4922932 1520 Tanzania Africa 1972 47.62 14706593 915.9850592 1521 Tanzania Africa 1967 45.757 12607312 848.2186575 1522 Tanzania Africa 1962 44.246 10863958 722.0038073 1523 Tanzania Africa 1957 42.974 9452826 698.5356073 1524 Tanzania Africa 1952 41.215 8322925 716.6500721 1525 Thailand Asia 2007 70.616 65068149 7458.396327 1526 Thailand Asia 2002 68.564 62806748 5913.187529 1527 Thailand Asia 1997 67.521 60216677 5852.625497 1528 Thailand Asia 1992 67.298 56667095 4616.896545 1529 Thailand Asia 1987 66.084 52910342 2982.653773 1530 Thailand Asia 1982 64.597 48827160 2393.219781 1531 Thailand Asia 1977 62.494 44148285 1961.224635 1532 Thailand Asia 1972 60.405 39276153 1524.358936 1533 Thailand Asia 1967 58.285 34024249 1295.46066 1534 Thailand Asia 1962 56.061 29263397 1002.199172 1535 Thailand Asia 1957 53.63 25041917 793.5774148 1536 Thailand Asia 1952 50.848 21289402 757.7974177 1537 Togo Africa 2007 58.42 5701579 882.9699438 1538 Togo Africa 2002 57.561 4977378 886.2205765 1539 Togo Africa 1997 58.39 4320890 982.2869243 1540 Togo Africa 1992 58.061 3747553 1034.298904 1541 Togo Africa 1987 56.941 3154264 1202.201361 1542 Togo Africa 1982 55.471 2644765 1344.577953 1543 Togo Africa 1977 52.887 2308582 1532.776998 1544 Togo Africa 1972 49.759 2056351 1649.660188 1545 Togo Africa 1967 46.769 1735550 1477.59676 1546 Togo Africa 1962 43.922 1528098 1067.53481 1547 Togo Africa 1957 41.208 1357445 925.9083202 1548 Togo Africa 1952 38.596 1219113 859.8086567 1549 Trinidad and Tobago Americas 2007 69.819 1056608 18008.50924 1550 Trinidad and Tobago Americas 2002 68.976 1101832 11460.60023 1551 Trinidad and Tobago Americas 1997 69.465 1138101 8792.573126 1552 Trinidad and Tobago Americas 1992 69.862 1183669 7370.990932 1553 Trinidad and Tobago Americas 1987 69.582 1191336 7388.597823 1554 Trinidad and Tobago Americas 1982 68.832 1116479 9119.528607 1555 Trinidad and Tobago Americas 1977 68.3 1039009 7899.554209 1556 Trinidad and Tobago Americas 1972 65.9 975199 6619.551419 1557 Trinidad and Tobago Americas 1967 65.4 960155 5621.368472 1558 Trinidad and Tobago Americas 1962 64.9 887498 4997.523971 1559 Trinidad and Tobago Americas 1957 61.8 764900 4100.3934 1560 Trinidad and Tobago Americas 1952 59.1 662850 3023.271928 1561 Tunisia Africa 2007 73.923 10276158 7092.923025 1562 Tunisia Africa 2002 73.042 9770575 5722.895655 1563 Tunisia Africa 1997 71.973 9231669 4876.798614 1564 Tunisia Africa 1992 70.001 8523077 4332.720164 1565 Tunisia Africa 1987 66.894 7724976 3810.419296 1566 Tunisia Africa 1982 64.048 6734098 3560.233174 1567 Tunisia Africa 1977 59.837 6005061 3120.876811 1568 Tunisia Africa 1972 55.602 5303507 2753.285994 1569 Tunisia Africa 1967 52.053 4786986 1932.360167 1570 Tunisia Africa 1962 49.579 4286552 1660.30321 1571 Tunisia Africa 1957 47.1 3950849 1395.232468 1572 Tunisia Africa 1952 44.6 3647735 1468.475631 1573 Turkey Europe 2007 71.777 71158647 8458.276384 1574 Turkey Europe 2002 70.845 67308928 6508.085718 1575 Turkey Europe 1997 68.835 63047647 6601.429915 1576 Turkey Europe 1992 66.146 58179144 5678.348271 1577 Turkey Europe 1987 63.108 52881328 5089.043686 1578 Turkey Europe 1982 61.036 47328791 4241.356344 1579 Turkey Europe 1977 59.507 42404033 4269.122326 1580 Turkey Europe 1972 57.005 37492953 3450.69638 1581 Turkey Europe 1967 54.336 33411317 2826.356387 1582 Turkey Europe 1962 52.098 29788695 2322.869908 1583 Turkey Europe 1957 48.079 25670939 2218.754257 1584 Turkey Europe 1952 43.585 22235677 1969.10098 1585 Uganda Africa 2007 51.542 29170398 1056.380121 1586 Uganda Africa 2002 47.813 24739869 927.7210018 1587 Uganda Africa 1997 44.578 21210254 816.559081 1588 Uganda Africa 1992 48.825 18252190 644.1707969 1589 Uganda Africa 1987 51.509 15283050 617.7244065 1590 Uganda Africa 1982 49.849 12939400 682.2662268 1591 Uganda Africa 1977 50.35 11457758 843.7331372 1592 Uganda Africa 1972 51.016 10190285 950.735869 1593 Uganda Africa 1967 48.051 8900294 908.9185217 1594 Uganda Africa 1962 45.344 7688797 767.2717398 1595 Uganda Africa 1957 42.571 6675501 774.3710692 1596 Uganda Africa 1952 39.978 5824797 734.753484 1597 United Kingdom Europe 2007 79.425 60776238 33203.26128 1598 United Kingdom Europe 2002 78.471 59912431 29478.99919 1599 United Kingdom Europe 1997 77.218 58808266 26074.53136 1600 United Kingdom Europe 1992 76.42 57866349 22705.09254 1601 United Kingdom Europe 1987 75.007 56981620 21664.78767 1602 United Kingdom Europe 1982 74.04 56339704 18232.42452 1603 United Kingdom Europe 1977 72.76 56179000 17428.74846 1604 United Kingdom Europe 1972 72.01 56079000 15895.11641 1605 United Kingdom Europe 1967 71.36 54959000 14142.85089 1606 United Kingdom Europe 1962 70.76 53292000 12477.17707 1607 United Kingdom Europe 1957 70.42 51430000 11283.17795 1608 United Kingdom Europe 1952 69.18 50430000 9979.508487 1609 United States Americas 2007 78.242 301139947 42951.65309 1610 United States Americas 2002 77.31 287675526 39097.09955 1611 United States Americas 1997 76.81 272911760 35767.43303 1612 United States Americas 1992 76.09 256894189 32003.93224 1613 United States Americas 1987 75.02 242803533 29884.35041 1614 United States Americas 1982 74.65 232187835 25009.55914 1615 United States Americas 1977 73.38 220239000 24072.63213 1616 United States Americas 1972 71.34 209896000 21806.03594 1617 United States Americas 1967 70.76 198712000 19530.36557 1618 United States Americas 1962 70.21 186538000 16173.14586 1619 United States Americas 1957 69.49 171984000 14847.12712 1620 United States Americas 1952 68.44 157553000 13990.48208 1621 Uruguay Americas 2007 76.384 3447496 10611.46299 1622 Uruguay Americas 2002 75.307 3363085 7727.002004 1623 Uruguay Americas 1997 74.223 3262838 9230.240708 1624 Uruguay Americas 1992 72.752 3149262 8137.004775 1625 Uruguay Americas 1987 71.918 3045153 7452.398969 1626 Uruguay Americas 1982 70.805 2953997 6920.223051 1627 Uruguay Americas 1977 69.481 2873520 6504.339663 1628 Uruguay Americas 1972 68.673 2829526 5703.408898 1629 Uruguay Americas 1967 68.468 2748579 5444.61962 1630 Uruguay Americas 1962 68.253 2598466 5603.357717 1631 Uruguay Americas 1957 67.044 2424959 6150.772969 1632 Uruguay Americas 1952 66.071 2252965 5716.766744 1633 Venezuela Americas 2007 73.747 26084662 11415.80569 1634 Venezuela Americas 1997 72.146 22374398 10165.49518 1635 Venezuela Americas 2002 72.766 24287670 8605.047831 1636 Venezuela Americas 1992 71.15 20265563 10733.92631 1637 Venezuela Americas 1987 70.19 17910182 9883.584648 1638 Venezuela Americas 1982 68.557 15620766 11152.41011 1639 Venezuela Americas 1977 67.456 13503563 13143.95095 1640 Venezuela Americas 1972 65.712 11515649 10505.25966 1641 Venezuela Americas 1967 63.479 9709552 9541.474188 1642 Venezuela Americas 1962 60.77 8143375 8422.974165 1643 Venezuela Americas 1957 57.907 6702668 9802.466526 1644 Venezuela Americas 1952 55.088 5439568 7689.799761 1645 Vietnam Asia 2007 74.249 85262356 2441.576404 1646 Vietnam Asia 1997 70.672 76048996 1385.896769 1647 Vietnam Asia 1992 67.662 69940728 989.0231487 1648 Vietnam Asia 1987 62.82 62826491 820.7994449 1649 Vietnam Asia 2002 73.017 80908147 1764.456677 1650 Vietnam Asia 1982 58.816 56142181 707.2357863 1651 Vietnam Asia 1977 55.764 50533506 713.5371196 1652 Vietnam Asia 1972 50.254 44655014 699.5016441 1653 Vietnam Asia 1967 47.838 39463910 637.1232887 1654 Vietnam Asia 1962 45.363 33796140 772.0491602 1655 Vietnam Asia 1957 42.887 28998543 676.2854478 1656 Vietnam Asia 1952 40.412 26246839 605.0664917 1657 West Bank and Gaza Asia 2007 73.422 4018332 3025.349798 1658 West Bank and Gaza Asia 1997 71.096 2826046 7110.667619 1659 West Bank and Gaza Asia 2002 72.37 3389578 4515.487575 1660 West Bank and Gaza Asia 1992 69.718 2104779 6017.654756 1661 West Bank and Gaza Asia 1987 67.046 1691210 5107.197384 1662 West Bank and Gaza Asia 1982 64.406 1425876 4336.032082 1663 West Bank and Gaza Asia 1977 60.765 1261091 3682.831494 1664 West Bank and Gaza Asia 1972 56.532 1089572 3133.409277 1665 West Bank and Gaza Asia 1967 51.631 1142636 2649.715007 1666 West Bank and Gaza Asia 1962 48.127 1133134 2198.956312 1667 West Bank and Gaza Asia 1957 45.671 1070439 1827.067742 1668 West Bank and Gaza Asia 1952 43.16 1030585 1515.592329 1669 Yemen, Rep. Asia 2007 62.698 22211743 2280.769906 1670 Yemen, Rep. Asia 2002 60.308 18701257 2234.820827 1671 Yemen, Rep. Asia 1997 58.02 15826497 2117.484526 1672 Yemen, Rep. Asia 1992 55.599 13367997 1879.496673 1673 Yemen, Rep. Asia 1987 52.922 11219340 1971.741538 1674 Yemen, Rep. Asia 1982 49.113 9657618 1977.55701 1675 Yemen, Rep. Asia 1977 44.175 8403990 1829.765177 1676 Yemen, Rep. Asia 1972 39.848 7407075 1265.047031 1677 Yemen, Rep. Asia 1967 36.984 6740785 862.4421463 1678 Yemen, Rep. Asia 1962 35.18 6120081 825.6232006 1679 Yemen, Rep. Asia 1957 33.97 5498090 804.8304547 1680 Yemen, Rep. Asia 1952 32.548 4963829 781.7175761 1681 Zambia Africa 1997 40.238 9417789 1071.353818 1682 Zambia Africa 1992 46.1 8381163 1210.884633 1683 Zambia Africa 1987 50.821 7272406 1213.315116 1684 Zambia Africa 2002 39.193 10595811 1071.613938 1685 Zambia Africa 1982 51.821 6100407 1408.678565 1686 Zambia Africa 1977 51.386 5216550 1588.688299 1687 Zambia Africa 1972 50.107 4506497 1773.498265 1688 Zambia Africa 1967 47.768 3900000 1777.077318 1689 Zambia Africa 1962 46.023 3421000 1452.725766 1690 Zambia Africa 1957 44.077 3016000 1311.956766 1691 Zambia Africa 1952 42.038 2672000 1147.388831 1692 Zambia Africa 2007 42.384 11746035 1271.211593 1693 Zimbabwe Africa 2007 43.487 12311143 469.7092981 1694 Zimbabwe Africa 2002 39.989 11926563 672.0386227 1695 Zimbabwe Africa 1997 46.809 11404948 792.4499603 1696 Zimbabwe Africa 1992 60.377 10704340 693.4207856 1697 Zimbabwe Africa 1987 62.351 9216418 706.1573059 1698 Zimbabwe Africa 1982 60.363 7636524 788.8550411 1699 Zimbabwe Africa 1977 57.674 6642107 685.5876821 1700 Zimbabwe Africa 1972 55.635 5861135 799.3621758 1701 Zimbabwe Africa 1967 53.995 4995432 569.7950712 1702 Zimbabwe Africa 1962 52.358 4277736 527.2721818 1703 Zimbabwe Africa 1957 50.469 3646340 518.7642681 1704 Zimbabwe Africa 1952 48.451 3080907 406.8841148 References Introduction to dplyr and Single Table dplyr functions Using WHERE with SAS Procedures PROC SQL documentation R for Data Science: Data Transformations Additional practice exercises: Intro to the tidyverse, group_by + summarize examples, group_by + mutate examples (from a similar class at Iowa State) Base R data manipulation SAS data manipulation Videos of analysis of new data from Tidy Tuesday - may include use of other packages, but almost definitely includes use of dplyr as well. See this twitter thread for some horror stories. This tweet is also pretty good at showing one type of messiness.↩ The philosophy includes a preference for pipes, but this preference stems from the belief that code should be readable in the same way that text is readable.↩ It accomplishes this through the magic of quasiquotation, which we will not cover in this course because it’s basically witchcraft.↩ This is equivalent to using right assignment in R with -&gt;, which you shouldn’t do unless you have a really good reason, because it’s hard to read.↩ or ?summarise if you like UK English – the developer of this package is from NZ↩ "],
["transforming-data.html", "Module 6 Transforming Data Module Objectives 6.1 Identifying the problem: Messy data 6.2 String operations: Creating new variables and separating multi-variable columns 6.3 Pivot operations 6.4 Relational Data and Joining Tables References", " Module 6 Transforming Data Happy families are all alike; every unhappy family is unhappy in its own way. - Leo Tolstoy Tidy datasets are all alike, but every messy dataset is messy in its own way. - Hadley Wickham Module Objectives Reshape data Transform variables to support analysis and visualization of data Join tables together in order to create a single coherent dataset Most of the time, data does not come in a format suitable for analysis. Spreadsheets are generally optimized for data viewing, rather than for statistical analysis - they may be laid out so that there are multiple observations in a single row (e.g., commonly a year’s worth of data, with monthly observations in each column). Unfortunately, this type of data structure is not usually useful to us when we analyze or visualize the data. This section is going to seem like it drags on forever. It covers a lot of material, and a few different concepts. I highly recommend separating it out into 3-4 different “sessions” - Tidy data, Strings, Pivot operations, and Table Joins. For now, you need to know this material well enough to 1) identify what operation needs to happen, and 2) know where to find the sample code for that operation. It will get easier to remember the specific syntax with practice. Load initial packages library(dplyr) # Data wrangling library(tidyr) # Data rearranging library(tibble) # data table 6.1 Identifying the problem: Messy data These datasets all display the same data: TB cases documented by the WHO in Afghanistan, Brazil, and China, between 1999 and 2000. There are 4 variables: country, year, cases, and population, but each table has a different layout. Table 6.1: Table 1 country year cases population Afghanistan 1999 745 19987071 Afghanistan 2000 2666 20595360 Brazil 1999 37737 172006362 Brazil 2000 80488 174504898 China 1999 212258 1272915272 China 2000 213766 1280428583 Here, each observation is a single row, each variable is a column, and everything is nicely arranged for e.g. regression or statistical analysis. We can easily compute another measure, such as cases per 100,000 population, by taking cases/population * 100000 (this would define a new column). Table 6.2: Table 2 country year type count Afghanistan 1999 cases 745 Afghanistan 1999 population 19987071 Afghanistan 2000 cases 2666 Afghanistan 2000 population 20595360 Brazil 1999 cases 37737 Brazil 1999 population 172006362 Brazil 2000 cases 80488 Brazil 2000 population 174504898 China 1999 cases 212258 China 1999 population 1272915272 China 2000 cases 213766 China 2000 population 1280428583 Here, we have 4 columns again, but we now have 12 rows: one of the columns is an indicator of which of two numerical observations is recorded in that row; a second column stores the value. This form of the data is more easily plotted in e.g. ggplot2, if we want to show lines for both cases and population, but computing per capita cases would be much more difficult in this form than in the arrangement in table 1. Table 6.3: Table 3 country year rate Afghanistan 1999 745/19987071 Afghanistan 2000 2666/20595360 Brazil 1999 37737/172006362 Brazil 2000 80488/174504898 China 1999 212258/1272915272 China 2000 213766/1280428583 This form has only 3 columns, because the rate variable (which is a character) stores both the case count and the population. We can’t do anything with this format as it stands, because we can’t do math on data stored as characters. However, this form might be easier to read and record for a human being. Table 6.4: Table 4a country 1999 2000 Afghanistan 745 2666 Brazil 37737 80488 China 212258 213766 Table 6.4: Table 4b country 1999 2000 Afghanistan 19987071 20595360 Brazil 172006362 174504898 China 1272915272 1280428583 In this form, we have two tables - one for population, and one for cases. Each year’s observations are in a separate column. This format is often found in separate sheets of an excel workbook. To work with this data, we’ll need to transform each table so that there is a column indicating which year an observation is from, and then merge the two tables together by country and year. Table 6.5: Table 5 country century year rate Afghanistan 19 99 745/19987071 Afghanistan 20 00 2666/20595360 Brazil 19 99 37737/172006362 Brazil 20 00 80488/174504898 China 19 99 212258/1272915272 China 20 00 213766/1280428583 Table 5 is very similar to table 3, but the year has been separated into two columns - century, and year. This is more common with year, month, and day in separate columns (or date and time in separate columns), often to deal with the fact that spreadsheets don’t always handle dates the way you’d hope they would. These variations highlight the principles which can be said to define a tidy dataset: 1. Each variable must have its own column 2. Each observation must have its own row 3. Each value must have its own cell Try it out Go back through the 5 tables and determine whether each table is tidy, and if it is not, which rule or rules it violates. Figure out what you would have to do in order to compute a standardized TB infection rate per 100,000 people. Solution table1 - this is tidy data. Computing a standardized infection rate is as simple as creating the variable rate = cases/population*100,000. table2 - each variable does not have its own column (so a single year’s observation of one country actually has 2 rows). Computing a standardized infection rate requires moving cases and population so that each variable has its own column, and then you can proceed using the process in 1. table3 - each value does not have its own cell (and each variable does not have its own column). In Table 3, you’d have to separate the numerator and denominator of each cell, convert each to a numeric variable, and then you could proceed as in 1. table4a and table 4b - there are multiple observations in each row because there is not a column for year. To compute the rate, you’d need to “stack” the two columns in each table into a single column, add a year column that is 1999, 1999, 1999, 2000, 2000, 2000, and then merge the two tables. Then you could proceed as in 1. table 5 - each variable does not have its own column (there are two columns for year, in addition to the issues noted in table3). Computing the rate would be similar to table 3; the year issues aren’t actually a huge deal unless you plot them, at which point 99 will seem to be bigger than 00 (so you’d need to combine the two year columns together first). It is actually impossible to have a table that violates only one of the rules of tidy data - you have to violate at least two. So a simpler way to state the rules might be: Each dataset goes into its own table (or tibble, if you are using R) Each variable gets its own column By the end of this module, you should have the skills to “tidy” each of these tables. 6.2 String operations: Creating new variables and separating multi-variable columns Nearly always, when multiple variables are stored in a single column, they are stored as character variables. There are many different “levels” of working with strings in programming, from simple find-and-replaced of fixed (constant) strings to regular expressions, which are extremely powerful (and extremely complicated). Some people, when confronted with a problem, think “I know, I’ll use regular expressions.” Now they have two problems. - Jamie Zawinski Alternately, the xkcd version of the above quote The tidyverse package to deal with strings is stringr. The functions in stringr take the form of str_XXX where XXX is a verb. So str_split(), str_replace(), str_remove(), str_to_lower() all should make some sense. For this example, we’ll use a subset of the US Department of Education College Scorecard data. Documentation, Data. I’ve selected a few columns from the institution-level data available on the College Scorecard site. Let’s take a look (Read in the data) college &lt;- read_csv(&quot;data/College_Data_Abbrev.csv&quot;, guess_max = 5000, na = &#39;.&#39;) Parsed with column specification: cols( UNITID = col_double(), INSTNM = col_character(), CITY = col_character(), STABBR = col_character(), ZIP = col_character(), ACCREDAGENCY = col_character(), INSTURL = col_character(), PREDDEG = col_character(), MAIN = col_character(), NUMBRANCH = col_double(), HIGHDEG = col_character(), CONTROL = col_character(), ST_FIPS = col_double(), LOCALE = col_double(), LATITUDE = col_double(), LONGITUDE = col_double(), State = col_character() ) str(college) tibble [6,806 × 17] (S3: spec_tbl_df/tbl_df/tbl/data.frame) $ UNITID : num [1:6806] 100654 100663 100690 100706 100724 ... $ INSTNM : chr [1:6806] &quot;Alabama A &amp; M University&quot; &quot;University of Alabama at Birmingham&quot; &quot;Amridge University&quot; &quot;University of Alabama in Huntsville&quot; ... $ CITY : chr [1:6806] &quot;Normal&quot; &quot;Birmingham&quot; &quot;Montgomery&quot; &quot;Huntsville&quot; ... $ STABBR : chr [1:6806] &quot;AL&quot; &quot;AL&quot; &quot;AL&quot; &quot;AL&quot; ... $ ZIP : chr [1:6806] &quot;35762&quot; &quot;35294-0110&quot; &quot;36117-3553&quot; &quot;35899&quot; ... $ ACCREDAGENCY: chr [1:6806] &quot;Southern Association of Colleges and Schools Commission on Colleges&quot; &quot;Southern Association of Colleges and Schools Commission on Colleges&quot; &quot;Southern Association of Colleges and Schools Commission on Colleges&quot; &quot;Southern Association of Colleges and Schools Commission on Colleges&quot; ... $ INSTURL : chr [1:6806] &quot;www.aamu.edu/&quot; &quot;https://www.uab.edu&quot; &quot;www.amridgeuniversity.edu&quot; &quot;www.uah.edu&quot; ... $ PREDDEG : chr [1:6806] &quot;Predominantly bachelor&#39;s-degree granting&quot; &quot;Predominantly bachelor&#39;s-degree granting&quot; &quot;Predominantly bachelor&#39;s-degree granting&quot; &quot;Predominantly bachelor&#39;s-degree granting&quot; ... $ MAIN : chr [1:6806] &quot;main campus&quot; &quot;main campus&quot; &quot;main campus&quot; &quot;main campus&quot; ... $ NUMBRANCH : num [1:6806] 1 1 1 1 1 1 1 1 1 1 ... $ HIGHDEG : chr [1:6806] &quot;Graduate&quot; &quot;Graduate&quot; &quot;Graduate&quot; &quot;Graduate&quot; ... $ CONTROL : chr [1:6806] &quot;Public&quot; &quot;Public&quot; &quot;Private Non Profit&quot; &quot;Public&quot; ... $ ST_FIPS : num [1:6806] 1 1 1 1 1 1 1 1 1 1 ... $ LOCALE : num [1:6806] 12 12 12 12 12 12 32 31 12 13 ... $ LATITUDE : num [1:6806] 34.8 33.5 32.4 34.7 32.4 ... $ LONGITUDE : num [1:6806] -86.6 -86.8 -86.2 -86.6 -86.3 ... $ State : chr [1:6806] &quot;Alabama&quot; &quot;Alabama&quot; &quot;Alabama&quot; &quot;Alabama&quot; ... - attr(*, &quot;spec&quot;)= .. cols( .. UNITID = col_double(), .. INSTNM = col_character(), .. CITY = col_character(), .. STABBR = col_character(), .. ZIP = col_character(), .. ACCREDAGENCY = col_character(), .. INSTURL = col_character(), .. PREDDEG = col_character(), .. MAIN = col_character(), .. NUMBRANCH = col_double(), .. HIGHDEG = col_character(), .. CONTROL = col_character(), .. ST_FIPS = col_double(), .. LOCALE = col_double(), .. LATITUDE = col_double(), .. LONGITUDE = col_double(), .. State = col_character() .. ) libname classdat &quot;sas/&quot;; filename fileloc &#39;data/College_Data_Abbrev.csv&#39;; PROC IMPORT datafile = fileloc out=classdat.college REPLACE DBMS = csv; /* comma delimited file */ GUESSINGROWS=500; GETNAMES = YES; RUN; PROC PRINT DATA = classdat.college (obs = 5); RUN; Obs UNITID INSTNM CITY STABBR ZIP ACCREDAGENCY INSTURL PREDDEG MAIN NUMBRANCH HIGHDEG CONTROL ST_FIPS LOCALE LATITUDE LONGITUDE State 1 100654 Alabama A &amp; M University Normal AL 35762 Southern Association of Colleges and Schools Commission on Colleges www.aamu.edu/ Predominantly bachelor's-degree granting main campus 1 Graduate Public 1 12 34.783368 -86.568502 Alabama 2 100663 University of Alabama at Birmingham Birmingham AL 35294-0110 Southern Association of Colleges and Schools Commission on Colleges https://www.uab.edu Predominantly bachelor's-degree granting main campus 1 Graduate Public 1 12 33.505697 -86.799345 Alabama 3 100690 Amridge University Montgomery AL 36117-3553 Southern Association of Colleges and Schools Commission on Colleges www.amridgeuniversity.edu Predominantly bachelor's-degree granting main campus 1 Graduate Private Non Profit 1 12 32.362609 -86.17401 Alabama 4 100706 University of Alabama in Huntsville Huntsville AL 35899 Southern Association of Colleges and Schools Commission on Colleges www.uah.edu Predominantly bachelor's-degree granting main campus 1 Graduate Public 1 12 34.724557 -86.640449 Alabama 5 100724 Alabama State University Montgomery AL 36104-0271 Southern Association of Colleges and Schools Commission on Colleges www.alasu.edu Predominantly bachelor's-degree granting main campus 1 Graduate Public 1 12 32.364317 -86.295677 Alabama 6.2.1 Basic String Operations What proportion of the schools operating in each state have the state’s name in the school name? We’ll use str_detect() to look for the state name in the college name. library(stringr) # string processing # Outside the pipe str_detect(college$INSTNM, pattern = college$Statesing the pipe and mutate: college &lt;- college %&gt;% mutate(uses_st_name = str_detect(INSTNM, State)) library(ggplot2) # graphs and charts # By state - percentage of institution names college %&gt;% group_by(State) %&gt;% summarize(pct_uses_st_name = mean(uses_st_name), n = n()) %&gt;% filter(n &gt; 5) %&gt;% # only states/territories with at least 5 schools # Reorder state factor level by percentage that uses state name mutate(State = reorder(State, -pct_uses_st_name)) %&gt;% ggplot(data = ., aes(x = State, y = pct_uses_st_name)) + geom_col() + coord_flip() + geom_text(aes(y = 1, label = paste(&quot;Total Schools:&quot;, n)), hjust = 1) `summarise()` ungrouping output (override with `.groups` argument) In SAS, we use find(x, pattern, 't') to find the location of the pattern, which is 0 if the pattern is not found. To get something equivalent to str_detect, we just test whether this quantity is greater than 0. (The R equivalent of find is str_locate()). Note that SAS pads character fields with spaces so that they are all the same length. So if we want to test for “Alabama” we could omit the ‘t’ option in the command, but since we usually don’t want that, we need to tell SAS to trim the fields before searching for the pattern. libname classdat &quot;sas/&quot;; DATA collegetmp; set classdat.college; uses_st_name = find(INSTNM, State, &#39;t&#39;) GT 0; RUN; PROC PRINT DATA = collegetmp (obs = 5); RUN; Obs UNITID INSTNM CITY STABBR ZIP ACCREDAGENCY INSTURL PREDDEG MAIN NUMBRANCH HIGHDEG CONTROL ST_FIPS LOCALE LATITUDE LONGITUDE State uses_st_name 1 100654 Alabama A &amp; M University Normal AL 35762 Southern Association of Colleges and Schools Commission on Colleges www.aamu.edu/ Predominantly bachelor's-degree granting main campus 1 Graduate Public 1 12 34.783368 -86.568502 Alabama 1 2 100663 University of Alabama at Birmingham Birmingham AL 35294-0110 Southern Association of Colleges and Schools Commission on Colleges https://www.uab.edu Predominantly bachelor's-degree granting main campus 1 Graduate Public 1 12 33.505697 -86.799345 Alabama 1 3 100690 Amridge University Montgomery AL 36117-3553 Southern Association of Colleges and Schools Commission on Colleges www.amridgeuniversity.edu Predominantly bachelor's-degree granting main campus 1 Graduate Private Non Profit 1 12 32.362609 -86.17401 Alabama 0 4 100706 University of Alabama in Huntsville Huntsville AL 35899 Southern Association of Colleges and Schools Commission on Colleges www.uah.edu Predominantly bachelor's-degree granting main campus 1 Graduate Public 1 12 34.724557 -86.640449 Alabama 1 5 100724 Alabama State University Montgomery AL 36104-0271 Southern Association of Colleges and Schools Commission on Colleges www.alasu.edu Predominantly bachelor's-degree granting main campus 1 Graduate Public 1 12 32.364317 -86.295677 Alabama 1 What are some common substrings in a set of text? For this, we’ll start with working with the single column INSTNM. head(college$INSTNM) %&gt;% str_split(., &quot; &quot;) # Split on every space [[1]] [1] &quot;Alabama&quot; &quot;A&quot; &quot;&amp;&quot; &quot;M&quot; &quot;University&quot; [[2]] [1] &quot;University&quot; &quot;of&quot; &quot;Alabama&quot; &quot;at&quot; &quot;Birmingham&quot; [[3]] [1] &quot;Amridge&quot; &quot;University&quot; [[4]] [1] &quot;University&quot; &quot;of&quot; &quot;Alabama&quot; &quot;in&quot; &quot;Huntsville&quot; [[5]] [1] &quot;Alabama&quot; &quot;State&quot; &quot;University&quot; [[6]] [1] &quot;The&quot; &quot;University&quot; &quot;of&quot; &quot;Alabama&quot; # We may need to fix certain things that should stay together # But doing too much of that gets tedious... str_replace(college$INSTNM, &quot;A &amp; M&quot;, &quot;A&amp;M&quot;) %&gt;% head() %&gt;% str_split(., &quot;[ -]&quot;) # This pattern says &quot;either &#39; &#39; or &#39;-&#39;&quot; [[1]] [1] &quot;Alabama&quot; &quot;A&amp;M&quot; &quot;University&quot; [[2]] [1] &quot;University&quot; &quot;of&quot; &quot;Alabama&quot; &quot;at&quot; &quot;Birmingham&quot; [[3]] [1] &quot;Amridge&quot; &quot;University&quot; [[4]] [1] &quot;University&quot; &quot;of&quot; &quot;Alabama&quot; &quot;in&quot; &quot;Huntsville&quot; [[5]] [1] &quot;Alabama&quot; &quot;State&quot; &quot;University&quot; [[6]] [1] &quot;The&quot; &quot;University&quot; &quot;of&quot; &quot;Alabama&quot; # (but the - has to be at the start or the end) So we could take the time to clean up everything, making sure that e.g. San Diego is treated as a single word, but that’s a pain in the rear. Instead, let’s just see what happens if we brute-force it. tmp &lt;- college %&gt;% select(INSTNM, State) %&gt;% mutate(name_words = str_split(INSTNM, &#39;[ -]&#39;)) # This is a list-column tmp # A tibble: 6,806 x 3 INSTNM State name_words &lt;chr&gt; &lt;chr&gt; &lt;list&gt; 1 Alabama A &amp; M University Alabama &lt;chr [5]&gt; 2 University of Alabama at Birmingham Alabama &lt;chr [5]&gt; 3 Amridge University Alabama &lt;chr [2]&gt; 4 University of Alabama in Huntsville Alabama &lt;chr [5]&gt; 5 Alabama State University Alabama &lt;chr [3]&gt; 6 The University of Alabama Alabama &lt;chr [4]&gt; 7 Central Alabama Community College Alabama &lt;chr [4]&gt; 8 Athens State University Alabama &lt;chr [3]&gt; 9 Auburn University at Montgomery Alabama &lt;chr [4]&gt; 10 Auburn University Alabama &lt;chr [2]&gt; # … with 6,796 more rows unnest(tmp) # Unnest duplicates rows so that the expanded data frame has the Warning: `cols` is now required when using unnest(). Please use `cols = c(name_words)` # A tibble: 28,510 x 3 INSTNM State name_words &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 Alabama A &amp; M University Alabama Alabama 2 Alabama A &amp; M University Alabama A 3 Alabama A &amp; M University Alabama &amp; 4 Alabama A &amp; M University Alabama M 5 Alabama A &amp; M University Alabama University 6 University of Alabama at Birmingham Alabama University 7 University of Alabama at Birmingham Alabama of 8 University of Alabama at Birmingham Alabama Alabama 9 University of Alabama at Birmingham Alabama at 10 University of Alabama at Birmingham Alabama Birmingham # … with 28,500 more rows # same structure as the original data List columns are one way to maintain tidy data. They allow you to have several “sub-observations” for each observation and are useful for precisely cases like this, where there are uneven numbers of words in each university’s name. We’re not going to focus on list columns, but if you’re interested, check out purrr and this excellent tutorial. library(purrr) # List columns unnest(tmp) %&gt;% pull(name_words) %&gt;% # this pulls out a single column table() %&gt;% sort(decreasing = T) %&gt;% head(50) Warning: `cols` is now required when using unnest(). Please use `cols = c(name_words)` . College of University School Institute 2716 1732 1723 821 690 Community Beauty Academy State 554 443 440 401 389 Technical and Center Technology Career 366 293 264 230 221 Cosmetology Campus &amp; the New 216 207 186 160 143 The County Medical Hair Nursing 143 136 133 132 129 San Seminary Health Design Education 126 123 118 116 114 American Paul at Valley Mitchell 109 106 103 102 97 Inc City Empire West Barber 95 94 92 89 88 South California International North Central 86 84 84 83 79 Florida Strayer Texas Theological Training 79 76 76 76 75 In SAS, this is a bit more tricky. Most people I know that use both SAS and R will do the data cleaning in R once things get complicated, and then read the clean data in to SAS. That’s a valid approach, but it’s worth seeing what has to be done in SAS this once. As we get further into this class, I’ll probably be more willing to say “we’re just going to use R for this” for two reasons - 1. I know R better, and 2. R is generally better at handling the weird stuff; SAS is built to quickly handle things that are already formatted in a reasonable way. SAS seems to be highly preferred for e.g. fitting mixed/linear models, but it isn’t the easiest tool to use for data cleaning. But, in this particular case, there is documentation about how to break a sentence into words in SAS. libname classdat &quot;sas/&quot;; DATA collegename; SET classdat.college; numWords = countw(INSTNM, &quot; &quot;); DO i = 1 TO numWords; word = scan(INSTNM, i, &quot; &quot;); OUTPUT; END; KEEP word numWords; ; PROC PRINT DATA=collegename (obs = 30); run; PROC FREQ DATA=collegename ORDER=FREQ; TABLES word / MAXLEVELS=30; RUN; Obs numWords word 1 5 Alabama 2 5 A 3 5 &amp; 4 5 M 5 5 University 6 5 University 7 5 of 8 5 Alabama 9 5 at 10 5 Birmingham 11 2 Amridge 12 2 University 13 5 University 14 5 of 15 5 Alabama 16 5 in 17 5 Huntsville 18 3 Alabama 19 3 State 20 3 University 21 4 The 22 4 University 23 4 of 24 4 Alabama 25 4 Central 26 4 Alabama 27 4 Community 28 4 College 29 3 Athens 30 3 State word Frequency Percent Cumulative Frequency Cumulative Percent College 2324 8.86 2324 8.86 of 1731 6.60 4055 15.47 University 1314 5.01 5369 20.48 School 604 2.30 5973 22.78 Community 553 2.11 6526 24.89 Institute 506 1.93 7032 26.82 Beauty 433 1.65 7465 28.47 State 381 1.45 7846 29.92 Technical 359 1.37 8205 31.29 Academy 311 1.19 8516 32.48 and 293 1.12 8809 33.60 Career 219 0.84 9028 34.43 - 211 0.80 9239 35.24 Campus 206 0.79 9445 36.02 Center 198 0.76 9643 36.78 &amp; 186 0.71 9829 37.49 Technology 175 0.67 10004 38.15 Cosmetology 162 0.62 10166 38.77 the 159 0.61 10325 39.38 The 139 0.53 10464 39.91 Hair 132 0.50 10596 40.41 Medical 132 0.50 10728 40.92 County 130 0.50 10858 41.41 Nursing 121 0.46 10979 41.87 Seminary 117 0.45 11096 42.32 Health 112 0.43 11208 42.75 New 112 0.43 11320 43.17 Education 109 0.42 11429 43.59 American 108 0.41 11537 44.00 Paul 104 0.40 11641 44.40 The first 30 levels are displayed. 6.2.2 Regular Expressions Matching exact strings is easy - it’s just like using find and replace. human_talk &lt;- &quot;blah, blah, blah. Do you want to go for a walk?&quot; dog_hears &lt;- str_extract(human_talk, &quot;walk&quot;) dog_hears [1] &quot;walk&quot; But, if you can master even a small amount of regular expression notation, you’ll have exponentially more power to do good (or evil) when working with strings. You can get by without regular expressions if you’re creative, but often they’re much simpler. You may find it helpful to follow along with this section using this web app built to test R regular expressions for R. A similar application for Perl compatible regular expressions (used by SAS) can be found here. The subset of regular expression syntax we’re going to cover here is fairly limited (and common to both SAS and R, with a few adjustments), but you can find regular expressions to do just about anything string-related. As with any tool, there are situations where it’s useful, and situations where you should not use a regular expression, no matter how much you want to. Short Regular Expression Primer (with R examples) [] enclose sets of characters Ex: [abc] will match any single character a, b, c - specifies a range of characters (A-z matches all upper and lower case letters) to match - exactly, precede with a backslash (outside of []) or put the - last (inside []) . matches any character (except a newline) To match special characters, escape them using \\ (in most languages) or \\\\ (in R). So \\\\. will match a literal ., \\\\$ will match a literal $. num_string &lt;- &quot;phone: 123-456-7890, nuid: 12345678, ssn: 123-45-6789&quot; ssn &lt;- str_extract(num_string, &quot;[0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9][0-9][0-9]&quot;) ssn [1] &quot;123-45-6789&quot; Listing out all of those numbers can get repetitive, though. How do we specify repetition? * means repeat between 0 and inf times + means 1 or more times ? means 0 or 1 times – most useful when you’re looking for something optional {a, b} means repeat between a and b times, where a and b are integers. b can be blank. So [abc]{3,} will match abc, aaaa, cbbaa, but not ab, bb, or a. For a single number of repeated characters, you can use {a}. So {3, } means “3 or more times” and {3} means “exactly 3 times” str_extract(&quot;banana&quot;, &quot;[a-z]{1,}&quot;) # match any sequence of lowercase characters [1] &quot;banana&quot; str_extract(&quot;banana&quot;, &quot;[ab]{1,}&quot;) # Match any sequence of a and b characters [1] &quot;ba&quot; str_extract_all(&quot;banana&quot;, &quot;(..)&quot;) # Match any two characters [[1]] [1] &quot;ba&quot; &quot;na&quot; &quot;na&quot; str_extract(&quot;banana&quot;, &quot;(..)\\\\1&quot;) # Match a repeated thing [1] &quot;anan&quot; num_string &lt;- &quot;phone: 123-456-7890, nuid: 12345678, ssn: 123-45-6789, bank account balance: $50,000,000.23&quot; ssn &lt;- str_extract(num_string, &quot;[0-9]{3}-[0-9]{2}-[0-9]{4}&quot;) ssn [1] &quot;123-45-6789&quot; phone &lt;- str_extract(num_string, &quot;[0-9]{3}.[0-9]{3}.[0-9]{4}&quot;) phone [1] &quot;123-456-7890&quot; nuid &lt;- str_extract(num_string, &quot;[0-9]{8}&quot;) nuid [1] &quot;12345678&quot; bank_balance &lt;- str_extract(num_string, &quot;\\\\$[0-9,]+\\\\.[0-9]{2}&quot;) bank_balance [1] &quot;$50,000,000.23&quot; There are also ways to “anchor” a pattern to a part of the string (e.g. the beginning or the end) ^ has multiple meanings: if it’s the first character in a pattern, ^ matches the beginning of a string if it follows [, e.g. [^abc], ^ means “not” - for instance, “the collection of all characters that aren’t a, b, or c”. $ means the end of a string Combined with pre and post-processing, these let you make sense out of semi-structured string data, such as addresses address &lt;- &quot;1600 Pennsylvania Ave NW, Washington D.C., 20500&quot; house_num &lt;- str_extract(address, &quot;^[0-9]{1,}&quot;) # Match everything alphanumeric up to the comma street &lt;- str_extract(address, &quot;[A-z0-9 ]{1,}&quot;) street &lt;- str_remove(street, house_num) %&gt;% str_trim() # remove house number city &lt;- str_extract(address, &quot;,.*,&quot;) %&gt;% str_remove_all(&quot;,&quot;) %&gt;% str_trim() zip &lt;- str_extract(address, &quot;[0-9-]{5,10}$&quot;) # match 5 and 9 digit zip codes () are used to capture information. So ([0-9]{4}) captures any 4-digit number a|b will select a or b. If you’ve captured information using (), you can reference that information using backreferences. In most languages, those look like this: \\1 for the first reference, \\9 for the ninth. In R, though, the \\ character is special, so you have to escape it. So in R, \\\\1 is the first reference, and \\\\2 is the second, and so on. phone_num_variants &lt;- c(&quot;(123) 456-7980&quot;, &quot;123.456.7890&quot;, &quot;+1 123-456-7890&quot;) phone_regex &lt;- &quot;\\\\(?([0-9]{3})?\\\\)?.?([0-9]{3}).?([0-9]{4})&quot; # \\\\( and \\\\) match literal parentheses if they exist # ([0-9]{3})? captures the area code, if it exists # .? matches any character # ([0-9]{3}) captures the exchange code # ([0-9]{4}) captures the 4-digit individual code str_extract(phone_num_variants, phone_regex) [1] &quot;(123) 456-7980&quot; &quot;123.456.7890&quot; &quot;123-456-7890&quot; str_replace(phone_num_variants, phone_regex, &quot;\\\\1\\\\2\\\\3&quot;) [1] &quot;1234567980&quot; &quot;1234567890&quot; &quot;+1 1234567890&quot; # We didn&#39;t capture the country code, so it remained in the string human_talk &lt;- &quot;blah, blah, blah. Do you want to go for a walk? I think I&#39;m going to treat myself to some ice cream for working so hard. &quot; dog_hears &lt;- str_extract_all(human_talk, &quot;walk|treat&quot;) dog_hears [[1]] [1] &quot;walk&quot; &quot;treat&quot; In SAS, much the same information is true, though you do not have to double-escape special characters. SAS uses PERL-compatible regular expressions (PCRE for short) (these can also be enabled in base-R string functions). In PCRE regular expressions, ‘/’ are used as delimiters. SAS assigns each sequential regular expression a number (so that you can reference them if necessary). PRXMATCH returns the first position of a string where a match is found (0 otherwise) In this example, however, lets just test to see whether PRXMATCH finds a match or not DATA strings; INFILE DATALINES DSD; /* This allows quoted strings */ INPUT string ~ $150.; /* ~ says deal with quoted strings */ DATALINES; &quot;abcdefghijklmnopqrstuvwxyzABAB&quot; &quot;banana orange strawberry apple&quot; &quot;ana went to montana to eat a banana&quot; &quot;call me at 432-394-2873. Do you want to go for a walk? I&#39;m going to treat myself to some ice cream for working so hard.&quot; &quot;phone: (123) 456-7890, nuid: 12345678, bank account balance: $50,000,000.23&quot; &quot;1600 Pennsylvania Ave NW, Washington D.C., 20500&quot; RUN; DATA info; set strings; IF PRXMATCH(&quot;/\\(?([0-9]{3})?\\)?.?([0-9]{3}).([0-9]{4})/&quot;, string) GT 0 THEN phone = 1; ELSE phone = 0; IF PRXMATCH(&quot;/(walk|treat)/&quot;, string) GT 0 THEN dog = 1; ELSE dog = 0; IF PRXMATCH(&quot;/([0-9]*) ([A-z0-9 ]{3,}), ([A-z\\. ]{3,}), ([0-9]{5})/&quot;, string) GT 0 THEN addr = 1; ELSE addr = 0; /* Changed to require at least 3 characters in street and city names */ IF PRXMATCH(&quot;/(..)\\1/&quot;, string) GT 0 THEN abab = 1; ELSE abab = 0; ; PROC PRINT DATA=info; RUN; Obs string phone dog addr abab 1 “abcdefghijklmnopqrstuvwxyzABAB” 0 0 0 1 2 “banana orange strawberry apple” 0 0 0 1 3 “ana went to montana to eat a banana” 0 0 0 1 4 “call me at 432-394-2873. Do you want to go for a walk? I'm going to treat myself to some ice cream for working so hard.” 1 1 0 1 5 “phone: (123) 456-7890, nuid: 12345678, bank account balance: $50,000,000.23” 1 0 0 1 6 “1600 Pennsylvania Ave NW, Washington D.C., 20500” 0 0 1 1 Note that the equivalent syntax in R would be: strings &lt;- c(&quot;abcdefghijklmnopqrstuvwxyzABAB&quot;, &quot;banana orange strawberry apple&quot;, &quot;ana went to montana to eat a banana&quot;, &quot;call me at 432-394-2873. Do you want to go for a walk? I&#39;m going to treat myself to some ice cream for working so hard.&quot;, &quot;phone: (123) 456-7890, nuid: 12345678, bank account balance: $50,000,000.23&quot;, &quot;1600 Pennsylvania Ave NW, Washington D.C., 20500&quot;) phone_regex &lt;- &quot;\\\\(?([0-9]{3})?\\\\)?.?([0-9]{3}).([0-9]{4})&quot; dog_regex &lt;- &quot;(walk|treat)&quot; addr_regex &lt;- &quot;([0-9]*) ([A-z0-9 ]{3,}), ([A-z\\\\. ]{3,}), ([0-9]{5})&quot; abab_regex &lt;- &quot;(..)\\\\1&quot; tibble( text = strings, phone = str_detect(strings, phone_regex), dog = str_detect(strings, dog_regex), addr = str_detect(strings, addr_regex), abab = str_detect(strings, abab_regex)) # A tibble: 6 x 5 text phone dog addr abab &lt;chr&gt; &lt;lgl&gt; &lt;lgl&gt; &lt;lgl&gt; &lt;lgl&gt; 1 abcdefghijklmnopqrstuvwxyzABAB FALSE FALSE FALSE TRUE 2 banana orange strawberry apple FALSE FALSE FALSE TRUE 3 ana went to montana to eat a banana FALSE FALSE FALSE TRUE 4 call me at 432-394-2873. Do you want to go for a walk… TRUE TRUE FALSE FALSE 5 phone: (123) 456-7890, nuid: 12345678, bank account b… TRUE FALSE FALSE FALSE 6 1600 Pennsylvania Ave NW, Washington D.C., 20500 FALSE FALSE TRUE FALSE When doing various operations with regular expressions, it can be useful to save the regular expression for later use. PRXPARSE saves a regex for use later PRXSUBSTR saves the starting location and length of a string match SUBSTR extracts the string given the starting location and length PRXPARSE, PRXSUBSTR, SUBSTR DATA strings; INFILE DATALINES DSD; /* This allows quoted strings */ INPUT string ~ $150.; /* ~ says deal with quoted strings */ DATALINES; &quot;abcdefghijklmnopqrstuvwxyzABAB&quot; &quot;banana orange strawberry apple&quot; &quot;ana went to montana to eat a banana&quot; &quot;call me at 432-394-2873. Do you want to go for a walk? I&#39;m going to treat myself to some ice cream for working so hard.&quot; &quot;phone: (123) 456-7890, nuid: 12345678, bank account balance: $50,000,000.23&quot; &quot;1600 Pennsylvania Ave NW, Washington D.C., 20500&quot; RUN; DATA info; SET strings; /* This says use these variables for all rows */ RETAIN REphone REdog REaddr REabab; /* This block defined our variables */ IF _N_ = 1 THEN DO; REphone = PRXPARSE(&quot;/\\(?([0-9]{3})?\\)?.?([0-9]{3}).([0-9]{4})/&quot;); REdog = PRXPARSE(&quot;/(walk|treat)/&quot;); REaddr = PRXPARSE(&quot;/([0-9]*) ([A-z0-9 ]{3,}), ([A-z\\. ]{3,}), ([0-9]{5})/&quot;); REabab = PRXPARSE(&quot;/(..)\\1/&quot;); END; /* This block identifies string start and length for matches */ /* Note that phonestart, phonelength, dogstart, doglength, ... are all defined implicitly in this block */ CALL PRXSUBSTR(REphone, string, phonestart, phonelength); CALL PRXSUBSTR(REdog, string, dogstart, doglength); CALL PRXSUBSTR(REaddr, string, addrstart, addrlength); CALL PRXSUBSTR(REabab, string, ababstart, abablength); /* This block extracts all of the matches */ IF phonestart GT 0 THEN DO; phonenumber = SUBSTR(string, phonestart, phonelength); END; IF dogstart GT 0 THEN DO; dogword = SUBSTR(string, dogstart, doglength); END; IF addrstart GT 0 THEN DO; addr = SUBSTR(string, addrstart, addrlength); END; IF ababstart GT 0 THEN DO; abab = SUBSTR(string, ababstart, abablength); END; /* This block keeps only rows with a phone number, dog keyword, or address */ IF (phonestart GT 0) OR (dogstart GT 0) OR (addrstart GT 0) OR (ababstart GT 0) THEN DO; OUTPUT; END; /* This keeps only the variables we care about */ KEEP string phonenumber dogword addr abab; ; PROC PRINT DATA=info; RUN; Obs string phonenumber dogword addr abab 1 “abcdefghijklmnopqrstuvwxyzABAB” ABAB 2 “banana orange strawberry apple” anan 3 “ana went to montana to eat a banana” anan 4 “call me at 432-394-2873. Do you want to go for a walk? I'm going to treat myself to some ice cream for working so hard.” 432-394-2873 walk 5 “phone: (123) 456-7890, nuid: 12345678, bank account balance: $50,000,000.23” 456-7890 6 “1600 Pennsylvania Ave NW, Washington D.C., 20500” 1600 Pennsylvania Ave NW, Washington D.C., 20500 Note that the equivalent syntax in R would be: strings &lt;- c(&quot;abcdefghijklmnopqrstuvwxyzABAB&quot;, &quot;banana orange strawberry apple&quot;, &quot;ana went to montana to eat a banana&quot;, &quot;call me at 432-394-2873. Do you want to go for a walk? I&#39;m going to treat myself to some ice cream for working so hard.&quot;, &quot;phone: (123) 456-7890, nuid: 12345678, bank account balance: $50,000,000.23&quot;, &quot;1600 Pennsylvania Ave NW, Washington D.C., 20500&quot;) phone_regex &lt;- &quot;\\\\(?([0-9]{3})?\\\\)?.?([0-9]{3}).([0-9]{4})&quot; dog_regex &lt;- &quot;(walk|treat)&quot; addr_regex &lt;- &quot;([0-9]*) ([A-z0-9 ]{3,}), ([A-z\\\\. ]{3,}), ([0-9]{5})&quot; abab_regex &lt;- &quot;(..)\\\\1&quot; tibble( text = strings, phone = str_extract(strings, phone_regex), dog = str_extract(strings, dog_regex), addr = str_extract(strings, addr_regex), abab = str_extract(strings, abab_regex)) # A tibble: 6 x 5 text phone dog addr abab &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 abcdefghijklmnopqrstuvwxyzABAB &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ABAB 2 banana orange strawberry apple &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; anan 3 ana went to montana to eat a bana… &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; anan 4 call me at 432-394-2873. Do you w… 432-394-… walk &lt;NA&gt; &lt;NA&gt; 5 phone: (123) 456-7890, nuid: 1234… (123) 45… &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; 6 1600 Pennsylvania Ave NW, Washing… &lt;NA&gt; &lt;NA&gt; 1600 Pennsylvania Av… &lt;NA&gt; Find and Replace with PRXCHANGE The next major task is find and replace, where we get to see another feature of perl-style regular expressions. ‘s/xxx/yyy/’ is the general form of a find-and-replace regular expression. Think “substitue yyy for xxx”. DATA ducks; INFILE DATALINES DSD; INPUT line ~ $50.; DATALINES; &quot;Five little ducks went out one day,&quot; &quot;Over the hills and far away.&quot; &quot;Mother duck said, quack quack quack quack,&quot; &quot;But only four little ducks came back.&quot; RUN; DATA cats; SET ducks; /* define lengths of output strings */ LENGTH new_text $ 50 new_text2 $ 50; IF _N_ = 1 THEN DO; REanimal = PRXPARSE(&quot;s/duck/cat/&quot;); REnoise = PRXPARSE(&quot;s/quack/meow/&quot;); END; RETAIN REanimal REnoise; /* First, replace duck with cat */ CALL PRXCHANGE(REanimal, -1, line, new_text, r_length, trunc, n_of_changes); /* Then, fix noises */ CALL PRXCHANGE(REnoise, -1, new_text, new_text2, r_length2, trunc2, n_of_changes2); /* Warnings if anything was truncated */ IF trunc THEN PUT &quot;Note: new_text was truncated&quot;; IF trunc2 THEN PUT &quot;Note: new_text2 was truncated&quot;; RUN; PROC PRINT DATA=cats; RUN; Obs line new_text new_text2 REanimal REnoise r_length trunc n_of_changes r_length2 trunc2 n_of_changes2 1 “Five little ducks went out one day,” “Five little cats went out one day,” “Five little cats went out one day,” 1 2 49 0 1 50 0 0 2 “Over the hills and far away.” “Over the hills and far away.” “Over the hills and far away.” 1 2 50 0 0 50 0 0 3 “Mother duck said, quack quack quack quack,” “Mother cat said, quack quack quack quack,” “Mother cat said, meow meow meow meow,” 1 2 49 0 1 46 0 4 4 “But only four little ducks came back.” “But only four little cats came back.” “But only four little cats came back.” 1 2 49 0 1 50 0 0 The equivalent R code: line &lt;- c( &quot;Five little ducks went out one day,&quot;, &quot;Over the hills and far away.&quot;, &quot;Mother duck said, quack quack quack quack,&quot;, &quot;But only four little ducks came back.&quot; ) str_replace_all(line, &quot;duck&quot;, &quot;cat&quot;) %&gt;% str_replace_all(&quot;quack&quot;, &quot;meow&quot;) [1] &quot;Five little cats went out one day,&quot; [2] &quot;Over the hills and far away.&quot; [3] &quot;Mother cat said, meow meow meow meow,&quot; [4] &quot;But only four little cats came back.&quot; # Or, in one line... str_replace_all(line, c(&quot;duck&quot; = &quot;cat&quot;, &quot;quack&quot; = &quot;meow&quot;)) [1] &quot;Five little cats went out one day,&quot; [2] &quot;Over the hills and far away.&quot; [3] &quot;Mother cat said, meow meow meow meow,&quot; [4] &quot;But only four little cats came back.&quot; In PCRE, a backreference in the same expression would be \\1, \\2, etc., but if you are in the replace block of the regex, you would use $1, $2, …. Don’t expect too much out of yourself as far as regular expressions go. I used them for almost a decade before I (mostly) quit googling “regex for …” to find somewhere to start. Another thing to realize - regular expressions are 100% a language you write, but don’t ever expect to read. So leave yourself lots of comments. Try it out The Squirrel Census (https://www.thesquirrelcensus.com/) is a multimedia science, design, and storytelling project focusing on the Eastern gray (Sciurus carolinensis) in NYC’s Central Park. They count squirrels and present their findings to the public. This table contains squirrel data for each of the 3,023 sightings, including location coordinates, age, primary and secondary fur color, elevation, activities, communications, and interactions between squirrels and with humans. Task 1: Fix the date! In both SAS and R, read in the data (link) and format the date correctly. You can do this by carefully specifying how the date is read in (?read_csv in R, informat in SAS) R solution library(readr) library(lubridate) squirrels &lt;- read_csv(&quot;data/2018_Central_Park_Squirrel_Census_-_Squirrel_Data.csv&quot;) %&gt;% mutate(Date = as.character(Date) %&gt;% mdy()) Parsed with column specification: cols( .default = col_character(), X = col_double(), Y = col_double(), Date = col_double(), `Hectare Squirrel Number` = col_double(), Running = col_logical(), Chasing = col_logical(), Climbing = col_logical(), Eating = col_logical(), Foraging = col_logical(), Kuks = col_logical(), Quaas = col_logical(), Moans = col_logical(), `Tail flags` = col_logical(), `Tail twitches` = col_logical(), Approaches = col_logical(), Indifferent = col_logical(), `Runs from` = col_logical(), `Zip Codes` = col_double(), `Community Districts` = col_double(), `Borough Boundaries` = col_double() # ... with 2 more columns ) See spec(...) for full column specifications. SAS solution libname classdat &quot;sas/&quot;; filename fileloc &#39;data/2018_Central_Park_Squirrel_Census_-_Squirrel_Data.csv&#39;; PROC IMPORT datafile = fileloc out=classdat.squirrel REPLACE DBMS = csv; /* comma delimited file */ GUESSINGROWS=500; GETNAMES = YES; RUN; PROC CONTENTS DATA=classdat.squirrel; RUN; DATA classdat.cleanSquirrel; SET classdat.squirrel; month = FLOOR(date/1000000); day = MOD(FLOOR(date/10000), 100); year = MOD(date, 10000); date = MDY(month, day, year); format date MMDDYY10.; RUN; Data Set Name CLASSDAT.SQUIRREL Observations 3023 Member Type DATA Variables 36 Engine V9 Indexes 0 Created 09/07/2020 08:34:29 Observation Length 656 Last Modified 09/07/2020 08:34:29 Deleted Observations 0 Protection Compressed NO Data Set Type Sorted NO Label Data Representation SOLARIS_X86_64, LINUX_X86_64, ALPHA_TRU64, LINUX_IA64 Encoding latin1 Western (ISO) Engine/Host Dependent Information Data Set Page Size 65536 Number of Data Set Pages 31 First Data Page 1 Max Obs per Page 99 Obs in First Data Page 89 Number of Data Set Repairs 0 Filename /home/susan/Projects/Class/unl-stat850/stat850-textbook/sas/squirrel.sas7bdat Release Created 9.0401M6 Host Created Linux Inode Number 39067082 Access Permission rw-rw-r– Owner Name susan File Size 2MB File Size (bytes) 2097152 Alphabetic List of Variables and Attributes # Variable Type Len Format Informat 14 Above_Ground_Sighter_Measurement Char 5 $5. $5. 8 Age Char 8 $8. $8. 27 Approaches Char 5 $5. $5. 34 Borough_Boundaries Num 8 BEST12. BEST32. 17 Chasing Char 5 $5. $5. 35 City_Council_Districts Num 8 BEST12. BEST32. 18 Climbing Char 5 $5. $5. 12 Color_notes Char 110 $110. $110. 11 Combination_of_Primary_and_Highl Char 29 $29. $29. 33 Community_Districts Num 8 BEST12. BEST32. 6 Date Num 8 BEST12. BEST32. 19 Eating Char 5 $5. $5. 20 Foraging Char 5 $5. $5. 4 Hectare Char 3 $3. $3. 7 Hectare_Squirrel_Number Num 8 BEST12. BEST32. 10 Highlight_Fur_Color Char 24 $24. $24. 28 Indifferent Char 5 $5. $5. 22 Kuks Char 5 $5. $5. 31 Lat_Long Char 45 $45. $45. 13 Location Char 12 $12. $12. 24 Moans Char 5 $5. $5. 21 Other_Activities Char 134 $134. $134. 30 Other_Interactions Char 70 $70. $70. 36 Police_Precincts Num 8 BEST12. BEST32. 9 Primary_Fur_Color Char 8 $8. $8. 23 Quaas Char 5 $5. $5. 16 Running Char 5 $5. $5. 29 Runs_from Char 5 $5. $5. 5 Shift Char 2 $2. $2. 15 Specific_Location Char 58 $58. $58. 25 Tail_flags Char 5 $5. $5. 26 Tail_twitches Char 5 $5. $5. 3 Unique_Squirrel_ID Char 14 $14. $14. 1 X Num 8 BEST12. BEST32. 2 Y Num 8 BEST12. BEST32. 32 Zip_Codes Char 1 $1. $1. Task 2: Clean up the Combination of primary and highlight fur color column A. Get rid of leading and trailing + characters B. Where two highlight colors exist, add the primary color to both of them (so Gray+Cinnamon, White becomes Gray+Cinnamon, Gray+White) You can do this by working with the original values or the combination values; whatever is easiest. R solution squirrels_colorfix &lt;- squirrels %&gt;% # Make it easier to join things back together... mutate(id = 1:n()) %&gt;% # keep the stuff we need for this select(id, primary = `Primary Fur Color`, highlight = `Highlight Fur Color`, combo = `Combination of Primary and Highlight Color`) %&gt;% # Remove all single character strings. # ^ means &quot;front of string&quot;, $ means &quot;end of string&quot;, and . is a wildcard mutate(combo = str_remove(combo, &quot;^.$&quot;)) %&gt;% # Remove trailing + signs mutate(combo = str_remove(combo, &quot;\\\\+$&quot;)) %&gt;% # This allows only two highlight colors mutate(combo = str_replace( combo, &quot;^(Black|Cinnamon|Gray)\\\\+(Black|Cinnamon|Gray|White), (Black|Cinnamon|Gray|White)$&quot;, &quot;\\\\1+\\\\2, \\\\1+\\\\3&quot;)) %&gt;% # This allows three highlight colors mutate(combo = str_replace( combo, &quot;^(Black|Cinnamon|Gray)\\\\+(Black|Cinnamon|Gray|White), (Black|Cinnamon|Gray|White), (Black|Cinnamon|Gray|White)$&quot;, &quot;\\\\1+\\\\2, \\\\1+\\\\3, \\\\1+\\\\4&quot;)) table(squirrels_colorfix$combo) Black 55 74 Black+Cinnamon Black+Cinnamon, Black+White 15 3 Black+Gray Black+Gray, Black+White 8 1 Black+White Cinnamon 2 62 Cinnamon+Black Cinnamon+Black, Cinnamon+White 10 3 Cinnamon+Gray Cinnamon+Gray, Cinnamon+Black 162 3 Cinnamon+Gray, Cinnamon+White Cinnamon+White 58 94 Gray Gray+Black 895 24 Gray+Black, Gray+Cinnamon Gray+Black, Gray+Cinnamon, Gray+White 9 32 Gray+Black, Gray+White Gray+Cinnamon 7 752 Gray+Cinnamon, Gray+White Gray+White 265 489 SAS solution libname classdat &quot;sas/&quot;; DATA squirrelcolor; SET classdat.cleanSquirrel; LENGTH orig $50 new_text1 $ 50 new_text2 $ 50 new_text3 $ 50; orig = Combination_of_Primary_and_Highl; IF _N_ = 1 THEN DO; REthree = PRXPARSE(&quot;s/^(Gray|Cinnamon|Black)\\+(Black|Cinnamon|Gray|White), (Black|Cinnamon|Gray|White), (Black|Cinnamon|Gray|White)$/$1+$2, $1+$3, $1+$4/&quot;); REtwo = PRXPARSE(&quot;s/^(Gray|Cinnamon|Black)\\+(Black|Cinnamon|Gray|White), (Black|Cinnamon|Gray|White)$/$1+$2, $1+$3/&quot;); REplus = PRXPARSE(&quot;s/[^A-z]$//&quot;); END; RETAIN REplus REtwo REthree; CALL PRXCHANGE(REplus, -1, trim(orig), new_text1); CALL PRXCHANGE(REthree, -1, trim(new_text1), new_text2); CALL PRXCHANGE(REtwo, -1, trim(new_text2), new_text3); keep orig new_text1 new_text2 new_text3; RUN; /* print all combinations that occur w/ new value */ PROC SQL; SELECT DISTINCT orig, new_text3 FROM squirrelcolor; orig new_text3 + Black+ Black Black+Cinnamon Black+Cinnamon Black+Cinnamon, White Black+Cinnamon, Black+White Black+Gray Black+Gray Black+Gray, White Black+Gray, Black+White Black+White Black+White Cinnamon+ Cinnamon Cinnamon+Black Cinnamon+Black Cinnamon+Black, White Cinnamon+Black, Cinnamon+White Cinnamon+Gray Cinnamon+Gray Cinnamon+Gray, Black Cinnamon+Gray, Cinnamon+Black Cinnamon+Gray, White Cinnamon+Gray, Cinnamon+White Cinnamon+White Cinnamon+White Gray+ Gray Gray+Black Gray+Black Gray+Black, Cinnamon Gray+Black, Gray+Cinnamon Gray+Black, Cinnamon, White Gray+Black, Gray+Cinnamon, Gray+White Gray+Black, White Gray+Black, Gray+White Gray+Cinnamon Gray+Cinnamon Gray+Cinnamon, White Gray+Cinnamon, Gray+White Gray+White Gray+White 6.2.3 Joining and Splitting Variables There’s another string-related task that is fairly commonly encountered: separating variables into two different columns (as in Table 3 above). Figure 6.1: A visual representation of what separating variables means for data set operations. Separating Variables We can use str_extract() if we want, but it’s actually faster to use separate(), which is part of the tidyr package. There is also extract(), which is another tidyr function that uses regular expressions and capture groups to split variables up. table3 %&gt;% separate(col = rate, into = c(&quot;cases&quot;, &quot;population&quot;), sep = &quot;/&quot;, remove = F) # A tibble: 6 x 5 country year rate cases population &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 Afghanistan 1999 745/19987071 745 19987071 2 Afghanistan 2000 2666/20595360 2666 20595360 3 Brazil 1999 37737/172006362 37737 172006362 4 Brazil 2000 80488/174504898 80488 174504898 5 China 1999 212258/1272915272 212258 1272915272 6 China 2000 213766/1280428583 213766 1280428583 I’ve left the rate column in the original data frame just to make it easy to compare and verify that yes, it worked. separate() will also take a full on regular expression if you want to capture only parts of a string to put into new columns. The scan() function in SAS can be used similarly, though it doesn’t have quite the simplicity and convenience of separate. data table3; length country $12 rate $20; input country $ year rate $; datalines; Afghanistan 1999 745/19987071 Afghanistan 2000 2666/20595360 Brazil 1999 37737/172006362 Brazil 2000 80488/174504898 China 1999 212258/1272915272 China 2000 213766/1280428583 ; data table3split; set table3; length var1-var2 $10.; array var(2) $; do i = 1 to dim(var); var[i]=scan(rate, i, &#39;/&#39;, &#39;M&#39;); end; count = var1; population = var2; run; And, of course, there is a complementary operation, which is when it’s necessary to join two columns to get a useable data value. Figure 6.2: A visual representation of what uniting variables means for data set operations. Joining Variables separate() has a complement, unite(), which is useful for handling situations like in table5: table5 %&gt;% unite(col = &quot;year&quot;, century:year, sep = &#39;&#39;) %&gt;% separate(col = rate, into = c(&quot;cases&quot;, &quot;population&quot;), sep = &quot;/&quot;) # A tibble: 6 x 4 country year cases population &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 Afghanistan 1999 745 19987071 2 Afghanistan 2000 2666 20595360 3 Brazil 1999 37737 172006362 4 Brazil 2000 80488 174504898 5 China 1999 212258 1272915272 6 China 2000 213766 1280428583 Note that separate and unite both work with character variables - it’s not necessarily true that you’ll always be working with character formats when you need to do these operations. For instance, it’s relatively common to need to separate dates into year, month, and day as separate columns (or to join them together). Of course, it’s much easier just to do a similar two-step operation (we have to convert to numeric variables to do math) table5 %&gt;% mutate(year = as.numeric(century)*100 + as.numeric(year)) %&gt;% select(-century) # A tibble: 6 x 3 country year rate &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; 1 Afghanistan 1999 745/19987071 2 Afghanistan 2000 2666/20595360 3 Brazil 1999 37737/172006362 4 Brazil 2000 80488/174504898 5 China 1999 212258/1272915272 6 China 2000 213766/1280428583 (Handy shortcut functions in dplyr don’t completely remove the need to think). Similarly, it is possible to do this operation in SAS as well (by string concatenation or using the numeric approach), as shown below: /* read in the data */ DATA table5; LENGTH country $12 century year rate $20; INPUT country $ century year rate $; DATALINES; Afghanistan 19 99 745/19987071 Afghanistan 20 00 2666/20595360 Brazil 19 99 37737/172006362 Brazil 20 00 80488/174504898 China 19 99 212258/1272915272 China 20 00 213766/1280428583 ; /* Format the data */ DATA table5split; SET table5; LENGTH v1-v2 $10. yyc $3. centc $3. yyyyc $4.; ARRAY v(2) $; DO i = 1 TO dim(v); v[i]=scan(rate, i, &#39;/&#39;, &#39;M&#39;); END; count = v1; population = v2; /* Numeric version */ year = century*100 + year; /* Character version */ yyc = PUT(year, 2.); /* convert to character */ centc = PUT(century, 2.); /* convert to character */ yyyyc = CATT(&#39;&#39;, centc, yearc); /* catt is truncate, then concatenate */ RUN; /* Print the data */ PROC PRINT DATA=table5split; VAR country year yyyyc count population rate centc century yyc; RUN; Obs country year yyyyc count population rate centc century yyc 1 Afghanistan 1999 19. 745 19987071 745/19987071 19 19 2 Afghanistan 2000 20. 2666 20595360 2666/20595360 20 20 3 Brazil 1999 19. 37737 172006362 37737/172006362 19 19 4 Brazil 2000 20. 80488 174504898 80488/174504898 20 20 5 China 1999 19. 212258 1272915272 212258/1272915272 19 19 6 China 2000 20. 213766 1280428583 213766/1280428583 20 20 6.3 Pivot operations It’s fairly common for data to come in forms which are convenient for either human viewing or data entry. Unfortunately, these forms aren’t necessarily the most friendly for analysis. 6.3.1 Longer In many cases, the data come in what we might call “wide” form - some of the column names are not names of variables, but instead, are themselves values of another variable. Tables 4a and 4b are good examples of data which is in “wide” form and should be in long(er) form: the years, which are variables, are column names, and the values are cases and population respectively. table4a # A tibble: 3 x 3 country `1999` `2000` * &lt;chr&gt; &lt;int&gt; &lt;int&gt; 1 Afghanistan 745 2666 2 Brazil 37737 80488 3 China 212258 213766 table4b # A tibble: 3 x 3 country `1999` `2000` * &lt;chr&gt; &lt;int&gt; &lt;int&gt; 1 Afghanistan 19987071 20595360 2 Brazil 172006362 174504898 3 China 1272915272 1280428583 The solution to this is to rearrange the data into “long form”: to take the columns which contain values and “stack” them, adding a variable to indicate which column each value came from. To do this, we have to duplicate the values in any column which isn’t being stacked (e.g. country, in both the example above and the image below). Figure 6.3: A visual representation of what the pivot_longer operation looks like in practice. Once our data are in long form, we can (if necessary) separate values that once served as column labels into actual variables, and we’ll have tidy(er) data. In R, wide-to-long conversions are performed using pivot_longer() tba &lt;- table4a %&gt;% pivot_longer(-country, names_to = &quot;year&quot;, values_to = &quot;cases&quot;) tbb &lt;- table4b %&gt;% pivot_longer(-country, names_to = &quot;year&quot;, values_to = &quot;population&quot;) # To get the tidy data, we join the two together (see Table joins below) left_join(tba, tbb, by = c(&quot;country&quot;, &quot;year&quot;)) %&gt;% # make year numeric b/c it&#39;s dumb not to mutate(year = as.numeric(year)) # A tibble: 6 x 4 country year cases population &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; 1 Afghanistan 1999 745 19987071 2 Afghanistan 2000 2666 20595360 3 Brazil 1999 37737 172006362 4 Brazil 2000 80488 174504898 5 China 1999 212258 1272915272 6 China 2000 213766 1280428583 The columns are moved to a variable with the name passed to the argument “names_to” (hopefully, that is easy to remember), and the values are moved to a variable with the name passed to the argument “values_to” (again, hopefully easy to remember). We identify ID variables (variables which we don’t want to pivot) by not including them in the pivot statement. We can do this in one of two ways: select only variables we want to pivot: pivot_longer(table4a, cols =1999:2000, names_to = &quot;year&quot;, values_to = &quot;cases&quot;) select variables we don’t want to pivot, using - to remove them. (see above, where -country excludes country from the pivot operation) Which option is easier depends how many things you’re pivoting (and how the columns are structured). If we wanted to avoid the table join, we could do this process another way: first, we would add a column to each tibble called id with values “cases” and “population” respectively. Then, we could bind the two tables together by row (so stack them on top of each other). We could then do a wide-to-long pivot, followed by a long-to-wide pivot to get our data into tidy form. # Create ID columns table4a.x &lt;- table4a %&gt;% mutate(id = &quot;cases&quot;) table4b.x &lt;- table4b %&gt;% mutate(id = &quot;population&quot;) # Create one table table4 &lt;- bind_rows(table4a.x, table4b.x) table4_long &lt;- table4 %&gt;% # rearrange columns select(country, id, `1999`, `2000`) %&gt;% # Don&#39;t pivot country or id pivot_longer(-c(country:id), names_to = &quot;year&quot;, values_to = &quot;count&quot;) # Intermediate fully-long form table4_long # A tibble: 12 x 4 country id year count &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; 1 Afghanistan cases 1999 745 2 Afghanistan cases 2000 2666 3 Brazil cases 1999 37737 4 Brazil cases 2000 80488 5 China cases 1999 212258 6 China cases 2000 213766 7 Afghanistan population 1999 19987071 8 Afghanistan population 2000 20595360 9 Brazil population 1999 172006362 10 Brazil population 2000 174504898 11 China population 1999 1272915272 12 China population 2000 1280428583 # make wider, with case and population columns table4_tidy &lt;- table4_long %&gt;% pivot_wider(names_from = id, values_from = count) table4_tidy # A tibble: 6 x 4 country year cases population &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; 1 Afghanistan 1999 745 19987071 2 Afghanistan 2000 2666 20595360 3 Brazil 1999 37737 172006362 4 Brazil 2000 80488 174504898 5 China 1999 212258 1272915272 6 China 2000 213766 1280428583 SAS will let you do a single transpose operation, where tidyr requires two separate pivots – this is because tidyr is trying to make the steps readable, even though it means writing more code. In SAS, we use PROC TRANSPOSE to perform wide-to-long pivot operations Friendly guide to PROC TRANSPOSE DATA table4a; input country $12. _1999 _2000; datalines; Afghanistan 745 2666 Brazil 37737 80488 China 212258 213766 ; PROC TRANSPOSE DATA=table4a out=table4atmp (rename=(COL1 = cases)) /* rename output variable (&#39;values_to&#39;) */ NAME = year /* where column names go (&#39;names_to&#39;) */ ; BY country; /* The combination of BY variables defines a row */ VAR _1999 _2000; /* Specify variables to pivot */ RUN; DATA table4b; input country $12. _1999 _2000; datalines; Afghanistan 19987071 20595360 Brazil 172006362 174504898 China 1272915272 1280428583 ; PROC TRANSPOSE DATA=table4b out=table4btmp (rename=(COL1 = population)) /* rename output variable (&#39;values_to&#39;) */ NAME = year /* where the column names go (&#39;names_to&#39;) */ ; BY country; /* The combination of BY variables defines a row */ VAR _1999 _2000; /* Specify variables to pivot */ RUN; DATA table4clean; /* merge the two tables together */ /* (country and year selected automatically as merge vars) */ MERGE table4atmp table4btmp; /* Remove the first character of year, which is _ */ /* Then convert to a numeric variable */ year = input(SUBSTR(year, 2, 5), 4.); RUN; PROC PRINT DATA=table4clean; RUN; Obs country year cases population 1 Afghanistan 1999 745 19987071 2 Afghanistan 2000 2666 20595360 3 Brazil 1999 37737 172006362 4 Brazil 2000 80488 174504898 5 China 1999 212258 1272915272 6 China 2000 213766 1280428583 In the above code, we let SAS name our output variable COL1, and then renamed it at the end by modifying the output statement. Another option would be to create an ID variable when inputting each data set, and use the ID statement to indicate that variable. DATA table4a; input country $12. _1999 _2000; id = &quot;cases&quot;; datalines; Afghanistan 745 2666 Brazil 37737 80488 China 212258 213766 ; PROC TRANSPOSE DATA=table4a out=table4atmp NAME = year /* where column names go (&#39;names_to&#39;) */ ; BY country; /* The combination of BY variables defines a row */ VAR _1999 _2000; /* Specify variables to pivot */ ID id; /* This variable holds the output variable name (&#39;values_to&#39;) */ RUN; DATA table4b; input country $12. _1999 _2000; id = &quot;population&quot;; datalines; Afghanistan 19987071 20595360 Brazil 172006362 174504898 China 1272915272 1280428583 ; PROC TRANSPOSE DATA=table4b out=table4btmp NAME = year /* where the column names go (&#39;names_to&#39;) */ ; BY country; /* The combination of BY variables defines a row */ VAR _1999 _2000; /* Specify variables to pivot */ ID id; /* This variable holds the output variable name (&#39;values_to&#39;) */ RUN; DATA table4clean; /* merge the two tables together */ /* (country and year selected automatically as merge vars) */ MERGE table4atmp table4btmp; /* Remove the first character of year, which is _ */ /* Then convert to a numeric variable */ year = input(SUBSTR(year, 2, 5), 4.); RUN; PROC PRINT DATA=table4clean; RUN; Obs country year cases population 1 Afghanistan 1999 745 19987071 2 Afghanistan 2000 2666 20595360 3 Brazil 1999 37737 172006362 4 Brazil 2000 80488 174504898 5 China 1999 212258 1272915272 6 China 2000 213766 1280428583 This seems a bit odd, as we’re defining constant variables, but it works – and provides some insight into how the reverse operation (long to wide) might work (e.g. nonconstant variables). Imagine instead of transposing each dataset and then merging them, we just stack the two wide-format datasets on top of each other. Then we can do the same transpose operation, but we’ll end up with two columns: cases, and population. DATA table4a; input country $12. _1999 _2000; id = &quot;cases&quot;; datalines; Afghanistan 745 2666 Brazil 37737 80488 China 212258 213766 ; DATA table4b; input country $12. _1999 _2000; id = &quot;population&quot;; datalines; Afghanistan 19987071 20595360 Brazil 172006362 174504898 China 1272915272 1280428583 ; DATA table4; /* stack the two datasets on top of each other */ SET table4b table4a; /* sort by country */ BY country; RUN; PROC TRANSPOSE DATA=table4 out=table4tmp NAME = year; BY country; VAR _1999 _2000; ID id; /* This variable holds the output variable names (&#39;values_to&#39;) */ RUN; DATA table4tmp; SET table4tmp; /* Remove the first character of year, which is _ */ /* Then convert to a numeric variable */ year = input(SUBSTR(year, 2, 5), 4.); RUN; PROC PRINT DATA=table4tmp; RUN; Obs country year population cases 1 Afghanistan 1999 19987071 745 2 Afghanistan 2000 20595360 2666 3 Brazil 1999 172006362 37737 4 Brazil 2000 174504898 80488 5 China 1999 1272915272 212258 6 China 2000 1280428583 213766 It’s not too complicated – and it definitely beats doing that operation by hand, even for short, simple tables. You can imagine how messy the cut/copy/paste job would be in Excel. It takes some getting used to, but once you get a feel for how to do these transpose operations, you’ll be able to handle messy data reproducibly - instead of describing how you did XYZ operations in Excel, you can provide a script that will take the original data as input and spit out clean, analysis-ready data as output. Because wide-to-long transformations end up combining values from several columns into a single column, you can run into issues with type conversions that happen implicitly. If you try to pivot_longer() using a character column mixed in with numeric columns, your “value” column will be converted to a character automatically. Now, let’s look at a “real data” example using HIV case data from the World Health Organization. (download page here). WHO HIV data set up url &lt;- &quot;https://apps.who.int/gho/athena/data/xmart.csv?target=GHO/HIV_0000000026,SDGHIV&amp;profile=crosstable&amp;filter=COUNTRY:*;REGION:*;AGEGROUP:-&amp;x-sideaxis=COUNTRY&amp;x-topaxis=GHO;YEAR;SEX&amp;x-collapse=true&quot; # create colnames in shorter form hiv &lt;- read_csv(url, na = &quot;No data&quot;, ) %&gt;% select(-2) # get rid of only column that has raw totals Parsed with column specification: cols( .default = col_character() ) See spec(...) for full column specifications. # work with the names to make them shorter and more readable # otherwise, they&#39;re too long for SAS newnames &lt;- names(hiv) %&gt;% str_remove(&quot;New HIV infections \\\\(per 1000 uninfected population\\\\); &quot;) %&gt;% str_replace_all(&quot;(\\\\d{4}); (Male|Female|Both)( sexes)?&quot;, &quot;Rate_\\\\1_\\\\2&quot;) hiv &lt;- set_names(hiv, newnames) %&gt;% # transliterate - get rid of non-ascii characters, replace w/ closest equiv mutate(Country = iconv(Country, to=&quot;ASCII//TRANSLIT&quot;)) write_csv(hiv, path = &quot;data/who_hiv.csv&quot;, na = &#39;.&#39;) # make it easy for SAS Since I’ve cheated a bit to make this easier to read in using SAS… hopefully that will be uneventful. libname classdat &quot;sas/&quot;; filename fileloc &#39;data/who_hiv.csv&#39;; PROC IMPORT datafile = fileloc out=classdat.hiv REPLACE DBMS = csv; /* comma delimited file */ GUESSINGROWS=500; GETNAMES = YES; RUN; Original Data Structure (WHO HIV data) hiv %&gt;% # Only look at 1st 6 cols, because there are too many select(1:6) %&gt;% head() # A tibble: 6 x 6 Country Rate_2018_Both Rate_2018_Male Rate_2018_Female Rate_2017_Both &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 Afghan… 0.02 [0.01 - … 0.03 [0.02 - … 0.01 [&amp;lt;0.01 … 0.02 [0.01 - … 2 Albania &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; 3 Algeria 0.03 [0.03 - … 0.03 [0.03 - … 0.03 [0.02 - 0.… 0.03 [0.03 - … 4 Angola 1.01 [0.75 - … 0.74 [0.55 - … 1.27 [0.96 - 1.… 1.06 [0.82 - … 5 Argent… 0.15 [0.13 - … 0.21 [0.18 - … 0.09 [0.08 - 0.… 0.15 [0.13 - … 6 Armenia 0.06 [0.04 - … 0.09 [0.06 - … 0.04 [0.02 - 0.… 0.06 [0.04 - … # … with 1 more variable: Rate_2017_Male &lt;chr&gt; Here, the column names (except for the first column) contain information about both group (Male, Female, total) and year. If we want to plot values over time, we’re not going to have much fun. Thinking through the logical steps before writing the code can be helpful - even sketching out what you expect the data to (roughly) look like at each stage. Current data observations: Our column names contain the year and the group (Both, Male, Female) Our values contain estimates with a confidence interval - so est (LB, UB) Some intervals have &amp;lt;, which is HTML code for &lt;. We’ll need to get rid of those. Our final dataset should look like this: Country group year est lb ub narnia both 2020 0.3 0.2 0.4 (give or take column order, capitalization, and/or reality) From this, our steps are: Transpose the data - all columns except Country (our BY variable) Separate the (what was column names) variable into group and year variables convert year to numeric Separate the (what was column values) variable into EST, LB, and UB columns Remove &amp;lt; from the variable so that it’s readable as numeric Remove [, ] and - from the variable so that the values are separated by spaces Read each value into a separate column that’s numeric Rename the columns Clean up any extra variables hanging around. Now that we have a plan, lets execute that plan Wide-to-long transformation in R (WHO HIV data) hiv_tidier &lt;- hiv %&gt;% pivot_longer(-Country, names_to = &quot;key&quot;, values_to = &quot;rate&quot;) hiv_tidier # A tibble: 14,790 x 3 Country key rate &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 Afghanistan Rate_2018_Both 0.02 [0.01 - 0.04] 2 Afghanistan Rate_2018_Male 0.03 [0.02 - 0.06] 3 Afghanistan Rate_2018_Female 0.01 [&amp;lt;0.01 - 0.03] 4 Afghanistan Rate_2017_Both 0.02 [0.01 - 0.04] 5 Afghanistan Rate_2017_Male 0.03 [0.02 - 0.06] 6 Afghanistan Rate_2017_Female 0.01 [&amp;lt;0.01 - 0.03] 7 Afghanistan Rate_2016_Both 0.02 [0.01 - 0.04] 8 Afghanistan Rate_2016_Male 0.03 [0.02 - 0.06] 9 Afghanistan Rate_2016_Female 0.01 [&amp;lt;0.01 - 0.02] 10 Afghanistan Rate_2015_Both 0.02 [0.01 - 0.04] # … with 14,780 more rows From this point, it’s pretty easy to use things we’ve used in the past (regular expressions, separate, extract) hiv_tidy &lt;- hiv_tidier %&gt;% # Split the key into Rate (don&#39;t keep), year, and group (F, M, Both) separate(key, into = c(NA, &quot;year&quot;, &quot;group&quot;), sep = &quot;_&quot;, convert = T) %&gt;% # Fix the HTML sign for less than - we could remove it as well mutate(rate = str_replace_all(rate, &quot;&amp;lt;&quot;, &quot;&lt;&quot;)) %&gt;% # Split the rate into estimate, lower bound, and upper bound extract(rate, into = c(&quot;est&quot;, &quot;lb&quot;, &quot;ub&quot;), regex = &quot;([\\\\d\\\\.]{1,}) .([&lt;\\\\d\\\\.]{1,}) - ([&lt;\\\\d\\\\.]{1,}).&quot;, remove = T) hiv_tidy # A tibble: 14,790 x 6 Country year group est lb ub &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 Afghanistan 2018 Both 0.02 0.01 0.04 2 Afghanistan 2018 Male 0.03 0.02 0.06 3 Afghanistan 2018 Female 0.01 &lt;0.01 0.03 4 Afghanistan 2017 Both 0.02 0.01 0.04 5 Afghanistan 2017 Male 0.03 0.02 0.06 6 Afghanistan 2017 Female 0.01 &lt;0.01 0.03 7 Afghanistan 2016 Both 0.02 0.01 0.04 8 Afghanistan 2016 Male 0.03 0.02 0.06 9 Afghanistan 2016 Female 0.01 &lt;0.01 0.02 10 Afghanistan 2015 Both 0.02 0.01 0.04 # … with 14,780 more rows Wide-to-long transformation in SAS (WHO HIV data) I’ve thoroughly commented the code below to hopefully make the logical steps clear. 6 libname classdat &quot;sas/&quot;; NOTE: Libref CLASSDAT was successfully assigned as follows: Engine: V9 Physical Name: /home/susan/Projects/Class/unl-stat850/stat850-textbook/sas 7 8 PROC TRANSPOSE DATA=classdat.hiv OUT = classdat.hivtidy 9 (rename=(col1=rate)) /* &quot;values_to&quot; in tidyr speak */ 10 NAME = key; /* &quot;names_to&quot; in tidyr speak */ 11 /* specify notsorted unless you know your data are sorted */ 12 BY Country NOTSORTED; 13 /* variables to transpose - just list start and end, with -- in 13 ! between */ 14 VAR Rate_2018_Both--Rate_1990_Female; 15 RUN; NOTE: There were 170 observations read from the data set CLASSDAT.HIV. NOTE: The data set CLASSDAT.HIVTIDY has 14790 observations and 3 variables. NOTE: PROCEDURE TRANSPOSE used (Total process time): real time 0.03 seconds cpu time 0.03 seconds 16 17 title &#39;Intermediate result&#39;; 18 PROC PRINT DATA=classdat.hivtidy(obs=5); RUN; NOTE: There were 5 observations read from the data set CLASSDAT.HIVTIDY. NOTE: PROCEDURE PRINT used (Total process time): real time 0.00 seconds cpu time 0.00 seconds 19 20 /* Data step to clean up */ 21 DATA classdat.hivtidy; 22 SET classdat.hivtidy ; 23 /* Create group and year variables from key */ 24 group = scan(key,3,&quot;_&quot;); 25 year = input(scan(key, 2, &quot;_&quot;), 4.); 26 27 /* just get rid of the less than sign */ 28 rate = PRXCHANGE(&quot;s/&amp;lt;//&quot;, -1, rate); WARNING: Apparent symbolic reference LT not resolved. 29 rate = PRXCHANGE(&quot;s/[\\[\\]-]//&quot;, -1, rate); 30 31 /* Create 3 columns for the 3 values - est, lb, ub */ 32 length v1-v3 4.2; /* define format */ 33 array v(3) $; /* create a 3 column array to store values in */ 34 do i = 1 to dim(v); 35 v[i]=scan(rate, i, &#39; &#39;); /* get values from each row of rate 35 ! */ 36 end; 37 38 rename v1 = est v2 = lb v3 = ub; /* rename things to be pretty 38 ! */ 39 40 /* get rid of extra vars */ 41 drop _name_ i key rate; 42 RUN; NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column). 35:5 WARNING: The variable _name_ in the DROP, KEEP, or RENAME list has never been referenced. NOTE: Invalid numeric data, &#39;0.01&lt;e2&gt;..0.14&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2018_Both rate=0.04 0.01–0.14 group=Both year=2018 v1=0.04 v2=. v3=. i=4 _ERROR_=1 _N_=1 NOTE: Invalid numeric data, &#39;0.02&lt;e2&gt;..0.19&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2018_Male rate=0.05 0.02–0.19 group=Male year=2018 v1=0.05 v2=. v3=. i=4 _ERROR_=1 _N_=2 NOTE: Invalid numeric data, &#39;0.01&lt;e2&gt;..0.09&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2018_Female rate=0.02 0.01–0.09 group=Female year=2018 v1=0.02 v2=. v3=. i=4 _ERROR_=1 _N_=3 NOTE: Invalid numeric data, &#39;0.01&lt;e2&gt;..0.14&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2017_Both rate=0.04 0.01–0.14 group=Both year=2017 v1=0.04 v2=. v3=. i=4 _ERROR_=1 _N_=4 NOTE: Invalid numeric data, &#39;0.02&lt;e2&gt;..0.19&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2017_Male rate=0.05 0.02–0.19 group=Male year=2017 v1=0.05 v2=. v3=. i=4 _ERROR_=1 _N_=5 NOTE: Invalid numeric data, &#39;0.01&lt;e2&gt;..0.08&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2017_Female rate=0.02 0.01–0.08 group=Female year=2017 v1=0.02 v2=. v3=. i=4 _ERROR_=1 _N_=6 NOTE: Invalid numeric data, &#39;0.01&lt;e2&gt;..0.13&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2016_Both rate=0.04 0.01–0.13 group=Both year=2016 v1=0.04 v2=. v3=. i=4 _ERROR_=1 _N_=7 NOTE: Invalid numeric data, &#39;0.02&lt;e2&gt;..0.17&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2016_Male rate=0.05 0.02–0.17 group=Male year=2016 v1=0.05 v2=. v3=. i=4 _ERROR_=1 _N_=8 NOTE: Invalid numeric data, &#39;0.01&lt;e2&gt;..0.08&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2016_Female rate=0.02 0.01–0.08 group=Female year=2016 v1=0.02 v2=. v3=. i=4 _ERROR_=1 _N_=9 NOTE: Invalid numeric data, &#39;0.01&lt;e2&gt;..0.11&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2015_Both rate=0.03 0.01–0.11 group=Both year=2015 v1=0.03 v2=. v3=. i=4 _ERROR_=1 _N_=10 NOTE: Invalid numeric data, &#39;0.02&lt;e2&gt;..0.16&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2015_Male rate=0.05 0.02–0.16 group=Male year=2015 v1=0.05 v2=. v3=. i=4 _ERROR_=1 _N_=11 NOTE: Invalid numeric data, &#39;0.01&lt;e2&gt;..0.07&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2015_Female rate=0.02 0.01–0.07 group=Female year=2015 v1=0.02 v2=. v3=. i=4 _ERROR_=1 _N_=12 NOTE: Invalid numeric data, &#39;0.01&lt;e2&gt;..0.1&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2014_Both rate=0.03 0.01–0.1 group=Both year=2014 v1=0.03 v2=. v3=. i=4 _ERROR_=1 _N_=13 NOTE: Invalid numeric data, &#39;0.02&lt;e2&gt;..0.14&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2014_Male rate=0.04 0.02–0.14 group=Male year=2014 v1=0.04 v2=. v3=. i=4 _ERROR_=1 _N_=14 NOTE: Invalid numeric data, &#39;0.01&lt;e2&gt;..0.06&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2014_Female rate=0.02 0.01–0.06 group=Female year=2014 v1=0.02 v2=. v3=. i=4 _ERROR_=1 _N_=15 NOTE: Invalid numeric data, &#39;0.01&lt;e2&gt;..0.09&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2013_Both rate=0.03 0.01–0.09 group=Both year=2013 v1=0.03 v2=. v3=. i=4 _ERROR_=1 _N_=16 NOTE: Invalid numeric data, &#39;0.02&lt;e2&gt;..0.12&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2013_Male rate=0.04 0.02–0.12 group=Male year=2013 v1=0.04 v2=. v3=. i=4 _ERROR_=1 _N_=17 NOTE: Invalid numeric data, &#39;0.01&lt;e2&gt;..0.05&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2013_Female rate=0.02 0.01–0.05 group=Female year=2013 v1=0.02 v2=. v3=. i=4 _ERROR_=1 _N_=18 NOTE: Invalid numeric data, &#39;0.01&lt;e2&gt;..0.08&#39; , at line 35 column 10. Country=Afghanistan key=Rate_2012_Both rate=0.03 0.01–0.08 group=Both year=2012 v1=0.03 v2=. v3=. i=4 _ERROR_=1 _N_=19 NOTE: Invalid numeric data, &#39;0.02&lt;e2&gt;..0.11&#39; , at line 35 column 10. WARNING: Limit set by ERRORS= option reached. Further errors of this type will not be printed. Country=Afghanistan key=Rate_2012_Male rate=0.04 0.02–0.11 group=Male year=2012 v1=0.04 v2=. v3=. i=4 _ERROR_=1 _N_=20 NOTE: There were 14790 observations read from the data set CLASSDAT.HIVTIDY. NOTE: The data set CLASSDAT.HIVTIDY has 14790 observations and 6 variables. NOTE: DATA statement used (Total process time): real time 0.04 seconds cpu time 0.05 seconds 43 44 title &#39;Final result&#39;; 45 PROC PRINT DATA=classdat.hivtidy(obs=5); RUN; NOTE: There were 5 observations read from the data set CLASSDAT.HIVTIDY. NOTE: PROCEDURE PRINT used (Total process time): real time 0.00 seconds cpu time 0.00 seconds 46 Intermediate result Obs Country key rate 1 Afghanistan Rate_2018_Both 0.04 [0.01–0.14] 2 Afghanistan Rate_2018_Male 0.05 [0.02–0.19] 3 Afghanistan Rate_2018_Female 0.02 [&amp;lt;0.01–0.09] 4 Afghanistan Rate_2017_Both 0.04 [0.01–0.14] 5 Afghanistan Rate_2017_Male 0.05 [0.02–0.19] Final result Obs Country group year est lb ub 1 Afghanistan Both 2018 0.040000 . . 2 Afghanistan Male 2018 0.050000 . . 3 Afghanistan Female 2018 0.020000 . . 4 Afghanistan Both 2017 0.040000 . . 5 Afghanistan Male 2017 0.050000 . . Try it out In the next section, we’ll be using the WHO surveillance of disease incidence data (link - 3.1, Excel link) It will require some preprocessing before it’s suitable for a demonstration. I’ll do some of it, but in this section, you’re going to do the rest :) library(readxl) library(purrr) # This uses the map() function as a replacement for for loops. # It&#39;s pretty sweet sheets &lt;- excel_sheets(&quot;data/incidence_series.xls&quot;) sheets &lt;- sheets[-c(1, length(sheets))] # get rid of 1st and last sheet name # This command says &quot;for each sheet, read in the excel file with that sheet name&quot; # map_df means paste them all together into a single data frame disease_incidence &lt;- map_df(sheets, ~read_xls(path =&quot;data/incidence_series.xls&quot;, sheet = .)) # Alternately, we could write a loop: disease_incidence2 &lt;- tibble() # Blank data frame for(i in 1:length(sheets)) { disease_incidence2 &lt;- bind_rows( disease_incidence2, read_xls(path = &quot;data/incidence_series.xls&quot;, sheet = sheets[i]) ) } # export for SAS (and R, if you want) write_csv(disease_incidence, path = &quot;data/who_disease_incidence.csv&quot;, na = &quot;.&quot;) Download the exported data here and import it into SAS and R. Transform it into long format, so that there is a year column. You should end up with a table that has dimensions of approximately 6 columns and 83,000 rows (or something close to that). Can you make a line plot of cases of measles in Bangladesh over time? R solution who_disease &lt;- read_csv(&quot;data/who_disease_incidence.csv&quot;, na = &quot;.&quot;) Parsed with column specification: cols( .default = col_double(), WHO_REGION = col_character(), ISO_code = col_character(), Cname = col_character(), Disease = col_character() ) See spec(...) for full column specifications. who_disease_long &lt;- who_disease %&gt;% pivot_longer(matches(&quot;\\\\d{4}&quot;), names_to = &quot;year&quot;, values_to = &quot;cases&quot;) %&gt;% rename(Country = Cname) %&gt;% mutate(Disease = str_replace(Disease, &quot;CRS&quot;, &quot;Congenital Rubella&quot;), year = as.numeric(year)) filter(who_disease_long, Country == &quot;Bangladesh&quot;, Disease == &quot;measles&quot;) %&gt;% ggplot(aes(x = year, y = cases)) + geom_line() SAS solution libname classdat &quot;sas/&quot;; filename fileloc &#39;data/who_disease_incidence.csv&#39;; PROC IMPORT datafile = fileloc out=classdat.who_disease REPLACE DBMS = csv; /* comma delimited file */ GUESSINGROWS=500; GETNAMES = YES; RUN; /* Sort your data by the variables you want as the ID variables */ PROC SORT DATA=classdat.who_disease OUT=who_dis_tmp; BY Disease Cname; RUN; PROC TRANSPOSE DATA = who_dis_tmp OUT = classdat.disease_long; BY Disease Cname; /* Same variable order as used to sort */ VAR _2018--_1980; /* variables to transpose */ RUN; title &#39;Intermediate result 1&#39;; PROC PRINT DATA=classdat.disease_long(obs=5); RUN; /* Data step to clean up */ DATA classdat.disease_long; SET classdat.disease_long (rename=col1=cases); year = input(scan(_name_,1,&quot;_&quot;), 4.); drop _name_; RUN; title &#39;Final result&#39;; PROC PRINT DATA=classdat.disease_long(obs=5); RUN; PROC SQL; CREATE TABLE bangladesh AS SELECT * FROM classdat.disease_long WHERE (Cname = &quot;Bangladesh&quot;) &amp; (Disease = &quot;measles&quot;); title &#39;Measles in Bangladesh&#39;; ODS GRAPHICS ON; PROC SGPLOT DATA=bangladesh; SERIES X = year Y = cases; RUN; ODS GRAPHICS OFF; Intermediate result 1 Obs Disease Cname NAME COL1 1 CRS Afghanistan _2018 . 2 CRS Afghanistan _2017 . 3 CRS Afghanistan _2016 . 4 CRS Afghanistan _2015 0 5 CRS Afghanistan _2014 0 Final result Obs Disease Cname cases year 1 CRS Afghanistan . 2018 2 CRS Afghanistan . 2017 3 CRS Afghanistan . 2016 4 CRS Afghanistan 0 2015 5 CRS Afghanistan 0 2014 6.3.2 Wider While it’s very common to need to transform data into a longer format, it’s not that uncommon to need to do the reverse operation. When an observation is scattered across multiple rows, your data is too long and needs to be made wider again. Table 2 is an example of a table that is in long format but needs to be converted to a wider layout to be “tidy” - there are separate rows for cases and population, which means that a single observation (one year, one country) has two rows. Figure 6.4: A visual representation of what the pivot_wider operation looks like in practice. In R, long-to-wide conversion operations are performed using pivot_wider() table2 %&gt;% pivot_wider(names_from = type, values_from = count) # A tibble: 6 x 4 country year cases population &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; 1 Afghanistan 1999 745 19987071 2 Afghanistan 2000 2666 20595360 3 Brazil 1999 37737 172006362 4 Brazil 2000 80488 174504898 5 China 1999 212258 1272915272 6 China 2000 213766 1280428583 In SAS, we use PROC TRANSPOSE again DATA table2; input country $12. year type$12. count 12.; datalines; Afghanistan 1999 cases 745 Afghanistan 1999 population 19987071 Afghanistan 2000 cases 2666 Afghanistan 2000 population 20595360 Brazil 1999 cases 37737 Brazil 1999 population 172006362 Brazil 2000 cases 80488 Brazil 2000 population 174504898 China 1999 cases 212258 China 1999 population 1272915272 China 2000 cases 213766 China 2000 population 1280428583 ; PROC TRANSPOSE DATA=table2 out=table2tmp; ID type; /* Equivalent to names_from */ BY country year; /* The combination of BY variables defines a row */ VAR count; /* Equivalent to values_from */ RUN; PROC PRINT DATA=table2tmp; RUN; Obs country year NAME cases population 1 Afghanistan 1999 count 745 19987071 2 Afghanistan 2000 count 2666 20595360 3 Brazil 1999 count 37737 172006362 4 Brazil 2000 count 80488 174504898 5 China 1999 count 212258 1272915272 6 China 2000 count 213766 1280428583 If you don’t sort your data properly before PROC TRANSPOSE in SAS, you may get a result that has an unexpected shape. SAS works rowwise (compared to R’s column-wise operations) so the row order actually matters in SAS (it generally doesn’t matter much in R). Returning to our WHO HIV example, we might want our data to look like this: Country year measurement Both Male Female Afghanistan 2018 est .02 .03 .01 2018 lb .01 .02 .01 2018 ub .04 .06 .03 As a reminder, the data currently looks like this: hiv_tidy # A tibble: 14,790 x 6 Country year group est lb ub &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 Afghanistan 2018 Both 0.02 0.01 0.04 2 Afghanistan 2018 Male 0.03 0.02 0.06 3 Afghanistan 2018 Female 0.01 &lt;0.01 0.03 4 Afghanistan 2017 Both 0.02 0.01 0.04 5 Afghanistan 2017 Male 0.03 0.02 0.06 6 Afghanistan 2017 Female 0.01 &lt;0.01 0.03 7 Afghanistan 2016 Both 0.02 0.01 0.04 8 Afghanistan 2016 Male 0.03 0.02 0.06 9 Afghanistan 2016 Female 0.01 &lt;0.01 0.02 10 Afghanistan 2015 Both 0.02 0.01 0.04 # … with 14,780 more rows Think through the steps you’d need to take to get the data into this form. Sketch out any intermediate state your data will need to go through. WHO HIV Data: long-to-wide steps 1. We need est, lb, and ub in long form first, so we need to use a wide-to-long (pivot_longer) transpose operation. - names_to = “measure” - values_to = “value” - BY variables: Country, year, group - pivot variables (VAR in SAS): est, lb, ub We need group to be 3 columns: Both, Male, and Female. So we need to use a long-to-wide (pivot_wider) transpose operation. By variables: Country, year, measure (so we’ll need to sort in SAS) ID variable: group VAR variable: value The intermediate form of the data will look like this: Country year group measure value Afghanistan 2018 Both est 0.02 Afghanistan 2018 Both lb 0.01 Afghanistan 2018 Both ub 0.04 Afghanistan 2018 Male est 0.03 WHO HIV Data: long-to-wide in R hiv_tidy %&gt;% pivot_longer(est:ub, names_to = &quot;measure&quot;, values_to = &quot;value&quot;) %&gt;% # Take the opportunity to transform everything to numeric at once... mutate(value = parse_number(value)) %&gt;% pivot_wider(names_from = group, values_from = value) # A tibble: 14,790 x 6 Country year measure Both Male Female &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Afghanistan 2018 est 0.02 0.03 0.01 2 Afghanistan 2018 lb 0.01 0.02 0.01 3 Afghanistan 2018 ub 0.04 0.06 0.03 4 Afghanistan 2017 est 0.02 0.03 0.01 5 Afghanistan 2017 lb 0.01 0.02 0.01 6 Afghanistan 2017 ub 0.04 0.06 0.03 7 Afghanistan 2016 est 0.02 0.03 0.01 8 Afghanistan 2016 lb 0.01 0.02 0.01 9 Afghanistan 2016 ub 0.04 0.06 0.02 10 Afghanistan 2015 est 0.02 0.03 0.01 # … with 14,780 more rows WHO HIV Data: long-to-wide in SAS In SAS, we can do the pivot operations in one step, but we have to sort everything first. libname classdat &quot;sas/&quot;; PROC SORT DATA = classdat.hivtidy; BY Country year group; RUN; PROC TRANSPOSE DATA = classdat.hivtidy OUT = hivtmp name = measure; BY Country year; VAR est lb ub; ID group; RUN; PROC PRINT data=hivtmp(obs=5); RUN; Obs Country year measure Both Female Male 1 Afghanistan 1990 est .009999998 .009999998 .009999998 2 Afghanistan 1990 lb . . . 3 Afghanistan 1990 ub . . . 4 Afghanistan 1991 est .009999998 .009999998 .009999998 5 Afghanistan 1991 lb . . . Try it out Use the long-format data you have from the previous Try It Out section (WHO Disease Incidence). Reshape this data into a “wide” format such that each disease is shown in a separate column. Before you start: - Which variable(s) will uniquely identify a row in your output data? - Which variable(s) will be used to create column names? Can you create a plot of polio cases over time for your 3 favorite countries? R solution who_disease_wide &lt;- who_disease_long %&gt;% pivot_wider(id_cols = c(Country, year), names_from = Disease, values_from = cases) who_disease_wide %&gt;% filter(Country %in% c(&quot;Guatemala&quot;, &quot;Central African Republic (the)&quot;, &quot;Pakistan&quot;)) %&gt;% select(Country, year, polio) %&gt;% ggplot(aes(x = year, y = polio, color = Country)) + geom_line() SAS solution libname classdat &quot;sas/&quot;; PROC SORT DATA = classdat.disease_long OUT = dis_long; BY Cname year; /* Variables we want to define rows of data */ RUN; PROC TRANSPOSE DATA = dis_long OUT = classdat.disease_wide; ID Disease; /* Variable we want to name columns of data */ VAR cases; /* Variable we want to be the values in each column */ BY Cname year; /* These define a single row */ RUN; title &#39;Polio incidence&#39;; PROC SGPLOT DATA=classdat.disease_wide /* We can use a where clause in the DATA statement, if we want */ (WHERE=(Cname in (&quot;Mexico&quot;, &quot;Guatemala&quot;, &quot;Pakistan&quot;))); /* Specify the colors to use for lines */ styleattrs datacontrastcolors= (green orange purple); /* Map variables to axes */ SERIES X = year Y = polio / /* Color lines by Country */ GROUP = Cname /* Give the color mapping a name so you can modify its legend */ name = &quot;a&quot; /* Make lines thicker so they&#39;re visible */ lineattrs=(thickness = 3); /* Change the legend title and what it is showing (line color) */ KEYLEGEND &quot;a&quot; / title = &quot;Country&quot; type = linecolor; RUN; Congratulations! You now know how to reshape your data into all sorts of different formats. Use this knowledge wisely. 6.4 Relational Data and Joining Tables We now know how to work extensively on one table at a time, but data doesn’t always come organized in one table at a time. Instead, some data may be organized relationally - that is, certain aspects of the data apply to a group of data points, and certain aspects apply to individual data points, and there are relationships between individuals that have to be documented. Example: Primary School Organization Each individual has certain characteristics: - full_name - gender - birth date - ID number Each student has specific characteristics: - ID number - parent name - parent phone number - medical information - Class ID Teachers may also have additional information: - ID number - Class ID - employment start date - education level - compensation level There are also fields like grades, which occur for each student in each class, but multiple times a year. - ID number - Student ID - Class ID - year - term number - subject - grade - comment And for teachers, there are employment records on a yearly basis - ID number - Employee ID - year - rating - comment But each class also has characteristics that describe the whole class as a unit: - location ID - class ID - meeting time - grade level Each location might also have some logistical information attached: - location ID - room number - building - number of seats - AV equipment We could go on, but you can see that this data is hierarchical, but also relational: - each class has both a teacher and a set of students - each class is held in a specific location that has certain equipment It would be silly to store this information in a single table (though it probably can be done) because all of the teacher information would be duplicated for each student in each class; all of the student’s individual info would be duplicated for each grade. There would be a lot of wasted storage space and the tables would be much more confusing as well. But, relational data also means we have to put in some work when we have a question that requires information from multiple tables. Suppose we want a list of all of the birthdays in a certain class. We would need to take the following steps: get the Class ID get any teachers that are assigned that Class ID - specifically, get their ID number get any students that are assigned that Class ID - specifically, get their ID number append the results from teachers and students so that there is a list of all individuals in the class look through the “individual data” table to find any individuals with matching ID numbers, and keep those individuals’ birth days. Table joins allow us to combine information stored in different tables, keeping certain information (the stuff we need) while discarding extraneous information. There are 3 main types of table joins: Filtering joins, which remove rows from a table based on whether or not there is a matching row in another table (but the columns in the original table don’t change) Ex: finding all teachers or students who have class ClassID Set operations, which treat observations as set elements (e.g. union, intersection, etc.) Ex: taking the union of all student and teacher IDs to get a list of individual IDs Mutating joins, which add columns from one table to matching rows in another table Ex: adding birthday to the table of all individuals in a class keys are values that are found in multiple tables that can be used to connect the tables. A key (or set of keys) uniquely identify an observation. A primary key identifies an observation in its own table. A foreign key identifies an observation in another table. We’re primarily going to focus on mutating joins, as filtering joins can be accomplished by … filtering … rather than by table joins. Feel free to read through the other types of joins here 6.4.1 Demonstration dataset setup We’ll use the nycflights13 package in R. Unfortunately, the data in this package are too big for me to reasonably store on github (you’ll recall, I had to use a small sample the last time we played with this data…). So before we can work with this data, we have to load the tables into SAS, which means saving them out from R. Instructions We’ll use a function in the dbplyr package to do that.25 if (!&quot;nycflights13&quot; %in% installed.packages()) install.packages(&quot;nycflights13&quot;) if (!&quot;dbplyr&quot; %in% installed.packages()) install.packages(&quot;dbplyr&quot;) library(nycflights13) library(dbplyr) nycflights13_sqlite(path = &quot;data/&quot;) Caching nycflights db at data//nycflights13.sqlite Warning: `src_sqlite()` is deprecated as of dplyr 1.0.0. Please use `tbl()` directly with a database connection This warning is displayed once every 8 hours. Call `lifecycle::last_warnings()` to see where this warning was generated. src: sqlite 3.30.1 [/home/susan/Projects/Class/unl-stat850/stat850-textbook/data/nycflights13.sqlite] tbls: airlines, airports, flights, planes, sqlite_stat1, sqlite_stat4, weather Then, you’ll have to figure out where on your system database locations (DSNs) are stored. On Unix systems, it’s /etc/odbc.ini (for system-wide access) and ~/.odbc.ini. On windows, you’ll need to use the ODBC Data Source Administrator to set this up. [nycflight] Description = NYC flights database Driver = SQLite3 Database = data/nycflights13.sqlite Flights table Obs year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay carrier flight tailnum origin dest air_time distance hour minute time_hour 1 2013 1 1 517 515 2 830 819 11 UA 1545 N14228 EWR IAH 227 1400 5 15 1357034400 2 2013 1 1 533 529 4 850 830 20 UA 1714 N24211 LGA IAH 227 1416 5 29 1357034400 3 2013 1 1 542 540 2 923 850 33 AA 1141 N619AA JFK MIA 160 1089 5 40 1357034400 Airlines table Obs carrier name 1 9E Endeavor Air Inc. 2 AA American Airlines Inc. 3 AS Alaska Airlines Inc. Airports table Obs faa name lat lon alt tz dst tzone 1 04G Lansdowne Airport 41.1305 -80.6196 1044 -5 A America/New_York 2 06A Moton Field Municipal Airport 32.4606 -85.6800 264 -6 A America/Chicago 3 06C Schaumburg Regional 41.9893 -88.1012 801 -6 A America/Chicago Planes table Obs tailnum year type manufacturer model engines seats speed engine 1 N10156 2004 Fixed wing multi engine EMBRAER EMB-145XR 2 55 . Turbo-fan 2 N102UW 1998 Fixed wing multi engine AIRBUS INDUSTRIE A320-214 2 182 . Turbo-fan 3 N103US 1999 Fixed wing multi engine AIRBUS INDUSTRIE A320-214 2 182 . Turbo-fan Weather table Obs origin year month day hour temp dewp humid wind_dir wind_speed wind_gust precip pressure visib time_hour 1 EWR 2013 1 1 1 39.02 26.06 59.37 270 10.3570 . 0 1012.0 10 1357020000 2 EWR 2013 1 1 2 39.02 26.96 61.63 250 8.0555 . 0 1012.3 10 1357023600 3 EWR 2013 1 1 3 39.02 28.04 64.43 240 11.5078 . 0 1012.5 10 1357027200 Try it out Sketch a diagram of which fields in each table match fields in other tables. You can find the solution here (scroll down a bit). 6.4.2 Mutating joins A mutating join combines variables in two tables. There are excellent visual representations of the types of mutating joins here. Every join has a “left side” and a “right side” - so in some_join(A, B), A is the left side, B is the right side. Joins are differentiated based on how they treat the rows and columns of each side. In mutating joins, the columns from both sides are always kept. Left Side Right Side Join Type Rows Cols Rows Cols inner matching all matching all left all all matching all right matching all all all outer all all all all Mutating joins in R t1 &lt;- tibble(x = c(&quot;A&quot;, &quot;B&quot;, &quot;D&quot;), y = c(1, 2, 3)) t2 &lt;- tibble(x = c(&quot;B&quot;, &quot;C&quot;, &quot;D&quot;), z = c(2, 4, 5)) An inner join keeps only rows that exist on both sides, but keeps all columns. inner_join(t1, t2) Joining, by = &quot;x&quot; # A tibble: 2 x 3 x y z &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 B 2 2 2 D 3 5 A left join keeps all of the rows in the left side, and adds any columns from the right side that match rows on the left. Rows on the left that don’t match get filled in with NAs. left_join(t1, t2) Joining, by = &quot;x&quot; # A tibble: 3 x 3 x y z &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 A 1 NA 2 B 2 2 3 D 3 5 left_join(t2, t1) Joining, by = &quot;x&quot; # A tibble: 3 x 3 x z y &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 B 2 2 2 C 4 NA 3 D 5 3 There is a similar construct called a right join that is equivalent to flipping the arguments in a left join. The row and column ordering may be different, but all of the same values will be there right_join(t1, t2) Joining, by = &quot;x&quot; # A tibble: 3 x 3 x y z &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 B 2 2 2 D 3 5 3 C NA 4 right_join(t2, t1) Joining, by = &quot;x&quot; # A tibble: 3 x 3 x z y &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 B 2 2 2 D 5 3 3 A NA 1 An outer join keeps everything - all rows, all columns. In dplyr, it’s known as a full_join. full_join(t1, t2) Joining, by = &quot;x&quot; # A tibble: 4 x 3 x y z &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 A 1 NA 2 B 2 2 3 D 3 5 4 C NA 4 In SAS, you can do joins using a data step or PROC SQL. To do a join with data steps, you have to have your data sorted by columns that overlap. PROC SQL has no such requirement. This guide shows the syntax for PROC SQL and DATA step joins side-by-side. PROC SQL Mutating joins data t1; input x $ y; datalines; A 1 B 2 D 3 ; data t2; input x $ z; datalines; B 2 C 4 D 5 ; title &#39;Inner join&#39;; PROC SQL; SELECT * FROM t1 as p1 INNER JOIN t2 as p2 ON p1.x = p2.x; title &#39;Left join&#39;; PROC SQL; SELECT * FROM t1 as p1 LEFT JOIN t2 as p2 ON p1.x = p2.x; title &#39;Right join&#39;; PROC SQL; SELECT * FROM t1 as p1 RIGHT JOIN t2 as p2 ON p1.x = p2.x; title &#39;Full Outer join&#39;; PROC SQL; SELECT * FROM t1 as p1 FULL OUTER JOIN t2 as p2 ON p1.x = p2.x; /* Use coalesce to prevent column duplication */ title &#39;Inner join&#39;; PROC SQL; SELECT COALESCE(p1.x, p2.x) AS x, y, z FROM t1 as p1 INNER JOIN t2 as p2 on p1.x = p2.x; title &#39;Left join&#39;; PROC SQL; SELECT COALESCE(p1.x, p2.x) AS x, y, z FROM t1 as p1 LEFT JOIN t2 as p2 ON p1.x = p2.x; title &#39;Right join&#39;; PROC SQL; SELECT COALESCE(p1.x, p2.x) AS x, y, z FROM t1 as p1 RIGHT JOIN t2 as p2 ON p1.x = p2.x; title &#39;Full Outer join&#39;; PROC SQL; SELECT COALESCE(p1.x, p2.x) AS x, y, z FROM t1 as p1 FULL OUTER JOIN t2 as p2 ON p1.x = p2.x; title; Inner join x y x z B 2 B 2 D 3 D 5 Left join x y x z A 1 . B 2 B 2 D 3 D 5 Right join x y x z B 2 B 2 . C 4 D 3 D 5 Full Outer join x y x z A 1 . B 2 B 2 . C 4 D 3 D 5 Inner join x y z B 2 2 D 3 5 Left join x y z A 1 . B 2 2 D 3 5 Right join x y z B 2 2 C . 4 D 3 5 Full Outer join x y z A 1 . B 2 2 C . 4 D 3 5 Data Step Mutating joins data t1; input x $ y; datalines; A 1 B 2 D 3 ; data t2; input x $ z; datalines; B 2 C 4 D 5 ; DATA inner; MERGE t1 (IN = p1) t2 (IN = p2); BY x; IF p1 AND p2; RUN; PROC PRINT DATA=inner;RUN; DATA left; MERGE t1 (IN = p1) t2 (IN = p2); BY x; IF p1; RUN; PROC PRINT DATA=left;RUN; DATA right; MERGE t1 (IN = p1) t2 (IN = p2); BY x; IF p2; RUN; PROC PRINT DATA=right;RUN; DATA outer; MERGE t1 (IN = p1) t2 (IN = p2); BY x; RUN; PROC PRINT DATA=outer;RUN; Obs x y z 1 B 2 2 2 D 3 5 Obs x y z 1 A 1 . 2 B 2 2 3 D 3 5 Obs x y z 1 B 2 2 2 C . 4 3 D 3 5 Obs x y z 1 A 1 . 2 B 2 2 3 C . 4 4 D 3 5 As before, these functions may become a bit more interesting once we try them out on real-world data. Using the flights data, let’s determine whether there’s a relationship between the age of a plane and its delays. In R library(nycflights13) plane_age &lt;- planes %&gt;% mutate(age = 2013 - year) %&gt;% # This gets us away from having to deal with 2 different year columns select(tailnum, age, manufacturer) delays_by_plane &lt;- flights %&gt;% select(dep_delay, arr_delay, carrier, flight, tailnum) # We only need to keep delays that have a plane age, so use inner join res &lt;- inner_join(delays_by_plane, plane_age, by = &quot;tailnum&quot;) ggplot(res, aes(x = age, y = dep_delay, group = cut_width(age, 1, center = 0))) + geom_boxplot() + ylab(&quot;Departure Delay (min)&quot;) + xlab(&quot;Plane age&quot;) + coord_cartesian(ylim = c(-20, 50)) Warning: Removed 5306 rows containing missing values (stat_boxplot). Warning: Removed 4068 rows containing non-finite values (stat_boxplot). ggplot(res, aes(x = age, y = arr_delay, group = cut_width(age, 1, center = 0))) + geom_boxplot() + ylab(&quot;Arrival Delay (min)&quot;) + xlab(&quot;Plane age&quot;) + coord_cartesian(ylim = c(-30, 60)) Warning: Removed 5306 rows containing missing values (stat_boxplot). Warning: Removed 5011 rows containing non-finite values (stat_boxplot). It doesn’t look like there’s much of a relationship to me. If anything, older planes are more likely to be early, but I suspect there aren’t enough of them to make that conclusion (3.54% are over 25 years old, and 0.28% are over 40 years old). In SAS libname nycair odbc complete = &quot;dsn=nycflight; Database=data/nycflights13.sqlite&quot;; PROC SQL; CREATE TABLE tmp1 AS SELECT 2013 - year AS age, tailnum FROM nycair.planes WHERE ^missing(year); CREATE TABLE tmp2 AS SELECT tailnum, dep_delay, arr_delay, air_time, distance, hour, carrier, origin FROM nycair.flights; Now that the prep work is done, we can get on with answering the question. PROC SQL; CREATE TABLE agedelay AS SELECT COALESCE(p1.tailnum, p2.tailnum) AS tailnum, age, dep_delay, arr_delay, air_time, distance, hour, carrier, origin FROM tmp1 as p1 INNER JOIN tmp2 as p2 ON p1.tailnum = p2.tailnum WHERE age &lt; 25 /* only work with areas where there&#39;s enough data */ ORDER BY age; PROC MEANS DATA = agedelay NOPRINT; BY age; VAR dep_delay arr_delay; OUTPUT OUT = agemeans; RUN; PROC TRANSPOSE DATA = agemeans(where = (_STAT_=&quot;MEAN&quot;)) OUT = agemeanst(drop= _Label_) name=VAR; BY age _FREQ_; /* Just to keep _FREQ_ around */ VAR dep_delay arr_delay; ID _STAT_; RUN; In theory, we could use some sort of linear model, but lets start with a simple plot of age * average delay and see where that takes us. PROC SGPANEL DATA = agemeanst; PANELBY VAR; SCATTER X = age Y = MEAN; RUN; I started wondering about that pattern - to me, it doesn’t look like there’s any particular trend so much as there’s just low - high - low clusters. So I decided to plot frequency as well, and, lo and behold, the frequency count is similarly distributed. So my current working hypothesis is that there are a lot more observations in the middle group of planes that are 5-15 years old. PROC SGPLOT DATA = agemeanst; SCATTER X = age Y = _FREQ_; RUN; It’s also entirely possible that planes between 5-15 years of age have more mechanical issues, but I suspect most delays are due to airport, weather, etc. rather than mechanical malfunctions. References String manipulation R4DS chapter - strings SAS and Perl regular expressions PCRE tester R regex tester - has a short timeout period and will disconnect you if you’re idle too long. But you can also clone the repo here and run it locally. SAS scan statement Tidy data tutorials/references Tidy Data - Data Skills for Reproducible Science Five Ways to Flip-Flop Your Data PROC TRANSPOSE reference tidyr reference Relational Data &amp; Joins: R4DS chapter - Relational data Merge statement in SAS 5 little known, but highly valuable and widely useful PROC SQL Programming Techniques Other references SAS rename statement SAS graph customization SAS SGPLOT procedure Data Visualization with ggplot R graph gallery Videos of analysis of new data from Tidy Tuesday - may include use of other packages, but almost definitely includes use of tidyr/dplyr as well. Incidentally, dbplyr is basically dplyr for databases, and is worth checking out, even if we aren’t covering it in this class.↩ "],
["debugging.html", "Module 7 Principles of Debugging Module Objectives 7.1 Step 1: Check your spelling. 7.2 Defensive Programming 7.3 General Debugging Strategies 7.4 Debugging Tools in R 7.5 Debugging Tools in SAS 7.6 Minimal Working Examples References", " Module 7 Principles of Debugging Module Objectives Break down a complex procedure into simpler steps, mapping each step to a separate function which performs a single task. Simplify a problem to the minimal components necessary to reproduce the error, and use that information to ask for help appropriately. Use built-in debugging tools to trace an error to its source Use online forums and mailing lists to research error messages Note: The skills in this chapter take a lifetime to truly master. The real goal here is that you know how to ask for help appropriately (and in a way that people will respond positively to) and that you know how to do the research to get help yourself. “It has a ghost in it. Take it back.” “No.” (xkcd #1316) 7.1 Step 1: Check your spelling. I’ll guess that 80% of my personal debugging comes down to spelling errors and misplaced punctuation. 7.2 Defensive Programming One of the best debugging strategies (that isn’t a debugging strategy at all, really) is to code defensively. By that, I mean, code in a way that you will make debugging things easier later. Modularize your code. Each function should do only one task, ideally in the least-complex way possible. Make your code readable. If you can read the code easily, you’ll be able to narrow down the location of the bug more quickly. Comment your code. This makes it more likely that you will be able to locate the spot where the bug is likely to have occurred, and will remind you how things are calculated. Remember, comments aren’t just for your collaborators or others who see the code. They’re for future you. Don’t duplicate code. If you have the same code (or essentially the same code) in two or three different places, put that code in a function and call the function instead. This will save you trouble when updating the code in the future, but also makes narrowing down the source of the bug less complex. Reduce the number of dependencies you have on outside software packages. Often bugs are introduced when a dependency is updated and the functionality changes slightly. The tidyverse is notorious for this. It’s ok to write code using lots of dependencies, but as you transition from “experimental” code to “production” code (you’re using the code without tinkering with it) you should work to reduce the dependencies, where possible. In addition, if you do need packages with lots of dependencies, try to make sure those packages are relatively popular, used by a lot of people, and currently maintained. (The tidyverse is a bit better from this perspective, because the constitutent packages are some of the most installed R packages on CRAN.) Add safeguards against unexpected inputs. Check to make sure inputs to the function are valid. Check to make sure intermediate results are reasonable (e.g. you don’t compute the derivative of a function and come up with “a”.) Don’t reinvent the wheel. If you have working, tested code for a task, use that! If someone else has working code that’s used by the community, don’t write your own unless you have a very good reason. The implementation of lm has been better tested than your homegrown linear regression. (This is easier if you’re writing modular code to begin with) Collect your often-reused code in packages (R) or scripts (SAS) that you can easily load and make available to “future you” Wikipedia’s article on defensive programming is much more general than the applications to statistical programming, but may be worth scanning. 7.3 General Debugging Strategies Debugging: Being the detective in a crime movie where you are also the murderer. - some t-shirt I saw once While defensive programming is a nice idea, if you’re already at the point where you have an error you can’t diagnose, then… it doesn’t help that much. At that point, you’ll need some general debugging strategies to work with. The overall process is well described in Advanced R by H. Wickham26; I’ve copied it here because it’s such a succinct distillation of the process, but I’ve adapted some of the explanations to this class rather than the original c ontext of package development. Realize that you have a bug Google! In R you can automate this with the errorist and searcher packages. In SAS, if the error message isn’t that clear you’ll find a SAS forum page where someone else has made the same mistake - I can almost guarantee it. Make the error repeatable: This makes it easier to figure out what the error is, faster to iterate, and easier to ask for help. Use binary search (remove 1/2 of the code, see if the error occurs, if not go to the other 1/2 of the code. Repeat until you’ve isolated the error.) Generate the error faster - use a minimal test dataset, if possible, so that you can ask for help easily and run code faster. This is worth the investment if you’ve been debugging the same error for a while. Note which inputs don’t generate the bug – this negative “data” is helpful when asking for help. Figure out where it is. Debuggers may help with this, but you can also use the scientific method to explore the code, or the tried-and-true method of using lots of print() statements. Fix it and test it. The goal with tests is to ensure that the same error doesn’t pop back up in a future version of your code. Generate an example that will test for the error, and add it to your documentation. If you’re developing a package, unit test suites offer a more formalized way to test errors and you can automate your testing so that every time your code is changed, tests are run and checked. There are several other general strategies for debugging: Visualize your data as it moves through the program. This may be done using print() statements, or the debugger, or some other strategy depending on your application. Tracing statements. Again, this is part of print() debugging, but these messages indicate progress - “got into function x”, “returning from function y”, and so on. Rubber ducking. Have you ever tried to explain a problem you’re having to someone else, only to have a moment of insight and “oh, nevermind”? Rubber ducking outsources the problem to a nonjudgemental entity, such as a rubber duck27. You simply explain, in terms simple enough for your rubber duck to understand, exactly what your code does, line by line, until you’ve found the problem. A more thorough explanation can be found at gitduck.com. Figure 7.1: You may find it helpful to procure a rubber duck expert for each language you work in. I use color-your-own rubber ducks to endow my ducks with certain language expertise. Other people use plain rubber ducks and give them capes. Do not be surprised if, in the process of debugging, you encounter new bugs. This is a problem that’s well-known enough that it has its own t-shirt, in addition to an xkcd comic. At some point, getting up and going for a walk may help. Redesigning your code to be more modular and more organized is also a good idea. 7.4 Debugging Tools in R Now that we’ve discussed general strategies for debugging that will work in any language, lets get down to the dirty details of debugging in R. 7.4.1 Low tech debugging with print() and other tools Sometimes called “tracing” techniques, the most common, universal, and low tech strategy for debugging involves scattering messages throughout your code. When the code is executed, you get a window into what the variables look like during execution. Simple example Imagine we start with this: a &lt;- function(x) { b &lt;- function(y) { c &lt;- function(z) { z + y } c(3) } x + b(4) } a(5) [1] 12 and the goal is to understand what’s happening in the code. We might add some lines: a &lt;- function(x) { print(paste(&quot;Entering a(). x = &quot;, x)) b &lt;- function(y) { print(paste(&quot;Entering b(). x = &quot;, x, &quot;y = &quot;, y)) c &lt;- function(z) { print(paste(&quot;Entering c(). x = &quot;, x, &quot;y = &quot;, y, &quot;z = &quot;, z)) cres &lt;- z + y print(paste(&quot;Returning&quot;, cres, &quot;from c()&quot;)) cres } bres &lt;- c(3) print(paste(&quot;Returning&quot;, bres, &quot;from b()&quot;)) bres } ares &lt;- x + b(4) print(paste(&quot;Returning&quot;,ares, &quot;from a()&quot;)) ares } a(5) [1] &quot;Entering a(). x = 5&quot; [1] &quot;Entering b(). x = 5 y = 4&quot; [1] &quot;Entering c(). x = 5 y = 4 z = 3&quot; [1] &quot;Returning 7 from c()&quot; [1] &quot;Returning 7 from b()&quot; [1] &quot;Returning 12 from a()&quot; [1] 12 For more complex data structures, it can be useful to add str(), head(), or summary() functions. Real world example I was recently writing a webscraper to get election polling data from the RealClearPolitics site as part of the electionViz package. I wrote the function search_for_parent() to get the parent HTML tag which matched the “tag” argument, that had the “node” argument as a descendant. I was assuming that the order of the parents would be “html”, “body”, “div”, “table”, “tbody”, “tr” - descending from outer to inner (if you know anything about HTML/XML structure). library(xml2) # read html search_for_parent &lt;- function(node, tag) { # Get all of the parent nodes parents &lt;- xml2::xml_parents(node) # Get the tags of every parent node tags &lt;- purrr::map_chr(parents, rvest::html_name) print(tags) # Find matching taggs matches &lt;- which(tags == tag) print(matches) # Take the minimum matching tag min_match &lt;- min(matches) if (length(matches) == 1) return(parents[min_match]) else return(NULL) } page &lt;- read_html(&quot;data/realclearpolitics_frag.html&quot;) node &lt;- xml_find_all(page, &quot;//td[@class=&#39;lp-results&#39;]&quot;) # find all poll results in any table search_for_parent(node[1], &quot;table&quot;) # find the table that contains it [1] &quot;tr&quot; &quot;tbody&quot; &quot;table&quot; &quot;div&quot; &quot;body&quot; &quot;html&quot; [1] 3 {xml_nodeset (1)} [1] &lt;table cellpadding=&quot;2&quot; cellspacing=&quot;0&quot; class=&quot;sortable&quot;&gt;\\n&lt;thead&gt;&lt;tr clas ... By printing out all of the tags that contain node, I could see the order – inner to outer. I asked the function to return the location of the first table node, so the index (2nd value printed out) should match table in the character vector that was printed out first. I could then see that the HTML node that is returned is in fact the table node. Try it out Not all bugs result in error messages, unfortunately, which makes higher-level techniques like traceback() less useful. The low-tech debugging tools, however, still work wonderfully. library(ggplot2) library(dplyr) library(magrittr) library(maps) library(ggthemes) worldmap &lt;- map_data(&quot;world&quot;) # Load the data data(storms, package = &quot;dplyr&quot;) The code below is supposed to print out a map of the tracks of all hurricanes of a specific category, 1 to 5, in 2013. Use print statements to figure out what’s wrong with my code. # Make base map to be used for each iteration basemap &lt;- ggplot() + # Country shapes geom_polygon(aes(x = long, y = lat, group = group), data = worldmap, fill = &quot;white&quot;, color = &quot;black&quot;) + # Zoom in coord_quickmap(xlim = c(-100, -10), ylim = c(10, 50)) + # Don&#39;t need scales b/c maps provide their own geographic context... theme_map() for (i in 1:5) { # Subset the data subdata &lt;- storms %&gt;% filter(year == 2013) %&gt;% filter(status == i) # Plot the data - path + points to show the observations plot &lt;- basemap + geom_path(aes(x = long, y = lat, color = name), data = subdata) + geom_point(aes(x = long, y = lat, color = name), data = subdata) + ggtitle(paste0(&quot;Category &quot;, i, &quot; storms in 2013&quot;)) print(plot) } Solution First, lets split the setup from the loop. # Make base map to be used for each iteration basemap &lt;- ggplot() + # Country shapes geom_polygon(aes(x = long, y = lat, group = group), data = worldmap, fill = &quot;white&quot;, color = &quot;black&quot;) + # Zoom in coord_quickmap(xlim = c(-100, -10), ylim = c(10, 50)) + # Don&#39;t need scales b/c maps provide their own geographic context... theme_map() print(basemap) # make sure the basemap is fine # Load the data data(storms, package = &quot;dplyr&quot;) str(storms) # make sure the data exists and is formatted as expected tibble [10,010 × 13] (S3: tbl_df/tbl/data.frame) $ name : chr [1:10010] &quot;Amy&quot; &quot;Amy&quot; &quot;Amy&quot; &quot;Amy&quot; ... $ year : num [1:10010] 1975 1975 1975 1975 1975 ... $ month : num [1:10010] 6 6 6 6 6 6 6 6 6 6 ... $ day : int [1:10010] 27 27 27 27 28 28 28 28 29 29 ... $ hour : num [1:10010] 0 6 12 18 0 6 12 18 0 6 ... $ lat : num [1:10010] 27.5 28.5 29.5 30.5 31.5 32.4 33.3 34 34.4 34 ... $ long : num [1:10010] -79 -79 -79 -79 -78.8 -78.7 -78 -77 -75.8 -74.8 ... $ status : chr [1:10010] &quot;tropical depression&quot; &quot;tropical depression&quot; &quot;tropical depression&quot; &quot;tropical depression&quot; ... $ category : Ord.factor w/ 7 levels &quot;-1&quot;&lt;&quot;0&quot;&lt;&quot;1&quot;&lt;&quot;2&quot;&lt;..: 1 1 1 1 1 1 1 1 2 2 ... $ wind : int [1:10010] 25 25 25 25 25 25 25 30 35 40 ... $ pressure : int [1:10010] 1013 1013 1013 1013 1012 1012 1011 1006 1004 1002 ... $ ts_diameter: num [1:10010] NA NA NA NA NA NA NA NA NA NA ... $ hu_diameter: num [1:10010] NA NA NA NA NA NA NA NA NA NA ... Everything looks ok in the setup chunk… for (i in 1:5) { print(paste0(&quot;Category &quot;, i, &quot; storms&quot;)) # Subset the data subdata &lt;- storms %&gt;% filter(year == 2013) %&gt;% filter(status == i) print(paste0(&quot;subdata dims: nrow &quot;, nrow(subdata), &quot; ncol &quot;, ncol(subdata))) # str(subdata) works too, but produces more clutter. I started # with str() and moved to dim() when I saw the problem # Plot the data - path + points to show the observations plot &lt;- basemap + geom_path(aes(x = long, y = lat, color = name), data = subdata) + geom_point(aes(x = long, y = lat, color = name), data = subdata) + ggtitle(paste0(&quot;Category &quot;, i, &quot; storms in 2013&quot;)) # print(plot) # Don&#39;t print plots - clutters up output at the moment } [1] &quot;Category 1 storms&quot; [1] &quot;subdata dims: nrow 0 ncol 13&quot; [1] &quot;Category 2 storms&quot; [1] &quot;subdata dims: nrow 0 ncol 13&quot; [1] &quot;Category 3 storms&quot; [1] &quot;subdata dims: nrow 0 ncol 13&quot; [1] &quot;Category 4 storms&quot; [1] &quot;subdata dims: nrow 0 ncol 13&quot; [1] &quot;Category 5 storms&quot; [1] &quot;subdata dims: nrow 0 ncol 13&quot; Ok, so from this we can see that something is going wrong with our filter statement - we have no rows of data. head(storms) # A tibble: 6 x 13 name year month day hour lat long status category wind pressure &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;ord&gt; &lt;int&gt; &lt;int&gt; 1 Amy 1975 6 27 0 27.5 -79 tropi… -1 25 1013 2 Amy 1975 6 27 6 28.5 -79 tropi… -1 25 1013 3 Amy 1975 6 27 12 29.5 -79 tropi… -1 25 1013 4 Amy 1975 6 27 18 30.5 -79 tropi… -1 25 1013 5 Amy 1975 6 28 0 31.5 -78.8 tropi… -1 25 1012 6 Amy 1975 6 28 6 32.4 -78.7 tropi… -1 25 1012 # … with 2 more variables: ts_diameter &lt;dbl&gt;, hu_diameter &lt;dbl&gt; Whoops. I meant “category” when I typed “status”. for (i in 1:5) { print(paste0(&quot;Category &quot;, i, &quot; storms&quot;)) # Subset the data subdata &lt;- storms %&gt;% filter(year == 2013) %&gt;% filter(category == i) print(paste0(&quot;subdata dims: nrow &quot;, nrow(subdata), &quot; ncol &quot;, ncol(subdata))) # str(subdata) works too, but produces more clutter. I started # with str() and moved to dim() when I saw the problem # Plot the data - path + points to show the observations plot &lt;- basemap + geom_path(aes(x = long, y = lat, color = name), data = subdata) + geom_point(aes(x = long, y = lat, color = name), data = subdata) + ggtitle(paste0(&quot;Category &quot;, i, &quot; storms in 2013&quot;)) # print(plot) # Don&#39;t print plots - clutters up output at the moment } [1] &quot;Category 1 storms&quot; [1] &quot;subdata dims: nrow 13 ncol 13&quot; [1] &quot;Category 2 storms&quot; [1] &quot;subdata dims: nrow 0 ncol 13&quot; [1] &quot;Category 3 storms&quot; [1] &quot;subdata dims: nrow 0 ncol 13&quot; [1] &quot;Category 4 storms&quot; [1] &quot;subdata dims: nrow 0 ncol 13&quot; [1] &quot;Category 5 storms&quot; [1] &quot;subdata dims: nrow 0 ncol 13&quot; Ok, that’s something, at least. We now have some data for category 1 storms… filter(storms, year == 2013) %&gt;% # Get max category for each named storm group_by(name) %&gt;% filter(category == max(category)) %&gt;% ungroup() %&gt;% # See what categories exist select(name, category) %&gt;% unique() # A tibble: 14 x 2 name category &lt;chr&gt; &lt;ord&gt; 1 Andrea 0 2 Barry 0 3 Chantal 0 4 Dorian 0 5 Erin 0 6 Fernand 0 7 Gabrielle 0 8 Eight -1 9 Humberto 1 10 Ingrid 1 11 Jerry 0 12 Karen 0 13 Lorenzo 0 14 Melissa 0 It looks like 2013 was just an incredibly quiet year for tropical activity. 2004, however, was not. So let’s just make sure our code works by checking out 2004. for (i in 1:5) { print(paste0(&quot;Category &quot;, i, &quot; storms&quot;)) # Subset the data subdata &lt;- storms %&gt;% filter(year == 2004) %&gt;% filter(category == i) print(paste0(&quot;subdata dims: nrow &quot;, nrow(subdata), &quot; ncol &quot;, ncol(subdata))) # str(subdata) works too, but produces more clutter. I started # with str() and moved to dim() when I saw the problem # Plot the data - path + points to show the observations plot &lt;- basemap + geom_path(aes(x = long, y = lat, color = name), data = subdata) + geom_point(aes(x = long, y = lat, color = name), data = subdata) + ggtitle(paste0(&quot;Category &quot;, i, &quot; storms in 2013&quot;)) print(plot) # Don&#39;t print plots - clutters up output at the moment } [1] &quot;Category 1 storms&quot; [1] &quot;subdata dims: nrow 45 ncol 13&quot; [1] &quot;Category 2 storms&quot; [1] &quot;subdata dims: nrow 39 ncol 13&quot; [1] &quot;Category 3 storms&quot; [1] &quot;subdata dims: nrow 29 ncol 13&quot; [1] &quot;Category 4 storms&quot; [1] &quot;subdata dims: nrow 32 ncol 13&quot; [1] &quot;Category 5 storms&quot; [1] &quot;subdata dims: nrow 12 ncol 13&quot; If we want to only print informative plots, we could add an if statement. Now that the code works, we can also comment out our print() statements (we could delete them, too, depending on whether we anticipate future problems with the code). for (i in 1:5) { # print(paste0(&quot;Category &quot;, i, &quot; storms&quot;)) # Subset the data subdata &lt;- storms %&gt;% filter(year == 2013) %&gt;% filter(category == i) # print(paste0(&quot;subdata dims: nrow &quot;, nrow(subdata), &quot; ncol &quot;, ncol(subdata))) # # str(subdata) works too, but produces more clutter. I started # # with str() and moved to dim() when I saw the problem # Plot the data - path + points to show the observations plot &lt;- basemap + geom_path(aes(x = long, y = lat, color = name), data = subdata) + geom_point(aes(x = long, y = lat, color = name), data = subdata) + ggtitle(paste0(&quot;Category &quot;, i, &quot; storms in 2013&quot;)) if (nrow(subdata) &gt; 0) print(plot) } 7.4.2 After an error has occurred - traceback() traceback() can help you narrow down where an error occurs by taking you through the series of function calls that led up to the error. This can help, but it can also be pretty arcane. traceback() example a &lt;- function(x) { b &lt;- function(y) { c &lt;- function(z) { stop(&#39;there was a problem&#39;) # This generates an error } c() } b() } a() Error in c(): there was a problem For more information, you could run traceback traceback() Which will provide the following output: 4: stop(&quot;there was a problem&quot;) at #4 3: c() at #6 2: b() at #8 1: a() Reading through this, we see that a() was called, b() was called, c() was called, and then there was an error. It’s even kind enough to tell us that the error occurred at line 4 of the code. If you are running this code interactively in RStudio, it’s even easier to run traceback() by clicking on the “Show Traceback” option that appears when there is an error. Figure 7.2: Both Show Traceback and Rerun with Debug are useful tools If you are using source() to run the code in Rstudio, it will even provide a link to the file and line location of the error. 7.4.3 browser() - debugging your own code, interactively The browser() function is useful for debugging your own code. If you’re writing a function and something isn’t working quite right, you can insert a call to browser() in that function, and examine what’s going on. Example of using browser() Suppose that I want to write a function that will plot an xkcd comic in R. I start with library(png) library(xml2) # get the most current xkcd get_xkcd &lt;- function(id = NULL) { url &lt;- &quot;http://xkcd.com&quot; page &lt;- read_html(url) # Find the comic image &lt;- xml_find_first(page, &quot;//div[@id=&#39;comic&#39;]/img&quot;) %&gt;% # pull the address out of the tag xml_attr(&quot;src&quot;) readPNG(source = image) } Watch this live-coding video to see how I use browser() to figure out what’s going on in the function and how to fix it. Here’s the final function library(png) library(xml2) # get the most current xkcd get_xkcd &lt;- function(id = NULL) { url &lt;- &quot;http://xkcd.com&quot; page &lt;- read_html(url) # Find the comic image &lt;- xml_find_first(page, &quot;//div[@id=&#39;comic&#39;]/img&quot;) %&gt;% # pull the address out of the tag xml_attr(&quot;src&quot;) # Fix image address so that we can access the image image &lt;- substr(image, 3, nchar(image)) # Download the file to a temp file and read from there file_location &lt;- tempfile(fileext = &quot;.png&quot;) download.file(image, destfile = file_location, quiet = T) readPNG(source = file_location) } get_xkcd() %&gt;% as.raster() %&gt;% plot() Try it out Each xkcd has a corresponding ID number (ordered sequentially from 1 to 2328 at the time this was written). Modify the XKCD function above to make use of the id parameter, so that you can pass in an ID number and get the relevant comic. Use browser() to help you figure out what logic you need to add. You should not need to change the web scraping code - the only change should be to the URL. What things might you add to make this function “defensive programming” compatible? Solution # get the most current xkcd or the specified number get_xkcd &lt;- function(id = NULL) { if (is.null(id)) { # Have to get the location of the image ourselves url &lt;- &quot;http://xkcd.com&quot; } else if (is.numeric(id)) { url &lt;- paste0(&quot;http://xkcd.com/&quot;, id, &quot;/&quot;) } else { # only allow numeric or null input stop(&quot;To get current xkcd, pass in NULL, otherwise, pass in a valid comic number&quot;) } page &lt;- read_html(url) # Find the comic image &lt;- xml_find_first(page, &quot;//div[@id=&#39;comic&#39;]/img&quot;) %&gt;% # pull the address out of the tag xml_attr(&quot;src&quot;) # Fix image address so that we can access the image image &lt;- substr(image, 3, nchar(image)) # cut the first 2 characters off # make temp file location &lt;- tempfile(fileext = &quot;png&quot;) download.file(image, destfile = location, quiet = T) # This checks to make sure we saved the file correctly if (file.exists(location)) { readPNG(source = location) } else { # Give a good informative error message stop(paste(&quot;Something went wrong saving the image at &quot;, image, &quot; to &quot;, location)) } } get_xkcd(2259) %&gt;% as.raster() %&gt;% plot() 7.4.4 debug() - the general debugging workhorse In the traceback() Rstudio output, the other option is “rerun with debug”. In short, debug mode opens up a new interactive session inside the function evaluation environment. This lets you observe what’s going on in the function, pinpoint the error (and what causes it), and potentially fix the error, all in one neat workflow. debug() is most useful when you’re working with code that you didn’t write yourself. So, if you can’t change the code in the function causing the error, debug() is the way to go. Otherwise, using browser() is generally easier. Essentially, debug() places a browser() statement at the first line of a function, but without having to actually alter the function’s source code. Example of using debug data(iris) tmp &lt;- lm(Species ~ ., data = iris) Warning in model.response(mf, &quot;numeric&quot;): using type = &quot;numeric&quot; with a factor response will be ignored Warning in Ops.factor(y, z$residuals): &#39;-&#39; not meaningful for factors summary(tmp) Warning in Ops.factor(r, 2): &#39;^&#39; not meaningful for factors Call: lm(formula = Species ~ ., data = iris) Residuals: Error in quantile.default(resid): factors are not allowed We get this weird warning, and then an error about factors when we use summary() to look at the coefficients. debug(lm) # turn debugging on tmp &lt;- lm(Species ~ ., data = iris) summary(tmp) undebug(lm) # turn debugging off) The first thing I see when I run lm after turning on debug (screenshot) The variables passed into the lm function are available as named and used in the function. In addition, we have some handy buttons in the console window that will let us ‘drive’ through the function After pressing “next” a few times, you can see that I’ve stepped through the first few lines of the lm function. We can see that once we’re at line 21, we get a warning about using type with a factor response, and that the warning occurs during a call to the model.response function. So, we’ve narrowed our problem down - we passed in a numeric variable as the response (y) variable, but it’s a factor, so our results aren’t going to mean much. We were using the function wrong. We probably could have gotten there from reading the error message carefully, but this has allowed us to figure out exactly what happened, where it happened, and why it happened. I can hit “Stop” or type “Q” to exit the debug environment. But, until I run undebug(lm), every call to lm will take me into the debug window. undebug(f) will remove the debug flag on the function f. debugonce(f) will only debug f the first time it is run. Try it out larger(x, y) is supposed to return the elementwise maximum of two vectors. larger &lt;- function(x, y) { y.is.bigger &lt;- y &gt; x x[y.is.bigger] &lt;- y[y.is.bigger] x } larger(c(1, 5, 10), c(2, 4, 11)) [1] 2 5 11 larger(c(1, 5, 10), 6) [1] 6 NA 10 Why is there an NA in the second example? It should be a 6. Figure out why this happens, then try to fix it. Solution I’ll replicate “debug” in non-interactive mode by setting up an environment where x and y are defined x &lt;- c(1, 5, 10) y &lt;- 6 # Inside of larger() with x = c(1, 5, 10), y = 6 (y.is.bigger &lt;- y &gt; x ) # putting something in () prints it out [1] TRUE TRUE FALSE y[y.is.bigger] # This isn&#39;t quite what we were going for, but it&#39;s what&#39;s causing the issue [1] 6 NA x[y.is.bigger] # What gets replaced [1] 1 5 # Better option larger &lt;- function(x, y) { y.is.bigger &lt;- y &gt; x ifelse(y.is.bigger, y, x) } 7.5 Debugging Tools in SAS In SAS, there are two stages that occur after you submit lines to the console. - The Compilation Phase: code is parsed. In this step, SAS will catch the logic errors, misspellings, missing key words, etc. - The Execution Phase: program is run. In this step, SAS will catch any wrong assignments, loop issues, etc. Sas recognizes four types of errors: - Syntax errors - violations of the language structure - Semantic errors - structure of the statement is incorrect, but the syntax is correct. e.g. trying to reference an index that doesn’t exist. - Execution-time errors - errors that occur when the compiled function is run on data values – e.g. division by zero - Data errors - errors that occur when statements are correct but data is invalid (taking the log of a negative number, etc.) SAS is built around enterprise users, as opposed to R’s open-source philosophy. SAS code also is more formulaic than R code, which means it is usually easier to figure out what is going wrong with the code. As a result, you may find that errors in your SAS code are much easier to diagnose than errors in your R code. Generally, it will tell you exactly where you are missing a semicolon, or exactly what word it thinks you’ve misspelled (and usually, it tries to correct that for you, but it doesn’t always succeed). In my experience with SAS (which is very limited and mostly contained in this book), SAS error messages are much easier to google and find solutions, right up until you’re working in Linux or some other not-well-supported system and the error is related to how the underlying OS handles some task. As a downside, though, trying to do a task SAS doesn’t think you need to do can be much more difficult than necessary. See the references section for a couple of good guides to SAS error statements and warnings. These guides are likely sufficient for most of your SAS debugging needs. There are certainly other errors which can occur in SAS – logic errors are not something SAS can protect you from . These errors can have dramatic consequences, as demonstrated in this twitter thread about a JAMA retraction due to a coding error. To debug these types of errors, you can use the same print() techniques demonstrated in R. For these types of errors, there’s nothing special about what language you’re using (outside of the usual quirks of every language) - the error is in the logic, not the encoding of that logic. 7.6 Minimal Working Examples If all else has failed, and you can’t figure out what is causing your error, it’s probably time to ask for help. If you have a friend or buddy that knows the language you’re working in, by all means ask for help sooner - use them as a rubber duck if you have to. But when you ask for help online, often you’re asking people who are much more knowledgeable about the topic - members of R core and SAS browse stackoverflow and may drop in and help you out. Under those circumstances, it’s better to make the task of helping you as easy as possible because it shows respect for their time. The same thing goes for your supervisors and professors. So, with that said, there are numerous resources for writing what’s called a “minimal working example”, “reproducible example” (commonly abbreviated reprex), or MCVE (minimal complete verifiable example). Much of this is lifted directly from the StackOverflow post describing a minimal reproducible example. The goal is to reproduce the error message with information that is - minimal - as little code as possible to still reproduce the problem - complete - everything necessary to reproduce the issue is contained in the description/question - reproducible - test the code you provide to reproduce the problem. You should format your question to make it as easy as possible to help you. Make it so that code can be copied from your post directly and pasted into a terminal. Describe what you see and what you’d hope to see if the code were working. References Stalking the elusive computer bug - the etymology and historical use of the term “debugging”, from Thomas Edison to Grace Hopper. Debugging (lecture materials from software construction class at MIT) - written with java, but mostly comprehensible for any language. Debugging with RStudio An Introduction to the Interactive Debugging Tools in R Stackoverflow: General Suggestions for Debugging in R WTF R - What They Forgot to Teach You about R Debugging chapter Debugging 101 in SAS Debugging SAS Programs - Ch. 1: The Basics of Debugging A webinar by Jenny Bryan/RStudio on Reproducible Examples the 0th step is from the 1st edition, the remaining steps are from the 2nd.↩ Some people use cats, but I find that they don’t meet the nonjudgemental criteria. Of course, they’re equally judgemental whether your code works or not, so maybe that works if you’re a cat person, which I am not. Dogs, in my experience, can work, but often will try to comfort you when they realize you’re upset, which both helps and lessens your motivation to fix the problem. A rubber duck is the perfect dispassionate listener.↩ "],
["data-vis-intro.html", "Module 8 Introduction to Data Visualization Module Objectives 8.1 Why do we create graphics? 8.2 General approaches to creating graphics 8.3 The Grammar of Graphics 8.4 Good charts 8.5 References", " Module 8 Introduction to Data Visualization Module Objectives Create statistical charts in SAS and R Use the grammar of graphics to describe different types of charts and graphs Use the grammar of graphics to create layered graphics and highlight different features of a data set Modify or construct alternate charts showing the same material with better readability and accessibility There are a lot of different types of charts, and equally many ways to categorize and describe the different types of charts. This is one of the less serious schemes I’ve seen But, in my opinion, Randall missed the opportunity to put a pie chart as Neutral Evil. Hopefully by the end of this, you will be able to at least make the charts which are most commonly used to show data and statistical concepts. This is going to be a fairly extensive chapter (in terms of content) because I want you to have a resource to access later, if you need it. But, this is also the chapter where we really start to focus on R instead of SAS. Even the hardcore SAS users I know (in this department and others) go into R when they want to make a publication-quality chart. Visualization and statistical graphics are also my research area, so I’m probably going to be a bit more passionate about this chapter, which means there’s probably going to be more to read. Sorry about that in advance. I’ll do my best to indicate which content is actually mission-critical and which content you can skip if you’re not that interested. R package setup library(readr) library(dplyr) library(tidyr) library(ggplot2) 8.1 Why do we create graphics? The greatest possibilities of visual display lie in vividness and inescapability of the intended message. A visual display can stop your mental flow in its tracks and make you think. A visual display can force you to notice what you never expected to see. (“Why, that scatter diagram has a hole in the middle!”) – John Tukey, Data Based Graphics: Visual Display in the Decades to Come Charts are easier to understand than raw data. (more details inside) When you think about it, data is a pretty artificial thing. We exist in a world of tangible objects, but data are an abstraction - even when the data record information about the tangible world, the measurements are a way of removing the physical and transforming the “real world” into a virtual thing. As an artificial entity, it can be hard to wrap our heads around what our data contain. The solution to this is to transform our data back into something that is “tangible” in some way – if not physical and literally touch-able, at least something we can view and “wrap our heads around”. Consider this thought experiment: You have a simple data set - 2 variables, 500 observations. You want to get a sense of how the variables relate to each other. You can do one of the following options: Print out the data set Create some summary statistics of each variable and perhaps the covariance between the two variables Draw a scatter plot of the two variables Which one would you rather use? Why? Our brains are very good at processing large amounts of visual information quickly - it’s important to be able to e.g. survey a field and pick out the tiger that might eat you. When we present information visually, in a format that can leverage our visual processing abilities, we offload some of the work of understanding the data to a chart that organizes it for us. You could argue that printing out the data is a visual presentation, but it requires that you read that data in as text, which we’re not nearly as equipped to process quickly (and in parallel). In addition, I’ve found that it’s a lot easier to talk to non-experts about complicated statistics using visualizations. Moving the discussion from abstract concepts to concrete shapes and lines keeps people who are potentially already math or stat phobic from completely panicking and tuning out. 8.2 General approaches to creating graphics There are two general approaches to generating statistical graphics computationally: Manually specify the plot that you want, doing the preprocessing and summarizing before you create the plot. Describe the relationship between the plot and the data, using sensible defaults that can be customized for common operations. In the introduction to The Grammar of Graphics, Leland Wilkinson suggests that the first approach is what we would call “charts” - pie charts, line charts, bar charts - objects that are “instances of much more general objects”. He’s arguing for the virtues of the 2nd approach – the grammar of graphics, so his opinion is hardly unbiased, but it is an interesting distinction. His argument is that elegant graphical design means we have to think about an underlying theory of graphics, rather than how to create specific charts. Base R graphics and the original SAS graphics engine fall firmly into the first camp. ggplot2 was designed using the philosophy of the grammar of graphics, and is still the primary place that people learn about the grammar of graphics in statistics. The SAS ODS Graphics Engine28 falls somewhere in between the two approaches - it provides some sensible defaults, but its design isn’t rooted in the philosophy of the grammar of graphics, so if (as some SAS manuals have claimed) there is a similarity between the two, it’s functional (in my opinion) and not because of an underlying similarity in the design strategy. In either case, you’re going to learn how to make graphics by finding sample code, changing that code to match your data set, and tweaking things as you go. That’s the best way to learn this, and while option 2 does have a structure and some syntax to learn, once you’re familiar with the principles, you’ll still want to learn graphics by doing it. There are other graphics systems in R (namely, lattice, plus some web-based rendering engines) that you could explore, but it’s far more important that you know how to functionally create plots in R and/or SAS. I don’t recommend you try to become proficient in all of them. Pick one (two at most) and get to know that, then google for the rest. Before we delve into the grammar of graphics, let’s motivate the philosophy using a simple task. Suppose we want to create a pie chart using some data. Pie charts are terrible, and we’ve known it for 100 years, so in the interests of showing that we know that pie charts are awful, we’ll also create a stacked bar chart, which is the most commonly promoted alternative to a pie chart. We’ll talk about what makes pie charts terrible at the end of this module. R base graphics example # Setup the data poke &lt;- read_csv(&quot;data/pokemon_ascii.csv&quot;, na = &#39;.&#39;) %&gt;% mutate(generation = factor(generation)) Let’s start with what we want: for each generation, we want the total number of pokemon. To get a pie chart, we want that information mapped to a circle, with each generation represented by an angle whose size is proportional to the number of pokemon in that generation. # Create summary of pokemon by type tmp &lt;- poke %&gt;% group_by(generation) %&gt;% count() pie(tmp$n, labels = tmp$generation) # with(., &lt;base command&gt;) let you use the pipe easily with a base R command # that is otherwise not pipe friendly, e.g. # with(tmp, pie(n, labels = generation)) We could alternately make a bar chart and stack the bars on top of each other. This also shows proportion (section vs. total) but does so in a linear fashion. # Create summary of pokemon by type tmp &lt;- poke %&gt;% group_by(generation) %&gt;% count() # Matrix is necessary for a stacked bar chart matrix(tmp$n, nrow = 8, ncol = 1, dimnames = list(tmp$generation)) %&gt;% barplot(beside = F, legend.text = T, main = &quot;Generations of Pokemon&quot;) R ggplot2 graphics In ggplot2, we start by specifying which variables we want to be mapped to which features of the data. In a pie or stacked bar chart, we don’t care about the x coordinate - the whole chart is centered at (0,0) or is contained in a single “stack”. So it’s easiest to specify our x variable as a constant, &quot;&quot;. We care about the fill of the slices, though - we want each generation to have a different fill color, so we specify generation as our fill variable. Then, we want to summarize our data by the number of objects in each category - this is basically a stacked bar chart. Any variables specified in the plot statement are used to implicitly calculate the statistical summary we want – that is, to count the rows (so if we had multiple x variables, the summary would be computed for both the x and fill variables). ggplot is smart enough to know that when we use geom_bar, we generally want the y variable to be the count, so we can get away with leaving that part out. We just have to specify that we want the bars to be stacked on top of one another (instead of next to each other, “dodge”). ggplot(aes(x = &quot;&quot;, fill = generation), data = poke) + geom_bar(position = &quot;stack&quot;) If we want a pie chart, we can get one very easily - we transform the coordinate plane from Cartesian coordinates to polar coordinates. We specify that we want angle to correspond to the “y” coordinate, and that we want to start at \\(\\theta = 0\\). ggplot(aes(x = &quot;&quot;, fill = generation), data = poke) + geom_bar(position = &quot;stack&quot;) + coord_polar(&quot;y&quot;, start = 0) Notice how the syntax and arguments to the functions didn’t change much between the bar chart and the pie chart? That’s because the ggplot package uses what’s called the grammar of graphics, which is a way to describe plots based on the underlying mathematical relationships between data and plotted objects. In base R and SAS, different types of plots will have different syntax, arguments, etc., but in ggplot2, the arguments are consistently named, and for plots which require similar transformations and summary observations, it’s very easy to switch between plot types by changing one word or adding one transformation. SAS Examples Original SAS graphics engine Note: This code runs, but it causes every other sas chunk in this document to go haywire… so you’ll have to copy the code and run it on your own to see what it looks like. libname classdat &quot;sas/&quot;; /* This step creates a constant variable in the data frame, so that all generations can be stacked in one bar */ DATA poketmp; SET classdat.poke; i = 1; RUN; PROC GCHART data=poketmp; pie generation / other = 0; RUN; QUIT; PROC GCHART data=poketmp; VBAR i / SUBGROUP = generation; RUN; QUIT; /* Note that if you forget the quit statement using SASMarkdown, things dont work well */ ODS Graphics Note: This is a terrible example in SAS because there isn’t an easy way to create a pie chart29. We have to resort to using SAS Graph Template Language. libname classdat &quot;sas/&quot;; DATA poketmp; SET classdat.poke; i = 1; RUN; /* Define a pie chart template */ PROC TEMPLATE; DEFINE STATGRAPH WORK.simplepie; BEGINGRAPH; LAYOUT REGION; PIECHART category=generation; ENDLAYOUT; ENDGRAPH; END; RUN; /* Make the pie chart */ PROC SGRENDER data=classdat.poke template=WORK.simplepie; RUN; QUIT; /* Use SGPLOT to make a stacked bar chart */ PROC SGPLOT data=poketmp; VBAR i / GROUP = generation; RUN; QUIT; As in base R, the syntax between the two types of charts is different, even though the underlying operations required to make the plots are very similar. This is one example of why I don’t agree with the assertion that ODS graphics is like ggplot2 syntax - the functionality may be similar, but the structure is not. If only because it provides us with a place to start (because otherwise, we would just work through a graph gallery or two, and that’s boring), we’ll talk first about the general idea behind the grammar of graphics. For each concept, I’ll provide you first with the ggplot grammar of graphics code, and then, where it is possible to replicate the chart easily in base R or SAS ODS graphics, I will provide code for that as well - so that you can compare the approaches, but also so that you get a sense for what is easy and what is possible in each plotting system. 8.3 The Grammar of Graphics In the grammar of graphics, a plot consists of several mostly independent specifications: aesthetics - links between data variables and graphical features (position, color, shape, size) layers - geometric elements (points, lines, rectangles, text, …) transformations - transformations specify a functional link between the data and the displayed information (identity, count, bins, density, regression). Transformations act on the variables. scales - scales map values in data space to values in the aesthetic space. Scales change the coordinate space of an aesthetic, but don’t change the underlying value (so the change is at the visual level, not the mathematical level). coordinate system - e.g. polar or Cartesian faceting - facets allow you to split plots by other variables to produce many sub-plots. theme - formatting items, such as background color, fonts, margins… We can contrast this with other plotting systems (e.g. Base R), where transformations and scales must be handled manually, there may be separate plotting systems for different coordinate systems, etc. Functionally, the biggest difference between the two systems is that in the grammar of graphics system (as implemented in ggplot2), we work with a full tabular data set. So like the rest of the tidyverse, ggplot2 will allow you to reference bare column names as if they were variables, so long as you’ve passed in the data set to the data = argument.30 Let’s get the data set up in both SAS and R if (!&quot;classdata&quot; %in% installed.packages()) devtools::install_github(&quot;heike/classdata&quot;) # A package of data sets which are useful for class demonstrations library(classdata) library(tidyr) Attaching package: &#39;tidyr&#39; The following object is masked from &#39;package:magrittr&#39;: extract library(dplyr) data(happy) # you&#39;ll use this for try it out sections data(fbi) fbiwide &lt;- fbi %&gt;% select(-Violent.crime) %&gt;% pivot_wider(names_from = Type, values_from = Count) %&gt;% # Rename variables rename(Murder = Murder.and.nonnegligent.Manslaughter, Assault = Aggravated.assault, Larceny = Larceny.theft, Auto.theft = Motor.vehicle.theft) %&gt;% mutate(Rape = as.numeric(Rape)) # Write a csv out to a file to read into sas if(!file.exists(&quot;data/happy.csv&quot;)) write_csv(happy, &quot;data/happy.csv&quot;, na = &quot;.&quot;) if(!file.exists(&quot;data/fbi.csv&quot;)) write_csv(fbi, &quot;data/fbi.csv&quot;, na = &quot;.&quot;) if(!file.exists(&quot;data/fbiwide.csv&quot;)) write_csv(fbiwide, &quot;data/fbiwide.csv&quot;, na = &quot;.&quot;) libname classdat &quot;sas/&quot;; PROC IMPORT datafile = &quot;data/happy.csv&quot; out=classdat.happy DBMS = CSV REPLACE; GETNAMES = YES; GUESSINGROWS = 5000; RUN; PROC IMPORT datafile = &quot;data/fbi.csv&quot; out=classdat.fbi DBMS = CSV REPLACE; GETNAMES = YES; GUESSINGROWS = 5000; RUN; PROC IMPORT datafile = &quot;data/fbiwide.csv&quot; out=classdat.fbiwide DBMS = CSV REPLACE; GETNAMES = YES; GUESSINGROWS = 2000; RUN; 8.3.1 Demonstration: Aesthetic Mappings and Basic Plots Basic Scatter plots A basic scatter plot is a combination of an aesthetic mapping for x and y (position), combined with the specification that the geometric object to be displayed is a point. Without any of the components (x, y, geom_point) you don’t have a scatter plot. ggplot(fbiwide, aes(x = Burglary, y = Murder)) + geom_point() Base R plot(x = Burglary, y = Murder, data = fbiwide) # this doesn&#39;t work Error in plot(x = Burglary, y = Murder, data = fbiwide): object &#39;Burglary&#39; not found plot(x = fbiwide$Burglary, y = fbiwide$Murder) # you can use numeric vector arguments # another option is to use formula notation, that is, y ~ x. # If you use formula notation, you can pass in a data frame using the # data argument and R will interpret things correctly plot(Murder ~ Assault, data = fbiwide) SAS ODS Graphics The workhorse of the ODS graphics engine is SGPLOT. libname classdat &quot;sas/&quot;; PROC SGPLOT data=classdat.fbiwide; SCATTER x = Burglary y = Murder; RUN; QUIT; Adding labels and titles We can add a title to the plot ggplot(fbiwide, aes(x = Murder, y = Assault)) + geom_point() + ggtitle(&quot;Murders and Assaults&quot;) You can also add labels using xlab() and ylab(). We’ll talk more about how to make fine-grained modifications of axis scales later, but the shorthand commands for changing the title and labels are convenient. Base R plot(Murder ~ Assault, data = fbiwide) title(&quot;Murders and Assaults&quot;) SAS ODS Graphics libname classdat &quot;sas/&quot;; PROC SGPLOT data=classdat.fbiwide; TITLE &quot;Murders and Assaults&quot;; SCATTER x = Assault y = Murder; RUN; QUIT; Changing characteristics of plotted objects We can also modify the appearance of the plotted objects ggplot(fbiwide, aes(x = Population, y = Assault)) + geom_point(color = &quot;blue&quot;, alpha = .5) Alpha blending, or transparency, allows us to see the structure in over-plotted (crowded) charts. Here, I’ve specified that the points should have 50% opacity. Another point to note: inside the aes() function, variables are mapped to geometric object characteristics, but outside, those same parameters can be mapped to constant values. If something is inside aes(), it should be a variable. Base R Base R doesn’t support alpha blending by default, so we have to load the scales package in order to get that functionality. library(scales) # Using constant alpha: plot(Assault ~ Population, col = alpha(&quot;blue&quot;, .5), pch = 16, data = fbiwide) SAS ODS Graphics libname classdat &quot;sas/&quot;; PROC SGPLOT data=classdat.fbiwide; SCATTER x = Population y = Assault / markerattrs=(size=8pt symbol=circlefilled color=&quot;blue&quot;) transparency=0.5; RUN; QUIT; Mapping categorical variables to aesthetics like color If we want to get fancy, we can map other variables to aesthetics like color, size, etc. We could explore the relationship between Population and Assault, but we’d expect that over time, observations from each state would be closely related. We could explore that by coloring each point by state (note, this doesn’t allow us to really see which states belong to which points so much as it visually associates connected points.) ggplot(fbiwide, aes(x = Population, y = Assault, color = Abb)) + geom_point() Base R variable mapping In base R, you can also create scatter plots that have different plot aesthetics, but we have to get a bit more hands-on than we did with ggplot2. # This doesn&#39;t work because the values in Abb aren&#39;t actually colors # and plot() doesn&#39;t handle the mapping between color and abbreviation for us plot(Assault ~ Population, col = Abb, data = fbiwide) Error in plot.xy(xy, type, ...): invalid color name &#39;AL&#39; We have to specify the values of color manually for each point that we want to plot - essentially, where ggplot2 handled the scale for us, now we have to manually specify it ourselves. We could specify a legend, but in this particular case it’s unlikely to be that useful to us because the colors aren’t allowing us to identify the lines, they’re just differentiating the lines from other lines. # We need a vector of colors equal to the number of abbreviations we have state_colors &lt;- rainbow(length(unique(fbiwide$Abb))) # then we have to figure out which color goes with which abbreviation fbiwide$Abb_factor &lt;- factor(fbiwide$Abb) fbiwide$state_color &lt;- state_colors[fbiwide$Abb_factor] plot(Assault ~ Population, col = state_color, data = fbiwide) You can use ?points to get information on all of the graphical parameters for points. SAS ODS Graphics variable mapping libname classdat &quot;sas/&quot;; PROC SGPLOT data=classdat.fbiwide; SCATTER x = Population y = Assault / markerattrs=(size=8pt symbol=circlefilled) group = Abb; /* maps to point color by default */ RUN; QUIT; PROC SGPLOT data=classdat.fbiwide NOAUTOLEGEND; /* dont generate a legend */ SCATTER x = Population y = Assault / markercharattrs=(size=8) markerchar = Abb /* specify marker character variable */ group = Abb ; RUN; QUIT; Line plots A better way to graphically examine this hypothesis (the patterns in the data are clusters of each state’s points) might be to change the geometric object - we could use lines instead of points to show this data. In that case, we’d want to show separate lines (groups) for each state. ggplot(fbiwide, aes(x = Population, y = Assault, group = Abb)) + geom_line() Or, we could be lazy and leave color specified; which will have the same effect. Color and most other aesthetics implicitly group the data. ggplot(fbiwide, aes(x = Population, y = Assault, color = Abb)) + geom_line() One of the best parts of ggplot is that you can get away with only changing one or two things and end up with a totally different plot. Base R line plots If we want to make a line plot, we can do it one of two ways: we can use a for loop to plot each state’s line separately, subsetting the data each time, or, we can transform the data to wide format and plot that using the matplot function # For loop method plot(Assault ~ Population, pch = NA, data = fbiwide) # generate a blank plot for (i in unique(fbiwide$Abb)) { subdata &lt;- filter(fbiwide, Abb == i) lines(Assault ~ Population, data = subdata) # add the line to the plot } # ggplot2 code # ggplot(fbiwide, aes(x = Population, y = Assault, group = Abb)) + geom_line() # matplot method subdata &lt;- fbiwide %&gt;% select(Assault, Population, Year, Abb) # get cols we need # Matrix of x values - Population popdat &lt;- pivot_wider(subdata, id_cols = Year, names_from = Abb, values_from = Population) %&gt;% arrange(Year) %&gt;% select(-Year) # Matrix of y values - Assaults assaultdat &lt;- pivot_wider(subdata, id_cols = Year, names_from = Abb, values_from = Assault) %&gt;% arrange(Year) %&gt;% select(-Year) matplot(popdat, assaultdat, type = &quot;l&quot;) # by default, matplot uses 5 different colors and linetypes # so that you can differentiate the lines in different columns If we want to add color in and have it mean something specific, it’s relatively straightforward because we already defined a new column in fbiwide that has state colors. plot(Assault ~ Population, pch = NA, data = fbiwide) # generate a blank plot for (i in unique(fbiwide$Abb)) { subdata &lt;- filter(fbiwide, Abb == i) lines(Assault ~ Population, col = state_color, data = subdata) # add the line to the plot } SAS ODS line plots libname classdat &quot;sas/&quot;; PROC SGPLOT data=classdat.fbiwide NOAUTOLEGEND; SERIES x = Population y = Assault / lineattrs=(pattern=solid) group = Abb; /* maps to color by default */ RUN; QUIT; SAS Line attributes and patterns options Mapping numeric variables to aesthetics So we can color our points (or lines) by a categorical variable, but that’s not all! We can also map numeric variables to aesthetics! There are perhaps too many data points in the FBI data to effectively show size variation, so let’s temporarily switch to pokemon and examine the relationship between attack and special attack points. Let’s also map alpha to weight, so that lighter points correspond to lighter pokemon. poke %&gt;% ggplot(aes(x = attack, y = sp_attack, alpha = weight_kg)) + geom_point() See more numeric scales We could get fancier still and map the Pokemon’s height to size. poke %&gt;% ggplot(aes(x = attack, y = sp_attack, size = height_m, alpha = weight_kg)) + geom_point() Note that ggplot2 will create separate legends for size and height by default. If we map size and alpha to the same variable, however, it will automatically combine the legends. poke %&gt;% ggplot(aes(x = attack, y = sp_attack, size = weight_kg, alpha = weight_kg)) + geom_point() Warning: Removed 1 rows containing missing values (geom_point). Base R legends, numeric variables, and aesthetics If we use ?points and find out that the size parameter is cex in base R, we might think something like this would work: plot(sp_attack ~ attack, cex = weight_kg, data = poke) # cex controls the point size argument # note the lack of a legend # Also, we have points that are *way* too big. But, remember, in base graphics, we have to do the transformations ourselves. After some tinkering, I came up with this. plot(sp_attack ~ attack, cex = 0.5 + weight_kg/1000*3, data = poke) # we have to do the scale transformation ourselves # but there&#39;s no legend... We also have to make the legend ourselves. Sigh. plot(sp_attack ~ attack, cex = 0.5 + weight_kg/1000*3, data = poke) legend(&quot;topleft&quot;, legend = c(250, 500, 750, 1000), # labels pch = 1, # must specify point shape (pch = point character) pt.cex = 0.5 + c(250, 500, 750, 1000)/1000 * 3) # must specify cex value # for points specifically If we want to map a value to alpha, we have to make our own scale again… but it may be easier to just make a transformation function that we can pass stuff into. That way we can create the legend and the data transformation using the same function (and if we want to change the transformation, it will be much easier to do so if we only have to change things in one place). library(scales) # Define the transformation wt_trans_alpha &lt;- function(x) { # rescale function is from the scales package trans_x &lt;- rescale( x = x, to = c(.2, 1), # don&#39;t go to 0 because then we can&#39;t see the points from = range(poke$weight_kg, na.rm = T) # input domain ) # alpha values have to be between 0 and 1, so we need to make sure to # truncate the scale trans_x %&gt;% pmin(., 1) %&gt;% # don&#39;t go any higher than 1 pmax(., 0) # don&#39;t go any lower than 0 } range(poke$weight_kg, na.rm = T) # get the range [1] 0.1 999.9 # Make the legend variables leg_label &lt;- seq(0, 1000, length.out = 5) # cut weight range into 5 leg_value &lt;- alpha(&quot;black&quot;, alpha = wt_trans_alpha(leg_label)) select(poke, attack, sp_attack, weight_kg) %&gt;% mutate(alpha = wt_trans_alpha(weight_kg), color = alpha(&quot;black&quot;, alpha = alpha)) %&gt;% plot(sp_attack ~ attack, col = color, pch = 16, data = .) legend(&quot;topleft&quot;, title = &quot;Weight (kg)&quot;, legend = leg_label, # labels pch = 16, # must specify point shape (pch = point character) col = leg_value) # must specify point color using alpha() function If we want to do color and size simultaneously, we have to define another transformation, but we can re-use the same legend. wt_trans_size &lt;- function(x) { trans_x &lt;- rescale( x = x, to = c(0.5, 3), from = range(poke$weight_kg, na.rm = T) # input domain ) # cex values have to be &gt;0, so we need to make sure to truncate the scale trans_x %&gt;% pmax(., 0) # don&#39;t go any lower than 0 } range(poke$weight_kg, na.rm = T) # get the range [1] 0.1 999.9 # Make the legend variables leg_label &lt;- seq(0, 1000, length.out = 5) # cut weight range into 5 leg_color &lt;- alpha(&quot;black&quot;, alpha = wt_trans_alpha(leg_label)) leg_size &lt;- wt_trans_size(leg_label) select(poke, attack, sp_attack, weight_kg) %&gt;% mutate(alpha = wt_trans_alpha(weight_kg), color = alpha(&quot;black&quot;, alpha = alpha), size = wt_trans_size(weight_kg)) %&gt;% plot(sp_attack ~ attack, col = color, cex = size, pch = 16, data = .) legend(&quot;topleft&quot;, title = &quot;Weight (kg)&quot;, legend = leg_label, # labels pch = 16, # must specify point shape (pch = point character) col = leg_color, pt.cex = leg_size) SAS ODS graphics and numeric variable transformations In order to change point size to show a different variable value, we have to use BUBBLE instead of SCATTER. libname classdat &quot;sas/&quot;; PROC SGPLOT data=classdat.poke; BUBBLE x = attack y = sp_attack size = weight_kg / BRADIUSMAX=10 BRADIUSMIN =2 transparency=0.5; RUN; QUIT; As best as I can tell, there’s no similar plot option that would let us map a variable to transparency. There are attribute maps, but the options are discrete (which weight is not) or range (which would let us define ranges to map to a single value), and they don’t appear to support transparency. In theory, I think we could go to SAS Template graph language, but … ugh. To be honest, at this point, I’d move the data into R and graph things there. 8.3.1.1 Try it out Explore the happy data set, which is a selection of variables from the general social survey (?happy) related to happiness. What associations can you find between the variables? Can you use what you know about the graphics help resources to figure out how to create new plot types? 8.3.2 Syntax and General Structure: Layers One of the main advantages of ggplot2 is that the syntax is basically consistent across very different types of plots. In base R and SAS, this is not the case - you have to look up the available options for each different plot type. In ggplot2, I might have to look up what the aesthetic names are for a specific geom, but I can guess most of the time. So let’s look a bit more into what ggplot2’s approach to graph specification is and what it allows us to do. You’re fairly used to the syntax of the pipe by now; but ggplot works on a slightly different (but similar) concept that we’ve used implicitly up until this point. There is the initial plot statement, ggplot(), and successive layers are added using +. You can specify a data set and aesthetic variables in the ggplot() statement (which is what we’ll usually do), but you can also have a completely blank ggplot() statement and specify your aesthetic mappings and data sets for each layer separately. This approach is more useful when you start creating complex plots, because you may need to plot summary information and raw data, or e.g. separate tables with city information, geographic boundaries, and rivers, all of which need to be represented in the same map. In this extended example, we’ll examine the different features we need to make a map and how to add new layers to a map. We’ll also look at some new geoms: geom_polygon and geom_path. pkgs &lt;- installed.packages() # Install any of the packages that you don&#39;t have install.packages(setdiff(c(&quot;ggthemes&quot;, &quot;mapdata&quot;, &quot;maps&quot;), pkgs)) Initial data set up and exploration of the data sets library(ggplot2) library(maps) library(mapdata) library(ggthemes) # theme_map # Create a data frame of the outline of the US us_map &lt;- map_data(&quot;usa&quot;) states &lt;- map_data(&quot;state&quot;) # Read in some data about places of worship in the US (compiled from IRS filings) worship &lt;- read_csv(&quot;data/Places_of_Worship.csv&quot;, guess_max = 5000) Parsed with column specification: cols( EIN = col_double(), NAME = col_character(), STREET = col_character(), CITY = col_character(), STATE = col_character(), ZIP = col_double(), AFFILIATION = col_double(), FOUNDATION = col_double(), long = col_double(), lat = col_double() ) Let’s look at the map data first: head(us_map) long lat group order region subregion 1 -101.4078 29.74224 1 1 main &lt;NA&gt; 2 -101.3906 29.74224 1 2 main &lt;NA&gt; 3 -101.3620 29.65056 1 3 main &lt;NA&gt; 4 -101.3505 29.63911 1 4 main &lt;NA&gt; 5 -101.3219 29.63338 1 5 main &lt;NA&gt; 6 -101.3047 29.64484 1 6 main &lt;NA&gt; It looks like we have longitude and latitude, group, and point order. What does group mean? select(us_map, group, region) %&gt;% unique() group region 1 1 main 6888 2 martha&#39;s vineyard 6925 3 nantucket island 6956 4 manhattan 6973 5 staten island 6984 6 long island 7153 7 san juan island 7171 8 lopez island 7189 9 orcas island 7209 10 whidbey island The regions are all islands, and group is a number that corresponds to each region. This is important because if we plot polygons, we have to worry about what to do when we jump from one “island” to another (sometimes, regions might be contiguous areas, such as states or zip codes). As long as we pass in a group argument (so group = group) we should avoid most of the complications of plotting spatial data. The state data is similarly structured: head(states) long lat group order region subregion 1 -87.46201 30.38968 1 1 alabama &lt;NA&gt; 2 -87.48493 30.37249 1 2 alabama &lt;NA&gt; 3 -87.52503 30.37249 1 3 alabama &lt;NA&gt; 4 -87.53076 30.33239 1 4 alabama &lt;NA&gt; 5 -87.57087 30.32665 1 5 alabama &lt;NA&gt; 6 -87.58806 30.32665 1 6 alabama &lt;NA&gt; Now, let’s look at our worship place data. The full data set was more extensive (and much larger), so I’ve reduced the number of columns so that I’m able to put it on GitHub. head(worship) # A tibble: 6 x 10 EIN NAME STREET CITY STATE ZIP AFFILIATION FOUNDATION long lat &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 2.92e4 ST GEORG… 523 E … SOUT… MA 2127 9 10 -71.0 42.3 2 6.36e5 MINISTER… 454 ES… LAWR… MA 1840 3 10 -71.2 42.7 3 2.03e6 CHURCH O… 569 BR… NEWA… NJ 7104 3 10 -74.2 40.8 4 2.05e6 GENERAL … 3210 S… ORCH… NY 14127 9 10 -78.7 42.8 5 1.02e7 CHILD EV… 431 CA… LIVE… ME 4254 9 15 -70.1 44.4 6 1.02e7 BIBLE SO… 105 HA… PORT… ME 4103 3 16 -70.3 43.7 We have tax numbers, entity names, mailing address, affiliation, foundation, and latitude/longitude. A codebook for the affiliation and foundation information is available from the IRS. While I’m tempted to play around with the names of the organizations a bit (for instance, how many different “First XXX Church” exist in the country?) it’s probably for the best that we keep moving. Basic map geoms - geom_path and geom_polygon Let’s try plotting this out. Maybe we can start with just plotting the outline using geom_line? ggplot() + geom_line(aes(x = long, y = lat, group = group), data = us_map) A line geom is plotted sequentially with respect to the magnitude of x. That doesn’t really work for us - we want x and y to be plotted in order of the observations. To do that, we need geom_path. ggplot() + geom_path(aes(x = long, y = lat, group = group), data = us_map) Not too bad. What if we want to fill in the country, so that it looks different from the background? To do that, we’ll need geom_polygon ggplot() + geom_polygon(aes(x = long, y = lat, group = group), data = us_map) # Let&#39;s make the fill white. ggplot() + geom_polygon(aes(x = long, y = lat, group = group), data = us_map, fill = &quot;white&quot;, color = &quot;black&quot;) # What happens if we get rid of group? ggplot() + geom_polygon(aes(x = long, y = lat), data = us_map, fill = &quot;white&quot;, color = &quot;black&quot;) Generally, your base map layer will be plotted with geom_polygon, and you will use geom_path and geom_polygon to plot additional layers on top of the base map. Let’s add more layers! Let’s plot points for the location of every place of worship (according to the IRS) in the US. First, we can plot the points by themselves: ggplot() + geom_point(aes(x = long, y = lat), data = worship) Wow. One problem we’re going to have is Alaska – it isn’t on our base map of the contiguous states. Let’s go ahead and remove those points for now - we could make the map more complicated, but it won’t add much to the overall value of the example. worship_full &lt;- worship worship &lt;- filter(worship, STATE != &quot;AK&quot;) ggplot() + geom_point(aes(x = long, y = lat), data = worship, size = .1, alpha = .1) At this point it’s worth remembering the population density issue. With that said, we have quite a lot of churches here, and while some of the darker areas are dense populations, not all of the church clusters are in areas I’d call “dense”. Suppose we want to add our church data to our national map. We can plot our US map first, then add the points on top of it. ggplot() + geom_polygon(aes(x = long, y = lat, group = group), data = us_map, fill = &quot;white&quot;, color = &quot;grey&quot;) + geom_point(aes(x = long, y = lat), data = worship, size = .1, alpha = .1) The order of the geom statements determines the plotting order. It might help to add some state information in too. We could plot states on top of the full US map, but (hopefully) the states tile the national map, so it’s better just to plot the states. ggplot() + geom_polygon(aes(x = long, y = lat, group = group), data = states, fill = &quot;white&quot;, color = &quot;grey&quot;) + geom_point(aes(x = long, y = lat), data = worship, size = .1, alpha = .1) It might be helpful to figure out where there are major cities - some of them are obvious, but I suspect there are certain areas where there are more churches per capita31. The us.cities database has all US cities over 40k people, plus state capitals of any size. Let’s add major US cities as open circles (so that we don’t obscure the church data too much). large_cities &lt;- us.cities %&gt;% filter(country.etc != &quot;AK&quot;) %&gt;% filter(country.etc != &quot;HI&quot;) %&gt;% filter(pop &gt; 100000 | capital == 2) %&gt;% mutate(type = ifelse(capital == 2, &quot;State Capital&quot;, &quot;City&quot;)) layer_map &lt;- ggplot() + geom_polygon(aes(x = long, y = lat, group = group), data = states, fill = &quot;white&quot;, color = &quot;grey&quot;) + geom_point(aes(x = long, y = lat), data = worship, size = .1, alpha = .1) + geom_point(aes(x = long, y = lat, color = type, size = pop), data = large_cities, shape = 1) + # put legend below the map theme(legend.position = &quot;bottom&quot;) layer_map Just to examine the South in a little more depth, because there’s an extremely dark area northeast of Atlanta, GA and southwest of Charlotte, NC that doesn’t correspond to any major cities. layer_map + # coord_fixed maintains the proper aspect ratio coord_fixed(xlim = c(-86.5, -78.5), ylim = c(31, 36)) It looks like most of the dark area I noticed corresponds to sprawling Atlanta suburbs, which may not be big enough individually to meet our criteria of 100k people or more. There are also several smaller clusters of churches along what I suspect is the interstate between Atlanta and Charlotte, corresponding to the Greenville-Spartanburg metro (the metro is over 100k people, but individual cities don’t meet the threshold). We could add a layer corresponding to the interstates to provide more geographic context, but I think the point here is pretty clear - you can do some very cool things with maps. Try it out Pick a few denominations or religious organizations (or even just a more generic pattern, like names starting with ST, or schools) and do some rough string matching. What spatial patterns do you detect? (This won’t be totally accurate, and doesn’t need to be, in order to paint a picture of the country’s religious affiliations and congregations) One solution First, let’s do a bit of string processing. common_words &lt;- worship %&gt;% pull(NAME) %&gt;% str_split(&quot;[- &amp;/%]&quot;, simplify = T) %&gt;% as.character() %&gt;% table() %&gt;% sort(decreasing = TRUE) common_words[1:40] . CHURCH OF INC BAPTIST 3427562 119645 79566 59809 25940 MINISTRIES CHRISTIAN THE GOD LUTHERAN 24719 21974 21039 17550 13004 CENTER CHRIST FELLOWSHIP COMMUNITY NEW 12385 12172 11256 10922 10915 FIRST ASSEMBLY INTERNATIONAL ST LIFE 10106 9367 9150 8992 8923 FAITH DE IN BIBLE UNITED 7780 6513 6101 5915 5682 IGLESIA METHODIST MINISTRY GRACE MISSIONARY 5610 5440 5191 5167 5141 AND TEMPLE PRESBYTERIAN GOSPEL HOPE 4873 4635 4155 4144 3915 CHAPEL OUTREACH LIVING FOR EPISCOPAL 3909 3634 3607 3491 3464 Let’s work with the following denominations: BAPTIST, LUTHERAN, METHODIST, PRESBYTERIAN, EPISCOPAL - I’ve left out CHRISTIAN, ASSEMBLY (because it could be ASSEMBLY OF GOD or a more generic term for a congregation), and TEMPLE because it could refer to any number of religions - Jewish, Hindu, etc. This will give us a very rough categorization (e.g. there are Methodist Episcopal churches which will be counted as one and not the other, and UMC is a common abbreviation for United Methodist Church but won’t be counted as one this way). worship &lt;- worship %&gt;% mutate(type = str_extract(NAME, &quot;(BAPTIST|LUTHERAN|METHODIST|PRESBYTERIAN|EPISCOPAL)&quot;)) denom_churches = worship %&gt;% filter(!is.na(type)) ggplot() + geom_polygon(aes(x = long, y = lat, group = group), data = states, fill = &quot;white&quot;, color = &quot;grey&quot;) + geom_point(aes(x = long, y = lat, color = type), data = denom_churches, size = .1, alpha = .1) + # We want to see the legend, so we have to tell ggplot to override the aesthetics guides(color = guide_legend(override.aes = list(size = 2, alpha = 1))) + theme(legend.position = &quot;bottom&quot;) + theme_map() We could also look for other keywords: bahai &lt;- worship %&gt;% filter(str_detect(NAME, &quot;BAHAI&quot;)) ggplot() + geom_polygon(aes(x = long, y = lat, group = group), data = states, fill = &quot;white&quot;, color = &quot;grey&quot;) + geom_point(aes(x = long, y = lat), data = bahai, alpha = .1) + theme_map() + ggtitle(&quot;Baha&#39;i Organizations&quot;) zen &lt;- worship %&gt;% filter(str_detect(NAME, &quot;ZEN&quot;)) ggplot() + geom_polygon(aes(x = long, y = lat, group = group), data = states, fill = &quot;white&quot;, color = &quot;grey&quot;) + geom_point(aes(x = long, y = lat), data = zen, alpha = .1) + theme_map() + ggtitle(&quot;Zen Organizations&quot;) friends &lt;- worship %&gt;% filter(str_detect(NAME, &quot;(MEETING OF FRIENDS)|(FRIENDS MEETING)&quot;)) ggplot() + geom_polygon(aes(x = long, y = lat, group = group), data = states, fill = &quot;white&quot;, color = &quot;grey&quot;) + geom_point(aes(x = long, y = lat), data = friends, alpha = .1) + theme_map() + ggtitle(&quot;Quaker Religious Organizations&quot;) Try it out – Middle Earth edition Dedicated fans have re-created middle earth in digital format using ArcGIS files. These map file formats, called shape files, can be read into R and plotted. You may need to install a few spatial packages first (Mac and Windows, Linux The sf package in R contains a special geom, geom_sf, which will plot map objects with an appropriate geom, whether they are points, lines, or polygons. In complicated maps with many layers, this is a really awesome feature. I’ve provided some code to get you started, but there are many other shapefiles in the dataset. Pick some layers which you think are interesting, and plot them with appropriate geoms to make a map of Middle Earth. Unfortunately, in this map there is not an underlying polygon (the coastline is a series of shorter segments). To resolve this, I have provided a theme statement that will have a white background, so that you can add useful layers without the grey grid background. library(ggplot2) library(ggthemes) library(sf) if (!file.exists(&quot;data/MiddleEarthMap.zip&quot;)) { download.file(&quot;https://github.com/jvangeld/ME-GIS/archive/master.zip&quot;, &quot;data/MiddleEarthMap.zip&quot;, mode = &quot;wb&quot;) } if (!dir.exists(&quot;data/ME-GIS-master/&quot;)) { unzip(&quot;data/MiddleEarthMap.zip&quot;, exdir = &quot;data/&quot;) } coastline &lt;- read_sf(&quot;data/ME-GIS-master/Coastline2.shp&quot;) cities &lt;- read_sf(&quot;data/ME-GIS-master/Cities.shp&quot;) forests &lt;- read_sf(&quot;data/ME-GIS-master/Forests.shp&quot;) lakes &lt;- read_sf(&quot;data/ME-GIS-master/Lakes.shp&quot;) rivers &lt;- read_sf(&quot;data/ME-GIS-master/Rivers.shp&quot;) roads &lt;- read_sf(&quot;data/ME-GIS-master/Roads.shp&quot;) ggplot() + geom_sf(data = coastline) + geom_sf(data = forests, color = NA, fill = &quot;darkgreen&quot;, alpha = .2) + geom_sf(data = rivers, color = &quot;blue&quot;, alpha = .1) + geom_sf(data = lakes, fill = &quot;blue&quot;, color = NA, alpha = .2) + theme_map() 8.3.3 Statistics and Different Types of Plots At this point, we’ve primarily looked at charts which have two continuous variables - scatter plots, and line plots. There are a number of situations where these types of charts are inadequate. For one thing, we might want to only look at the distribution of a single variable. Or, we might want to look at how a continuous response variable changes when the level of a categorical variable changes. In this section, we’ll hit the most common types of plots, but there are almost infinite variations. Sites like the Data Viz Catalogue can be useful if you’re trying to accomplish a specific task and want to know what type of plot to use. In all of the plots which we discuss in this section, there is an implicit statistical function applied to the data before plotting. So while you may specify e.g. x = var1, what is plotted is f(var1), where f() might be the mean/median/quartiles, a binned count, or a computed kernel density. In ggplot2, you can formally specify a statistic by using stat_xxx functions, but many geoms implicitly call these same functions. Box Plots A box plot can show some summary information about the distribution of a single continuous variable, and usually is used to show differences in the level of a response variable at different levels of a categorical variable. Let’s look at the relative frequency of different types of crimes, putting all states on an equal scale of 100k residents so that the numbers are comparable and also meaningful. fbi %&gt;% filter(Year == max(Year)) %&gt;% mutate(per_100k = Count/Population*100000) %&gt;% # make nicer names mutate(crime = str_replace_all(Type, c(&quot;Murder.*&quot; = &quot;Murder&quot;, &quot;.*[Rr]ape&quot; = &quot;Rape&quot;, &quot;.*vehicle.theft&quot; = &quot;Vehicle Theft&quot;, &quot;Larceny.theft&quot; = &quot;Theft&quot;, &quot;.*assault&quot; = &quot;Assault&quot;))) %&gt;% ggplot(aes(x = crime, y = per_100k)) + geom_boxplot() + ggtitle(paste(&quot;Crimes per 100k people,&quot;, max(fbi$Year))) Warning: Removed 52 rows containing non-finite values (stat_boxplot). We might want to sort crimes by incidence level, because it makes the plot prettier and also gives us an ordered list of crimes in descending frequency. tmp &lt;- fbi %&gt;% filter(Year == max(Year)) %&gt;% mutate(per_100k = Count/Population*100000) %&gt;% # make nicer names mutate(crime = str_replace_all(as.character(Type), c(&quot;Murder.*&quot; = &quot;Murder&quot;, &quot;.*[Rr]ape&quot; = &quot;Rape&quot;, &quot;.*vehicle.theft&quot; = &quot;GTA&quot;, &quot;Larceny.theft&quot; = &quot;Theft&quot;, &quot;.*assault&quot; = &quot;Assault&quot;))) tmpsum &lt;- tmp %&gt;% group_by(crime) %&gt;% summarize(ref = mean(per_100k, na.rm = T)) %&gt;% ungroup() %&gt;% arrange(desc(ref)) `summarise()` ungrouping output (override with `.groups` argument) tmp &lt;- tmp %&gt;% mutate(crime = factor(crime, levels = tmpsum$crime)) tmp %&gt;% ggplot(aes(x = crime, y = per_100k, color = Violent.crime)) + geom_boxplot() + ggtitle(paste(&quot;Crimes per 100k people,&quot;, max(fbi$Year))) Warning: Removed 52 rows containing non-finite values (stat_boxplot). Box plots implicitly call stat_fivenumber(), which computes the five-number summary used to construct the box plot lines and box. You could, in theory, create a box plot by calling something like this (I stopped at the boxes, but you get the idea) tibble(x = rep(1:2, each = 50), y = rnorm(100)) %&gt;% ggplot(aes(x = x, y = y, group = x)) + # the box - actually make 2 half-boxes geom_rect(aes(xmin = x - after_stat(width)/2, xmax = x + after_stat(width)/2, ymin = after_stat(lower), ymax = after_stat(middle)), stat = &#39;fivenumber&#39;, fill = &quot;white&quot;, color = &quot;black&quot;) + geom_rect(aes(xmin = x - after_stat(width)/2, xmax = x + after_stat(width)/2, ymin = after_stat(middle), ymax = after_stat(upper)), stat = &#39;fivenumber&#39;, fill = &quot;white&quot;, color = &quot;black&quot;) Box plots in base R boxplot(per_100k~crime, data = tmp) Box plots in SAS libname classdat &quot;sas/&quot;; DATA WORK.fbitmp; SET classdat.fbi; per_100k = Count/Population*100000; RUN; PROC SGPLOT data=fbitmp; hbox per_100k / group = Type; RUN; QUIT; There are other variants of box plots (and similar concepts). Here is a violin plot, which attempts to show some more information about the distribution of the continuous variable (instead of hiding it all in the summary statistics). tmp %&gt;% ggplot(aes(x = crime, y = per_100k, color = Violent.crime)) + geom_violin(scale = &quot;width&quot;, # This ensures all plots have the same max width # Otherwise, theft is too skinny to really see draw_quantiles = c(.25, .5, .75)) + ggtitle(paste(&quot;Crimes per 100k people,&quot;, max(fbi$Year))) Warning: Removed 52 rows containing non-finite values (stat_ydensity). Warning in regularize.values(x, y, ties, missing(ties)): collapsing to unique &#39;x&#39; values Histograms and Density Plots Box plots aren’t the only way to show distributions, though. If we want to, we can show distributions using histograms or density plots. A histogram is created by binning the variable, then counting the number of observations that fall within each specified range. Usually, these ranges have constant width (but not always). poke %&gt;% ggplot(aes(x = hp)) + geom_histogram(color = &quot;black&quot;, fill = &quot;grey&quot;) `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. poke %&gt;% ggplot(aes(x = hp)) + geom_histogram(color = &quot;black&quot;, fill = &quot;grey&quot;, binwidth = 20) You should always look at a histogram under multiple bin widths, because that parameter can change the visual appearance of the distribution quite a bit. In a histogram, the statistic that is computed is stat_bin - we break the x range up into intervals and then count how many points lie in each interval. tibble(x = rnorm(100)) %&gt;% ggplot(aes(x = x)) + stat_bin(geom = &quot;bar&quot;) # this is equivalent to geom_histogram `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. In base R, you can get histograms with the hist() function. Histograms in SAS libname classdat &quot;sas/&quot;; DATA WORK.fbitmp; SET classdat.fbi; per_100k = Count/Population*100000; RUN; PROC SGPLOT data=fbitmp(WHERE=(Type = &quot;Robbery&quot;)); HISTOGRAM per_100k; RUN; QUIT; A kernel density is an empirical method of estimating the probability density function of a variable. In a density plot, instead of count, the y axis is labeled “density” and the continuous curve will be scaled so that the distribution integrates to 1. Density plots can be quite useful for continuous variables, but are also dependent on parameter selection - instead of a bin width, you may need to adjust a kernel width (though there are algorithms that will select this by default, so usually you only have to tweak it a bit). poke %&gt;% ggplot(aes(x = hp)) + geom_density(color = &quot;black&quot;, fill = &quot;grey&quot;) If you try to create a density plot for a variable which has only a limited number of values, you’ll often get an extremely spiky distribution. If your variable is e.g. measured in imprecise intervals, even though it’s continuous, you can adjust the bandwidth, but you may be better off using a histogram and choosing your bin width to be a multiple of your measurement precision. A spiky density curve can alert you to other problems in your data - for instance, the presence of a large number of 0s might tell you a mixture distribution would be a more appropriate distribution when you’re modeling the data. poke %&gt;% ggplot(aes(x = catch_rate)) + geom_density(color = &quot;black&quot;, fill = &quot;grey&quot;) Warning: Removed 104 rows containing non-finite values (stat_density). In base R, you can get a density plot of a single variable with plot(density(...)). Density plots in SAS libname classdat &quot;sas/&quot;; DATA WORK.fbitmp; SET classdat.fbi; per_100k = Count/Population*100000; RUN; PROC SGPLOT data=fbitmp(WHERE=(Type = &quot;Robbery&quot;)); density per_100k / type = kernel; RUN; QUIT; Read the help files for stat_density and stat_histogram and attempt to create your own histogram/density combination, before looking at the solution below If you’re careful to specify your mappings properly, you can plot a density curve on top of a histogram. Since both geoms compute statistics, you have to read the help files to see that they actually are computing multiple statistics. geom_histogram lists computed variables count, density, ncount, and ndensity. It will be easiest just to use the computed variable density, which we access by putting y = ..density.. in the aesthetic statement for the histogram geom. This moves the histogram to the same scale as the density - both will be scaled to integrate/sum to 1. poke %&gt;% ggplot(aes(x = catch_rate)) + geom_histogram(aes(y = ..density..)) + geom_density(color = &quot;black&quot;, fill = &quot;white&quot;, alpha = .25) `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. Warning: Removed 104 rows containing non-finite values (stat_bin). Warning: Removed 104 rows containing non-finite values (stat_density). We could similarly tell the density function we want a plot on the count scale, but this is harder to read and compare. Personally, I prefer the first version. poke %&gt;% ggplot(aes(x = catch_rate)) + geom_histogram() + geom_density(aes(y = ..count..), color = &quot;black&quot;, fill = &quot;white&quot;, alpha = .25) `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. Warning: Removed 104 rows containing non-finite values (stat_bin). Warning: Removed 104 rows containing non-finite values (stat_density). In SAS, this is actually easier than it is in ggplot2: As long as you put the histogram first in the SGPLOT statement, you’ll get the right scale. libname classdat &quot;sas/&quot;; DATA WORK.fbitmp; SET classdat.fbi; per_100k = Count/Population*100000; RUN; PROC SGPLOT data=fbitmp(WHERE=(Type = &quot;Robbery&quot;)); histogram per_100k; density per_100k / type = kernel; RUN; QUIT; Higher Dimensional “histograms” and densities You can use density plots and histograms in two dimensions to show the bivariate relationship between two variables, but at that point we have to represent the height of the density or number of points in the bin using another aesthetic (as x and y are taken by the two variables you’re computing a density for). One common aesthetic choice is to map density (or counts) to the fill color, leaving you to imagine a “height” associated with the color. poke %&gt;% ggplot(aes(x = height_m, y = weight_kg)) + geom_bin2d(aes(fill = ..count..), bins = 18, drop = F) + scale_x_log10() + scale_y_log10() Warning: Removed 1 rows containing non-finite values (stat_bin2d). poke %&gt;% ggplot(aes(x = height_m, y = weight_kg)) + geom_hex(aes(fill = ..count..), drop = F) + scale_x_log10() + scale_y_log10() Warning: Ignoring unknown parameters: drop Warning: Removed 1 rows containing non-finite values (stat_binhex). poke %&gt;% ggplot(aes(x = height_m, y = weight_kg)) + geom_density2d_filled() + scale_x_log10() + scale_y_log10() Warning: Removed 1 rows containing non-finite values (stat_density2d_filled). Alternately, it may be preferable to plot only the contour outlines. poke %&gt;% ggplot(aes(x = height_m, y = weight_kg)) + geom_density2d(bins = 15) + scale_x_log10() + scale_y_log10() Warning: Removed 1 rows containing non-finite values (stat_density2d). I found a blog post describing how to compute two-dimensional bins and make a heatmap bin plot in SAS. Of course, joint distributions can also be shown using a scatterplot. Another useful geom when examining distributions is geom_rug, which shows univariate distributions in the margins of the plot. Bar Charts A bar chart is a plot with a categorical variable on one axis and a summary statistic on the other (usually, this is a count). Note that a bar chart is NOT the same as a histogram (a histogram looks very similar, but has a binned numeric variable on one axis and counts on the other). Geometrically, bar charts are rectangles; typically each rectangle will have equal width and variable height. ggplot(poke, aes(x = generation)) + geom_bar() As with other types of charts, we can add more information by adding aesthetic mappings: poke %&gt;% mutate(status = factor( status, levels = c(&quot;Normal&quot;, &quot;Mythical&quot;, &quot;Sub Legendary&quot;, &quot;Legendary&quot;) %&gt;% rev() # ggplot orders things backwards of how you&#39;d want them )) %&gt;% ggplot(aes(x = generation, fill = status)) + geom_bar() + # The default colors are awful for colorblind people (like me), so lets fix it scale_fill_brewer(palette = &quot;Paired&quot;) We can get different visual information from the same data, if we switch which variable is on the axis and which is the fill variable. poke %&gt;% mutate(status = factor( status, levels = c(&quot;Normal&quot;, &quot;Mythical&quot;, &quot;Sub Legendary&quot;, &quot;Legendary&quot;) %&gt;% rev() # ggplot orders things backwards of how you&#39;d want them )) %&gt;% ggplot(aes(x = status, fill = generation)) + geom_bar(position = &quot;dodge&quot;) We can also get useful information by changing the statistic: what if we use the proportion of responses in each category instead of the raw count? To do this, as far as I know, we have to do at least a little bit of pre-processing, because we need a nested order of grouping factors, and ggplot doesn’t do that very well. poke %&gt;% mutate(status = factor( status, levels = c(&quot;Normal&quot;, &quot;Mythical&quot;, &quot;Sub Legendary&quot;, &quot;Legendary&quot;) %&gt;% rev() # ggplot orders things backwards of how you&#39;d want them )) %&gt;% group_by(status, generation) %&gt;% count() %&gt;% group_by(status) %&gt;% mutate(prop = n/sum(n)) %&gt;% ungroup() %&gt;% ggplot(aes(x = status, fill = generation, weight = prop)) + geom_bar() + # The default colors are awful for colorblind people (like me), so lets fix it scale_fill_brewer(palette = &quot;Paired&quot;) poke %&gt;% mutate(status = factor( status, levels = c(&quot;Normal&quot;, &quot;Mythical&quot;, &quot;Sub Legendary&quot;, &quot;Legendary&quot;) %&gt;% rev() # ggplot orders things backwards of how you&#39;d want them )) %&gt;% group_by(generation, status) %&gt;% count() %&gt;% group_by(generation) %&gt;% mutate(prop = n/sum(n)) %&gt;% ungroup() %&gt;% ggplot(aes(x = generation, fill = status, weight = prop)) + geom_bar() + # The default colors are awful for colorblind people (like me), so lets fix it scale_fill_brewer(palette = &quot;Paired&quot;) Bar Charts in SAS libname classdat &quot;sas/&quot;; PROC SGPLOT data=classdat.poke; VBAR status; RUN; QUIT; PROC SGPLOT data=classdat.poke; HBAR type_1; RUN; QUIT; Other useful geoms There are a few other geoms which may be useful from time to time, especially when adding additional information to a plot. geom_hline draws horizontal lines geom_vline draws vertical lines geom_abline draws a line in slope-intercept form geom_function draws a function over the domain of the plot geom_smooth draws a smooth line over e.g. a scatterplot. You can use this to fit an implicit linear regression, but by default it uses loess or generalized additive models to produce a more flexible fit. 8.3.4 Small Multiples Sometimes, you want to show separate plots for each level of a factor (or a combination of factors). Often, this happens when you expect the gross shape of the plotted information to change - something relatively obvious. Other times, though, you might just have too much data and need to break it down somehow. These sub-plots within a plot are called small multiples, or facets, or panel plots, depending on the software or discipline. fbi %&gt;% filter(Abb == &quot;NE&quot;) %&gt;% ggplot(aes(x = Year, y = Count/Population)) + geom_col() + facet_wrap(~Type) Warning: Removed 54 rows containing missing values (position_stack). The options to make panel plots in ggplot2 are facet_wrap, which wraps the specified panels into an overall plot with a reasonable aspect ratio, and facet_grid, which creates a grid of panels. We can control the scales on the panels - in some cases, it is advantageous to have the same scale for all panels, while at other times, such as in the example above, varying the scales at the panel level may allow you to see more detail. fbi %&gt;% filter(Abb == &quot;NE&quot;) %&gt;% ggplot(aes(x = Year, y = Count/Population)) + geom_col() + facet_wrap(~Type, scales = &quot;free_y&quot;) Warning: Removed 54 rows containing missing values (position_stack). Using a grid-style facet, we can make it easy to compare the relative trends in sub-populations. fbi %&gt;% filter(Abb %in% c(&quot;D.C.&quot;, &quot;NY&quot;), Type %in% c(&quot;Burglary&quot;, &quot;Robbery&quot;)) %&gt;% ggplot(aes(x = Year, y = Count/Population)) + geom_col() + facet_grid(Abb~Type) Panel plots in SAS Basically the same syntax as SGPLOT, but using SGPANEL and a PANELBY statement. This is very similar to ggplot2’s facet_ addition. libname classdat &quot;sas/&quot;; PROC SGPANEL data=classdat.poke; PANELBY status; HBAR type_1; RUN; QUIT; Try it out The classdata package contains the box dataset, which has weekly box office numbers. Conduct an exploratory data analysis of the dataset, using different types of plots appropriately. What is the most interesting aspect of the data you found in your exploration? One possible solution library(classdata) library(lubridate) # Work with dates and times data(box) head(box) Rank Rank.Last.Week Movie Distributor Gross Change 1 1 1 Joker Warner Bros. 55861403 -42 2 2 NA The Addams Family United Artists 30300007 NA 3 3 NA Gemini Man Paramount Pictures 20552372 NA 4 4 2 Abominable Universal 6072235 -49 5 5 3 Downton Abbey Focus Features 4881075 -39 6 6 4 Hustlers STX Entertainment 3887018 -39 Thtrs. Per.Thtr. Total.Gross Week Date 1 4374 12771 193590190 2 2019-10-11 2 4007 7562 30300007 1 2019-10-11 3 3642 5643 20552372 1 2019-10-11 4 3496 1737 47873585 3 2019-10-11 5 3019 1617 82668665 4 2019-10-11 6 2357 1649 98052357 5 2019-10-11 ggplot(box, aes(x = Week, y = Gross, group = Movie)) + geom_line(alpha = .1) # Ok, that&#39;s weird. Some movie was in theaters for 100,000 weeks? Or re-released? filter(box, Week &gt; 100) %&gt;% group_by(Movie) %&gt;% summarize(max_week = max(Week)) %&gt;% arrange(desc(max_week)) `summarise()` ungrouping output (override with `.groups` argument) # A tibble: 120 x 2 Movie max_week &lt;chr&gt; &lt;dbl&gt; 1 Ghanchakkar 105065 2 The Captive 5186 3 The Wizard of Oz 3869 4 Detour (1945) (Re-Release) 3812 5 Le Corbeau (1943) (Re-Release) 3681 6 The Fallen Idol 3497 7 Monsieur Verdoux 3456 8 The Third Man 3434 9 Olivia 3415 10 Little Fugitive 3138 # … with 110 more rows box %&gt;% filter(Week &lt; 100) %&gt;% ggplot(aes(x = Week, y = Gross, group = Movie)) + geom_line(alpha = .01) + scale_y_log10() Warning in self$trans$transform(x): NaNs produced Warning: Transformation introduced infinite values in continuous y-axis Warning: Removed 2 row(s) containing missing values (geom_path). To me, this looks like there are two main groups of movies - the less common movies that are hugely grossing initially, but decline relatively quickly in weekly gross, and the more common movies that show a gradual decline until they are removed from theaters. Most movies don’t seem to go beyond 25 weeks. # Still kind of a mess. Let&#39;s facet by year of initial release movie_summary &lt;- box %&gt;% group_by(Movie) %&gt;% summarize(release_year = min(year(Date)), weeks = max(Week), total.gross = Total.Gross[Week == max(Week)], .groups = &quot;drop_last&quot;) box %&gt;% left_join(select(movie_summary, Movie, release_year)) %&gt;% filter(Week &lt; 25) %&gt;% ggplot(aes(x = Week, y = Gross, group = Movie)) + geom_line(alpha = .05) + facet_wrap(~release_year) + scale_y_log10() Joining, by = &quot;Movie&quot; Warning in self$trans$transform(x): NaNs produced Warning: Transformation introduced infinite values in continuous y-axis Warning: Removed 2 row(s) containing missing values (geom_path). This pattern is relatively consistent year after year, but some years have many more high-grossing movies. Let’s look at the relationship between last week’s rank and this week’s rank. box %&gt;% left_join(select(movie_summary, Movie, release_year)) %&gt;% filter(Week &lt; 25, Week &gt; 1) %&gt;% ggplot(aes(x = Rank.Last.Week, y = Rank, group = Movie)) + geom_point(alpha = .05) + scale_y_reverse() + facet_wrap(~Week) Joining, by = &quot;Movie&quot; Warning: Removed 1979 rows containing missing values (geom_point). It’s very strong, as expected, but this is extremely overplotted, so we might be missing some details. Let’s look at the 2d density to see if we get anything interesting. box %&gt;% filter(Week &lt; 15, Week &gt; 1) %&gt;% ggplot(aes(x = Rank.Last.Week, y = Rank)) + geom_density2d_filled() + scale_y_reverse() + facet_wrap(~Week) Warning: Removed 1586 rows containing non-finite values (stat_density2d_filled). As we go week by week, we see the mode of the distribution shift down in rank. By week 9, it’s extremely uncommon for a movie to be in the top 10. Next, lets look at the relationship between the number of theaters showing a movie and the weekly gross receipts. box %&gt;% left_join(select(movie_summary, Movie, release_year)) %&gt;% filter(Rank &lt;= 25) %&gt;% ggplot(aes(x = Thtrs., y = Gross)) + geom_density2d_filled() + scale_y_log10() Joining, by = &quot;Movie&quot; It would be interesting to see if this relationship is the same for all distributors. distributors &lt;- box %&gt;% group_by(Distributor, Movie) %&gt;% filter(Week == max(Week)) %&gt;% group_by(Distributor) %&gt;% summarize(n = n(), median.gross = median(Total.Gross)) %&gt;% arrange(desc(median.gross)) `summarise()` ungrouping output (override with `.groups` argument) head(distributors, 10) # A tibble: 10 x 3 Distributor n median.gross &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; 1 Walt Disney 76 185808558. 2 Columbia 1 169077585 3 Universal 118 66197380 4 20th Century Fox 105 65007045 5 Warner Bros. 150 53930748. 6 Paramount Pictures 81 52822418 7 Sony Pictures 130 37709109 8 MGM 4 34693428 9 Focus / Gramercy 1 26583369 10 IMAX Films 4 26349032 distributors %&gt;% filter(n &gt;= 25) %&gt;% # want distributors with at least 25 movies slice(1:10) %&gt;% # keep top 10 rows left_join(box) %&gt;% mutate(Distributor = factor(Distributor) %&gt;% reorder(-median.gross)) %&gt;% filter(Week &lt;= 10) %&gt;% # Only look at the first 10 weeks of a movie ggplot(aes(x = Thtrs., y = Gross)) + geom_density2d_filled(contour_var = &quot;ndensity&quot;) + scale_y_log10() + facet_wrap(~Distributor) Joining, by = &quot;Distributor&quot; It’s rather obvious that Disney is the real outlier here - it has movies that are extremely widely released and very high grossing, and a limited-release movie is a relatively rare thing. Compare this to e.g. Lionsgate, where most movies are limited to a few theaters and it’s relatively rare to have a widely released movie. 8.4 Good charts Earlier, I mentioned that we’ve known pie charts suck for 100 years. But what makes a chart good? And how do we tell? This is my area of research, so I’m going to try to keep this to a broad overview, but I may not succeed. Sorry in advance. A chart is good if it allows the user to draw useful conclusions that are supported by data. Obviously, this definition depends on the purpose of the chart - a simple EDA chart is going to have a different purpose than a chart showing e.g. the predicted path of a hurricane, which people will use to make decisions about whether or not to evacuate. Unfortunately, while our visual system is amazing, it is not always as accurate as the computers we use to render graphics. We have physical limits in the number of colors we can perceive, our short term memory, attention, and our ability to accurately read information off of charts in different forms. 8.4.1 Perceptual and Cognitive Factors 8.4.1.1 Color Color perception, color blindness, and context Our eyes are optimized for perceiving the yellow/green region of the color spectrum. Why? Well, our sun produces yellow light, and plants tend to be green. It’s pretty important to be able to distinguish different shades of green (evolutionarily speaking) because it impacts your ability to feed yourself. There aren’t that many purple or blue predators, so there is less selection pressure to improve perception of that part of the visual spectrum. Sensitivity of the human eye to different wavelengths of visual light (Image from Wikimedia commons) Not everyone perceives color in the same way. Some individuals are colorblind or color deficient. We have 3 cones used for color detection, as well as cells called rods which detect light intensity (brightness/darkness). In about 5% of the population (10% of XY individuals, &lt;1% of XX individuals), one or more of the cones may be missing or malformed, leading to color blindness - a reduced ability to perceive different shades. The rods, however, function normally in almost all of the population, which means that light/dark contrasts are extremely safe, while contrasts based on the hue of the color are problematic in some instances. You can take a test designed to screen for colorblindness here (your monitor may affect how you score on this test - I am colorblind, but on some monitors, I can pass the test, and on some, I perform worse than normal). A different test is available here. In reality, I know that I have issues with perceiving some shades of red, green, and brown. I have particular trouble with very dark or very light colors, especially when they are close to grey or brown. It is possible to simulate the effect of color blindness and color deficiency on an image. In addition to colorblindness, there are other factors than the actual color value which are important in how we experience color. knitr::include_graphics(&quot;image/CheckerShadow.png&quot;) Figure 8.1: The color constancy illusion. The squares marked A and B are actually the same color knitr::include_graphics(&quot;image/CheckerShadow2.png&quot;) Figure 8.2: The color constancy illusion. The squares marked A and B are actually the same color Our brains are extremely dependent on context and make excellent use of the large amounts of experience we have with the real world. As a result, we implicitly “remove” the effect of things like shadows as we make sense of the input to the visual system. This can result in odd things, like the checkerboard and shadow shown above - because we’re correcting for the shadow, B looks lighter than A even though when the context is removed they are clearly the same shade. Implications and Guidelines - Do not use rainbow color gradient schemes - because of the unequal perception of different wavelengths, these schemes are misleading - the color distance does not match the perceptual distance. - Avoid any scheme that uses green-yellow-red signaling if you have a target audience that may include colorblind people. - To “colorblind-proof” a graphic, you can use a couple of strategies: - double encoding - where you use color, use another aesthetic (line type, shape) as well to help your colorblind readers out - If you can print your chart out in black and white and still read it, it will be safe for colorblind users. This is the only foolproof way to do it! - If you are using a color gradient, use a monochromatic color scheme where possible. This is perceived as light -&gt; dark by colorblind people, so it will be correctly perceived no matter what color you use. - If you have a bidirectional scale (e.g. showing positive and negative values), the safest scheme to use is purple - white - orange. In any color scale that is multi-hue, it is important to transition through white, instead of from one color to another directly. - Be conscious of what certain colors “mean” - Leveraging common associations can make it easier to read a color scale and remember what it stands for (e.g. blue for cold, orange/red for hot is a natural scale, red = Republican and blue = Democrat in the US, white -&gt; blue gradients for showing rainfall totals) - Some colors can can provoke emotional responses that may not be desirable.32 - It is also important to be conscious of the social baggage that certain color schemes may have - the pink/blue color scheme often used to denote gender can be unnecessarily polarizing, and it may be easier to use a colder color (blue or purple) for men and a warmer color (yellow, orange, lighter green) for women33. - There are packages such as RColorBrewer and dichromat that have color palettes which are aesthetically pleasing, and, in many cases, colorblind friendly (dichromat is better for that than RColorBrewer). You can also take a look at other ways to find nice color palettes. 8.4.1.2 Short Term Memory We have a limited amount of memory that we can instantaneously utilize. This mental space, called short-term memory, holds information for active use, but only for a limited amount of time. Without rehearsing information, short term memory lasts a few seconds. Click here, read the information, and then click to hide it. 1 4 2 2 3 9 8 0 7 8 Wait a few seconds What was the third number? Without rehearsing the information (repeating it over and over to yourself), the try it out task may have been challenging. Short term memory has a capacity of between 3 and 9 “bits” of information. In charts and graphs, short term memory is important because we need to be able to associate information from e.g. a key, legend, or caption with information plotted on the graph. As a result, if you try to plot more than ~6 categories of information, your reader will have to shift between the legend and the graph repeatedly, increasing the amount of cognitive labor required to digest the information in the chart. Where possible, try to keep your legends to 6 or 7 characteristics. Implications and Guidelines - Limit the number of categories in your legends to minimize the short term memory demands on your reader. - When using continuous color schemes, you may want to use a log scale to better show differences in value across orders of magnitude. - Use colors and symbols which have implicit meaning to minimize the need to refer to the legend. - Add annotations on the plot, where possible, to reduce the need to re-read captions. 8.4.1.3 Grouping and Sense-making Imposing order on visual chaos. What does the figure below look like to you? When faced with ambiguity, our brains use available context and past experience to try to tip the balance between alternate interpretations of an image. When there is still some ambiguity, many times the brain will just decide to interpret an image as one of the possible options. Consider this image - what do you see? Did you see something like “3 circles, a triangle with a black outline, and a white triangle on top of that”? What’s actually there are 3 angles and 3 pac-man shapes. But, it’s much more likely that we’re seeing layers of information, where some of the information is obscured (like the “mouth” of the pac-man circles, or the middle segment of each side of the triangle). This explanation is simpler, and more consistent with our experience. Now, look at the logo for the Pittsburgh Zoo. Do you see the gorilla and lionness? Or do you see a tree? Here, we’re not entirely sure which part of the image is the figure and which is the background. The ambiguous figures shown above demonstrate that our brains are actively imposing order upon the visual stimuli we encounter. There are some heuristics for how this order is applied which impact our perception of statistical graphs. The catchphrase of Gestalt psychology is &gt; The whole is greater than the sum of the parts That is, what we perceive and the meaning we derive from the visual scene is more than the individual components of that visual scene. The Gestalt Heuristics help us to impose order on ambiguous visual stimuli You can read about the gestalt rules here, but they are also demonstrated in the figure above. In graphics, we can leverage the gestalt principles of grouping to create order and meaning. If we color points by another variable, we are creating groups of similar points which assist with the perception of groups instead of individual observations. If we add a trend line, we create the perception that the points are moving “with” the line (in most cases), or occasionally, that the line is dividing up two groups of points. Depending on what features of the data you wish to emphasize, you might choose different aesthetics mappings, facet variables, and factor orders. Example: Suppose I want to emphasize the change in the murder rate between 1980 and 2010. I could use a bar chart fbiwide %&gt;% filter(Year %in% c(1980, 2010)) %&gt;% ggplot(aes(x = State, y = Murder/Population*100000, fill = factor(Year))) + geom_col(position = &quot;dodge&quot;) + coord_flip() + ylab(&quot;Murders per 100,000 residents&quot;) Or, I could use a line chart fbiwide %&gt;% filter(Year %in% c(1980, 2010)) %&gt;% ggplot(aes(x = Year, y = Murder/Population*100000, group = State)) + geom_line() + ylab(&quot;Murders per 100,000 residents&quot;) Or, I could use a box plot fbiwide %&gt;% filter(Year %in% c(1980, 2010)) %&gt;% ggplot(aes(x = factor(Year), y = Murder/Population*100000)) + geom_boxplot() + ylab(&quot;Murders per 100,000 residents&quot;) Which one best demonstrates that in every state and region, the murder rate decreeased? The line segment plot connects related observations (from the same state) but allows you to assess similarity between the lines (e.g. almost all states have negative slope). The same information goes into the creation of the other two plots, but the bar chart is extremely cluttered, and the boxplot doesn’t allow you to connect single state observations over time. So while you can see an aggregate relationship (overall, the average number of murders in each state per 100k residents decreased) you can’t see the individual relationships. The aesthetic mappings and choices you make when creating plots have a huge impact on the conclusions that you (and others) can easily make when examining those plots.34 8.4.2 General guidelines for accuracy There are certain tasks which are easier for us relative to other, similar tasks. Figure 8.3: Which of the lines is the longest? Shortest? It is much easier to determine the relative length of the line when the ends are aligned. In fact, the line lengths are the same in both panels. In general, when making judgements corresponding to numerical quantities, there is an order of tasks from easiest (1) to hardest (6), with equivalent tasks at the same level.35 Position (common scale) Position (non-aligned scale) Length, Direction, Angle, Slope Area Volume, Density, Curvature Shading, Color Saturation, Color Hue If we compare a pie chart and a stacked bar chart, the bar chart asks readers to make judgements of position on a non-aligned scale, while a pie chart asks readers to assess angle. This is one reason why pie charts are not preferable – they make it harder on the reader, and as a result we are less accurate when reading information from pie charts. When creating a chart, it is helpful to consider which variables you want to show, and how accurate reader perception needs to be to get useful information from the chart. In many cases, less is more - you can easily overload someone, which may keep them from engaging with your chart at all. Variables which require the reader to notice small changes should be shown on position scales (x, y) rather than using color, alpha blending, etc. There is also a general increase in dimensionality from 1-3 to 4 (2d) to 5 (3d). In general, showing information in 3 dimensions when 2 will suffice is misleading - the addition of that extra dimension causes an increase in chart area allocated to the item that is disproportionate to the actual area. . Ted ED: How to spot a misleading graph - Lea Gaslowitz Business Insider: The Worst Graphs Ever Extra dimensions and other annotations are sometimes called “chartjunk” and should only be used if they contribute to the overall numerical accuracy of the chart (e.g. they should not just be for decoration). 8.4.3 How do we know? We do experiments on people (evil cackle)! No, seriously, we do. See this paper for a review of graphical testing in statistics, and this paper for one example of how we test competing designs to figure out that polar coordinates make everything harder. If you’re still curious after reading those, set up an appointment and let’s talk!. 8.5 References 8.5.1 Motivation If you think this all sounds complicated, read this blog post about saving graphics from Excel. 8.5.2 R graphics ggplot2 cheat sheet ggplot2 aesthetics cheat sheet - aesthetic mapping one page cheatsheet ggplot2 reference guide R graph cookbook Data Visualization in R (@ramnathv) Base R plots - Notes by Dr. Bilder Combine multiple plots with the cowplot and gridExtra packages 8.5.3 SAS graphics SGPLOT cheat sheet Replicating ggplot2 in SAS SGPLOT ODS Graphics in SAS Periodic Table of SAS ODS graphics (code and actual graphic) Holiday Graphics in SAS, and, on that same theme, Captain America in SAS 8.5.4 Types of Charts and Chart Styling The Data Vis Project Data Visualization Catalogue The pros and cons of chart taxonomies Data Visualization Style Guidelines 8.5.5 Other Graphics packages plotnine in python (ggplot2 clone) matplotlib in python Tableau - student licenses are free d3 - javascript graphics I’ll fully admit my bias here - I think ODS graphics are better than the default SAS graphics, but I still prefer the syntax and logic behind ggplot2. But, if you prefer SAS Graphics, you do you. Better you than me, is all I’m saying.↩ It’s not often you’ll find me approving of SAS graphics, but making it hard to make pie charts is definitely a point in SAS’s favor↩ This can sometimes be a pain, though, depending on the set up, because you may end up with labels that are repeated many, many times. As with any system, you just have to make sure you’re formatting your data consistent with the underlying philosophy.↩ I’ve driven through enough small towns in the South, and I have relatives in NW Iowa. There are a LOT of churches in those places↩ When the COVID-19 outbreak started, many maps were using white-to-red gradients to show case counts and/or deaths. The emotional association between red and blood, danger, and death may have caused people to become more frightened than what was reasonable given the available information.↩ Lisa Charlotte Rost. What to consider when choosing colors for data visualization.↩ See this paper for more details.↩ See this paper for the major source of this ranking; other follow-up studies have been integrated, but the essential order is largely unchanged.↩ "],
["simulation.html", "Module 9 Simulation and Reproducibility Module Objectives 9.1 Pseudorandom Number Generation 9.2 Built-in simulations from distributions 9.3 Simulation to test model assumptions 9.4 Monte Carlo methods 9.5 References", " Module 9 Simulation and Reproducibility Module Objectives Understand how pseudorandom number generation works and necessary conditions for reproducibility Be able to implement a simulation for a specific task, process, or model Simulation is an extremely important part of computational statistics. Bayesian statistics, in particular, relies on Markov Chain Monte Carlo (MCMC) to get results from even the most basic of models. In this module, we’re going to touch on a few foundational pieces of simulation in computing, and you will get more exposure to simulation-based methods in other courses down the line. 9.1 Pseudorandom Number Generation Computers are almost entirely deterministic, which makes it very difficult to come up with “random” numbers. In addition to the deterministic nature of computing, it’s also somewhat important to be able to run the same code and get the same results every time, which isn’t possible if you rely on truly random numbers. Historically, pseudorandom numbers were generated using linear congruential generators (LCGs). These algorithms aren’t typically used anymore, but they provide a good demonstration of how one might go about generating numbers that seem “random” but are actually deterministic. LCGs use modular arithmetic: \\(X_{n+1} = (aX_n + c) \\mod m\\) where \\(X_0\\) is the start value (the seed), \\(a\\) is the multiplier, \\(c\\) is the increment, and \\(m\\) is the modulus. When using a LCG, the user generally specifies only the seed. LCGs generate numbers which at first appear random, but once sufficiently many numbers have been generated, it is clear that there is some structure in the data. (Image from Wikimedia) The important thing to note here is that if you specify the same generator values (a, c, m, and \\(X_0\\)), you will always get the same series of numbers. Since a, c, m are usually specified by the implementation, as a user, you should expect that if you specify the same seed, you will get the same results, every time. It is critically important to set your seed if you want the results to be reproducible and you are using an algorithm that depends on randomness.36 Once you set your seed, the remaining results will only be reproducible if you generate the same set of random numbers every time. set.seed(342512) # Get 10 numbers after the seed is set sample(1:100, 10) [1] 65 51 64 21 45 53 3 6 43 8 # Compute something else that depends on randomness mean(rnorm(50)) [1] -0.1095366 # Get 10 more numbers sample(1:100, 10) [1] 4 57 69 10 76 15 67 1 3 91 Compare the results above to these results: set.seed(342512) # Get 10 numbers after the seed is set sample(1:100, 10) [1] 65 51 64 21 45 53 3 6 43 8 # Compute something else that depends on randomness mean(rnorm(30)) [1] -0.1936645 # Get 10 more numbers sample(1:100, 10) [1] 49 37 6 34 9 3 100 43 7 29 Notice how the results have changed? To make my documents more reproducible, I will sometimes set a new seed at the start of an important chunk, even if I’ve already set the seed earlier. This introduces certain “fixed points” where results won’t change immediately after I’ve re-set the seed. This is particularly important when I’m generating bootstrap estimates, fitting models, or simulating data for graphics experiments. Pick your seed in any way you want. I tend to just randomly wiggle my fingers over the number keys, but I have also heard of people using the date in yyyymmdd format, favorite people’s birthdays, the current time in hhmmss format… basically, you can use anything. 9.2 Built-in simulations from distributions Often, we can get away with just simulating data from a known distribution. As both R and SAS are meant for statistical computing, this is extremely easy by design. In R You can see the various distribution options using ?Distributions. In general, dxxx is the PDF/PMF, pxxx is the CDF, qxxx is the quantile function, and rxxx gives you random nubmers generated from the distribution. (xxx, obviously, is whatever distribution you’re looking to use.) library(tibble) library(dplyr) library(tidyr) library(ggplot2) set.seed(109025879) tibble( norm = rnorm(500), gamma = rgamma(500, shape = 3, scale = 1), exp = rexp(500, rate = 1), # R uses a exp(-ax) t = rt(500, df = 5), chisq = rchisq(500, 5) ) %&gt;% pivot_longer(1:5, names_to = &quot;dist&quot;, values_to = &quot;value&quot;) %&gt;% ggplot(aes(x = value)) + geom_density() + facet_wrap(~dist, scales = &quot;free&quot;, nrow = 1) In SAS You can see the various distribution options in the RAND documentation. %let N=500; /* size of sample */ DATA sample; call streaminit(12532); DO i = 1 to &amp;N; /* &amp;N is the value of the macro variable defined above */ id = i; norm = rand(&quot;Normal&quot;, 0, 1); gamma = rand(&quot;Gamma&quot;, 3, 1); exp = rand(&quot;Exponential&quot;, 1); /* SAS uses 1/a exp(-x/a) */ t = rand(&quot;T&quot;, 5); chisq = rand(&quot;Chisq&quot;, 5); OUTPUT; END; RUN; PROC TRANSPOSE data=sample out=longsample (rename=(COL1 = value)) /* rename output variable (&#39;values_to&#39;) */ NAME = dist /* where the column names go (&#39;names_to&#39;) */ ; BY id; VAR norm gamma exp t chisq; RUN; PROC SGPANEL data=longsample; PANELBY dist / COLUMNS = 5 UNISCALE = ROW NOVARNAME; DENSITY value / TYPE = KERNEL; RUN; Try it out Generate variables x and y, where x is a sequence from -10 to 10 and y is equal to \\(x + \\epsilon\\), \\(\\epsilon \\sim N(0, 1)\\). Fit a linear regression to your simulated data (in R, lm, in SAS, PROC REG). In R set.seed(20572983) data &lt;- tibble(x = seq(-10, 10, .1), y = x + rnorm(length(x))) regression &lt;- lm(y ~ x, data = data) summary(regression) Call: lm(formula = y ~ x, data = data) Residuals: Min 1Q Median 3Q Max -3.14575 -0.70986 0.03186 0.65429 2.40305 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) -0.01876 0.06869 -0.273 0.785 x 0.99230 0.01184 83.823 &lt;2e-16 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.9738 on 199 degrees of freedom Multiple R-squared: 0.9725, Adjusted R-squared: 0.9723 F-statistic: 7026 on 1 and 199 DF, p-value: &lt; 2.2e-16 In SAS DATA tmp; call streaminit(20572983); DO i = -10 to 10 by .1; x = i; y = x + rand(&quot;Normal&quot;); OUTPUT; END; RUN; PROC REG data = tmp; MODEL y = x; RUN; Model: MODEL1 Dependent Variable: y Number of Observations Read 201 Number of Observations Used 201 Analysis of Variance Source DF Sum ofSquares MeanSquare F Value Pr &gt; F Model 1 6638.19224 6638.19224 6592.27 &lt;.0001 Error 199 200.38634 1.00697 Corrected Total 200 6838.57858 Root MSE 1.00348 R-Square 0.9707 Dependent Mean -0.09630 Adj R-Sq 0.9706 Coeff Var -1042.03435 Parameter Estimates Variable DF ParameterEstimate StandardError t Value Pr &gt; |t| Intercept 1 -0.09630 0.07078 -1.36 0.1752 x 1 0.99044 0.01220 81.19 &lt;.0001 Model: MODEL1 Dependent Variable: y 9.3 Simulation to test model assumptions One of the more powerful ways to use simulation in practice is to use it to test the assumptions of your model. Suppose, for instance, that your data are highly skewed, but you want to use a method that assumes normally distributed errors. How bad will your results be? Where can you trust the results, and where should you be cautious? Example: Confidence Interval coverage rates Suppose, for instance, that we have a lognormal distribution (highly skewed) and we want to compute a 95% confidence interval for the mean of our data. set.seed(40295023) sim &lt;- tibble( id = rep(1:100, each = 25), # generate 100 samples of 25 points each ln_x = rnorm(25*100), # generate the normal deviates x = exp(ln_x), # transform into lognormal deviates ) %&gt;% # this creates a 100-row data frame, with one row for each id. # the columns x, ln_x are stored in the data list-column as a tibble. nest(data = c(x, ln_x)) head(sim) # A tibble: 6 x 2 id data &lt;int&gt; &lt;list&gt; 1 1 &lt;tibble [25 × 2]&gt; 2 2 &lt;tibble [25 × 2]&gt; 3 3 &lt;tibble [25 × 2]&gt; 4 4 &lt;tibble [25 × 2]&gt; 5 5 &lt;tibble [25 × 2]&gt; 6 6 &lt;tibble [25 × 2]&gt; sim$data[[1]] # A tibble: 25 x 2 x ln_x &lt;dbl&gt; &lt;dbl&gt; 1 0.310 -1.17 2 0.622 -0.475 3 0.303 -1.19 4 1.05 0.0525 5 0.529 -0.636 6 1.09 0.0891 7 1.97 0.676 8 8.94 2.19 9 0.598 -0.514 10 0.183 -1.70 # … with 15 more rows You want to assess the coverage probability of a confidence interval computed under two different modeling scenarios: Working with the log-transformed values, ln(x), and then transform the computed interval back Working with the raw values, x, compute an interval assuming the data are symmetric, essentially treating the lognormal distribution as if it were normal. Under scenario 1, our theoretical interval should be exp((-1.96/5, 1.96/5)) (because \\(\\mu\\) is 0, and \\(\\sigma\\) is 1, so \\(SE(\\overline x) = 1/\\sqrt{25} = 1/5\\)). \\((0.6757041,1.4799377)\\) Under scenario 2, the expected value of the lognormal distribution is \\(\\exp(1/2) = 1.6487213\\), the variance is \\((\\exp(1) - 1)(\\exp(1)) = 4.6707743\\) and our theoretical interval should be \\((0.8015319, 2.4959107)\\). Note that this interval contains 0, which is implausible for lognormally distributed data. Note that our expected values are different under scenario 1 and scenario 2: in scenario 1 we are computing an interval for \\(\\mu\\), in scenario 2, we are computing an interval for the population mean, which is \\(\\exp(\\mu + .5\\sigma^2)\\). Both are valid quantities we might be interested in, but they do not mean the same thing. Note that the purrr::map notation specifies that we’re using the map function from the purrr package. When functions are named generically, and there may be more than one package with a function name, it is often more readable to specify the package name along with the function. purrr::map takes an argument and for each “group” calls the compute_interval function, storing the results in res. So each row in res is a 1x2 tibble with columns lb and ub. This pattern is very useful in all sorts of applications. I wish we had time to cover purrr explicitly, but I at least want to expose you to how clean it makes your code. compute_interval &lt;- function(x) { s1 &lt;- exp(mean(log(x)) + c(-1, 1) * qnorm(.975) * sd(log(x))/sqrt(length(x))) s2 &lt;- mean(x) + c(-1, 1) * qnorm(.975) * sd(x)/sqrt(length(x)) tibble(scenario = c(&quot;scenario_1&quot;, &quot;scenario_2&quot;), mean = c(1, exp(1/2)), lb = c(s1[1], s2[1]), ub = c(s1[2], s2[2]), in_interval = (lb &lt; mean) &amp; (ub &gt; mean)) } sim_long &lt;- sim %&gt;% # This line takes each data entry and computes an interval for x. # .$x is code for take the argument you passed in to map and get the x column mutate(res = purrr::map(data, ~compute_interval(.$x))) %&gt;% # this &quot;frees&quot; res and we end up with two columns: lb and ub, for each scenario unnest(res) ci_df &lt;- tibble(scenario = c(&quot;scenario_1&quot;, &quot;scenario_2&quot;), mu = c(1, exp(1/2)), lb = c(exp(-1.96/5), exp(.5) - 1.96*sqrt((exp(1) - 1)*exp(1))/5), ub = c(exp(1.96/5), exp(.5) + 1.96*sqrt((exp(1) - 1)*exp(1))/5)) ggplot() + geom_rect(aes(xmin = lb, xmax = ub, ymin = -Inf, ymax = Inf), data = ci_df, fill = &quot;grey&quot;, alpha = .5, color = NA) + geom_vline(aes(xintercept = mu), data = ci_df) + geom_segment(aes(x = lb, xend = ub, y = id, yend = id, color = in_interval), data = sim_long) + scale_color_manual(values = c(&quot;red&quot;, &quot;black&quot;)) + theme_bw() + facet_wrap(~scenario) From this, we can see that working with the log-transformed, normally distributed results has better coverage probability than working with the raw data and computing the population mean: the estimates in the latter procedure have lower coverage probability, and many of the intervals are much wider than necessary; in some cases, the interval actually lies outside of the domain. Example: Regression and high-leverage points What happens if we have one high-leverage point (e.g. a point which is an outlier in both x and y)? How pathological do our regression coefficient estimates get? The challenging part here is to design a data generating mechanism. gen_data &lt;- function(n = 30, o = 1, error_sd = 2) { # generate the main part of the regression data data &lt;- tibble(x = rnorm(n = n - o, mean = seq(-10, 10, length.out = n - o), sd = .1), y = x + rnorm(length(x), mean = 0, sd = error_sd)) # generate the outlier - make it at ~(-10, 5) outdata &lt;- tibble(x = rnorm(o, -10), y = rnorm(o, 5, error_sd)) bind_rows(data, outdata) } sim_data &lt;- tibble( id = 1:300, o = rep(0:2, each = 100), # call gen_data for each row in sim_data, but don&#39;t really use id as a parameter. data = purrr::map(o, ~gen_data(o = .)) ) head(sim_data) # A tibble: 6 x 3 id o data &lt;int&gt; &lt;int&gt; &lt;list&gt; 1 1 0 &lt;tibble [30 × 2]&gt; 2 2 0 &lt;tibble [30 × 2]&gt; 3 3 0 &lt;tibble [30 × 2]&gt; 4 4 0 &lt;tibble [30 × 2]&gt; 5 5 0 &lt;tibble [30 × 2]&gt; 6 6 0 &lt;tibble [30 × 2]&gt; # plot a few datasets just to check they look like we expect: sim_data %&gt;% filter(id %% 100 &lt; 3) %&gt;% unnest(data) %&gt;% ggplot(aes(x = x, y = y)) + geom_point() + facet_grid(id %% 100 ~ o ) library(broom) # the broom package cleans up model objects to tidy form sim_data &lt;- sim_data %&gt;% # fit linear regression mutate(model = purrr::map(data, ~lm(y ~ x, data = .))) %&gt;% mutate(tidy_model = purrr::map(model, tidy)) # Get the coefficients out tidy_coefs &lt;- select(sim_data, id, o, tidy_model) %&gt;% unnest(tidy_model) %&gt;% mutate(group = case_when(o == 0 ~ &quot;No HLPs&quot;, o == 1 ~ &quot;1 HLP&quot;, o == 2 ~ &quot;2 HLPs&quot;) %&gt;% factor(levels = c(&quot;No HLPs&quot;, &quot;1 HLP&quot;, &quot;2 HLPs&quot;))) ggplot(tidy_coefs, aes(x = estimate, color = group)) + facet_grid(term ~ .) + geom_density() Obviously, you should experiment with different methods of generating a high-leverage point (maybe use a different distribution?) but this generating mechanism is simple enough for our purposes and shows that the addition of high leverage points biases the true values (slope = 1, intercept = 0). Here is a similar example worked through in SAS with IML. Note the use of BY-group processing to analyze each group at once - this is very similar to the use of purrr::map() in the R code. Try it out Let’s explore what happens to estimates when certain observations are censored. Suppose we have a poorly-designed digital thermometer which cannot detect temperatures above 102\\(^\\circ F\\); for these temperatures, the thermometer will record a value of 102.0. It is estimated that normal body temperature for dogs and cats is 101 to 102.5 degrees Fahrenheit, and values above 104 degrees F are indicative of illness. Given that you have this poorly calibrated thermometer, design a simulation which estimates the average temperature your thermometer would record for a sample of 100 dogs or cats, and determine the magnitude of the effect of the thermometer’s censoring. Hint If most pets have a normal body temperature between 101 and 102.5 degrees, can you use these bounds to determine appropriate parameters for a normal distribution? What if you assume that 101 and 102.5 are the 2SD bounds? Solution If 101 and 102.5 are the anchor points we have, let’s assume that 95% of normal pet temperatures fall in that range. So our average temperature would be 101.75, and our standard deviation would be .75/2 = 0.375. We can simulate 1000 observations from \\(N(101.75, 0.375)\\), create a new variable which truncates them at 102, and compute the mean of both variables to determine just how biased our results are. DATA dogtemp; call streaminit(20572983); DO i = 1 to 1000; actual = rand(&quot;Normal&quot;, 101.75, 0.375); IF actual &gt; 102 THEN read = 102; IF actual &lt;= 102 THEN read = actual; OUTPUT; END; RUN; PROC MEANS DATA = dogtemp; VAR actual read; RUN; Variable N Mean Std Dev Minimum Maximum actual read 1000 1000 101.7455820 101.6862713 0.3850419 0.3031418 100.6693806 100.6693806 102.9749567 102.0000000 set.seed(204209527) dogtemp &lt;- tibble( actual = rnorm(1000, 101.75, 0.375), read = pmin(actual, 102) ) dogtemp %&gt;% summarize_all(mean) # A tibble: 1 x 2 actual read &lt;dbl&gt; &lt;dbl&gt; 1 102. 102. The effect of the thermometer’s censoring in both cases is around 0.06 degrees F. 9.4 Monte Carlo methods Monte carlo methods are methods which rely on repeated random sampling in order to solve numerical problems. Often, the types of problems approached with MC methods are extremely difficult or impossible to solve analytically. In general, a MC problem involves these steps: Define the input domain Generate inputs randomly from an appropriate probability distribution Perform a computation using those inputs Aggregate the results. Let’s try it out by using MC simulation to estimate the number of uniform (0,1) random variables needed for the sum to exceed 1. More precisely, if \\(u_i \\sim U(0,1)\\), where _{i=1}^k u_i &gt; 1, what is the expected value of \\(k\\)? In this simulation, our input domain is [0,1]. Our input is \\(u_i \\sim U(0,1)\\) We generate new \\(u_i\\) until \\(\\sum_{i=1}^k &gt; 1\\) and save the value of \\(k\\) We average the result of \\(N\\) such simulations. # It&#39;s easier to think through the code if we write it inefficiently first sim_fcn &lt;- function() { usum &lt;- 0 k &lt;- 0 # prevent infinite loops by monitoring the value of k as well while (usum &lt; 1 &amp; k &lt; 15) { usum &lt;- runif(1) + usum k &lt;- k + 1 } return(k) } set.seed(302497852) res &lt;- tibble(k = replicate(1000, sim_fcn(), simplify = T)) mean(res$k) [1] 2.717 If we want to see whether the result converges to something, we can increase the number of trials we run: set.seed(20417023) sim_res &lt;- tibble(samp = replicate(250000, sim_fcn(), simplify = T)) sim_res &lt;- sim_res %&gt;% mutate(running_avg_est = cummean(samp), N = row_number()) ggplot(aes(x = N, y = running_avg_est), data = sim_res) + geom_hline(yintercept = exp(1), color = &quot;red&quot;) + geom_line() The expected number of uniform RV draws required to sum to 1 is \\(e\\)! Explanation of why this works Monte Carlo methods are often used to approximate the value of integrals which do not have a closed-form (in particular, these integrals tend to pop up frequently in Bayesian methods). Suppose you want to integrate \\[\\int_0^1 e^{-x^3}dx\\]. You could set up Riemann integration and evaluate the integral using a sum over \\(K\\) points, but that approach only converges for smooth functions (and besides, that’s boring calc 2 stuff, right?). Instead, let’s observe that this is equivalent to \\(\\int_0^1 e^{-x^3}\\cdot 1 dx\\), where \\(p(x) = 1\\) for a uniform random variable. That is, this integral can be written as the expected value of the function over the interval \\([0,1]\\). What if we just generate a bunch of uniform(0,1) variables, evaluate the value of the function at that point, and average the result? Implementation set.seed(20491720) fn &lt;- function(x) exp(-x^3) sim_data &lt;- tibble(x = runif(100000), y = fn(x)) mean(sim_data$y) [1] 0.8076082 DATA tmp; CALL streaminit(20283492); DO i = 1 to 100000; x = RAND(&quot;Uniform&quot;, 0, 1); y = EXP(-x**3); OUTPUT; END; RUN; PROC MEANS data=tmp; VAR y; RUN; Analysis Variable : y N Mean Std Dev Minimum Maximum 100000 0.8075430 0.1965383 0.3678807 1.0000000 You can use the law of large numbers to prove that this approach will converge. Example stolen from this set of lecture notes Try it out Buffon’s needle is a mathematical problem which can be boiled down to a simple physical simulation. Read this science friday description of the problem and develop a monte carlo simulation method which estimates \\(\\pi\\) using the Buffon’s needle method. Your method should be a function which allows the user to specify how many sticks are dropped plots the result of the physical simulation prints out a numerical estimate of pi. Solution Let’s start out with horizontal lines at 0 and 1, and set our stick length to 1. We need to randomly generate a position (of one end of the stick) and an angle. Note that the position in \\(x\\) doesn’t actually make much of a difference (since what we care about is the \\(y\\) coordinates), but we can draw a picture if we generate \\(x\\) as well. needle_sim &lt;- function(sticks = 100) { df &lt;- tibble(xstart = runif(sticks, 0, 10), ystart = runif(sticks, 0, 1), angle = runif(sticks, 0, 360), xend = xstart + cos(angle/180*pi), yend = ystart + sin(angle/180*pi) ) %&gt;% # We can see if a stick crosses a line if the floor() function of ystart is # different than floor(yend). Note this only works for integer line values... mutate(crosses_line = floor(ystart) != floor(yend)) gg &lt;- ggplot() + geom_hline(yintercept = c(0, 1)) + geom_segment(aes(x = xstart, y = ystart, xend = xend, yend = yend, color = crosses_line), data = df) + coord_fixed() return(list(est = 2 * sticks/ sum(df$crosses_line), plot = gg)) } needle_sim(10) $est [1] 2.8571429 $plot needle_sim(100) $est [1] 2.8985507 $plot needle_sim(1000) $est [1] 3.1298905 $plot needle_sim(10000) $est [1] 3.1235358 $plot This blog post contains code for a SAS implementation 9.5 References Simulation (R programming for Data Science chapter) Simulation - R Studio lesson Simulation, focusing on statistical modeling (R) Simulating Data with SAS (Excerpt) Simulating a Drunkard’s Walk in 2D in SAS Simulation from a triangle distribution (SAS) Simulating the Monty Hall problem (SAS) When to use purrr (part of the ‘teaching the tidyverse’ series) - essentially, purrr is a great intro to functional programming, but there are other ways to solve iterative problems in R as well, and some of them are easier than purrr (but purrr is a general approach that is very powerful). I once helped a friend fit a model for their masters thesis using Simulated Annealing (which relies on random seeds). We got brilliant results, but couldn’t ever reproduce them, because I hadn’t set the seed first and we never could figure out what the original seed was. Learn from my mistakes.↩ "],
["docs-reports.html", "Module 10 Documents and Reports Module Objectives 10.1 Literate Programming, knitr, and rmarkdown 10.2 A Very Brief Introduction to LaTeX 10.3 Slides 10.4 Posters 10.5 Resume/CV 10.6 Using Github Pages 10.7 References", " Module 10 Documents and Reports Module Objectives Be able to create presentation slides in LaTeX and rmarkdown posters in LaTeX and rmarkdown A CV in LaTeX and/or rmarkdown This chapter will be shorter in length than many of the rest, but you should not devote less time to it. Instead, you should spend the time playing with the different options presented here and deciding which one of each is your favorite. Rather than detailing all of the customization options in each package, I think you’ll have an easier time looking at examples, trying to customize them yourself to get the effect you want, and figuring out how to do that by reading the documentation, stackoverflow posts, and other help files – those are the skills you’ll need when you try to put this knowledge into action. At the end of this chapter there are a few extras – for instance, how to use GitHub to host your documents, how to create a blog with blogdown, and more. You should feel free to investigate, but as long as you are able to create presentation slides, posters, and a CV, you’re good to go. 10.1 Literate Programming, knitr, and rmarkdown Literate programming is a programming method where you explain the code in natural language (e.g. English) in roughly the same space that you write the code (in a programming language). This solves two problems: code isn’t always clear as to what its goals are, and natural language descriptions of algorithms aren’t always clear enough to contain the details of how something is actually implemented. The knitr and Rmarkdown packages are both implementations of literate programming (and the two packages tend to overlap a bit, because both were written by the same author, Yihui Xie). knitr is primarily focused on the creation of Rnw (r no weave) files, which are essentially LaTeX files with R code inside. Rnw files are compiled into pdfs. rmarkdown uses Rmd or Rmarkdown files, which can then be compiled into many different formats: pdf, html, markdown, Microsoft Word. One major advantage of knitr and Rmarkdown from a practical perspective is that it largely removes the need to keep track of graphs and charts when you’re writing a paper, making a presentation, etc. The charts and tables based on your method automatically update when the document is recompiled. If you’re not reading this chapter early, you’ve been using Rmarkdown for the entire semester to submit your homework. Hopefully that’s been fairly easy - you’ve been creating Rmarkdown documents all semester. In this chapter, we’re going to explore some other applications of literate programming: creating slides, posters, and more. 10.2 A Very Brief Introduction to LaTeX LaTeX is a document preparation utility that attempts to take the focus off of layout (so you don’t have to spend 30 minutes trying to get the page break in the right place in e.g. Word) and bibliographic details. I’m not convinced LaTeX succeeds at freeing you from layout concerns, but it’s certainly true that it is much more powerful than Word for layout purposes. The philosophy of LaTeX is that presentation shouldn’t get in the way of content: you should be able to change the presentation formatting systematically, without having to mess with the content. This allows you to switch templates easily, make document-wide changes in a single command, and more. In Rstudio, copy the text in the document below, paste it into a text file in the editor window, and name it test.tex. You should see a Compile PDF button show up at the top of the document. Click that button to compile the document. \\documentclass{article} % this tells LaTeX what type of document to make % Note, comments are prefaced by a % sign. If you need to type the actual symbol % you will have to escape it with \\%. \\begin{document} Hello \\LaTeX! \\end{document} Most commonly, you’ll use the article document class for papers, and beamer for presentations and posters. Other useful classes include moderncv (for CVs) and book, as well as the LaTeX class maintained by the UNL math department for thesis formatting. Note that by changing the extension of any .tex file to .Rnw, you can easily add R code chunks to a LaTeX file. There are several types of latex commands: Declarations: statements like \\documentclass, \\usepackage or \\small, which are stated once and take effect until further notice. Environments: statements with matching \\begin{xxx} and \\end{xxx} clauses that define a block of the document which is treated differently. Common environments include figures and tables. Special characters: another type of command that don’t define formatting or structure, but may print special characters, e.g. \\% to print a literal % character. Both declarations and environments may come with both optional and required arguments. Required arguments are placed in {...} brackets, while optional arguments are placed in [...] brackets. You can, for instance, start your document with \\documentclass[12pt]{article} to specify the base font size. One of the most useful features in LaTeX is math mode, which you can enter by enclosing text in $...$ (for inline statements), $$...$$ (for statements on their own line), or using other environments like \\begin{array}...\\end{array} that come in math-specific packages. Once in math mode, you can use math symbol commands to get characters like \\(\\theta, \\pi, \\sum, \\int, \\infty\\), and more. Try it out With any document creation software, the easiest way to learn how to do it is to find a sample document, tinker with it, see if you can make things the way you want them to be, and then google the errors when you inevitably screw something up. Take the sample document up above and see if you can do the following tasks: (I’ve linked to documentation that may be useful) Add an image Add the quadratic formula and the PDF of a normal distribution to the document In extremely large text, print LaTeX using the \\LaTeX command In extremely small, italic text, print your name Solution \\documentclass{article} % this tells LaTeX what type of document to make % Add the graphicx package so that we can include images \\usepackage{graphicx} \\begin{document} Hello \\LaTeX! % Include a figure \\begin{figure}[h] \\centering \\includegraphics[width=.5\\textwidth]{../image/IllusoryContour.png} \\caption{Illusory contour image} \\end{figure} % Add the quadratic formula and the normal PDF to the document $y = ax^2 + bx + c$ can be solved to get $$x = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}$$ The PDF of a normal distribution is $$f(x | \\mu, \\sigma) = \\frac{1}{\\sigma\\sqrt{2\\pi}} e^{-\\frac{(x - \\mu)^2}{2\\sigma^2}}$$ % In extremely large text, print \\LaTeX \\Huge\\LaTeX % In extremely small italic text, print your name \\tiny\\emph{Your name} \\end{document} You can see the compiled pdf here. 10.2.1 Knitr R code chunks are embedded in LaTeX documents using: % start of chunk &lt;&lt;chunk-name, ...options...&gt;&gt;= @ % end of chunk You can embed numerical results inline using \\Sexpr{...} where your R code goes in the .... Unfortunately, knitr does not work with SAS… for that, you’ll need Rmarkdown (or you can use a Jupyter notebook). How this works To compile a Rnw document, knitr first runs all of the R code, generating any figures or tables or text output for each chunk. For each chunk, knitr replaces the chunk code with LaTeX code to include the results; the result of this operation is saved to a tex file. Once the tex file is created, knitr compiles the tex file into a pdf. 10.3 Slides 10.3.1 Beamer (LaTeX) and knitr Beamer is a powerful LaTeX class which allows you to create slides. The only change necessary to turn a beamer slide deck into a knitr slide deck is to add fragile as an option to any slide with verbatim content. You can also create Beamer slides with Rmarkdown. Example presentation. Standard tradeoffs (formatting details vs. document complexity) apply. Try it out Download and compile beamer-demo.Rnw. What happens when you remove the [fragile] from each frame declaration? Can you change the theme of the presentation? Add another slide, and on that slide, show an appropriate style ggplot2 graph of the distribution of board game ratings, reading in the board game ratings using the following code: board_games &lt;- readr::read_csv(&quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-03-12/board_games.csv&quot;) Karl Broman has a set of slides that show how to use beamer + knitr to make reproducible slides with notes. You can also create Beamer slides using Rmarkdown, if you want, but you’ll probably have more control over the fine details if you go straight to the Rnw file without going through Rmd first. It’s a trade-off – the file will probably be simpler in Rmarkdown, but you won’t have nearly as much control. 10.3.2 HTML slides RStudio has a host of other options for html slide presentations. There are some definite advantages to HTML presentations: they’re easy to share (via URL), you can add gifs, emojis, and interactive graphics, and you can set up github to host the presentations as well37. The downside to HTML slides is that there are approximately 100000 different javascript libraries that create HTML slides, and all of them have different capabilities. Many of these libraries have R extensions that will let you create Rmarkdown slides, but they each have slightly different markdown syntax and capabilities. Slide options available by default in RStudio You can get the full details of any fully supported slide class in Rmarkdown by looking at the Rmarkdown book, which is freely available online. These guidelines will give you specifics about how to customize slides, add incremental information, change transitions, print your slides to PDF, and include speaker notes. It should be relatively straightforward to create an ioslides or slidy presentation, given that you’ve been using Rmarkdown all semester. From some reading, it seems as if slidy has more options, but ioslides is simpler to use. However, the library I prefer at the moment is xaringan, which is a package written by Yihui Xie (same guy that wrote rmarkdown/knitr). If you install the xaringan package, you can easily create a xaringan presentation by selecting the “From Template” option in the “New R markdown” window (shown above). Yihui has an excellent blog post describing the features of xaringan that aren’t found in other libraries. Rather than repeat the documentation for each slide package in this document, I think it is probably easier just to link you to the documentation and a sample presentation for each option. ioslides Example presentation slidy Example presentation xaringan Example presentation, Example presentation 2 using UNL CSS theme reveal.js Example presentation Take a few minutes and try each of them out to see what feels right to you. If you’re familiar with CSS (or happier tinkering to get the look of something exactly right) then xaringan is an excellent full-featured option. A nice feature of reveal.js presentations (my favorite option before xaringan) is support for 2D slide layouts, so you can have multiple sections in your presentation, and move vertically through each section, or horizontally between sections. That is useful for presentations where you may not plan on covering everything, but where you want to have all of the information available if necessary. I relied heavily on that during my PhD prelim and defense. 10.4 Posters Posters are another common vehicle for presenting academic project results. Because posters are typically printed on paper or fabric, the standard file format is still PDF. With that said, a number of HTML poster options exist and seem to be relatively well polished38, and some have PDF export capabilities so that you can have the best of both worlds - interactivity online, and static, stable PDF exports as well. 10.4.1 LaTeX Overleaf has a fantastic gallery of posters made in LaTeX. There are several LaTeX options for making scientific posters: baposter, beamerposter, tikzposter are among the most common. We’ll focus on beamerposter here, but you are free to explore the other poster classes at will. As with beamer, you can easily integrate knitr code chunks into a document, so that you are generating your images reproducibly. Basic code for a poster in beamer (along with the necessary style files) that I’ve minimally customized to meet UNL branding requirements can be found here. Try it out Download the beamer template and do the following: Change the 3-column span box to a 2-column span box. Make the “Block Colors” box purple Move the References block up to fill the 4th column. 10.4.2 Posterdown To start, install posterdown with install.packages(&quot;posterdown&quot;). Use the RStudio menu to create a posterdown presentation file – with a prefilled template I have provided an example posterdown theme here. You can also find the additional customization options here. As with other markdown items, you can customize things even more using CSS. The nice thing about HTML posters, though, is that you can directly link to them. You can also print a poster to PDF by running the following command: pagedown::chrome_print(&quot;myfile.Rmd&quot;). See the pdf version of my customized UNL-themed poster. 10.4.3 Pagedown The pagedown package also has a couple of poster templates, including poster-relaxed and poster-jacobs. There are also templates for letters, business cards, and more in pagedown, if you’re feeling ambitious. Try it out Download the pagedown template and do the following: Change the 3-column layout to 4 columns. Adjust the breaks ({.mybreak}) accordingly to make the poster look good. Make the 2nd-level headers #249ab5 (cerulean) Move the References block to the 4th column. Print your poster to a PDF 10.5 Resume/CV You can also create resumes and CVs in markdown and LaTeX. There is no real substitute for playing around with these classes, but I really like moderncv in LaTeX39 Pagedown also comes with a html resume template (Use the menu -&gt; Rmarkdown -&gt; From Template -&gt; HTML Resume) that can be printed to html and pdf simultaneously. There is also the vitae package, which has even more templates, integration with other packages/sites, and more.40 10.6 Using Github Pages Github will host HTML content for you using Github pages (case in point: this textbook). This means you can version control your content (for instance, presentations or your CV) and have GitHub do the hosting (so you don’t have to find a webserver, buy a domain name, etc). Create a new repository named username.github.io Clone your repository Add an index.html file (this can be anything, e.g. a text file that says “hello world”, so long as it has an extension of html) and push your changes Go to https://username.github.io (YouTube Link) Github will render any README.md file as actual HTML; it will also allow you to host straight HTML pages. By default, the README file is rendered first, but in subsequent directories, a file named index.html will be rendered as the “home page” for the subdirectory, if you have such a file. Otherwise you’ll have to know the file name. I tend to separate things out into separate repositories, but you can host HTML content on other repositories too, by enabling github pages in the repository settings. On my personal page, I have repositories for my CV, Presentations41, etc. Each repository that has pages enabled can be accessed via srvanderplas.github.io/&lt;repository name&gt;/&lt;repository file path&gt;. So, to see my unl-stat850 repository, you’d go to https://srvanderplas.github.io/unl-stat850/ (but you’re already there!). (YouTube Link) This mechanism provides a very convenient way to showcase your work, share information with collaborators, and more - instead of sending files, you can send a URL and no one has to download anything overtly. If you want to track your Rmarkdown code and then render the output to a separate folder, you can use the docs/ folder. Github has this as an option as well – where we selected “master” branch above, we would select “docs/” instead (it’s greyed out b/c there isn’t a docs folder in the repo). That is how this book is hosted - the book compiles to the docs/ folder, and that way the book is rendered in final form and you don’t have to see all of the other crud that is in the repository. 10.7 References There are many other XXXdown packages, including blogdown bookdown (what I’m using to make this book) pkgdown (to easily build documentation websites for R packages) ROpenSci tutorial: How to set up hosting on github liftr - use Docker to make persistently reproducible documents I have a repository for all of the presentations I’ve given, and I use github pages to render the html presentations. Very easy, convenient, and I never have to carry a flash drive around↩ See this list of Rmarkdown poster options.↩ You can see my highly customized version here, with timelines and numbered publications. It has to be compiled multiple times to get everything right, though.↩ At this point, the biggest reason I haven’t switched to HTML is that I really like my timeline CV and I don’t have enough time to fiddle with it more.↩ I’ve been putting my presentations on Github since 2014, so it has a pretty good record of every set of slides I’ve created for anything important (and many not-so-important things as well). I highly recommend this strategy - by storing everything online, you make it very easy to share your work with others, very easy to reference later, and more importantly, easy for you to find in 3 years when you need that one specific picture.↩ "],
["animated-and-interactive-graphics.html", "Module 11 Animated and Interactive Graphics Module Objectives 11.1 Plotly 11.2 Leaflet maps 11.3 Shiny 11.4 General References", " Module 11 Animated and Interactive Graphics Interactive and animated graphics are one of the major advantages of using the Rmarkdown ecosystem - because you can easily create web pages in markdown (without the pain of HTML), you aren’t limited by paper any more. We’ll cover two different technologies that allow you to create different types of interactive charts, graphs, and interfaces. It is helpful to think about interactivity in a couple of different ways: What does it require? Do you need to be doing statistical calculations in the background, or can you precompute all of the data ahead of time? What type of activity or interactivity do you need? Zoom in/out? Provide additional information in response to user actions (mouseover, click) Provide information over time (animation) Keep track of a data point over multiple plots? (linked plots) Keep track of one or more data points and change their appearance based on user interaction (brushing) Allow the user to change the underlying statistical model or data? (This is not a full list of all of the types of interactivity, just a few of the more common options) In this section, we’ll cover two ways to easily create interactive graphics or applets in R. There are, of course, many others – many javascript libraries have R extensions of one form or another. Module Objectives Create interactive charts with appropriate tools Use Shiny to create interactive web applets 11.1 Plotly Plotly is a graphing library that uses javascript to add interactivity to graphics. There are several different ways to create plotly graphs in R, but by far the easiest is ggplotly, which converts a ggplot to a plotly plot automatically (so you don’t have to specify most of the details). 11.1.1 ggplotly: ggplot2 to plotly conversions Set up the data if (!&quot;plotly&quot; %in% installed.packages()) install.packages(&quot;plotly&quot;) if (!&quot;tidytuesdayR&quot; %in% installed.packages()) { devtools::install_github(&quot;thebioengineer/tidytuesdayR&quot;) } library(dplyr) library(tidyr) library(ggplot2) library(tibble) library(lubridate) # dates and times library(tidytuesdayR) # get interesting data library(plotly) # Load the data from TidyTuesday on May 12 full_data &lt;- tt_load(&#39;2020-05-12&#39;) volcano &lt;- full_data$volcano eruptions &lt;- full_data$eruptions events &lt;- full_data$events sulfur &lt;- full_data$sulfur trees &lt;- full_data$tree_rings Let’s try out plotly while doing a bit of exploratory data analysis on this dataset. Cleaning up volcano volcano &lt;- volcano %&gt;% filter(tectonic_settings != &quot;Unknown&quot;) %&gt;% separate(tectonic_settings, into = c(&quot;zone&quot;, &quot;crust&quot;), sep = &quot;/&quot;, remove = F) %&gt;% # Remove anything past the first punctuation character - that will catch (xx) and ? mutate(volcano_type = str_remove(primary_volcano_type, &quot;[[:punct:]].*$&quot;)) Let’s start by seeing whether the elevation of a volcano changes based on the type of zone it’s on - we might expect that Rift zone volcanos (where plates are pulling away from each other) might not be as high. p &lt;- volcano %&gt;% ggplot(aes(x = zone, y = elevation)) + geom_boxplot() + coord_flip() ggplotly(p) But it doesn’t really look like there’s much difference. Does volcano type makes a difference? p &lt;- volcano %&gt;% ggplot(aes(x = elevation, color = volcano_type)) + geom_density() + # Rug plots show each observation as a tick just below the x axis geom_rug() ggplotly(p) Here, the interactivity actually helps a bit: we don’t need to use the legend to see what each curve corresponds to. We can see that submarine volcanoes are typically much lower in elevation (ok, duh), but also that subglacial volcanoes are found in a very limited range. If we double-click on a legend entry, we can get rid of all other curves and examine each curve one by one. I added the rug layer after the initial bout because I was curious how much data each of these curves were based on. If we want only curves with n &gt; 10 observations, we can do that: p &lt;- volcano %&gt;% group_by(volcano_type) %&gt;% mutate(n = n()) %&gt;% filter(n &gt; 10) %&gt;% ggplot(aes(x = elevation, color = volcano_type)) + geom_density() + # Rug plots show each observation as a tick just below the x axis geom_rug(aes(text = paste0(volcano_name, &quot;, &quot;, country))) Warning: Ignoring unknown aesthetics: text ggplotly(p) If we want to specify additional information that should show up in the tooltip, we can do that as well by adding the text aesthetic even though geom_rug doesn’t take a text aesthetic. You may notice that ggplot2 complains about the unknown aesthetic I’ve added to geom_rug: That allows us to mouse over each data point in the rug plot and see what volcano it belongs to. So we can tell from the rug plot that the tallest volcano is Ojas de Salvado, in Chile/Argentina (I believe that translates to Eyes of Salvation?). At any rate, there isn’t nearly as much variation as I was expecting in the elevation of different types of volcanoes. ggplotly makes it very easy to generate plots that have a ggplot2 equivalent; you can customize these plots further using plotly functions that we’ll see in the next section. But first, try the interface out on your own. Try it out Conduct an exploratory data analysis of the eruptions dataset. What do you find? My solution head(eruptions) # A tibble: 6 x 15 volcano_number volcano_name eruption_number eruption_catego… area_of_activity &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; 1 266030 Soputan 22354 Confirmed Erupt… &lt;NA&gt; 2 343100 San Miguel 22355 Confirmed Erupt… &lt;NA&gt; 3 233020 Fournaise, … 22343 Confirmed Erupt… &lt;NA&gt; 4 345020 Rincon de l… 22346 Confirmed Erupt… &lt;NA&gt; 5 353010 Fernandina 22347 Confirmed Erupt… &lt;NA&gt; 6 273070 Taal 22344 Confirmed Erupt… &lt;NA&gt; # … with 10 more variables: vei &lt;dbl&gt;, start_year &lt;dbl&gt;, start_month &lt;dbl&gt;, # start_day &lt;dbl&gt;, evidence_method_dating &lt;chr&gt;, end_year &lt;dbl&gt;, # end_month &lt;dbl&gt;, end_day &lt;dbl&gt;, latitude &lt;dbl&gt;, longitude &lt;dbl&gt; summary(eruptions %&gt;% mutate(eruption_category = factor(eruption_category))) volcano_number volcano_name eruption_number Min. :210010 Length:11178 Min. :10001 1st Qu.:263310 Class :character 1st Qu.:12817 Median :290050 Mode :character Median :15650 Mean :300284 Mean :15667 3rd Qu.:343030 3rd Qu.:18464 Max. :600000 Max. :22355 eruption_category area_of_activity vei Confirmed Eruption :9900 Length:11178 Min. :0.0000 Discredited Eruption: 166 Class :character 1st Qu.:1.0000 Uncertain Eruption :1112 Mode :character Median :2.0000 Mean :1.9479 3rd Qu.:2.0000 Max. :7.0000 NA&#39;s :2906 start_year start_month start_day evidence_method_dating Min. :-11345.00 Min. : 0.0000 Min. : 0.000 Length:11178 1st Qu.: 680.00 1st Qu.: 0.0000 1st Qu.: 0.000 Class :character Median : 1847.00 Median : 1.0000 Median : 0.000 Mode :character Mean : 622.85 Mean : 3.4509 Mean : 7.015 3rd Qu.: 1950.00 3rd Qu.: 7.0000 3rd Qu.:15.000 Max. : 2020.00 Max. :12.0000 Max. :31.000 NA&#39;s :1 NA&#39;s :193 NA&#39;s :196 end_year end_month end_day latitude Min. :-475.0 Min. : 0.0000 Min. : 0.000 Min. :-77.530 1st Qu.:1895.0 1st Qu.: 3.0000 1st Qu.: 4.000 1st Qu.: -6.102 Median :1957.0 Median : 6.0000 Median :15.000 Median : 17.600 Mean :1917.3 Mean : 6.2208 Mean :13.316 Mean : 16.866 3rd Qu.:1992.0 3rd Qu.: 9.0000 3rd Qu.:21.000 3rd Qu.: 40.821 Max. :2020.0 Max. :12.0000 Max. :31.000 Max. : 85.608 NA&#39;s :6846 NA&#39;s :6849 NA&#39;s :6852 longitude Min. :-179.970 1st Qu.: -77.656 Median : 55.708 Mean : 31.572 3rd Qu.: 139.394 Max. : 179.580 # Historical (very historical) dates are a bit of a pain to work with, so I # wrote a helper function which takes year, month, and day arguments and formats # them properly fix_date &lt;- function(yyyy, mm, dd) { # First, negative years (BCE) are a bit of a problem. neg &lt;- yyyy &lt; 0 subtract_years &lt;- pmax(-yyyy, 0) # Years to subtract off later # for now, set to 0 year_fixed &lt;- pmax(yyyy, 0) # this will set anything negative to 0 # sometimes the day or month isn&#39;t known, so just use 1 for both. # recorded value may be NA or 0. day_fixed &lt;- ifelse(is.na(dd), 1, pmax(dd, 1)) month_fixed &lt;- ifelse(is.na(mm), 1, pmax(mm, 1)) # Need to format things precisely, so use sprintf # %0xd ensures that you have at least x digits, padding the left side with 0s # lubridate doesn&#39;t love having 3-digit years. date_str &lt;- sprintf(&quot;%04d/%02d/%02d&quot;, year_fixed, month_fixed, day_fixed) # Then we can convert the dates and subtract off the years for pre-CE dates date &lt;- ymd(date_str) - years(subtract_years) } erupt &lt;- eruptions %&gt;% # Don&#39;t work with discredited eruptions filter(eruption_category == &quot;Confirmed Eruption&quot;) %&gt;% # Create start and end dates mutate( start_date = fix_date(start_year, start_month, start_day), end_date = fix_date(end_year, end_month, end_day), # To get duration, we have to start with a time interval, # convert to duration, then convert to a numeric value duration = interval(start = start_date, end = end_date) %&gt;% as.duration() %&gt;% as.numeric(&quot;days&quot;)) Warning: Problem with `mutate()` input `start_date`. ℹ 1 failed to parse. ℹ Input `start_date` is `fix_date(start_year, start_month, start_day)`. Warning: 1 failed to parse. Warning: Problem with `mutate()` input `end_date`. ℹ 5895 failed to parse. ℹ Input `end_date` is `fix_date(end_year, end_month, end_day)`. Warning: 5895 failed to parse. Let’s start out seeing what month most eruptions occur in… # Note, I&#39;m using the original month, so 0 = unknown p &lt;- ggplot(erupt, aes(x = factor(start_month))) + geom_bar() ggplotly(p) # I could rename some of the factors to make this pretty, but... nah Another numerical variable is VEI, volcano explosivity index. A VEI of 0 is non-explosive, a VEI of 4 is about what Mt. St. Helens hit in 1980, and a VEI of 5 is equivalent to the Krakatau explosion in 1883. A VEI of 8 would correspond to a major Yellowstone caldera eruption (which hasn’t happened for 600,000 years). Basically, VEI increase of 1 is an order of magnitude change in the amount of material the eruption released. # VEI is volcano explosivity index, p &lt;- ggplot(erupt, aes(x = vei)) + geom_bar() ggplotly(p) Warning: Removed 2270 rows containing non-finite values (stat_count). We can also look at the frequency of eruptions over time. We’ll expect some historical bias - we don’t have exact dates for some of these eruptions, and if no one was around to write the eruption down (or the records were destroyed) there’s not going to be a date listed here. p &lt;- erupt %&gt;% filter(!is.na(end_date)) %&gt;% filter(start_year &gt; 0) %&gt;% ggplot(aes(x = start_date, xend = start_date, y = 0, yend = duration, color = evidence_method_dating)) + geom_segment() + geom_point(size = .5, aes(text = volcano_name)) + xlab(&quot;Eruption Start&quot;) + ylab(&quot;Eruption Duration (days)&quot;) + facet_wrap(~vei, scales = &quot;free_y&quot;) Warning: Ignoring unknown aesthetics: text ggplotly(p) Warning: `group_by_()` is deprecated as of dplyr 0.7.0. Please use `group_by()` instead. See vignette(&#39;programming&#39;) for more help This warning is displayed once every 8 hours. Call `lifecycle::last_warnings()` to see where this warning was generated. As expected, it’s pretty rare to see many eruptions before ~1800 AD, which is about when we have reliable historical records42 for most of the world (exceptions include e.g. Vestuvius, which we have extensive written information about). p &lt;- erupt %&gt;% filter(!is.na(end_date)) %&gt;% # Account for recency bias (sort of) filter(start_year &gt; 1800) %&gt;% ggplot(aes(x = factor(vei), y = duration)) + geom_violin() + xlab(&quot;VEI&quot;) + ylab(&quot;Eruption Duration (days)&quot;) + scale_y_sqrt() ggplotly(p) Warning in self$trans$transform(x): NaNs produced Warning: Transformation introduced infinite values in continuous y-axis Warning: Removed 3 rows containing non-finite values (stat_ydensity). Warning: Groups with fewer than two data points have been dropped. It seems that the really big eruptions might be less likely to last for a long time, but it is hard to tell because there aren’t that many of them (thankfully). 11.1.2 plot_ly: Like base plotting, but interactive! You can also create plotly charts that aren’t limited by what you can do in ggplot2, using the plot_ly function. Plotly cheat sheet We can start with a scatterplot of volcanoes along the Earth’s surface: plot_ly(type = &quot;scattergeo&quot;, lon = volcano$longitude, lat = volcano$latitude) No scattergeo mode specifed: Setting the mode to markers Read more about this attribute -&gt; https://plot.ly/r/reference/#scatter-mode Warning: `arrange_()` is deprecated as of dplyr 0.7.0. Please use `arrange()` instead. See vignette(&#39;programming&#39;) for more help This warning is displayed once every 8 hours. Call `lifecycle::last_warnings()` to see where this warning was generated. And then we can start customizing: plot_ly(type = &quot;scattergeo&quot;, lon = volcano$longitude, lat = volcano$latitude, mode = &quot;markers&quot;, # Add information to mouseover text = ~paste(volcano$volcano_name, &quot;\\n&quot;, &quot;Last Erupted: &quot;, volcano$last_eruption_year), # Change the markers because why not? marker = list(color = &quot;#d00000&quot;, opacity = 0.25) ) The plot_ly function is also pipe friendly. Variable mappings are preceded with ~ to indicate that the visual appearance changes with the value of the variable. # Load RColorBrewer for palettes library(RColorBrewer) volcano %&gt;% group_by(volcano_type) %&gt;% mutate(n = n()) %&gt;% filter(n &gt; 15) %&gt;% plot_ly(type = &quot;scattergeo&quot;, lon = ~longitude, lat = ~latitude, mode = &quot;markers&quot;, # Add information to mouseover text = ~paste(volcano_name, &quot;\\n&quot;, &quot;Last Erupted: &quot;, last_eruption_year), color = ~ volcano_type, # Specify a palette colors = brewer.pal(length(unique(.$volcano_type)), &quot;Paired&quot;), # Change the markers because why not? marker = list(opacity = 0.5) ) Plotly will handle some variable mappings for you, depending on which “trace” type (plot/geom) you’re using. The plotly documentation often uses plyr – which is an older version of dplyr. If you load plyr, it will seriously mess up your day – a lot of the function names are the same. So, instead, here’s a shortcut: spread is pivot_wider and gather is pivot_longer. That should at least help with understanding what the code is doing. If you do accidentally load plyr, that’s fine: just restart your R session so that your loaded packages are cleared and you can start over. Or, if you must, you can reference a plyr function using plyr::spread without loading the package – that’s a safe way to use the plotly demo code as-is. Let’s explore traces a bit. According to the plotly documentation, A trace is just the name we give a collection of data and the specifications of which we want that data plotted. Notice that a trace will also be an object itself, and these will be named according to how you want the data displayed on the plotting surface In ggplot2 terms, it seems that a trace is somewhat akin to a geom. trace0 &lt;- rnorm(100, mean = 5) trace1 &lt;- rnorm(100, mean = 0) trace2 &lt;- rnorm(100, mean = -5) data &lt;- tibble(x = 1:100, trace0, trace1, trace2) # Let&#39;s see how this goes with one trace plot_ly(data, x = ~x) %&gt;% add_trace(y = ~trace0, name = &#39;trace0&#39;, mode = &#39;lines&#39;) No trace type specified: Based on info supplied, a &#39;scatter&#39; trace seems appropriate. Read more about this trace type -&gt; https://plot.ly/r/reference/#scatter # Adding some more traces plot_ly(data, x = ~x) %&gt;% add_trace(y = ~trace0, name = &#39;trace0&#39;, mode = &#39;lines&#39;) %&gt;% add_trace(y = ~trace1, name = &quot;trace1&quot;, mode = &#39;lines+markers&#39;) %&gt;% add_trace(y = ~trace2, name = &quot;trace2&quot;, mode = &#39;markers&#39;) No trace type specified: Based on info supplied, a &#39;scatter&#39; trace seems appropriate. Read more about this trace type -&gt; https://plot.ly/r/reference/#scatter No trace type specified: Based on info supplied, a &#39;scatter&#39; trace seems appropriate. Read more about this trace type -&gt; https://plot.ly/r/reference/#scatter No trace type specified: Based on info supplied, a &#39;scatter&#39; trace seems appropriate. Read more about this trace type -&gt; https://plot.ly/r/reference/#scatter But, if you want all of the variables to be shown with the same trace type, it’s probably easier to get to long form: data %&gt;% pivot_longer(matches(&quot;trace&quot;), names_to = &quot;trace&quot;, names_prefix = &quot;trace&quot;, values_to = &quot;y&quot;) %&gt;% plot_ly(x = ~x, y = ~y, color = ~trace, mode = &quot;lines+markers&quot;) No trace type specified: Based on info supplied, a &#39;scatter&#39; trace seems appropriate. Read more about this trace type -&gt; https://plot.ly/r/reference/#scatter There are many different trace types in plotly, but your best bet is to check the documentation to see what is available. 11.1.3 Animation Plotly can also animate your plots for you. library(classdata) data(fbi) fbi %&gt;% mutate(State = factor(State), Rate_100k = Count/Population*100000) %&gt;% filter(Type == &quot;Aggravated.assault&quot;) %&gt;% arrange(Year, State, Type) %&gt;% plot_ly( x = ~State, y = ~Rate_100k, color = ~Type, frame = ~Year, type = &quot;scatter&quot;, mode = &quot;markers&quot; ) Sometimes the animations get a bit trippy, don’t they? You can even animate by something other than time, if you’re so inclined… fbi %&gt;% mutate(State = factor(State), Rate_100k = Count/Population*100000) %&gt;% arrange(Year, State, Type) %&gt;% plot_ly( x = ~Year, y = ~Rate_100k, color = ~Type, frame = ~State, type = &quot;scatter&quot;, mode = &quot;lines&quot; ) There are other types of animations as well, including the ability to change plot formats, trace types, and more. 11.2 Leaflet maps Leaflet is another javascript library that allows for interactive data visualization. We’re only going to briefly talk about it here, but there is extensive documentation that includes details of how to work with different types of geographical data, chloropleth maps, plugins, and more. To explore the leaflet package, we’ll start out playing with a dataset of Bigfoot sightings assembled from the Bigfoot Field Researchers Organization’s Google earth tool Parsed with column specification: cols( .default = col_double(), observed = col_character(), location_details = col_character(), county = col_character(), state = col_character(), season = col_character(), title = col_character(), date = col_date(format = &quot;&quot;), classification = col_character(), geohash = col_character(), precip_type = col_character(), summary = col_character() ) See spec(...) for full column specifications. if (!&quot;leaflet&quot; %in% installed.packages()) install.packages(&quot;leaflet&quot;) library(leaflet) library(readr) bigfoot_data &lt;- read_csv(&quot;https://query.data.world/s/egnaxxvegdkzzrhfhdh4izb6etmlms&quot;) We can start out by plotting a map with the location of each sighting. I’ve colored the points in a seasonal color scheme, and added the description of each incident as a mouseover label. bigfoot_data %&gt;% filter(classification == &quot;Class A&quot;) %&gt;% mutate(seasoncolor = str_replace_all(season, c(&quot;Fall&quot; = &quot;orange&quot;, &quot;Winter&quot; = &quot;skyblue&quot;, &quot;Spring&quot; = &quot;green&quot;, &quot;Summer&quot; = &quot;yellow&quot;)), # This code just wraps the description to the width of the R terminal # and inserts HTML for a line break into the text at appropriate points desc_wrap = purrr::map(observed, ~strwrap(.) %&gt;% paste(collapse = &quot;&lt;br/&gt;&quot;) %&gt;% htmltools::HTML())) %&gt;% leaflet() %&gt;% addTiles() %&gt;% addCircleMarkers(~longitude, ~latitude, color = ~seasoncolor, label = ~desc_wrap) Warning in validateCoords(lng, lat, funcName): Data contains 459 rows with either missing or invalid lat/lon values and will be ignored Of course, because this is an interactive map library, we aren’t limited to any one scale. We can also plot data at the city level: if(!&quot;nycsquirrels18&quot; %in% installed.packages()) { devtools::install_github(&quot;mine-cetinkaya-rundel/nycsquirrels18&quot;) } library(nycsquirrels18) data(squirrels) head(squirrels) # A tibble: 6 x 35 long lat unique_squirrel… hectare shift date hectare_squirre… age &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;date&gt; &lt;dbl&gt; &lt;chr&gt; 1 -74.0 40.8 13A-PM-1014-04 13A PM 2018-10-14 4 &lt;NA&gt; 2 -74.0 40.8 15F-PM-1010-06 15F PM 2018-10-10 6 Adult 3 -74.0 40.8 19C-PM-1018-02 19C PM 2018-10-18 2 Adult 4 -74.0 40.8 21B-AM-1019-04 21B AM 2018-10-19 4 &lt;NA&gt; 5 -74.0 40.8 23A-AM-1018-02 23A AM 2018-10-18 2 Juve… 6 -74.0 40.8 38H-PM-1012-01 38H PM 2018-10-12 1 Adult # … with 27 more variables: primary_fur_color &lt;chr&gt;, highlight_fur_color &lt;chr&gt;, # combination_of_primary_and_highlight_color &lt;chr&gt;, color_notes &lt;chr&gt;, # location &lt;chr&gt;, above_ground_sighter_measurement &lt;chr&gt;, # specific_location &lt;chr&gt;, running &lt;lgl&gt;, chasing &lt;lgl&gt;, climbing &lt;lgl&gt;, # eating &lt;lgl&gt;, foraging &lt;lgl&gt;, other_activities &lt;chr&gt;, kuks &lt;lgl&gt;, # quaas &lt;lgl&gt;, moans &lt;lgl&gt;, tail_flags &lt;lgl&gt;, tail_twitches &lt;lgl&gt;, # approaches &lt;lgl&gt;, indifferent &lt;lgl&gt;, runs_from &lt;lgl&gt;, # other_interactions &lt;chr&gt;, zip_codes &lt;dbl&gt;, community_districts &lt;dbl&gt;, # borough_boundaries &lt;dbl&gt;, city_council_districts &lt;dbl&gt;, # police_precincts &lt;dbl&gt; squirrels %&gt;% mutate(color = tolower(primary_fur_color)) %&gt;% leaflet() %&gt;% addTiles() %&gt;% addCircleMarkers(~long, ~lat, color = ~color) We can also plot regions, instead of just points. I downloaded a dataset released by the US Forest Service, Bailey’s Ecoregions and Subregions dataset, which categorizes the US into different climate and ecological zones. To map colors to variables, we have to define a color palette and variable mapping ourselves, and pass that function into the leaflet object we’re adding. library(rgdal) ecoregions &lt;- readOGR(&quot;data/Bailey_s_Ecoregions_and_Subregions_Dataset.geojson&quot;) OGR data source with driver: GeoJSON Source: &quot;/home/susan/Projects/Class/unl-stat850/stat850-textbook/data/Bailey_s_Ecoregions_and_Subregions_Dataset.geojson&quot;, layer: &quot;Bailey_s_Ecoregions_and_Subregions_Dataset&quot; with 3072 features It has 12 fields # Define a palette region_pal &lt;- colorFactor(c(&quot;#E67E22&quot;, &quot;#0B5345&quot;, &quot;#229954&quot;, &quot;#B3B6B7&quot;), ecoregions$DOMAIN) ecoregions %&gt;% leaflet() %&gt;% addTiles() %&gt;% addPolygons(stroke = TRUE, fillOpacity = 0.25, fillColor = ~region_pal(DOMAIN), color = ~region_pal(DOMAIN), label = ~SECTION) Try it out Download the Shapefiles for the 116th Congress Congressional Districts. Unzip the file and read it in using the code below (you’ll have to change the file path). Use the MIT Election Data and Science Lab’s US House election results43, and merge this data with the shapefiles to plot the results of the 2018 midterms in a way that you think is useful (you can use any of the available data). Some notes: - FIPS codes are used to identify the state and district, with 00 indicating at-large districts (one district for the state) and 98 indicating non-voting districts. - If you would like to add in the number of citizens of voting age, you can get that information here but you will have to do some cleaning in order to join the table with the others. - Minnesota’s Democratic-farmer-labor party caucuses with the Democrats but maintains its name for historical reasons. You can safely recode this if you want to. library(sf) # Read in the districts congress_districts &lt;- st_read(&quot;data/116_congress/cb_2018_us_cd116_5m.shp&quot;) Reading layer `cb_2018_us_cd116_5m&#39; from data source `/home/susan/Projects/Class/unl-stat850/stat850-textbook/data/116_congress/cb_2018_us_cd116_5m.shp&#39; using driver `ESRI Shapefile&#39; Simple feature collection with 441 features and 8 fields geometry type: MULTIPOLYGON dimension: XY bbox: xmin: -179.14734 ymin: -14.552549 xmax: 179.77847 ymax: 71.352561 CRS: 4269 # Read in the results election_results &lt;- read_csv(&quot;data/1976-2018-house2.csv&quot;) %&gt;% filter(year == 2018) %&gt;% mutate(state_fips = sprintf(&quot;%02d&quot;, state_fips), district = sprintf(&quot;%02d&quot;, district)) Parsed with column specification: cols( year = col_double(), state = col_character(), state_po = col_character(), state_fips = col_double(), state_cen = col_double(), state_ic = col_double(), office = col_character(), district = col_double(), stage = col_character(), runoff = col_logical(), special = col_logical(), candidate = col_character(), party = col_character(), writein = col_logical(), mode = col_character(), candidatevotes = col_double(), totalvotes = col_double(), unofficial = col_logical(), version = col_double() ) # Clean up congress districts congress_districts &lt;- congress_districts %&gt;% # Convert factors to characters mutate(across(where(is.factor), as.character)) %&gt;% # Handle at-large districts mutate(district = ifelse(CD116FP == &quot;00&quot;, &quot;01&quot;, CD116FP)) One solution library(sf) library(htmltools) # to mark labels as html code # Read in the results election_results &lt;- read_csv(&quot;data/1976-2018-house2.csv&quot;) %&gt;% filter(year == 2018) %&gt;% mutate(state_fips = sprintf(&quot;%02d&quot;, state_fips), district = sprintf(&quot;%02d&quot;, district)) %&gt;% group_by(state, state_fips, state_po, district, stage) %&gt;% arrange(candidatevotes) %&gt;% mutate(pct = candidatevotes/totalvotes) %&gt;% # Keep the winner only filter(pct == max(pct)) %&gt;% # Fix Minnesota mutate(party = ifelse(party == &quot;democratic-farmer-labor&quot;, &quot;democrat&quot;, party)) Parsed with column specification: cols( year = col_double(), state = col_character(), state_po = col_character(), state_fips = col_double(), state_cen = col_double(), state_ic = col_double(), office = col_character(), district = col_double(), stage = col_character(), runoff = col_logical(), special = col_logical(), candidate = col_character(), party = col_character(), writein = col_logical(), mode = col_character(), candidatevotes = col_double(), totalvotes = col_double(), unofficial = col_logical(), version = col_double() ) # Read in the districts congress_districts &lt;- st_read(&quot;data/116_congress/cb_2018_us_cd116_5m.shp&quot;) Reading layer `cb_2018_us_cd116_5m&#39; from data source `/home/susan/Projects/Class/unl-stat850/stat850-textbook/data/116_congress/cb_2018_us_cd116_5m.shp&#39; using driver `ESRI Shapefile&#39; Simple feature collection with 441 features and 8 fields geometry type: MULTIPOLYGON dimension: XY bbox: xmin: -179.14734 ymin: -14.552549 xmax: 179.77847 ymax: 71.352561 CRS: 4269 # Clean up congress districts congress_districts &lt;- congress_districts %&gt;% # Convert factors to characters mutate(across(where(is.factor), as.character)) %&gt;% # Handle at-large districts mutate(district = ifelse(CD116FP == &quot;00&quot;, &quot;01&quot;, CD116FP)) # Merge congress_districts &lt;- congress_districts %&gt;% left_join(election_results, by = c(&quot;STATEFP&quot; = &quot;state_fips&quot;, &quot;CD116FP&quot; = &quot;district&quot;)) %&gt;% mutate(party = factor(party, levels = c(&quot;republican&quot;, &quot;democrat&quot;)), short_party = ifelse(party == &quot;republican&quot;, &quot;R&quot;, &quot;D&quot;), label = paste0(state_po, &quot;-&quot;, district, candidate, &quot; (&quot;, short_party, &quot;)&quot;)) # Define a palette region_pal &lt;- colorFactor(c(&quot;#e9141d&quot;, &quot;#0015bc&quot;), congress_districts$party) congress_districts %&gt;% leaflet() %&gt;% addTiles() %&gt;% addPolygons(stroke = TRUE, fillOpacity = ~pct/2, # still want to see what&#39;s underneath, even in safe districts fillColor = ~region_pal(party), color = ~region_pal(party), label = ~label) Warning: sf layer has inconsistent datum (+proj=longlat +datum=NAD83 +no_defs ). Need &#39;+proj=longlat +datum=WGS84&#39; 11.3 Shiny https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-05-26/readme.md Before we get started on Shiny, take a few minutes and poke around the RStudio Shiny user showcase. Sometimes, it helps to have some motivation, and to get a sense of what is possible before you start learning something. One of the more amusing ones I found was an exploration of lego demographics. All done? Shiny is a framework for building interactive web applications in R. Unlike plotly and other graphics engines, Shiny depends on an R instance on a server to do computations. This means Shiny is much more powerful and has more capabilities, but also that it’s harder to share and deploy - you have to have access to a web server with R installed on it. If you happen to have a server like that, though, Shiny is pretty awesome. RStudio runs a service called shinyapps.io that will provide some limited free hosting, as well as paid plans for apps that have more web traffic, but you can also create Shiny apps for local use - I often do this for model debugging when I’m using neural networks, because they’re so complicated. RStudio has a set of well produced video tutorials to introduce Shiny. I’d recommend you at least listen to the introduction if you’re a visual/audio learner (the whole tutorial is about 2 hours long). There is also a written tutorial if you prefer to learn in written form (7 lessons, each is about 20 minutes long). I generally think it’s better to send you to the source when there are well-produced resources, rather than trying to rehash something to put my own spin on it. One other interesting feature to keep in mind when using Shiny - you can integrate Shiny reactivity into Rmarkdown by adding runtime: shiny to the markdown header. 11.4 General References R graph gallery interactive charts points you in the right direction for which package to use for different tasks. Shiny articles Leaflet introduction for R 11.4.1 Other interactive tools htmlwidgets - a generic wrapper for any Javascript library (htmlwidgets is used under the hood in both Leaflet and Plotly R integration) dash - Another dashboard program supported by plotly. dash is the python equivalent of shiny, but also has R integration (though I’m not sure how well it’s supported). There are obviously exceptions - we can figure out the exact date and approximate time that there was an earthquake along the Cascadia subduction zone based on a combination of oral histories of the indigenous people and records of a massive tsunami in Japan Excellent read, if you’re interested, and the Nature paper.↩ Alternately, you can find the rehosted file here.↩ "],
["common-problems-and-general-computing-topics.html", "Module 12 Common Problems and General Computing Topics 12.1 File Paths, Working Directories, and Reproducibility", " Module 12 Common Problems and General Computing Topics 12.1 File Paths, Working Directories, and Reproducibility 12.1.1 File paths A file path is how you tell the computer where to find a file. You might be familiar with the “C:\\Program Files\\” structure - that’s a file path telling Windows to look at the C: drive, in the Program Files folder. There are two types of file paths: absolute and relative. - An absolute file path is a file path that tells the computer the location of the file, regardless of where the computer is currently working from (regardless of the current working directory). An absolute file path is something like an address - no matter where you’re currently located, an address will give you the information necessary to get to the correct house. Examples: - C:\\USER\\DOCS\\LETTER.TXT (Windows) - \\\\SERVER01\\USER\\DOCS\\LETTER.TXT (Windows, for e.g. remote file servers) - /home/user/docs/Letter.txt (UNIX/macOS) A relative file path is a file path that tells the computer how to get to a file from its current location. To continue the analogy, a relative file path is like “Go down the hallway, turn left, take a right at the next hallway, and go to the third door on the right.” - it gives you information on how to get from your current location to the destination, but that information wouldn’t necessarily work for someone who’s in a different location. Examples: ../../Letter.txt&quot;` (this says go up two directories and look for Letter.txt) ./Letter.txt (this says look for Letter.txt in your current directory) ./data/Letter.txt (this says look for Letter.txt in the data folder in the current directory) If you are using a UNIX-like environment (Linux, macOS), you have an additional shortcut available: ~/ is the shortcut for the user’s home directory. So ~/ is equivalent to /home/ted/ as long as you’re logged in as ted. If you’re logged in as theodora, though, ~/ is equivalent to /home/theodora/. This YouTube video has a good explanation as well. 12.1.2 Working Directory When you start a program on a computer, it starts with a working directory. In many cases, this may be the user’s home directory, but that’s not always the case. For instance, if you are working in an RStudio project, your working directory is the folder containing the .Rproj file. If you are compiling an Rmarkdown document, your working directory is the folder where the document is saved. Your working directory determines what relative file path you should be using. Here is a video showing how to change your working directory in SAS, and in R. 12.1.3 Reproducibility Reproducibility is the idea that I should be able to run your code and get the same results you got. Ideally, to do this, I wouldn’t have to configure my computer in exactly the same way your computer is set up. Instead, ideally, your code will use relative file paths, with a working directory that is appropriate to the project set-up. Since we’re storing everything on GitHub for this class, a natural file setup is to have the project working directory be the same directory the git repository is based in (the directory should contain a .git folder, but you may have to view hidden files to see it). You can store your data in a data/ subfolder, your extra scripts in a code/ folder, etc., but all of the files you need to run the code should be included in the git repository unless they are too large for git. Then, when someone else clones your repository, they will have access to the data they need to run the code, and the code will be written with relative file paths that match the file structure. This also has the advantage of saving you tons of time trying to help your PI figure out how to run your code… you can direct them to GitHub, have them download the folder (or clone the repo, if they’re tech-savvy), and everything should just work. "],
["other-resources-articles-and-food-for-thought.html", "Module 13 Other Resources, Articles, and Food for Thought 13.1 Comparing Languages", " Module 13 Other Resources, Articles, and Food for Thought 13.1 Comparing Languages [Data Scientist’s Analysis Toolbox: Comparison of Python, R, and SAS Performance] "],
["references.html", "References", " References "]
]
